# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "ciscorouter"
			"[observer][name]" => "Cisco IOS"
			"[observer][type]" => "Router"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <month> <day> <time> <hserver> FaultNotifier: <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} %{hserver} FaultNotifier: %{messageid} %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <data>: *<month> <day> <time> <messageid>(<protocol>): <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: *%{month} %{day} %{time} %{messageid}(%{protocol}): %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <data>: *<month> <day> <time> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: *%{month} %{day} %{time} %{messageid}: %{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <data>: *<month> <day> <time> <hzone>: <messageid>(<hinfo>): <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: *%{month} %{day} %{time} %{hzone}: %{messageid}(%{hinfo}): %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <data>: *<month> <day> <time> <hzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: *%{month} %{day} %{time} %{hzone}: %{messageid}: %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <data>: .<month> <day> <time> <hzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: .%{month} %{day} %{time} %{hzone}: %{messageid}: %{message}" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <data>: .<month> <day> <time> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: .%{month} %{day} %{time} %{messageid}: %{message}" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <data>: <month> <day> <time> <hhost> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{month} %{day} %{time} %{hhost} %{messageid}: %{message}" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0023
	# line in RSA: <hdata>: <hfld1>: <month> <day> <time> <tzone>: <hservice>[<hfld2>]: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdata}: %{hfld1}: %{month} %{day} %{time} %{tzone}: %{hservice}[%{hfld2}]: %{messageid}: %{message}" }
			id => "header-0023"
			add_field => {
				"[rsa][header][id]" => "0023"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0042
	# line in RSA: <hdata>: <hfld1>: <month> <day> <time>.<hfld3>: <hservice>[<hfld2>]: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdata}: %{hfld1}: %{month} %{day} %{time}.%{hfld3}: %{hservice}[%{hfld2}]: %{messageid}: %{message}" }
			id => "header-0042"
			add_field => {
				"[rsa][header][id]" => "0042"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <data>: <fld1>: <month> <day> <time> <tzone>: <hhost> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{fld1}: %{month} %{day} %{time} %{tzone}: %{hhost} %{messageid}: %{message}" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <data>: <fld1>: <fld2>: <month> <day> <time> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{fld1}: %{fld2}: %{month} %{day} %{time} %{tzone}: %{messageid}: %{message}" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0032
	# line in RSA: <fld5> <fld4> <fld3> <hfld2> Kiwi_Syslog_Server <data>: <fld1>: <month> <day> <time> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{fld5} %{fld4} %{fld3} %{hfld2} Kiwi_Syslog_Server %{data}: %{fld1}: %{month} %{day} %{time} %{tzone}: %{messageid}: %{message}" }
			id => "header-0032"
			add_field => {
				"[rsa][header][id]" => "0032"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <data>: <fld1>: <month> <day> <time> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{fld1}: %{month} %{day} %{time} %{tzone}: %{messageid}: %{message}" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0036
	# line in RSA: <hfld1>: <hfld2>: <month> <day> <year> <time> <tzone>: {@@@ <messageid>|<messageid>} <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^:]*):[\s]+(?<hfld2>[^:]*):[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<tzone>[^:]*):[\s]+(@@@[\s]+(?<messageid>[^\s]*)|(?<messageid>[^\s]*))[\s]+(?<message>.*)$" }
			id => "header-0036"
			add_field => {
				"[rsa][header][id]" => "0036"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: <hfld1>: <hfld2>: <month> <day> <year> <time> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1}: %{hfld2}: %{month} %{day} %{year} %{time} %{tzone}: %{messageid}: %{message}" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: <data>: <month> <day> { 2008 | 2009 | 2010 | 2011 | 2012 | 2013 | 2014 } <time> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<data>[^:]*):[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+([\s]*2008[\s]+|[\s]*2009[\s]+|[\s]*2010[\s]+|[\s]*2011[\s]+|[\s]*2012[\s]+|[\s]*2013[\s]+|[\s]*2014[\s]+)[\s]+(?<time>[^\s]*)[\s]+(?<tzone>[^:]*):[\s]+(?<messageid>[^:]*):[\s]+(?<message>.*)$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0025
	# line in RSA: <data>: { 2008 | 2009 | 2010 | 2011 | 2012 | 2013 | 2014 } <month> <day> <time> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<data>[^:]*):[\s]+([\s]*2008[\s]+|[\s]*2009[\s]+|[\s]*2010[\s]+|[\s]*2011[\s]+|[\s]*2012[\s]+|[\s]*2013[\s]+|[\s]*2014[\s]+)[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<tzone>[^:]*):[\s]+(?<messageid>[^:]*):[\s]+(?<message>.*)$" }
			id => "header-0025"
			add_field => {
				"[rsa][header][id]" => "0025"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0026
	# line in RSA: <data>]<fld>: { 2008 | 2009 | 2010 | 2011 | 2012 | 2013 | 2014 } <month> <day> <time> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<data>[^\]]*)\](?<fld>[^:]*):[\s]+([\s]*2008[\s]+|[\s]*2009[\s]+|[\s]*2010[\s]+|[\s]*2011[\s]+|[\s]*2012[\s]+|[\s]*2013[\s]+|[\s]*2014[\s]+)[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<tzone>[^:]*):[\s]+(?<messageid>[^:]*):[\s]+(?<message>.*)$" }
			id => "header-0026"
			add_field => {
				"[rsa][header][id]" => "0026"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <data>: <month> <day> <time> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{month} %{day} %{time} %{tzone}: %{messageid}: %{message}" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <data>: <month> <day> <time> <messageid>(<protocol>): <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{month} %{day} %{time} %{messageid}(%{protocol}): %{message}" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: <data>: <month> <day> <time> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{month} %{day} %{time} %{messageid}: %{message}" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <data>: <fld1>: <month> <day> <time> <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{fld1}: %{month} %{day} %{time} %{messageid}: %{message}" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: <data>: <fld1>: <month> <day> <time> <tzone>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<data>[^:]*):[\s]+(?<fld1>[^:]*):[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<tzone>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: <data>: <month> <day> <time> <htzone> <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{month} %{day} %{time} %{htzone} %{messageid} %{message}" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: <data>: <month> <day> <time> <messageid> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{month} %{day} %{time} %{messageid} %{message}" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0027
	# line in RSA: <data>: <fld1>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{fld1}: %{messageid}: %{message}" }
			id => "header-0027"
			add_field => {
				"[rsa][header][id]" => "0027"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0034
	# line in RSA: <data>:<month> <day> <year> <time>.<hfld1> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}:%{month} %{day} %{year} %{time}.%{hfld1} %{tzone}: %{messageid}: %{message}" }
			id => "header-0034"
			add_field => {
				"[rsa][header][id]" => "0034"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0045
	# line in RSA: <month> <day> <year> <time>.<hfld1> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{year} %{time}.%{hfld1} %{tzone}: %{messageid}: %{message}" }
			id => "header-0045"
			add_field => {
				"[rsa][header][id]" => "0045"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0028
	# line in RSA: <data>: <fld1>:<fld2>:<fld3>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{fld1}:%{fld2}:%{fld3}: %{messageid}: %{message}" }
			id => "header-0028"
			add_field => {
				"[rsa][header][id]" => "0028"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0024
	# line in RSA: %CISCOIOS <messageid>.<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%CISCOIOS %{messageid}.%{message}" }
			id => "header-0024"
			add_field => {
				"[rsa][header][id]" => "0024"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0029
	# line in RSA: : <year> <month> <day> <time> <htzone>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => ": %{year} %{month} %{day} %{time} %{htzone}: %{message}" }
			id => "header-0029"
			add_field => {
				"[rsa][header][id]" => "0029"
				"[rsa][message][id2]" => "ciscorouter_1"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0040
	# line in RSA: <month> <day> <time>: %IOSXE-<msgIdPart1>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time}: %IOSXE-%{msgIdPart1}: %{message}" }
			id => "header-0040"
			add_field => {
				"[rsa][header][id]" => "0040"
				"[rsa][message][id2]" => "%IOSXE-%{msgIdPart1}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0041
	# line in RSA: <hdata>: <hfld1>:<hmonth>  <hdate> <htime>.<hfld2> : <messageid>[<hfld3>]: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdata}: %{hfld1}:%{hmonth}  %{hdate} %{htime}.%{hfld2} : %{messageid}[%{hfld3}]: %{message}" }
			id => "header-0041"
			add_field => {
				"[rsa][header][id]" => "0041"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0050
	# line in RSA: <data>: <hmonth> <hdate><htime>: voip_rtp_<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{hmonth} %{hdate}%{htime}: voip_rtp_%{messageid}: %{message}" }
			id => "header-0050"
			add_field => {
				"[rsa][header][id]" => "0050"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0030
	# line in RSA: <data>: <hfld1>, <hfld2> <!payload:data>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<data>[^:]*):[\s]+(?<hfld1>[^,]*),[\s]+(?<hfld2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0030"
			add_field => {
				"[rsa][header][id]" => "0030"
				"[rsa][message][id2]" => "ciscorouter_2"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0038
	# line in RSA: <hfld1>:<hfld2>:<hmonth><hday><htime><hzone>:<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1}:%{hfld2}:%{hmonth}%{hday}%{htime}%{hzone}:%{message}" }
			id => "header-0038"
			add_field => {
				"[rsa][header][id]" => "0038"
				"[rsa][message][id2]" => "ciscorouter_3"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0031
	# line in RSA: <year> <month> <day> <time>.<hfld1> <tzone>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{year} %{month} %{day} %{time}.%{hfld1} %{tzone}: %{messageid}: %{message}" }
			id => "header-0031"
			add_field => {
				"[rsa][header][id]" => "0031"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0035
	# line in RSA: <data>: <month> <day> <time>: <messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{data}: %{month} %{day} %{time}: %{messageid}: %{message}" }
			id => "header-0035"
			add_field => {
				"[rsa][header][id]" => "0035"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0033
	# line in RSA: <data>:<!payload:data>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<data>[^:]*):(?<payload>.*))$" }
			id => "header-0033"
			add_field => {
				"[rsa][header][id]" => "0033"
				"[rsa][message][id2]" => "ciscorouter_osr"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_ciscoroutermsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:  <event_description>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId0"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA:  Attribute with unknown format <info>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "Attribute with unknown format %{info}" }
			id => "msgParserId1"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA:  Authorization method list <info> is not defined. Please define it.
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "Authorization method list %{info} is not defined. Please define it." }
			id => "msgParserId2"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA:  Unknown protocol <protocol>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "Unknown protocol %{protocol}" }
			id => "msgParserId3"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA:  Cannot process <obj_name> server type <obj_type> (<result>)
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "Cannot process %{obj_name} server type %{obj_type} (%{result})" }
			id => "msgParserId4"
			add_field => {
				"event_description" => "Cannot process server type"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA: Unknown service <service>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "Unknown service %{service}" }
			id => "msgParserId5"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA:  { Accounting | accounting } record dropped, <result>: <dhost>
	else if [logstash][msgparser][id] == "msgParserId6" {
		grok {
			match => { "message" => "^[\s]*([\s]*Accounting[\s]+|[\s]*accounting[\s]+)[\s]+record[\s]+dropped,[\s]+(?<result>[^:]*):[\s]+(?<dhost>.*)$" }
			id => "msgParserId6"
			add_field => {
				"event_description" => "Accounting record dropped"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA: Server <hostip>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "Server %{hostip}: %{event_description}" }
			id => "msgParserId7"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA:  server group <group>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "server group %{group}: %{event_description}" }
			id => "msgParserId8"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId9
	# line in RSA:  <application> Guest user session validation failed for <username>. <result>.
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{application} Guest user session validation failed for %{username}. %{result}." }
			id => "msgParserId9"
			add_field => {
				"event_description" => "Guest user session validation failed for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA:  User <username> <event_description>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "User %{username} %{event_description}" }
			id => "msgParserId10"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA:  User <username> failed attempts reset by <administrator>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "User %{username} failed attempts reset by %{administrator}" }
			id => "msgParserId11"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA:  User <username> unlocked by <administrator>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "User %{username} unlocked by %{administrator}" }
			id => "msgParserId12"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA:  <action>:<hostip>(<interface>):MDSbackup:<result>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{action}:%{hostip}(%{interface}):MDSbackup:%{result}" }
			id => "msgParserId13"
			add_field => {
				"event_description" => "MDSbackup activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId14"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId15"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId16"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId17"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA:  Bad authentication method-list name "<listnum>"
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "Bad authentication method-list name \"%{listnum}\"" }
			id => "msgParserId18"
			add_field => {
				"event_description" => "Bad authentication method-list name"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA:  accounting record dropped: <result>
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "accounting record dropped: %{result}" }
			id => "msgParserId19"
			add_field => {
				"event_description" => "accounting record dropped"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA:  accounting record dropped, <result>: <info>
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "accounting record dropped, %{result}: %{info}" }
			id => "msgParserId20"
			add_field => {
				"event_description" => "accounting record dropped"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA:  unknown AUTHOR/CMD: <result>: <info> 
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "unknown AUTHOR/CMD: %{result}: %{info}" }
			id => "msgParserId21"
			add_field => {
				"event_description" => "unknown AUTHOR/CMD"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA: Bad server-group name <group> (type <info>) 
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "Bad server-group name %{group} (type %{info})" }
			id => "msgParserId22"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA: Server-group <group> is not of type <info>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "Server-group %{group} is not of type %{info}" }
			id => "msgParserId23"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: Warning: DNIS group <group> is not defined
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "Warning: DNIS group %{group} is not defined" }
			id => "msgParserId24"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA:  <severity>: Server <hostip> is not defined 
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{severity}: Server %{hostip} is not defined" }
			id => "msgParserId25"
			add_field => {
				"event_description" => "Server not defined"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId26
	# line in RSA:  Warning: Server <hostip>:<fld1>, <fld2> is not part of server group <group>.
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "Warning: Server %{hostip}:%{fld1}, %{fld2} is not part of server group %{group}." }
			id => "msgParserId26"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId27
	# line in RSA:  The server-group <group> is not a radius server group. Please define <fld1> as a radius server group.
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "The server-group %{group} is not a radius server group. Please define %{fld1} as a radius server group." }
			id => "msgParserId27"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA:  The server-group "<group>" is not a tacacs+ server group. <info>
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "The server-group \"%{group}\" is not a tacacs+ server group. %{info}" }
			id => "msgParserId28"
			add_field => {
				"event_description" => "server-group not defined as tacacs+"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA:  The server-group "<group>" is not defined. <info>
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "The server-group \"%{group}\" is not defined. %{info}" }
			id => "msgParserId29"
			add_field => {
				"event_description" => "server-group not defined"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId30
	# line in RSA: Input Interface <interface>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "Input Interface %{interface}: %{event_description}" }
			id => "msgParserId30"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA:  <fld1>: crashdump retrieval initiated to file <filename>
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{fld1}: crashdump retrieval initiated to file %{filename}" }
			id => "msgParserId31"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA:  Interface <interface> has no crypto engine slot
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "Interface %{interface} has no crypto engine slot" }
			id => "msgParserId32"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId33"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA:  RP received unexpected IPsec packet for [<hostip>] (count=[<packets>])
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "RP received unexpected IPsec packet for [%{hostip}] (count=[%{packets}])" }
			id => "msgParserId34"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA:  [<fld1>]: received unexpected IPsec packet: src IP: [<saddr>]; dst IP: [<daddr>]; (count=[<packets>])
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "[%{fld1}]: received unexpected IPsec packet: src IP: [%{saddr}]; dst IP: [%{daddr}]; (count=[%{packets}])" }
			id => "msgParserId35"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA:  [<fld1>]: received unexpected IPsec packet: src IP: [<saddr>]; dst IP: [<daddr>]; firsthop/lasthop = [<fld2>]/[<fld3>] (count=[<packets>])
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "[%{fld1}]: received unexpected IPsec packet: src IP: [%{saddr}]; dst IP: [%{daddr}]; firsthop/lasthop = [%{fld2}]/[%{fld3}] (count=[%{packets}])" }
			id => "msgParserId36"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA:  Could not copy packet, <result>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "Could not copy packet, %{result}" }
			id => "msgParserId37"
			add_field => {
				"event_description" => "Could not copy packet"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA:  Could not allocate memory 
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "Could not allocate memory" }
			id => "msgParserId38"
			add_field => {
				"event_description" => "Could not allocate memory"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA:  Task exits: <result>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "Task exits: %{result}" }
			id => "msgParserId39"
			add_field => {
				"event_description" => "task exiting"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA:  ACL task exits 
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "ACL task exits" }
			id => "msgParserId40"
			add_field => {
				"event_description" => "ACL task exiting"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA:  VACL Logging task exits: <result> 
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "VACL Logging task exits: %{result}" }
			id => "msgParserId41"
			add_field => {
				"event_description" => "VCL Logging task exiting"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA:  Could not configure Dynamic ARP Inspection on { VLAN | vlan } <vlan> due to <result>
	else if [logstash][msgparser][id] == "msgParserId42" {
		grok {
			match => { "message" => "^[\s]*Could[\s]+not[\s]+configure[\s]+Dynamic[\s]+ARP[\s]+Inspection[\s]+on[\s]+([\s]*VLAN[\s]+|[\s]*vlan[\s]+)[\s]+(?<vlan>[^\s]*)[\s]+due[\s]+to[\s]+(?<result>.*)$" }
			id => "msgParserId42"
			add_field => {
				"event_description" => "Could not configure Dynamic ARP Inspection on vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA:  <result>. <event_description>
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{result}. %{event_description}" }
			id => "msgParserId43"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId44"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA:  PBF was committed in NVRAM, but <result>, <info> 
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "PBF was committed in NVRAM, but %{result}, %{info}" }
			id => "msgParserId45"
			add_field => {
				"event_description" => "PBF committed in NVRAM"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA:  MSFC is down, <result> 
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "MSFC is down, %{result}" }
			id => "msgParserId46"
			add_field => {
				"event_description" => "MSFC is down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA:  Failed to add secondary VLAN <result> to primary VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "Failed to add secondary VLAN %{result} to primary VLAN %{vlan}" }
			id => "msgParserId47"
			add_field => {
				"event_description" => "Failed to add secondary VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA:  Failed to map router ACL to private VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "Failed to map router ACL to private VLAN %{vlan}" }
			id => "msgParserId48"
			add_field => {
				"event_description" => "Failed to map router ACL to private VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA:  Failed to delete router ACL from secondary VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "Failed to delete router ACL from secondary VLAN %{vlan}" }
			id => "msgParserId49"
			add_field => {
				"event_description" => "Failed to delete router ACL from secondary VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA:  Failed to delete LDA ACL from secondary VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "Failed to delete LDA ACL from secondary VLAN %{vlan}" }
			id => "msgParserId50"
			add_field => {
				"event_description" => "Failed to delete LDA ACL from secondary VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA:  Failed to propagate LDA ACL to secondary VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "Failed to propagate LDA ACL to secondary VLAN %{vlan}" }
			id => "msgParserId51"
			add_field => {
				"event_description" => "Failed to propagate LDA ACL"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId52
	# line in RSA:  Failed to propagate router default action to secondary to VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "Failed to propagate router default action to secondary to VLAN %{vlan}" }
			id => "msgParserId52"
			add_field => {
				"event_description" => "Failed to propagate router default action"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId53
	# line in RSA:  Failed to propagate router ACL deletion to secondary VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "Failed to propagate router ACL deletion to secondary VLAN %{vlan}" }
			id => "msgParserId53"
			add_field => {
				"event_description" => "Failed to propagate router ACL deletion"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId54
	# line in RSA:  Failed to propagate router ACL to secondary VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "Failed to propagate router ACL to secondary VLAN %{vlan}" }
			id => "msgParserId54"
			add_field => {
				"event_description" => "Failed to propagate router ACL"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA:  Failed to set router default action on secondary VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "Failed to set router default action on secondary VLAN %{vlan}" }
			id => "msgParserId55"
			add_field => {
				"event_description" => "Failed to set router default action on secondary vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId56
	# line in RSA:  Failed to map Router ACL to VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "Failed to map Router ACL to VLAN %{vlan}" }
			id => "msgParserId56"
			add_field => {
				"event_description" => "Failed to map Router ACL to VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId57
	# line in RSA:  Failed to commit Security ACL <result> 
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "Failed to commit Security ACL %{result}" }
			id => "msgParserId57"
			add_field => {
				"event_description" => "Failed to commit Security ACL"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId58
	# line in RSA:  Failed to commit Security ACL <result> to NVRAM 
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "Failed to commit Security ACL %{result} to NVRAM" }
			id => "msgParserId58"
			add_field => {
				"event_description" => "Failed to commit Security ACL to NVRAM"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA:  Failed to Map Security ACL <result> to Vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "Failed to Map Security ACL %{result} to Vlan %{vlan}" }
			id => "msgParserId59"
			add_field => {
				"event_description" => "Failed to Map Security ACL"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA:  Failed to remove map between ACL <result> and Vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "Failed to remove map between ACL %{result} and Vlan %{vlan}" }
			id => "msgParserId60"
			add_field => {
				"event_description" => "Failed to remove map between ACL"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA:  <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{event_description}: %{result}" }
			id => "msgParserId61"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId62
	# line in RSA:  Dot1x DHCP and ARP Inspection global rate is disabled 
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "Dot1x DHCP and ARP Inspection global rate is disabled" }
			id => "msgParserId62"
			add_field => {
				"event_description" => "Dot1x DHCP and ARP Inspection global rate is disabled"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId63
	# line in RSA:  Ethernet Source MAC <smacaddr>
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "Ethernet Source MAC %{smacaddr}" }
			id => "msgParserId63"
			add_field => {
				"event_description" => "Source MAC identification"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA:  ARP Payload: Source IP <saddr> and source MAC <smacaddr>. Port <portname>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "ARP Payload: Source IP %{saddr} and source MAC %{smacaddr}. Port %{portname}" }
			id => "msgParserId64"
			add_field => {
				"event_description" => "ARP Payload data"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA:  Drop threshold (<result>) exceeded on port <portname>. Packet dropped 
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "Drop threshold (%{result}) exceeded on port %{portname}. Packet dropped" }
			id => "msgParserId65"
			add_field => {
				"event_description" => "packet dropped - drop threshold on port exceeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA:  IP packet with source IP <saddr>, destination IP <daddr>, and IP protocol <protocol>
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "IP packet with source IP %{saddr}, destination IP %{daddr}, and IP protocol %{protocol}" }
			id => "msgParserId66"
			add_field => {
				"event_description" => "IP packet description"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA:  Source MAC <smacaddr> and received on port <portname>. Packet dropped 
	else if [logstash][msgparser][id] == "msgParserId67" {
		dissect {
			mapping => { "message" => "Source MAC %{smacaddr} and received on port %{portname}. Packet dropped" }
			id => "msgParserId67"
			add_field => {
				"event_description" => "packet dropped"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA:  Dropped jumbo ARP packet of size <dclass_counter1> from port <portname>
	else if [logstash][msgparser][id] == "msgParserId68" {
		dissect {
			mapping => { "message" => "Dropped jumbo ARP packet of size %{dclass_counter1} from port %{portname}" }
			id => "msgParserId68"
			add_field => {
				"event_description" => "Dropped jumbo ARP packet"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA:  Source MAC address <smacaddr> does not match ARP header source MAC address. 
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "Source MAC address %{smacaddr} does not match ARP header source MAC address." }
			id => "msgParserId69"
			add_field => {
				"event_description" => "Source MAC address does not match ARP header"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA:  ARP Payload: Source IP <saddr> and source MAC <smacaddr>. Port <portname> 
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "ARP Payload: Source IP %{saddr} and source MAC %{smacaddr}. Port %{portname}" }
			id => "msgParserId70"
			add_field => {
				"event_description" => "ARP Payload description"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId71
	# line in RSA:  Packet denied. Source MAC <smacaddr>
	else if [logstash][msgparser][id] == "msgParserId71" {
		dissect {
			mapping => { "message" => "Packet denied. Source MAC %{smacaddr}" }
			id => "msgParserId71"
			add_field => {
				"event_description" => "Packet denied"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId72
	# line in RSA:  ARP Payload: Source IP <saddr> and source MAC <smacaddr>. Port <portname>
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "ARP Payload: Source IP %{saddr} and source MAC %{smacaddr}. Port %{portname}" }
			id => "msgParserId72"
			add_field => {
				"event_description" => "ARP Payload description"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId73
	# line in RSA:  Shutdown threshold (<result>) exceeded on port <portname>. Port shutdown
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "Shutdown threshold (%{result}) exceeded on port %{portname}. Port shutdown" }
			id => "msgParserId73"
			add_field => {
				"event_description" => "Port shutdown - threshold exceeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId74
	# line in RSA:  RACL conflicts with LDA on Vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "RACL conflicts with LDA on Vlan %{vlan}" }
			id => "msgParserId74"
			add_field => {
				"event_description" => "RACL conflicts with LDA on Vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId75
	# line in RSA:  VLAN <vlan>(Port <portname>) denied tcp <saddr><<<sport>> -> <daddr><<<dport>>, <dclass_counter1> packet <space> since <event_time_string> 
	else if [logstash][msgparser][id] == "msgParserId75" {
		dissect {
			mapping => { "message" => "VLAN %{vlan}(Port %{portname}) denied tcp %{saddr}<%{sport}> -> %{daddr}<%{dport}>, %{dclass_counter1} packet %{space} since %{event_time_string}" }
			id => "msgParserId75"
			add_field => {
				"event_description" => "denied VLAN connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId76
	# line in RSA:  Cannot create memory block for VLAN [<vlan>]
	else if [logstash][msgparser][id] == "msgParserId76" {
		dissect {
			mapping => { "message" => "Cannot create memory block for VLAN [%{vlan}]" }
			id => "msgParserId76"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA:  Cannot create VMR data structures for access list [<policyname>]
	else if [logstash][msgparser][id] == "msgParserId77" {
		dissect {
			mapping => { "message" => "Cannot create VMR data structures for access list [%{policyname}]" }
			id => "msgParserId77"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId78
	# line in RSA:  Cannot allocate [<fld1>] label for vlan-id [<vlan>]
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "Cannot allocate [%{fld1}] label for vlan-id [%{vlan}]" }
			id => "msgParserId78"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: <protocol>ACL TCAM Full. Software Forwarding packets on <info>
	else if [logstash][msgparser][id] == "msgParserId79" {
		dissect {
			mapping => { "message" => "%{protocol}ACL TCAM Full. Software Forwarding packets on %{info}" }
			id => "msgParserId79"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId80
	# line in RSA: Reloading <info>
	else if [logstash][msgparser][id] == "msgParserId80" {
		dissect {
			mapping => { "message" => "Reloading %{info}" }
			id => "msgParserId80"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: Unloading <info>
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "Unloading %{info}" }
			id => "msgParserId81"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId82
	# line in RSA:  <interface> interface add failed for ACR group <group>.
	else if [logstash][msgparser][id] == "msgParserId82" {
		dissect {
			mapping => { "message" => "%{interface} interface add failed for ACR group %{group}." }
			id => "msgParserId82"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA: <interface> interface del failed for ACR group <group>.
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "%{interface} interface del failed for ACR group %{group}." }
			id => "msgParserId83"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId84
	# line in RSA:  Port <network_port> failed the <info> diagnostic
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "Port %{network_port} failed the %{info} diagnostic" }
			id => "msgParserId84"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId85
	# line in RSA: Port <network_port>: The <info> diagnostic failed to terminate
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "Port %{network_port}: The %{info} diagnostic failed to terminate" }
			id => "msgParserId85"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId86
	# line in RSA: Port <network_port>microcode load failed.
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "Port %{network_port}microcode load failed." }
			id => "msgParserId86"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId87
	# line in RSA: Diagnostics failed for port <network_port>, start request ignored.
	else if [logstash][msgparser][id] == "msgParserId87" {
		dissect {
			mapping => { "message" => "Diagnostics failed for port %{network_port}, start request ignored." }
			id => "msgParserId87"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId88
	# line in RSA:  Bad request code <resultcode> generated on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId88" {
		dissect {
			mapping => { "message" => "Bad request code %{resultcode} generated on port %{network_port}" }
			id => "msgParserId88"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId89
	# line in RSA: Bad state: port <network_port>, request code <resultcode>, state <event_state>, <info>
	else if [logstash][msgparser][id] == "msgParserId89" {
		dissect {
			mapping => { "message" => "Bad state: port %{network_port}, request code %{resultcode}, state %{event_state}, %{info}" }
			id => "msgParserId89"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId90
	# line in RSA: Port <network_port> logout data
	else if [logstash][msgparser][id] == "msgParserId90" {
		dissect {
			mapping => { "message" => "Port %{network_port} logout data" }
			id => "msgParserId90"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId91
	# line in RSA: Port <network_port> scan data
	else if [logstash][msgparser][id] == "msgParserId91" {
		dissect {
			mapping => { "message" => "Port %{network_port} scan data" }
			id => "msgParserId91"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId92
	# line in RSA: Wrap plug detected in port <network_port>. Wrap loop started. 
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "Wrap plug detected in port %{network_port}. Wrap loop started." }
			id => "msgParserId92"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId93
	# line in RSA: Wrap plug removed from port <network_port>. Wrap loop ended.
	else if [logstash][msgparser][id] == "msgParserId93" {
		dissect {
			mapping => { "message" => "Wrap plug removed from port %{network_port}. Wrap loop ended." }
			id => "msgParserId93"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId94
	# line in RSA: Port <network_port> active. <event_description>
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "Port %{network_port} active. %{event_description}" }
			id => "msgParserId94"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId95
	# line in RSA: All or part of adjacency message for <info> not sent to incompatible CEF instance for <context>
	else if [logstash][msgparser][id] == "msgParserId95" {
		dissect {
			mapping => { "message" => "All or part of adjacency message for %{info} not sent to incompatible CEF instance for %{context}" }
			id => "msgParserId95"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId96
	# line in RSA: Midchain parent maintenance for <info>
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "Midchain parent maintenance for %{info}" }
			id => "msgParserId96"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId97
	# line in RSA: <fld1> <protocol> <saddr> - <daddr> (<fld2>), <packets> packet
	else if [logstash][msgparser][id] == "msgParserId97" {
		dissect {
			mapping => { "message" => "%{fld1} %{protocol} %{saddr} - %{daddr} (%{fld2}), %{packets} packet" }
			id => "msgParserId97"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId98
	# line in RSA: <fld1> ip protocol=<protocol> <saddr> - <daddr>, <packets> packet
	else if [logstash][msgparser][id] == "msgParserId98" {
		dissect {
			mapping => { "message" => "%{fld1} ip protocol=%{protocol} %{saddr} - %{daddr}, %{packets} packet" }
			id => "msgParserId98"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId99
	# line in RSA: <fld1> <fld2> <saddr>(<sport>) - <daddr> (<dport>), <packets> packet
	else if [logstash][msgparser][id] == "msgParserId99" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{saddr}(%{sport}) - %{daddr} (%{dport}), %{packets} packet" }
			id => "msgParserId99"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId100
	# line in RSA: Oal logging rate-limited or missed <packets> packet
	else if [logstash][msgparser][id] == "msgParserId100" {
		dissect {
			mapping => { "message" => "Oal logging rate-limited or missed %{packets} packet" }
			id => "msgParserId100"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId101
	# line in RSA: <fld1> <protocol> <saddr> - <daddr>(<dport>), <packets> packet
	else if [logstash][msgparser][id] == "msgParserId101" {
		dissect {
			mapping => { "message" => "%{fld1} %{protocol} %{saddr} - %{daddr}(%{dport}), %{packets} packet" }
			id => "msgParserId101"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId102
	# line in RSA: Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId102" {
		dissect {
			mapping => { "message" => "Interface %{interface} %{event_description}" }
			id => "msgParserId102"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId103
	# line in RSA: Interface <interface>, AIP driver rejected <info> command (error code <resultcode>)
	else if [logstash][msgparser][id] == "msgParserId103" {
		dissect {
			mapping => { "message" => "Interface %{interface}, AIP driver rejected %{info} command (error code %{resultcode})" }
			id => "msgParserId103"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId104
	# line in RSA: <fld1> Interface (<interface>): <info> IPC command fails (<context>) 
	else if [logstash][msgparser][id] == "msgParserId104" {
		dissect {
			mapping => { "message" => "%{fld1} Interface (%{interface}): %{info} IPC command fails (%{context})" }
			id => "msgParserId104"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId105
	# line in RSA: (<fld1>) Interface (<interface>): unknown IPC event (<info>) from linecard
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "(%{fld1}) Interface (%{interface}): unknown IPC event (%{info}) from linecard" }
			id => "msgParserId105"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId106
	# line in RSA: (<fld1>) Interface (<interface>):  <event_description>
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "(%{fld1}) Interface (%{interface}):  %{event_description}" }
			id => "msgParserId106"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId107
	# line in RSA: <fld1> Interface (<interface>)
	else if [logstash][msgparser][id] == "msgParserId107" {
		dissect {
			mapping => { "message" => "%{fld1} Interface (%{interface})" }
			id => "msgParserId107"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId108
	# line in RSA: <fld1> Interface (<interface>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId108" {
		dissect {
			mapping => { "message" => "%{fld1} Interface (%{interface}): %{event_description}" }
			id => "msgParserId108"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId109
	# line in RSA: Spurious memory access made at <info>
	else if [logstash][msgparser][id] == "msgParserId109" {
		dissect {
			mapping => { "message" => "Spurious memory access made at %{info}" }
			id => "msgParserId109"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId110
	# line in RSA: ASCU <fld1>on interface <interface> has an internal FSM error
	else if [logstash][msgparser][id] == "msgParserId110" {
		dissect {
			mapping => { "message" => "ASCU %{fld1}on interface %{interface} has an internal FSM error" }
			id => "msgParserId110"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId111
	# line in RSA: Polling for ASCU <fld1>on interface <interface> is stalled
	else if [logstash][msgparser][id] == "msgParserId111" {
		dissect {
			mapping => { "message" => "Polling for ASCU %{fld1}on interface %{interface} is stalled" }
			id => "msgParserId111"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId112
	# line in RSA: ASCU <fld1>on interface <interface> has been disabled since 4 consecutive messages were received from same SID
	else if [logstash][msgparser][id] == "msgParserId112" {
		dissect {
			mapping => { "message" => "ASCU %{fld1}on interface %{interface} has been disabled since 4 consecutive messages were received from same SID" }
			id => "msgParserId112"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId113
	# line in RSA: ASCU <fld1>on interface <interface> is down
	else if [logstash][msgparser][id] == "msgParserId113" {
		dissect {
			mapping => { "message" => "ASCU %{fld1}on interface %{interface} is down" }
			id => "msgParserId113"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId114
	# line in RSA: ASCU <fld1>on interface <interface> is up
	else if [logstash][msgparser][id] == "msgParserId114" {
		dissect {
			mapping => { "message" => "ASCU %{fld1}on interface %{interface} is up" }
			id => "msgParserId114"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId115
	# line in RSA:  Peer (<hostip>- <info>) changed state to open
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "Peer (%{hostip}- %{info}) changed state to open" }
			id => "msgParserId115"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId116
	# line in RSA:  Peer (<hostip>- <info>) has exited a congested state.
	else if [logstash][msgparser][id] == "msgParserId116" {
		dissect {
			mapping => { "message" => "Peer (%{hostip}- %{info}) has exited a congested state." }
			id => "msgParserId116"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId117
	# line in RSA:  Peer (<hostip>- <info>) has entered a congested state
	else if [logstash][msgparser][id] == "msgParserId117" {
		dissect {
			mapping => { "message" => "Peer (%{hostip}- %{info}) has entered a congested state" }
			id => "msgParserId117"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId118
	# line in RSA:  Peer (<hostip>- <info>) open failed- rsn = <context>
	else if [logstash][msgparser][id] == "msgParserId118" {
		dissect {
			mapping => { "message" => "Peer (%{hostip}- %{info}) open failed- rsn = %{context}" }
			id => "msgParserId118"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId119
	# line in RSA:  Threshold exceeded for maximum size exceeded drops for peer (<hostip>- <info>)
	else if [logstash][msgparser][id] == "msgParserId119" {
		dissect {
			mapping => { "message" => "Threshold exceeded for maximum size exceeded drops for peer (%{hostip}- %{info})" }
			id => "msgParserId119"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId120
	# line in RSA:  Threshold exceeded for peer unreachable peer drops for peer (<hostip>- <info>)
	else if [logstash][msgparser][id] == "msgParserId120" {
		dissect {
			mapping => { "message" => "Threshold exceeded for peer unreachable peer drops for peer (%{hostip}- %{info})" }
			id => "msgParserId120"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId121
	# line in RSA:  Threshold exceeded for TCP Queue overflow peer drops for peer (<hostip>- <info>)
	else if [logstash][msgparser][id] == "msgParserId121" {
		dissect {
			mapping => { "message" => "Threshold exceeded for TCP Queue overflow peer drops for peer (%{hostip}- %{info})" }
			id => "msgParserId121"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId122
	# line in RSA:  Threshold exceeded for version mismatch peer drops for peer (<hostip>- <info>)
	else if [logstash][msgparser][id] == "msgParserId122" {
		dissect {
			mapping => { "message" => "Threshold exceeded for version mismatch peer drops for peer (%{hostip}- %{info})" }
			id => "msgParserId122"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId123
	# line in RSA: Interface <interface> does not support ISL
	else if [logstash][msgparser][id] == "msgParserId123" {
		dissect {
			mapping => { "message" => "Interface %{interface} does not support ISL" }
			id => "msgParserId123"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA:  <portname>transmit error
	else if [logstash][msgparser][id] == "msgParserId124" {
		dissect {
			mapping => { "message" => "%{portname}transmit error" }
			id => "msgParserId124"
			add_field => {
				"event_description" => "trasmit error on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId125
	# line in RSA:  <interface> TDR=<dclass_counter1>, TRC=<dclass_counter2>
	else if [logstash][msgparser][id] == "msgParserId125" {
		dissect {
			mapping => { "message" => "%{interface} TDR=%{dclass_counter1}, TRC=%{dclass_counter2}" }
			id => "msgParserId125"
			add_field => {
				"event_description" => "interface statistics"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId126
	# line in RSA: 'Message Type <info>' is not supported by ANCP ISSU client at peer
	else if [logstash][msgparser][id] == "msgParserId126" {
		dissect {
			mapping => { "message" => "'Message Type %{info}' is not supported by ANCP ISSU client at peer" }
			id => "msgParserId126"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId127
	# line in RSA: ANCP ISSU client 'Message Type <info>' is not compatible
	else if [logstash][msgparser][id] == "msgParserId127" {
		dissect {
			mapping => { "message" => "ANCP ISSU client 'Message Type %{info}' is not compatible" }
			id => "msgParserId127"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId128
	# line in RSA: ANCP ISSU client <info> transform failed for <event_description>
	else if [logstash][msgparser][id] == "msgParserId128" {
		dissect {
			mapping => { "message" => "ANCP ISSU client %{info} transform failed for %{event_description}" }
			id => "msgParserId128"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId129
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId129" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId129"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%AP-1-AUTH_PROXY_DOS_ATTACK" {
		# MESSAGE %AP-1-AUTH_PROXY_DOS_ATTACK
		# line in RSA: Possible DOS attack from source IP-address <saddr>| AuditSessionID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Possible DOS attack from source IP-address %{saddr}| AuditSessionID %{sessionid}" }
				id => "message-%AP-1-AUTH_PROXY_DOS_ATTACK"
				add_field => {
				"context" => "%{messageid}"
					"[event][id]" => "%AP-1-AUTH_PROXY_DOS_ATTACK"
					"[rsa][message][id1]" => "%AP-1-AUTH_PROXY_DOS_ATTACK"
					"[event][categoryid]" => "1002010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %AP-1-AUTH_PROXY_DOS_ATTACK:01
		# line in RSA: Possible DOS attack from source IP-address <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Possible DOS attack from source IP-address %{saddr}" }
				id => "message-%AP-1-AUTH_PROXY_DOS_ATTACK:01"
				add_field => {
				"context" => "%{messageid}"
					"[event][id]" => "%AP-1-AUTH_PROXY_DOS_ATTACK:01"
					"[rsa][message][id1]" => "%AP-1-AUTH_PROXY_DOS_ATTACK:01"
					"[event][categoryid]" => "1002010200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%AP-1-AUTH_PROXY_RETRIES_EXCEEDED" {
		# MESSAGE %AP-1-AUTH_PROXY_RETRIES_EXCEEDED
		# line in RSA: IP-address <saddr> has exceeded the maximum retry limit | AuditSessionID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IP-address %{saddr} has exceeded the maximum retry limit | AuditSessionID %{sessionid}" }
				id => "message-%AP-1-AUTH_PROXY_RETRIES_EXCEEDED"
				add_field => {
				"context" => "%{messageid}"
					"[event][id]" => "%AP-1-AUTH_PROXY_RETRIES_EXCEEDED"
					"[rsa][message][id1]" => "%AP-1-AUTH_PROXY_RETRIES_EXCEEDED"
					"[event][categoryid]" => "1001030304"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %AP-1-AUTH_PROXY_RETRIES_EXCEEDED:01
		# line in RSA: IP-address <saddr> has exceeded the maximum retry limit
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IP-address %{saddr} has exceeded the maximum retry limit" }
				id => "message-%AP-1-AUTH_PROXY_RETRIES_EXCEEDED:01"
				add_field => {
				"context" => "%{messageid}"
					"[event][id]" => "%AP-1-AUTH_PROXY_RETRIES_EXCEEDED:01"
					"[rsa][message][id1]" => "%AP-1-AUTH_PROXY_RETRIES_EXCEEDED:01"
					"[event][categoryid]" => "1001030304"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId134
	# line in RSA:  POLICY <fld1>| POLICYNAME <policyname>| IP <hostip>| <result> | AuditSessionID <sessionid> 
	else if [logstash][msgparser][id] == "msgParserId134" {
		dissect {
			mapping => { "message" => "POLICY %{fld1}| POLICYNAME %{policyname}| IP %{hostip}| %{result} | AuditSessionID %{sessionid}" }
			id => "msgParserId134"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId135
	# line in RSA: Event=AAA <fld1>. HOST <hostname>| POLICY <policyname> | AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId135" {
		dissect {
			mapping => { "message" => "Event=AAA %{fld1}. HOST %{hostname}| POLICY %{policyname} | AuditSessionID %{sessionid}" }
			id => "msgParserId135"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%AP-6-AUTH_PROXY_AUDIT_STOP" {
		# MESSAGE %AP-6-AUTH_PROXY_AUDIT_STOP
		# line in RSA: initiator (<hostip>) send <packets> packets <sbytes> bytes; duration time <duration>| AuditSessionID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "initiator (%{hostip}) send %{packets} packets %{sbytes} bytes; duration time %{duration}| AuditSessionID %{sessionid}" }
				id => "message-%AP-6-AUTH_PROXY_AUDIT_STOP"
				add_field => {
					"[event][id]" => "%AP-6-AUTH_PROXY_AUDIT_STOP"
					"[rsa][message][id1]" => "%AP-6-AUTH_PROXY_AUDIT_STOP"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %AP-6-AUTH_PROXY_AUDIT_STOP:01
		# line in RSA: initiator (<hostip>) send <packets> packets <sbytes> bytes; duration time <duration>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "initiator (%{hostip}) send %{packets} packets %{sbytes} bytes; duration time %{duration}" }
				id => "message-%AP-6-AUTH_PROXY_AUDIT_STOP:01"
				add_field => {
					"[event][id]" => "%AP-6-AUTH_PROXY_AUDIT_STOP:01"
					"[rsa][message][id1]" => "%AP-6-AUTH_PROXY_AUDIT_STOP:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId138
	# line in RSA: IP <hostip>| MAC <macaddr>| PROFILE_NAME <fld1>| EVENT <event_description>| AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId138" {
		dissect {
			mapping => { "message" => "IP %{hostip}| MAC %{macaddr}| PROFILE_NAME %{fld1}| EVENT %{event_description}| AuditSessionID %{sessionid}" }
			id => "msgParserId138"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId139
	# line in RSA: <info> (<policyname>) policy for host (<hostip>)
	else if [logstash][msgparser][id] == "msgParserId139" {
		dissect {
			mapping => { "message" => "%{info} (%{policyname}) policy for host (%{hostip})" }
			id => "msgParserId139"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%AP-6-POSTURE_START_VALIDATION" {
		# MESSAGE %AP-6-POSTURE_START_VALIDATION
		# line in RSA: IP=<hostip>| Interface=<interface>| AuditSessionID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IP=%{hostip}| Interface=%{interface}| AuditSessionID %{sessionid}" }
				id => "message-%AP-6-POSTURE_START_VALIDATION"
				add_field => {
					"[event][id]" => "%AP-6-POSTURE_START_VALIDATION"
					"[rsa][message][id1]" => "%AP-6-POSTURE_START_VALIDATION"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %AP-6-POSTURE_START_VALIDATION:01
		# line in RSA: IP=<hostip>| Interface=<interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IP=%{hostip}| Interface=%{interface}" }
				id => "message-%AP-6-POSTURE_START_VALIDATION:01"
				add_field => {
					"[event][id]" => "%AP-6-POSTURE_START_VALIDATION:01"
					"[rsa][message][id1]" => "%AP-6-POSTURE_START_VALIDATION:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%AP-6-POSTURE_STATE_CHANGE" {
		# MESSAGE %AP-6-POSTURE_STATE_CHANGE
		# line in RSA: IP=<hostip>| STATE=<event_state>| AuditSessionID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IP=%{hostip}| STATE=%{event_state}| AuditSessionID %{sessionid}" }
				id => "message-%AP-6-POSTURE_STATE_CHANGE"
				add_field => {
					"[event][id]" => "%AP-6-POSTURE_STATE_CHANGE"
					"[rsa][message][id1]" => "%AP-6-POSTURE_STATE_CHANGE"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %AP-6-POSTURE_STATE_CHANGE:01
		# line in RSA: IP=<hostip>| STATE=<event_state>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IP=%{hostip}| STATE=%{event_state}" }
				id => "message-%AP-6-POSTURE_STATE_CHANGE:01"
				add_field => {
					"[event][id]" => "%AP-6-POSTURE_STATE_CHANGE:01"
					"[rsa][message][id1]" => "%AP-6-POSTURE_STATE_CHANGE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId144
	# line in RSA: Maximum of <info> unanswered HTTP requests exceeded from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId144" {
		dissect {
			mapping => { "message" => "Maximum of %{info} unanswered HTTP requests exceeded from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId144"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId145
	# line in RSA: Number of unanswered HTTP requests exceeded the limit <info>
	else if [logstash][msgparser][id] == "msgParserId145" {
		dissect {
			mapping => { "message" => "Number of unanswered HTTP requests exceeded the limit %{info}" }
			id => "msgParserId145"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId146
	# line in RSA:  <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId146" {
		dissect {
			mapping => { "message" => "%{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId146"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId147
	# line in RSA: Sig: <ntype> <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId147" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} %{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId147"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId148
	# line in RSA: Sig:<ntype> Deobfuscation signature detected -  HTTP deobfuscation detected IDS evasion technique from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId148" {
		dissect {
			mapping => { "message" => "Sig:%{ntype} Deobfuscation signature detected -  HTTP deobfuscation detected IDS evasion technique from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId148"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId149
	# line in RSA:  Deobfuscation signature (<ntype>) detected -<info>
	else if [logstash][msgparser][id] == "msgParserId149" {
		dissect {
			mapping => { "message" => "Deobfuscation signature (%{ntype}) detected -%{info}" }
			id => "msgParserId149"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId150
	# line in RSA: Sig: <ntype> Content type: <info> does not match the Accept-Type from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId150" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} Content type: %{info} does not match the Accept-Type from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId150"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId151
	# line in RSA: Sig: <ntype> HTTP Header length exceeded. Received <rbytes> byte of header - <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId151" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} HTTP Header length exceeded. Received %{rbytes} byte of header - %{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId151"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId152
	# line in RSA: Sig: <ntype> HTTP URI length exceeded. Received <rbytes> byte of URL - <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId152" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} HTTP URI length exceeded. Received %{rbytes} byte of URL - %{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId152"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId153
	# line in RSA:  HTTP method (<web_method>) matched -<info>
	else if [logstash][msgparser][id] == "msgParserId153" {
		dissect {
			mapping => { "message" => "HTTP method (%{web_method}) matched -%{info}" }
			id => "msgParserId153"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId154
	# line in RSA: Sig: <ntype> HTTP Instant Messenger detected - <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId154" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} HTTP Instant Messenger detected - %{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId154"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId155
	# line in RSA: Sig: <ntype> HTTP Peer-to-Peer detected - <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId155" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} HTTP Peer-to-Peer detected - %{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId155"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId156
	# line in RSA: Sig: <ntype> HTTP Tunnel detected - <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} HTTP Tunnel detected - %{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId156"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId157
	# line in RSA: Sig: <ntype> HTTP Extension method illegal - <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId157" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} HTTP Extension method illegal - %{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId157"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId158
	# line in RSA: Sig: <ntype> HTTP RFC method illegal - <info> from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId158" {
		dissect {
			mapping => { "message" => "Sig: %{ntype} HTTP RFC method illegal - %{info} from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId158"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId159
	# line in RSA: Sig:<ntype> HTTP protocol violation detected -  HTTP Protocol not detected from <saddr>:<sport> to <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId159" {
		dissect {
			mapping => { "message" => "Sig:%{ntype} HTTP protocol violation detected -  HTTP Protocol not detected from %{saddr}:%{sport} to %{daddr}:%{dport}" }
			id => "msgParserId159"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId160
	# line in RSA: HTTP session initiator <saddr>:<sport> sends <sbytes> bytes - responder <daddr>:<dport> sends <rbytes> bytes
	else if [logstash][msgparser][id] == "msgParserId160" {
		dissect {
			mapping => { "message" => "HTTP session initiator %{saddr}:%{sport} sends %{sbytes} bytes - responder %{daddr}:%{dport} sends %{rbytes} bytes" }
			id => "msgParserId160"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId161
	# line in RSA: im-aol <saddr>:<sport> attempting to establish connection with aol server <daddr>:<dport> using an unsupported version of the client
	else if [logstash][msgparser][id] == "msgParserId161" {
		dissect {
			mapping => { "message" => "im-aol %{saddr}:%{sport} attempting to establish connection with aol server %{daddr}:%{dport} using an unsupported version of the client" }
			id => "msgParserId161"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId162
	# line in RSA: im-aol <info> service session initiator <saddr>:<sport> <action> <bytes> bytes <fld2> responder <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId162" {
		dissect {
			mapping => { "message" => "im-aol %{info} service session initiator %{saddr}:%{sport} %{action} %{bytes} bytes %{fld2} responder %{daddr}:%{dport}" }
			id => "msgParserId162"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId163
	# line in RSA: im-msn <saddr>:<sport> attempting to establish connection with msn server <daddr>:<dport> using an unsupported version of the client
	else if [logstash][msgparser][id] == "msgParserId163" {
		dissect {
			mapping => { "message" => "im-msn %{saddr}:%{sport} attempting to establish connection with msn server %{daddr}:%{dport} using an unsupported version of the client" }
			id => "msgParserId163"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId164
	# line in RSA: im-msn <info> service session initiator <saddr>:<sport> <action> <bytes> bytes <fld2> responder <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "im-msn %{info} service session initiator %{saddr}:%{sport} %{action} %{bytes} bytes %{fld2} responder %{daddr}:%{dport}" }
			id => "msgParserId164"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId165
	# line in RSA: im-yahoo <saddr>:<sport> attempting to establish connection with yahoo server <daddr>:<dport> using an unsupported version of the client
	else if [logstash][msgparser][id] == "msgParserId165" {
		dissect {
			mapping => { "message" => "im-yahoo %{saddr}:%{sport} attempting to establish connection with yahoo server %{daddr}:%{dport} using an unsupported version of the client" }
			id => "msgParserId165"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId166
	# line in RSA: im-yahoo text-chat service session: <saddr>:<sport> establishing a direct chat with <info>
	else if [logstash][msgparser][id] == "msgParserId166" {
		dissect {
			mapping => { "message" => "im-yahoo text-chat service session: %{saddr}:%{sport} establishing a direct chat with %{info}" }
			id => "msgParserId166"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId167
	# line in RSA: im-yahoo <info> service session initiator <saddr>:<sport> <action> <bytes> bytes <fld2> responder <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId167" {
		dissect {
			mapping => { "message" => "im-yahoo %{info} service session initiator %{saddr}:%{sport} %{action} %{bytes} bytes %{fld2} responder %{daddr}:%{dport}" }
			id => "msgParserId167"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId168
	# line in RSA:  <application> using <network_port> port - <event_description>
	else if [logstash][msgparser][id] == "msgParserId168" {
		dissect {
			mapping => { "message" => "%{application} using %{network_port} port - %{event_description}" }
			id => "msgParserId168"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId169
	# line in RSA: No Active Port In Group <group>
	else if [logstash][msgparser][id] == "msgParserId169" {
		dissect {
			mapping => { "message" => "No Active Port In Group %{group}" }
			id => "msgParserId169"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId170
	# line in RSA: Group <group>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId170" {
		dissect {
			mapping => { "message" => "Group %{group}: %{event_description}" }
			id => "msgParserId170"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId171
	# line in RSA: <info> Port Fail On <interface>
	else if [logstash][msgparser][id] == "msgParserId171" {
		dissect {
			mapping => { "message" => "%{info} Port Fail On %{interface}" }
			id => "msgParserId171"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId172
	# line in RSA:  Controller <context> execution of <info> command failed.
	else if [logstash][msgparser][id] == "msgParserId172" {
		dissect {
			mapping => { "message" => "Controller %{context} execution of %{info} command failed." }
			id => "msgParserId172"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId173
	# line in RSA: Auto-Failover - Group <group>
	else if [logstash][msgparser][id] == "msgParserId173" {
		dissect {
			mapping => { "message" => "Auto-Failover - Group %{group}" }
			id => "msgParserId173"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId174
	# line in RSA: Group <group> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId174" {
		dissect {
			mapping => { "message" => "Group %{group} - %{event_description}" }
			id => "msgParserId174"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId175
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId175" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId175"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId176
	# line in RSA: TTY <info>: ARAP unexpected initialization packet <packets>
	else if [logstash][msgparser][id] == "msgParserId176" {
		dissect {
			mapping => { "message" => "TTY %{info}: ARAP unexpected initialization packet %{packets}" }
			id => "msgParserId176"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId177
	# line in RSA:  TTY <fld1>: ARAP ended for user <username>; address <hostip>
	else if [logstash][msgparser][id] == "msgParserId177" {
		dissect {
			mapping => { "message" => "TTY %{fld1}: ARAP ended for user %{username}; address %{hostip}" }
			id => "msgParserId177"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId178
	# line in RSA: TTY <fld1>: ARAP started for user <username>; address <hostip>
	else if [logstash][msgparser][id] == "msgParserId178" {
		dissect {
			mapping => { "message" => "TTY %{fld1}: ARAP started for user %{username}; address %{hostip}" }
			id => "msgParserId178"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId179
	# line in RSA: TTY <fld1>: exited user <username> <info>
	else if [logstash][msgparser][id] == "msgParserId179" {
		dissect {
			mapping => { "message" => "TTY %{fld1}: exited user %{username} %{info}" }
			id => "msgParserId179"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId180
	# line in RSA:  TTY <info>: exited user <username>: <context>
	else if [logstash][msgparser][id] == "msgParserId180" {
		dissect {
			mapping => { "message" => "TTY %{info}: exited user %{username}: %{context}" }
			id => "msgParserId180"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId181
	# line in RSA:  Archive of router configuration was skipped <result>.
	else if [logstash][msgparser][id] == "msgParserId181" {
		dissect {
			mapping => { "message" => "Archive of router configuration was skipped %{result}." }
			id => "msgParserId181"
			add_field => {
				"event_description" => "Archive of router configuration was skipped"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId182
	# line in RSA:  User:     <username>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId182" {
		dissect {
			mapping => { "message" => "User:     %{username}: %{event_description}" }
			id => "msgParserId182"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId183
	# line in RSA:  User:     <username>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId183" {
		dissect {
			mapping => { "message" => "User:     %{username}:%{event_description}" }
			id => "msgParserId183"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId184
	# line in RSA:  User:     <username> <event_description>
	else if [logstash][msgparser][id] == "msgParserId184" {
		dissect {
			mapping => { "message" => "User:     %{username} %{event_description}" }
			id => "msgParserId184"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId185
	# line in RSA:  User <username> <event_description>
	else if [logstash][msgparser][id] == "msgParserId185" {
		dissect {
			mapping => { "message" => "User %{username} %{event_description}" }
			id => "msgParserId185"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId186
	# line in RSA:  Archive ISSU client 'Message Type <info>' is not compatible
	else if [logstash][msgparser][id] == "msgParserId186" {
		dissect {
			mapping => { "message" => "Archive ISSU client 'Message Type %{info}' is not compatible" }
			id => "msgParserId186"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId187
	# line in RSA: Archive ISSU client <info> transform failed for <event_description>
	else if [logstash][msgparser][id] == "msgParserId187" {
		dissect {
			mapping => { "message" => "Archive ISSU client %{info} transform failed for %{event_description}" }
			id => "msgParserId187"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId188
	# line in RSA:  Internal software error during updating CEF Adjacency for ARP entry for <hostip> on <info>
	else if [logstash][msgparser][id] == "msgParserId188" {
		dissect {
			mapping => { "message" => "Internal software error during updating CEF Adjacency for ARP entry for %{hostip} on %{info}" }
			id => "msgParserId188"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId189
	# line in RSA:  NULL MAC address from <hostip> on <interface>
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "NULL MAC address from %{hostip} on %{interface}" }
			id => "msgParserId189"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId190
	# line in RSA: Failure in changing MTU of interface <interface> to port-channel <info> MTU
	else if [logstash][msgparser][id] == "msgParserId190" {
		dissect {
			mapping => { "message" => "Failure in changing MTU of interface %{interface} to port-channel %{info} MTU" }
			id => "msgParserId190"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId191
	# line in RSA: An attempt to open <info> with handle number <fld1> has failed (<fld2>)
	else if [logstash][msgparser][id] == "msgParserId191" {
		dissect {
			mapping => { "message" => "An attempt to open %{info} with handle number %{fld1} has failed (%{fld2})" }
			id => "msgParserId191"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId192
	# line in RSA:  System dropped <bytes> bytes <info>
	else if [logstash][msgparser][id] == "msgParserId192" {
		dissect {
			mapping => { "message" => "System dropped %{bytes} bytes %{info}" }
			id => "msgParserId192"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId193
	# line in RSA: Unable to set <info> as a default file system
	else if [logstash][msgparser][id] == "msgParserId193" {
		dissect {
			mapping => { "message" => "Unable to set %{info} as a default file system" }
			id => "msgParserId193"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId194
	# line in RSA: Could not add filesystem <info> to IFS links
	else if [logstash][msgparser][id] == "msgParserId194" {
		dissect {
			mapping => { "message" => "Could not add filesystem %{info} to IFS links" }
			id => "msgParserId194"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId195
	# line in RSA: Error message type <info> not defined
	else if [logstash][msgparser][id] == "msgParserId195" {
		dissect {
			mapping => { "message" => "Error message type %{info} not defined" }
			id => "msgParserId195"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId196
	# line in RSA: Punt service <service> create failed
	else if [logstash][msgparser][id] == "msgParserId196" {
		dissect {
			mapping => { "message" => "Punt service %{service} create failed" }
			id => "msgParserId196"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId197
	# line in RSA: ASR1000 shim layer <info> process message
	else if [logstash][msgparser][id] == "msgParserId197" {
		dissect {
			mapping => { "message" => "ASR1000 shim layer %{info} process message" }
			id => "msgParserId197"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId198
	# line in RSA: pak with linktype <info> gets into non-ip tunnel
	else if [logstash][msgparser][id] == "msgParserId198" {
		dissect {
			mapping => { "message" => "pak with linktype %{info} gets into non-ip tunnel" }
			id => "msgParserId198"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId199
	# line in RSA:  IOS thread disabled interrupt for <info> msec
	else if [logstash][msgparser][id] == "msgParserId199" {
		dissect {
			mapping => { "message" => "IOS thread disabled interrupt for %{info} msec" }
			id => "msgParserId199"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId200
	# line in RSA: disconnect by application for <info>, bring down IPC
	else if [logstash][msgparser][id] == "msgParserId200" {
		dissect {
			mapping => { "message" => "disconnect by application for %{info}, bring down IPC" }
			id => "msgParserId200"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId201
	# line in RSA: process receive buffer error from <info> bring down IPC
	else if [logstash][msgparser][id] == "msgParserId201" {
		dissect {
			mapping => { "message" => "process receive buffer error from %{info} bring down IPC" }
			id => "msgParserId201"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId202
	# line in RSA: write bipc error for <info> bring down IPC
	else if [logstash][msgparser][id] == "msgParserId202" {
		dissect {
			mapping => { "message" => "write bipc error for %{info} bring down IPC" }
			id => "msgParserId202"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId203
	# line in RSA: EOBC ip-table cache: <info>
	else if [logstash][msgparser][id] == "msgParserId203" {
		dissect {
			mapping => { "message" => "EOBC ip-table cache: %{info}" }
			id => "msgParserId203"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId204
	# line in RSA: Management VRF AFI <info> attach failed
	else if [logstash][msgparser][id] == "msgParserId204" {
		dissect {
			mapping => { "message" => "Management VRF AFI %{info} attach failed" }
			id => "msgParserId204"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId205
	# line in RSA: Management VRF process creation failed, <info>
	else if [logstash][msgparser][id] == "msgParserId205" {
		dissect {
			mapping => { "message" => "Management VRF process creation failed, %{info}" }
			id => "msgParserId205"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId206
	# line in RSA: SPA(<info>) restarted in <context>
	else if [logstash][msgparser][id] == "msgParserId206" {
		dissect {
			mapping => { "message" => "SPA(%{info}) restarted in %{context}" }
			id => "msgParserId206"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId207
	# line in RSA: PEM/FM <info> removed
	else if [logstash][msgparser][id] == "msgParserId207" {
		dissect {
			mapping => { "message" => "PEM/FM %{info} removed" }
			id => "msgParserId207"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId208
	# line in RSA:  Error initializing IPC queue
	else if [logstash][msgparser][id] == "msgParserId208" {
		dissect {
			mapping => { "message" => "Error initializing IPC queue" }
			id => "msgParserId208"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId209
	# line in RSA: Unexpected event recieved.
	else if [logstash][msgparser][id] == "msgParserId209" {
		dissect {
			mapping => { "message" => "Unexpected event recieved." }
			id => "msgParserId209"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId210
	# line in RSA: Datapath IDB CF operation failed - <info>
	else if [logstash][msgparser][id] == "msgParserId210" {
		dissect {
			mapping => { "message" => "Datapath IDB CF operation failed - %{info}" }
			id => "msgParserId210"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId211
	# line in RSA: Decode via <info> failed 
	else if [logstash][msgparser][id] == "msgParserId211" {
		dissect {
			mapping => { "message" => "Decode via %{info} failed" }
			id => "msgParserId211"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId212
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId212" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId212"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId213
	# line in RSA: List <listnum> failed for <event_description>
	else if [logstash][msgparser][id] == "msgParserId213" {
		dissect {
			mapping => { "message" => "List %{listnum} failed for %{event_description}" }
			id => "msgParserId213"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId214
	# line in RSA:  List <context> failed for <info>
	else if [logstash][msgparser][id] == "msgParserId214" {
		dissect {
			mapping => { "message" => "List %{context} failed for %{info}" }
			id => "msgParserId214"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId215
	# line in RSA: Failed to start ISSU <info> session negotiation; <context> 
	else if [logstash][msgparser][id] == "msgParserId215" {
		dissect {
			mapping => { "message" => "Failed to start ISSU %{info} session negotiation; %{context}" }
			id => "msgParserId215"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId216
	# line in RSA: HWIDB <info> does not have a ASR1000 subblock
	else if [logstash][msgparser][id] == "msgParserId216" {
		dissect {
			mapping => { "message" => "HWIDB %{info} does not have a ASR1000 subblock" }
			id => "msgParserId216"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId217
	# line in RSA:  Unable to utilize the memory buffer provided by the Checkpoint Facility. This <info> CF client has failed to Bulk Sync.
	else if [logstash][msgparser][id] == "msgParserId217" {
		dissect {
			mapping => { "message" => "Unable to utilize the memory buffer provided by the Checkpoint Facility. This %{info} CF client has failed to Bulk Sync." }
			id => "msgParserId217"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId218
	# line in RSA: Encountered error <event_description>
	else if [logstash][msgparser][id] == "msgParserId218" {
		dissect {
			mapping => { "message" => "Encountered error %{event_description}" }
			id => "msgParserId218"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId219
	# line in RSA:  Error code <resultcode> encountered trying to regenerate interface flow-control identifer. <info>
	else if [logstash][msgparser][id] == "msgParserId219" {
		dissect {
			mapping => { "message" => "Error code %{resultcode} encountered trying to regenerate interface flow-control identifer. %{info}" }
			id => "msgParserId219"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId220
	# line in RSA:  Failed to initialize data structure for SPA port <info>
	else if [logstash][msgparser][id] == "msgParserId220" {
		dissect {
			mapping => { "message" => "Failed to initialize data structure for SPA port %{info}" }
			id => "msgParserId220"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId221
	# line in RSA:  Failed to open IPC port <network_port> with error <event_description>
	else if [logstash][msgparser][id] == "msgParserId221" {
		dissect {
			mapping => { "message" => "Failed to open IPC port %{network_port} with error %{event_description}" }
			id => "msgParserId221"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId222
	# line in RSA: Link record error - <info>
	else if [logstash][msgparser][id] == "msgParserId222" {
		dissect {
			mapping => { "message" => "Link record error - %{info}" }
			id => "msgParserId222"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId223
	# line in RSA: Bay <info>
	else if [logstash][msgparser][id] == "msgParserId223" {
		dissect {
			mapping => { "message" => "Bay %{info}" }
			id => "msgParserId223"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId224
	# line in RSA: Total SPA bandwidth exceeds line card capacity, full utilization of installed SPA interfaces is not supported 
	else if [logstash][msgparser][id] == "msgParserId224" {
		dissect {
			mapping => { "message" => "Total SPA bandwidth exceeds line card capacity, full utilization of installed SPA interfaces is not supported" }
			id => "msgParserId224"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId225
	# line in RSA: cpu= <info>, max cpu = <context>
	else if [logstash][msgparser][id] == "msgParserId225" {
		dissect {
			mapping => { "message" => "cpu= %{info}, max cpu = %{context}" }
			id => "msgParserId225"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId226
	# line in RSA: Failed to set the alloc/free handler for SPA <info> handle 
	else if [logstash][msgparser][id] == "msgParserId226" {
		dissect {
			mapping => { "message" => "Failed to set the alloc/free handler for SPA %{info} handle" }
			id => "msgParserId226"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%ASCII-CFG-6-INFORMATION" {
		# MESSAGE %ASCII-CFG-6-INFORMATION
		# line in RSA:  Reading <obj_name> Runtime information
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Reading %{obj_name} Runtime information" }
				id => "message-%ASCII-CFG-6-INFORMATION"
				add_field => {
				"event_description" => "Reading Runtime information"
					"[event][id]" => "%ASCII-CFG-6-INFORMATION"
					"[rsa][message][id1]" => "%ASCII-CFG-6-INFORMATION"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %ASCII-CFG-6-INFORMATION:01
		# line in RSA:  No ACFG Configurations Saved
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No ACFG Configurations Saved" }
				id => "message-%ASCII-CFG-6-INFORMATION:01"
				add_field => {
				"event_description" => "No ACFG Configurations Saved"
					"[event][id]" => "%ASCII-CFG-6-INFORMATION:01"
					"[rsa][message][id1]" => "%ASCII-CFG-6-INFORMATION:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId229
	# line in RSA: Remap { range overflow | Range OVERFLOW } for <info> { domain | Domain } <domain>
	else if [logstash][msgparser][id] == "msgParserId229" {
		grok {
			match => { "message" => "^Remap[\s]+([\s]*range[\s]+overflow[\s]+|[\s]*Range[\s]+OVERFLOW[\s]+)[\s]+for[\s]+(?<info>[^\s]*)[\s]+([\s]*domain[\s]+|[\s]*Domain[\s]+)[\s]+(?<domain>.*)$" }
			id => "msgParserId229"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId230
	# line in RSA: <fld1>: AppleTalk port disabled; conflicts with { port | interface } <interface>
	else if [logstash][msgparser][id] == "msgParserId230" {
		grok {
			match => { "message" => "^(?<fld1>[^:]*):[\s]+AppleTalk[\s]+port[\s]+disabled;[\s]+conflicts[\s]+with[\s]+([\s]*port[\s]+|[\s]*interface[\s]+)[\s]+(?<interface>.*)$" }
			id => "msgParserId230"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId231
	# line in RSA: <zone>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId231" {
		dissect {
			mapping => { "message" => "%{zone}: %{event_description}" }
			id => "msgParserId231"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId232
	# line in RSA: <zone>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId232" {
		dissect {
			mapping => { "message" => "%{zone}: %{event_description}" }
			id => "msgParserId232"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId233
	# line in RSA: <fld1>: AppleTalk { port | interface } warning; <info>
	else if [logstash][msgparser][id] == "msgParserId233" {
		grok {
			match => { "message" => "^(?<fld1>[^:]*):[\s]+AppleTalk[\s]+([\s]*port[\s]+|[\s]*interface[\s]+)[\s]+warning;[\s]+(?<info>.*)$" }
			id => "msgParserId233"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId234
	# line in RSA: <fld1>: AppleTalk { port | interface } disabled; network incompatible with <info>
	else if [logstash][msgparser][id] == "msgParserId234" {
		grok {
			match => { "message" => "^(?<fld1>[^:]*):[\s]+AppleTalk[\s]+([\s]*port[\s]+|[\s]*interface[\s]+)[\s]+disabled;[\s]+network[\s]+incompatible[\s]+with[\s]+(?<info>.*)$" }
			id => "msgParserId234"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId235
	# line in RSA: No route to destination <daddr>
	else if [logstash][msgparser][id] == "msgParserId235" {
		dissect {
			mapping => { "message" => "No route to destination %{daddr}" }
			id => "msgParserId235"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId236
	# line in RSA: <fld1>: AppleTalk { port | interface } disabled; zone list incompatible with <info>
	else if [logstash][msgparser][id] == "msgParserId236" {
		grok {
			match => { "message" => "^(?<fld1>[^:]*):[\s]+AppleTalk[\s]+([\s]*port[\s]+|[\s]*interface[\s]+)[\s]+disabled;[\s]+zone[\s]+list[\s]+incompatible[\s]+with[\s]+(?<info>.*)$" }
			id => "msgParserId236"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId237
	# line in RSA: <info>: MacIP inoperable configuration{ , | - } <hostip>
	else if [logstash][msgparser][id] == "msgParserId237" {
		grok {
			match => { "message" => "^(?<info>[^:]*):[\s]+MacIP[\s]+inoperable[\s]+configuration([\s]*,[\s]+|[\s]*\-[\s]+)[\s]+(?<hostip>.*)$" }
			id => "msgParserId237"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId238
	# line in RSA:  <info>: MacIP inoperable IP interface{ , | - } <hostip>
	else if [logstash][msgparser][id] == "msgParserId238" {
		grok {
			match => { "message" => "^[\s]*(?<info>[^:]*):[\s]+MacIP[\s]+inoperable[\s]+IP[\s]+interface([\s]*,[\s]+|[\s]*\-[\s]+)[\s]+(?<hostip>.*)$" }
			id => "msgParserId238"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId239
	# line in RSA:  <fld1>: AppleTalk node warning; address <hostip> already in use
	else if [logstash][msgparser][id] == "msgParserId239" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk node warning; address %{hostip} already in use" }
			id => "msgParserId239"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId240
	# line in RSA:  <fld1>: AppleTalk node warning; address <hostip> is invalid
	else if [logstash][msgparser][id] == "msgParserId240" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk node warning; address %{hostip} is invalid" }
			id => "msgParserId240"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId241
	# line in RSA: <fld1>:AppleTalk neighbor ignored; <hostip> is misconfigured
	else if [logstash][msgparser][id] == "msgParserId241" {
		dissect {
			mapping => { "message" => "%{fld1}:AppleTalk neighbor ignored; %{hostip} is misconfigured" }
			id => "msgParserId241"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId242
	# line in RSA: <fld1>: AppleTalk internet compatibility mode required by <hostip>
	else if [logstash][msgparser][id] == "msgParserId242" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk internet compatibility mode required by %{hostip}" }
			id => "msgParserId242"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId243
	# line in RSA: AppleTalk <protocol> neighbor incompatibility; <hostip> has same router ID <context>
	else if [logstash][msgparser][id] == "msgParserId243" {
		dissect {
			mapping => { "message" => "AppleTalk %{protocol} neighbor incompatibility; %{hostip} has same router ID %{context}" }
			id => "msgParserId243"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId244
	# line in RSA: <fld1>: AppleTalk neighbor down; lost contact with <hostip>
	else if [logstash][msgparser][id] == "msgParserId244" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk neighbor down; lost contact with %{hostip}" }
			id => "msgParserId244"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId245
	# line in RSA: Route to <hostip> is now using path of type <fld1> on <fld2> via <info>
	else if [logstash][msgparser][id] == "msgParserId245" {
		dissect {
			mapping => { "message" => "Route to %{hostip} is now using path of type %{fld1} on %{fld2} via %{info}" }
			id => "msgParserId245"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId246
	# line in RSA:  <fld1> RTMP { path | Path } to <daddr> via <gateway> now in <info>
	else if [logstash][msgparser][id] == "msgParserId246" {
		grok {
			match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+RTMP[\s]+([\s]*path[\s]+|[\s]*Path[\s]+)[\s]+to[\s]+(?<daddr>[^\s]*)[\s]+via[\s]+(?<gateway>[^\s]*)[\s]+now[\s]+in[\s]+(?<info>.*)$" }
			id => "msgParserId246"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId247
	# line in RSA:  <fld1>: AppleTalk node up; using address <hostip>
	else if [logstash][msgparser][id] == "msgParserId247" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk node up; using address %{hostip}" }
			id => "msgParserId247"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId248
	# line in RSA:  AT/EIGRP Peer Down: <info>
	else if [logstash][msgparser][id] == "msgParserId248" {
		dissect {
			mapping => { "message" => "AT/EIGRP Peer Down: %{info}" }
			id => "msgParserId248"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId249
	# line in RSA:  AT/EIGRP Peer Up: <info>
	else if [logstash][msgparser][id] == "msgParserId249" {
		dissect {
			mapping => { "message" => "AT/EIGRP Peer Up: %{info}" }
			id => "msgParserId249"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId250
	# line in RSA:  <info>: MacIP server shutting down, <hostip>
	else if [logstash][msgparser][id] == "msgParserId250" {
		dissect {
			mapping => { "message" => "%{info}: MacIP server shutting down, %{hostip}" }
			id => "msgParserId250"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId251
	# line in RSA:  <info>: MacIP server operational, <hostip>
	else if [logstash][msgparser][id] == "msgParserId251" {
		dissect {
			mapping => { "message" => "%{info}: MacIP server operational, %{hostip}" }
			id => "msgParserId251"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId252
	# line in RSA:  Neighbor entry for <hostip> has been deleted
	else if [logstash][msgparser][id] == "msgParserId252" {
		dissect {
			mapping => { "message" => "Neighbor entry for %{hostip} has been deleted" }
			id => "msgParserId252"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId253
	# line in RSA:  <info>: AppleTalk neighbor up; <hostip> has restarted
	else if [logstash][msgparser][id] == "msgParserId253" {
		dissect {
			mapping => { "message" => "%{info}: AppleTalk neighbor up; %{hostip} has restarted" }
			id => "msgParserId253"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId254
	# line in RSA:  <info>: AppleTalk neighbor added; <hostip> is operational
	else if [logstash][msgparser][id] == "msgParserId254" {
		dissect {
			mapping => { "message" => "%{info}: AppleTalk neighbor added; %{hostip} is operational" }
			id => "msgParserId254"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId255
	# line in RSA:  <info>: AppleTalk network added; <daddr> via <gateway> (<context>)
	else if [logstash][msgparser][id] == "msgParserId255" {
		dissect {
			mapping => { "message" => "%{info}: AppleTalk network added; %{daddr} via %{gateway} (%{context})" }
			id => "msgParserId255"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId256
	# line in RSA: AppleTalk zone added; zone <zone> defined
	else if [logstash][msgparser][id] == "msgParserId256" {
		dissect {
			mapping => { "message" => "AppleTalk zone added; zone %{zone} defined" }
			id => "msgParserId256"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId257
	# line in RSA: <info>: AppleTalk node <hostip> misconfigured; <context>
	else if [logstash][msgparser][id] == "msgParserId257" {
		dissect {
			mapping => { "message" => "%{info}: AppleTalk node %{hostip} misconfigured; %{context}" }
			id => "msgParserId257"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId258
	# line in RSA: AppleTalk proxy deleted; zone <zone>freed network <fld1>
	else if [logstash][msgparser][id] == "msgParserId258" {
		dissect {
			mapping => { "message" => "AppleTalk proxy deleted; zone %{zone}freed network %{fld1}" }
			id => "msgParserId258"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId259
	# line in RSA:  <vlan>: AppleTalk interface enabled; <result>
	else if [logstash][msgparser][id] == "msgParserId259" {
		dissect {
			mapping => { "message" => "%{vlan}: AppleTalk interface enabled; %{result}" }
			id => "msgParserId259"
			add_field => {
				"event_description" => "AppleTalk interface enabled"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId260
	# line in RSA:  <fld1>: AppleTalk <info> path to network <daddr> added; via <gateway> (<context>) 
	else if [logstash][msgparser][id] == "msgParserId260" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk %{info} path to network %{daddr} added; via %{gateway} (%{context})" }
			id => "msgParserId260"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId261
	# line in RSA:  { <fld1>: | <space> } AppleTalk <info> path to <daddr> via <gateway> has been deleted
	else if [logstash][msgparser][id] == "msgParserId261" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<fld1>[^:]*):[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+AppleTalk[\s]+(?<info>[^\s]*)[\s]+path[\s]+to[\s]+(?<daddr>[^\s]*)[\s]+via[\s]+(?<gateway>[^\s]*)[\s]+has[\s]+been[\s]+deleted$" }
			id => "msgParserId261"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId262
	# line in RSA:  <fld1>: AppleTalk <info> path to <daddr> down; reported bad by <hostip>
	else if [logstash][msgparser][id] == "msgParserId262" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk %{info} path to %{daddr} down; reported bad by %{hostip}" }
			id => "msgParserId262"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId263
	# line in RSA:  <fld1>: AppleTalk network down; port to <daddr> disabled
	else if [logstash][msgparser][id] == "msgParserId263" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk network down; port to %{daddr} disabled" }
			id => "msgParserId263"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId264
	# line in RSA:  <fld1>: AppleTalk network down; <daddr> reported bad by <hostip>
	else if [logstash][msgparser][id] == "msgParserId264" {
		dissect {
			mapping => { "message" => "%{fld1}: AppleTalk network down; %{daddr} reported bad by %{hostip}" }
			id => "msgParserId264"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId265
	# line in RSA: <info>: AppleTalk network up; <daddr> via <gateway> (<context>)
	else if [logstash][msgparser][id] == "msgParserId265" {
		dissect {
			mapping => { "message" => "%{info}: AppleTalk network up; %{daddr} via %{gateway} (%{context})" }
			id => "msgParserId265"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId266
	# line in RSA:  AppleTalk zone deleted; zone <zone> released
	else if [logstash][msgparser][id] == "msgParserId266" {
		dissect {
			mapping => { "message" => "AppleTalk zone deleted; zone %{zone} released" }
			id => "msgParserId266"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId267
	# line in RSA: AppleTalk proxy defined; zone <zone> using network <info>
	else if [logstash][msgparser][id] == "msgParserId267" {
		dissect {
			mapping => { "message" => "AppleTalk proxy defined; zone %{zone} using network %{info}" }
			id => "msgParserId267"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId268
	# line in RSA:  <event_description> on Interface <interface> (<info>)
	else if [logstash][msgparser][id] == "msgParserId268" {
		dissect {
			mapping => { "message" => "%{event_description} on Interface %{interface} (%{info})" }
			id => "msgParserId268"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId269
	# line in RSA: <event_description> on Interface <interface> (<info>)
	else if [logstash][msgparser][id] == "msgParserId269" {
		dissect {
			mapping => { "message" => "%{event_description} on Interface %{interface} (%{info})" }
			id => "msgParserId269"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId270
	# line in RSA: ATM failed to create VC on Interface <interface>
	else if [logstash][msgparser][id] == "msgParserId270" {
		dissect {
			mapping => { "message" => "ATM failed to create VC on Interface %{interface}" }
			id => "msgParserId270"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId271
	# line in RSA: Interface <interface>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId271" {
		dissect {
			mapping => { "message" => "Interface %{interface}: %{event_description}" }
			id => "msgParserId271"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId272
	# line in RSA:  ATM failed to create VC on Interface <info>
	else if [logstash][msgparser][id] == "msgParserId272" {
		dissect {
			mapping => { "message" => "ATM failed to create VC on Interface %{info}" }
			id => "msgParserId272"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId273
	# line in RSA: Restarting ATM signalling and ILMI on <info>
	else if [logstash][msgparser][id] == "msgParserId273" {
		dissect {
			mapping => { "message" => "Restarting ATM signalling and ILMI on %{info}" }
			id => "msgParserId273"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId274
	# line in RSA: New access filter setting will be applied to registration of new addresses on <info>
	else if [logstash][msgparser][id] == "msgParserId274" {
		dissect {
			mapping => { "message" => "New access filter setting will be applied to registration of new addresses on %{info}" }
			id => "msgParserId274"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId275
	# line in RSA: Address registration on <hostname> is enabled. It will be initiated at next interface restart
	else if [logstash][msgparser][id] == "msgParserId275" {
		dissect {
			mapping => { "message" => "Address registration on %{hostname} is enabled. It will be initiated at next interface restart" }
			id => "msgParserId275"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId276
	# line in RSA:  Interface <interface>, <result>
	else if [logstash][msgparser][id] == "msgParserId276" {
		dissect {
			mapping => { "message" => "Interface %{interface}, %{result}" }
			id => "msgParserId276"
			add_field => {
				"event_description" => "interface statistics"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId277
	# line in RSA: <info>- packet(size <packets>) too big
	else if [logstash][msgparser][id] == "msgParserId277" {
		dissect {
			mapping => { "message" => "%{info}- packet(size %{packets}) too big" }
			id => "msgParserId277"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId278
	# line in RSA: The Network Module in slot <info> failed to initialize (<fld1>)
	else if [logstash][msgparser][id] == "msgParserId278" {
		dissect {
			mapping => { "message" => "The Network Module in slot %{info} failed to initialize (%{fld1})" }
			id => "msgParserId278"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId279
	# line in RSA: ATM VP Tunnel Init Failed cause: <info>
	else if [logstash][msgparser][id] == "msgParserId279" {
		dissect {
			mapping => { "message" => "ATM VP Tunnel Init Failed cause: %{info}" }
			id => "msgParserId279"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId280
	# line in RSA: Writing firmware to the NM failed: <info>
	else if [logstash][msgparser][id] == "msgParserId280" {
		dissect {
			mapping => { "message" => "Writing firmware to the NM failed: %{info}" }
			id => "msgParserId280"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId281
	# line in RSA: SFP in interface  <interface> has the same serial number as another SFP 
	else if [logstash][msgparser][id] == "msgParserId281" {
		dissect {
			mapping => { "message" => "SFP in interface  %{interface} has the same serial number as another SFP" }
			id => "msgParserId281"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId282
	# line in RSA: SFP in interface <interface> failed identification check
	else if [logstash][msgparser][id] == "msgParserId282" {
		dissect {
			mapping => { "message" => "SFP in interface %{interface} failed identification check" }
			id => "msgParserId282"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId283
	# line in RSA: SFP in interface <interface> is manufactured by an unrecognized vendor 
	else if [logstash][msgparser][id] == "msgParserId283" {
		dissect {
			mapping => { "message" => "SFP in interface %{interface} is manufactured by an unrecognized vendor" }
			id => "msgParserId283"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId284
	# line in RSA: Indication Q <info> overwritten
	else if [logstash][msgparser][id] == "msgParserId284" {
		dissect {
			mapping => { "message" => "Indication Q %{info} overwritten" }
			id => "msgParserId284"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId285
	# line in RSA: Interface <interface> internal error occurred in setup for SFP
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "Interface %{interface} internal error occurred in setup for SFP" }
			id => "msgParserId285"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId286
	# line in RSA: <fld1>: bad tx buffer descriptor on vcd <info>
	else if [logstash][msgparser][id] == "msgParserId286" {
		dissect {
			mapping => { "message" => "%{fld1}: bad tx buffer descriptor on vcd %{info}" }
			id => "msgParserId286"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId287
	# line in RSA: Only <bytes> bytes of memory available for <info>
	else if [logstash][msgparser][id] == "msgParserId287" {
		dissect {
			mapping => { "message" => "Only %{bytes} bytes of memory available for %{info}" }
			id => "msgParserId287"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId288
	# line in RSA:  INIT SSCOP -Intf : <interface>- Event : <event_description>- State : <event_state>
	else if [logstash][msgparser][id] == "msgParserId288" {
		dissect {
			mapping => { "message" => "INIT SSCOP -Intf : %{interface}- Event : %{event_description}- State : %{event_state}" }
			id => "msgParserId288"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId289
	# line in RSA:  - Intf : <interface>{ , | - } Event : <event_description>{, | - } State : <disposition>
	else if [logstash][msgparser][id] == "msgParserId289" {
		grok {
			match => { "message" => "^[\s]*\-[\s]+Intf[\s]+:[\s]+(?<interface>[^\s\s]*)([\s]*,[\s]+|[\s]*\-[\s]+)[\s]+Event[\s]+:[\s]+(?<event_description>[^,\s]*)(,[\s]+|[\s]*\-[\s]+)[\s]+State[\s]+:[\s]+(?<disposition>.*)$" }
			id => "msgParserId289"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId290
	# line in RSA:  ATM AIM <fld1>: PCI Abort reported: status <info>
	else if [logstash][msgparser][id] == "msgParserId290" {
		dissect {
			mapping => { "message" => "ATM AIM %{fld1}: PCI Abort reported: status %{info}" }
			id => "msgParserId290"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId291
	# line in RSA: Link <fld1> will become the common transmit clock once it is added to group <group>
	else if [logstash][msgparser][id] == "msgParserId291" {
		dissect {
			mapping => { "message" => "Link %{fld1} will become the common transmit clock once it is added to group %{group}" }
			id => "msgParserId291"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId292
	# line in RSA: Link <fld1> will initiate the test pattern procedure once its added to group <group>
	else if [logstash][msgparser][id] == "msgParserId292" {
		dissect {
			mapping => { "message" => "Link %{fld1} will initiate the test pattern procedure once its added to group %{group}" }
			id => "msgParserId292"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId293
	# line in RSA:  Interface <interface> of <fld1> Group <group> is now inactive.
	else if [logstash][msgparser][id] == "msgParserId293" {
		dissect {
			mapping => { "message" => "Interface %{interface} of %{fld1} Group %{group} is now inactive." }
			id => "msgParserId293"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId294
	# line in RSA: Interface <interface> of <fld1> Group <group> is now active.
	else if [logstash][msgparser][id] == "msgParserId294" {
		dissect {
			mapping => { "message" => "Interface %{interface} of %{fld1} Group %{group} is now active." }
			id => "msgParserId294"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId295
	# line in RSA:  Interface <interface> regained cell delineation.
	else if [logstash][msgparser][id] == "msgParserId295" {
		dissect {
			mapping => { "message" => "Interface %{interface} regained cell delineation." }
			id => "msgParserId295"
			add_field => {
				"event_description" => "Interface regained cell delineation"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId296
	# line in RSA:  Interface <interface> lost cell delineation.
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "Interface %{interface} lost cell delineation." }
			id => "msgParserId296"
			add_field => {
				"event_description" => "Interface lost cell delineation"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId297
	# line in RSA: Hash: <filename> User: <username>
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "Hash: %{filename} User: %{username}" }
			id => "msgParserId297"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId298
	# line in RSA: Audit File Roll-over: <info>
	else if [logstash][msgparser][id] == "msgParserId298" {
		dissect {
			mapping => { "message" => "Audit File Roll-over: %{info}" }
			id => "msgParserId298"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId299
	# line in RSA: Hardware changed. Hash:  <info>
	else if [logstash][msgparser][id] == "msgParserId299" {
		dissect {
			mapping => { "message" => "Hardware changed. Hash:  %{info}" }
			id => "msgParserId299"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId300
	# line in RSA: Hash:  <info> User: <username>
	else if [logstash][msgparser][id] == "msgParserId300" {
		dissect {
			mapping => { "message" => "Hash:  %{info} User: %{username}" }
			id => "msgParserId300"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId301
	# line in RSA:  Filesystem changed. Hash: <info>
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "Filesystem changed. Hash: %{info}" }
			id => "msgParserId301"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId302
	# line in RSA:  Hardware changed. Hash: <info>
	else if [logstash][msgparser][id] == "msgParserId302" {
		dissect {
			mapping => { "message" => "Hardware changed. Hash: %{info}" }
			id => "msgParserId302"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId303
	# line in RSA:  Running Configuration changed. Hash: <result>
	else if [logstash][msgparser][id] == "msgParserId303" {
		dissect {
			mapping => { "message" => "Running Configuration changed. Hash: %{result}" }
			id => "msgParserId303"
			add_field => {
				"event_description" => "Running Configuration changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId304
	# line in RSA:  Running Version changed. Hash: <info>
	else if [logstash][msgparser][id] == "msgParserId304" {
		dissect {
			mapping => { "message" => "Running Version changed. Hash: %{info}" }
			id => "msgParserId304"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId305
	# line in RSA: Startup Configuration changed. Hash: <info>
	else if [logstash][msgparser][id] == "msgParserId305" {
		dissect {
			mapping => { "message" => "Startup Configuration changed. Hash: %{info}" }
			id => "msgParserId305"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId306
	# line in RSA:  RPT=<fld1>: <event_source>: Authentication rejected: Reason = <result> = <dclass_counter1>, server = <hostname>, user = <username>, domain = << <group> > 
	else if [logstash][msgparser][id] == "msgParserId306" {
		dissect {
			mapping => { "message" => "RPT=%{fld1}: %{event_source}: Authentication rejected: Reason = %{result} = %{dclass_counter1}, server = %{hostname}, user = %{username}, domain = < %{group} >" }
			id => "msgParserId306"
			add_field => {
				"event_description" => "Authentication rejected"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%AUTHMGR-5-FAIL" {
		# MESSAGE %AUTHMGR-5-FAIL
		# line in RSA:  Authorization failed for client (<macaddr>) on Interface <interface>/<network_port> { AuditSessionID <sessionid> | <space> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Authorization[\s]+failed[\s]+for[\s]+client[\s]+\((?<macaddr>[^\)]*)\)[\s]+on[\s]+Interface[\s]+(?<interface>[^/]*)/(?<network_port>[^\s]*)[\s]+([\s]*AuditSessionID[\s]+(?<sessionid>[^\s]*)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
				id => "message-%AUTHMGR-5-FAIL"
				add_field => {
				"event_description" => "Authorization failed for client"
					"[event][id]" => "%AUTHMGR-5-FAIL"
					"[rsa][message][id1]" => "%AUTHMGR-5-FAIL"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %AUTHMGR-5-FAIL:01
		# line in RSA:  Authorization failed for client ({%<fld1>|Unknown MAC|<smacaddr>}) on Interface <interface>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Authorization[\s]+failed[\s]+for[\s]+client[\s]+\((%(?<fld1>[^\)]*)|Unknown[\s]+MAC|(?<smacaddr>[^\)]*))\)[\s]+on[\s]+Interface[\s]+(?<interface>.*)$" }
				id => "message-%AUTHMGR-5-FAIL:01"
				add_field => {
				"event_description" => "Authorization failed for client"
					"[event][id]" => "%AUTHMGR-5-FAIL:01"
					"[rsa][message][id1]" => "%AUTHMGR-5-FAIL:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId309
	# line in RSA: MAC address (<macaddr>) moved from Interface <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId309" {
		dissect {
			mapping => { "message" => "MAC address (%{macaddr}) moved from Interface %{change_old} to %{change_new}" }
			id => "msgParserId309"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId310
	# line in RSA: MAC address (<macaddr>) on Interface <interface> is replaced by MAC (<info>)
	else if [logstash][msgparser][id] == "msgParserId310" {
		dissect {
			mapping => { "message" => "MAC address (%{macaddr}) on Interface %{interface} is replaced by MAC (%{info})" }
			id => "msgParserId310"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId311
	# line in RSA: Security violation on the interface {<interface>/<network_port>,|<interface>/<network_port>|<interface>}  new MAC address {(Unknown MAC)|(<macaddr>)} is seen.AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId311" {
		grok {
			match => { "message" => "^Security[\s]+violation[\s]+on[\s]+the[\s]+interface[\s]+((?<interface>[^/]*)/(?<network_port>[^,]*),|(?<interface>[^/]*)/(?<network_port>[^\s]*)|(?<interface>[^\s]*))[\s]+new[\s]+MAC[\s]+address[\s]+(\(Unknown[\s]+MAC\)|\((?<macaddr>[^\)]*)\))[\s]+is[\s]+seen\.AuditSessionID[\s]+(?<sessionid>.*)$" }
			id => "msgParserId311"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId312
	# line in RSA:  Starting '<service>' for client (<macaddr>) on Interface <interface>
	else if [logstash][msgparser][id] == "msgParserId312" {
		dissect {
			mapping => { "message" => "Starting '%{service}' for client (%{macaddr}) on Interface %{interface}" }
			id => "msgParserId312"
			add_field => {
				"event_description" => "Starting dot1x for client"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId313
	# line in RSA:  Authorization succeeded for client (<macaddr>) on Interface <interface> { AuditSessionID <sessionid> | <space> }
	else if [logstash][msgparser][id] == "msgParserId313" {
		grok {
			match => { "message" => "^[\s]*Authorization[\s]+succeeded[\s]+for[\s]+client[\s]+\((?<macaddr>[^\)]*)\)[\s]+on[\s]+Interface[\s]+(?<interface>[^\s]*)[\s]+([\s]*AuditSessionID[\s]+(?<sessionid>[^\s]*)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
			id => "msgParserId313"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Authorization successful for client"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId314
	# line in RSA: Interface <interface> unauthorized
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "Interface %{interface} unauthorized" }
			id => "msgParserId314"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId315
	# line in RSA: VLAN <vlan> assigned to Interface <interface> AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId315" {
		dissect {
			mapping => { "message" => "VLAN %{vlan} assigned to Interface %{interface} AuditSessionID %{sessionid}" }
			id => "msgParserId315"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId316
	# line in RSA: Failing over from <fld1> for client ({%<fld2>|Unknown MAC|<smacaddr>}) on {Interface <interface> AuditSessionID <sessionid>|Interface <interface>}
	else if [logstash][msgparser][id] == "msgParserId316" {
		grok {
			match => { "message" => "^Failing[\s]+over[\s]+from[\s]+(?<fld1>[^\s]*)[\s]+for[\s]+client[\s]+\((%(?<fld2>[^\)]*)|Unknown[\s]+MAC|(?<smacaddr>[^\)]*))\)[\s]+on[\s]+(Interface[\s]+(?<interface>[^\s]*)[\s]+AuditSessionID[\s]+(?<sessionid>.*)|Interface[\s]+(?<interface>.*))$" }
			id => "msgParserId316"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId317
	# line in RSA: Exhausted all authentication methods for client (<smacaddr>) on {Interface <interface> AuditSessionID <sessionid>|Interface <interface>}
	else if [logstash][msgparser][id] == "msgParserId317" {
		grok {
			match => { "message" => "^Exhausted[\s]+all[\s]+authentication[\s]+methods[\s]+for[\s]+client[\s]+\((?<smacaddr>[^\)]*)\)[\s]+on[\s]+(Interface[\s]+(?<interface>[^\s]*)[\s]+AuditSessionID[\s]+(?<sessionid>.*)|Interface[\s]+(?<interface>.*))$" }
			id => "msgParserId317"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId318
	# line in RSA: Authentication result <result> from <fld1> for client (<fld2>) on {Interface <interface> AuditSessionID <sessionid>|Interface <interface>}
	else if [logstash][msgparser][id] == "msgParserId318" {
		grok {
			match => { "message" => "^Authentication[\s]+result[\s]+(?<result>[^\s]*)[\s]+from[\s]+(?<fld1>[^\s]*)[\s]+for[\s]+client[\s]+\((?<fld2>[^\)]*)\)[\s]+on[\s]+(Interface[\s]+(?<interface>[^\s]*)[\s]+AuditSessionID[\s]+(?<sessionid>.*)|Interface[\s]+(?<interface>.*))$" }
			id => "msgParserId318"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId319
	# line in RSA:  Stopping <authmethod> for client <smacaddr> on Interface <interface> AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId319" {
		dissect {
			mapping => { "message" => "Stopping %{authmethod} for client %{smacaddr} on Interface %{interface} AuditSessionID %{sessionid}" }
			id => "msgParserId319"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId320
	# line in RSA: Auth Manager SPI server <disposition>
	else if [logstash][msgparser][id] == "msgParserId320" {
		dissect {
			mapping => { "message" => "Auth Manager SPI server %{disposition}" }
			id => "msgParserId320"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId321
	# line in RSA:  Auth Manager SPI server <disposition>
	else if [logstash][msgparser][id] == "msgParserId321" {
		dissect {
			mapping => { "message" => "Auth Manager SPI server %{disposition}" }
			id => "msgParserId321"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId322
	# line in RSA: Auth Mgr ISSU client failed to unregister session information. Error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId322" {
		dissect {
			mapping => { "message" => "Auth Mgr ISSU client failed to unregister session information. Error: %{event_description}" }
			id => "msgParserId322"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId323
	# line in RSA: Auth Mgr ISSU client <fld1> transform failed for <info>
	else if [logstash][msgparser][id] == "msgParserId323" {
		dissect {
			mapping => { "message" => "Auth Mgr ISSU client %{fld1} transform failed for %{info}" }
			id => "msgParserId323"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%AUTHPRIV-3-SYSTEM_MSG" {
		# MESSAGE %AUTHPRIV-3-SYSTEM_MSG
		# line in RSA:  <process>:Authentication failed for user <username> from <saddr> - { <agent>[<process_id>] | <agent> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<process>[^:]*):Authentication[\s]+failed[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+\-[\s]+([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+)$" }
				id => "message-%AUTHPRIV-3-SYSTEM_MSG"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failed for user"
					"[event][id]" => "%AUTHPRIV-3-SYSTEM_MSG"
					"[rsa][message][id1]" => "%AUTHPRIV-3-SYSTEM_MSG"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %AUTHPRIV-3-SYSTEM_MSG:01
		# line in RSA:  invalid role <user_role> downloaded for user <username> - <agent>[<process_id>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "invalid role %{user_role} downloaded for user %{username} - %{agent}[%{process_id}]" }
				id => "message-%AUTHPRIV-3-SYSTEM_MSG:01"
				add_field => {
				"event_description" => "invalid role downloaded for user"
					"[event][id]" => "%AUTHPRIV-3-SYSTEM_MSG:01"
					"[rsa][message][id1]" => "%AUTHPRIV-3-SYSTEM_MSG:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %AUTHPRIV-3-SYSTEM_MSG:02
		# line in RSA:  <application>: conversation failed - <agent>[<process_id>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{application}: conversation failed - %{agent}[%{process_id}]" }
				id => "message-%AUTHPRIV-3-SYSTEM_MSG:02"
				add_field => {
				"event_description" => "conversation failed"
					"[event][id]" => "%AUTHPRIV-3-SYSTEM_MSG:02"
					"[rsa][message][id1]" => "%AUTHPRIV-3-SYSTEM_MSG:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId327
	# line in RSA:  AutoRP <fld1> packet, group <group> with mask <mask> removed because of <protocol> boundary for <context> with mask <info>
	else if [logstash][msgparser][id] == "msgParserId327" {
		dissect {
			mapping => { "message" => "AutoRP %{fld1} packet, group %{group} with mask %{mask} removed because of %{protocol} boundary for %{context} with mask %{info}" }
			id => "msgParserId327"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId328
	# line in RSA: AutoRP <fld1> packet is received on interface <interface> with Source address=<saddr>, Destination address=<daddr>, TTL=<fld2>, <info>
	else if [logstash][msgparser][id] == "msgParserId328" {
		dissect {
			mapping => { "message" => "AutoRP %{fld1} packet is received on interface %{interface} with Source address=%{saddr}, Destination address=%{daddr}, TTL=%{fld2}, %{info}" }
			id => "msgParserId328"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId329
	# line in RSA: Error expiring semi-static RP-mapping entry (<info>)
	else if [logstash][msgparser][id] == "msgParserId329" {
		dissect {
			mapping => { "message" => "Error expiring semi-static RP-mapping entry (%{info})" }
			id => "msgParserId329"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId330
	# line in RSA:  <info> on interface <interface> has been removed
	else if [logstash][msgparser][id] == "msgParserId330" {
		dissect {
			mapping => { "message" => "%{info} on interface %{interface} has been removed" }
			id => "msgParserId330"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId331
	# line in RSA:  Applying AutoSecure Rollback to revert to Pre-Autosecure-Running-Config
	else if [logstash][msgparser][id] == "msgParserId331" {
		dissect {
			mapping => { "message" => "Applying AutoSecure Rollback to revert to Pre-Autosecure-Running-Config" }
			id => "msgParserId331"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId332
	# line in RSA: Device <info> detected on interface <interface>, executed <fld1>
	else if [logstash][msgparser][id] == "msgParserId332" {
		dissect {
			mapping => { "message" => "Device %{info} detected on interface %{interface}, executed %{fld1}" }
			id => "msgParserId332"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId333
	# line in RSA:  Device removed from interface <interface>, executed <info> to remove the configuration 
	else if [logstash][msgparser][id] == "msgParserId333" {
		dissect {
			mapping => { "message" => "Device removed from interface %{interface}, executed %{info} to remove the configuration" }
			id => "msgParserId333"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId334
	# line in RSA: Taking interface <interface> out of Autostate mode
	else if [logstash][msgparser][id] == "msgParserId334" {
		dissect {
			mapping => { "message" => "Taking interface %{interface} out of Autostate mode" }
			id => "msgParserId334"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId335
	# line in RSA: Putting interface <interface> into Autostate mode
	else if [logstash][msgparser][id] == "msgParserId335" {
		dissect {
			mapping => { "message" => "Putting interface %{interface} into Autostate mode" }
			id => "msgParserId335"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId336
	# line in RSA: Unexpected Backplane Bus Asic mode.
	else if [logstash][msgparser][id] == "msgParserId336" {
		dissect {
			mapping => { "message" => "Unexpected Backplane Bus Asic mode." }
			id => "msgParserId336"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId337
	# line in RSA: Preempting interface <interface> in backup pair <info>
	else if [logstash][msgparser][id] == "msgParserId337" {
		dissect {
			mapping => { "message" => "Preempting interface %{interface} in backup pair %{info}" }
			id => "msgParserId337"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId338
	# line in RSA: Unable to remove MAC entry <info> in bridge-domain
	else if [logstash][msgparser][id] == "msgParserId338" {
		dissect {
			mapping => { "message" => "Unable to remove MAC entry %{info} in bridge-domain" }
			id => "msgParserId338"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId339
	# line in RSA: A BERT is already running
	else if [logstash][msgparser][id] == "msgParserId339" {
		dissect {
			mapping => { "message" => "A BERT is already running" }
			id => "msgParserId339"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId340
	# line in RSA:  Interface <interface> is down, BERT cannot be executed on this interface
	else if [logstash][msgparser][id] == "msgParserId340" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down, BERT cannot be executed on this interface" }
			id => "msgParserId340"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId341
	# line in RSA: The Profile <info> is not Valid
	else if [logstash][msgparser][id] == "msgParserId341" {
		dissect {
			mapping => { "message" => "The Profile %{info} is not Valid" }
			id => "msgParserId341"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId342
	# line in RSA: Creation of BFD Private Buffer Pool failed 
	else if [logstash][msgparser][id] == "msgParserId342" {
		dissect {
			mapping => { "message" => "Creation of BFD Private Buffer Pool failed" }
			id => "msgParserId342"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId343
	# line in RSA: Unable to destroy <info>
	else if [logstash][msgparser][id] == "msgParserId343" {
		dissect {
			mapping => { "message" => "Unable to destroy %{info}" }
			id => "msgParserId343"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId344
	# line in RSA:  Could not free bfd idb array - still in use
	else if [logstash][msgparser][id] == "msgParserId344" {
		dissect {
			mapping => { "message" => "Could not free bfd idb array - still in use" }
			id => "msgParserId344"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId345
	# line in RSA: Invalid Discriminator <info>
	else if [logstash][msgparser][id] == "msgParserId345" {
		dissect {
			mapping => { "message" => "Invalid Discriminator %{info}" }
			id => "msgParserId345"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId346
	# line in RSA: bfd_pak_coalesce - <info> failed
	else if [logstash][msgparser][id] == "msgParserId346" {
		dissect {
			mapping => { "message" => "bfd_pak_coalesce - %{info} failed" }
			id => "msgParserId346"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId347
	# line in RSA: BFD ISSU client failed to unregister session information. Error:<info> 
	else if [logstash][msgparser][id] == "msgParserId347" {
		dissect {
			mapping => { "message" => "BFD ISSU client failed to unregister session information. Error:%{info}" }
			id => "msgParserId347"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId348
	# line in RSA: BFD adjacency can not be created due to resource limitation.
	else if [logstash][msgparser][id] == "msgParserId348" {
		dissect {
			mapping => { "message" => "BFD adjacency can not be created due to resource limitation." }
			id => "msgParserId348"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId349
	# line in RSA: Invalid address type <info>
	else if [logstash][msgparser][id] == "msgParserId349" {
		dissect {
			mapping => { "message" => "Invalid address type %{info}" }
			id => "msgParserId349"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId350
	# line in RSA: Attempt to install route for <hostip> without valid mask in <info>
	else if [logstash][msgparser][id] == "msgParserId350" {
		dissect {
			mapping => { "message" => "Attempt to install route for %{hostip} without valid mask in %{info}" }
			id => "msgParserId350"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId351
	# line in RSA:  <hostip> Inconsistent <fld1>
	else if [logstash][msgparser][id] == "msgParserId351" {
		dissect {
			mapping => { "message" => "%{hostip} Inconsistent %{fld1}" }
			id => "msgParserId351"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId352
	# line in RSA:  Too many parallel paths for {<hostip>/<mask>, | <hostip><mask>-} maximum is <info>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId353
	# line in RSA:  <action> neighbor <daddr>/<dport> (<result>) <info>
	else if [logstash][msgparser][id] == "msgParserId353" {
		dissect {
			mapping => { "message" => "%{action} neighbor %{daddr}/%{dport} (%{result}) %{info}" }
			id => "msgParserId353"
			add_field => {
				"event_description" => "sent/received notifcation to/from neighbor"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId354
	# line in RSA:  <node> [<fld1>]  ISSU will be affected if hold time is less than or equal to system switchover time (<info>)
	else if [logstash][msgparser][id] == "msgParserId354" {
		dissect {
			mapping => { "message" => "%{node} [%{fld1}]  ISSU will be affected if hold time is less than or equal to system switchover time (%{info})" }
			id => "msgParserId354"
			add_field => {
				"event_description" => "ISSU will be affected if hold time is less than or equal to system switchover time"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId355
	# line in RSA:  No. of prefix received from <saddr> (afi <dclass_counter1>) reaches <dclass_counter2>, max <dclass_counter3> 
	else if [logstash][msgparser][id] == "msgParserId355" {
		dissect {
			mapping => { "message" => "No. of prefix received from %{saddr} (afi %{dclass_counter1}) reaches %{dclass_counter2}, max %{dclass_counter3}" }
			id => "msgParserId355"
			add_field => {
				"event_description" => "prefix count update"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId356
	# line in RSA: Nexthop <daddr> may not be reachable from neigbor <saddr> - not a loopback
	else if [logstash][msgparser][id] == "msgParserId356" {
		dissect {
			mapping => { "message" => "Nexthop %{daddr} may not be reachable from neigbor %{saddr} - not a loopback" }
			id => "msgParserId356"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId357
	# line in RSA: Nexthop <daddr> may not be reachable from neigbor <saddr> - not /32 mask
	else if [logstash][msgparser][id] == "msgParserId357" {
		dissect {
			mapping => { "message" => "Nexthop %{daddr} may not be reachable from neigbor %{saddr} - not /32 mask" }
			id => "msgParserId357"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%BGP-5-ADJCHANGE" {
		# MESSAGE %BGP-5-ADJCHANGE:01
		# line in RSA:  { <node> [<fld1>] (default) neighbor | neighbor } <daddr> { <info> Down | Down } { - <result> | <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<node>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+\(default\)[\s]+neighbor[\s]+|[\s]*neighbor[\s]+)[\s]+(?<daddr>[^\s]*)[\s]+([\s]*(?<info>[^\s]*)[\s]+Down[\s]+|[\s]*Down[\s]+)[\s]+([\s]*\-[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
				id => "message-%BGP-5-ADJCHANGE:01"
				add_field => {
				"event_description" => "Neighbor down"
					"[event][id]" => "%BGP-5-ADJCHANGE:01"
					"[rsa][message][id1]" => "%BGP-5-ADJCHANGE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %BGP-5-ADJCHANGE
		# line in RSA:  { <node> [<fld1>] (default) neighbor | neighbor } <daddr> Up
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<node>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+\(default\)[\s]+neighbor[\s]+|[\s]*neighbor[\s]+)[\s]+(?<daddr>[^\s]*)[\s]+Up$" }
				id => "message-%BGP-5-ADJCHANGE"
				add_field => {
				"event_description" => "Neighbor up"
					"[event][id]" => "%BGP-5-ADJCHANGE"
					"[rsa][message][id1]" => "%BGP-5-ADJCHANGE"
					"[event][categoryid]" => "1805020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId360
	# line in RSA: <info> received from <saddr>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId360" {
		dissect {
			mapping => { "message" => "%{info} received from %{saddr}: %{event_description}" }
			id => "msgParserId360"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId361
	# line in RSA: Failed to allocate label for VPNv4 prefix <info> 
	else if [logstash][msgparser][id] == "msgParserId361" {
		dissect {
			mapping => { "message" => "Failed to allocate label for VPNv4 prefix %{info}" }
			id => "msgParserId361"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId362
	# line in RSA:  neighbor <saddr> <info> topology base removed from session <result> 
	else if [logstash][msgparser][id] == "msgParserId362" {
		dissect {
			mapping => { "message" => "neighbor %{saddr} %{info} topology base removed from session %{result}" }
			id => "msgParserId362"
			add_field => {
				"event_description" => "Neighbor removed from session"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId363
	# line in RSA: The content server <hostip> is not responding to probes. Boomerang packets will be dropped.
	else if [logstash][msgparser][id] == "msgParserId363" {
		dissect {
			mapping => { "message" => "The content server %{hostip} is not responding to probes. Boomerang packets will be dropped." }
			id => "msgParserId363"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId364
	# line in RSA:  The RC4 cipher check failed for domain <domain>. Boomerang packet dropped.
	else if [logstash][msgparser][id] == "msgParserId364" {
		dissect {
			mapping => { "message" => "The RC4 cipher check failed for domain %{domain}. Boomerang packet dropped." }
			id => "msgParserId364"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId365
	# line in RSA: The domain <domain> in the DNS request is not configured. Boomerang packet dropped.
	else if [logstash][msgparser][id] == "msgParserId365" {
		dissect {
			mapping => { "message" => "The domain %{domain} in the DNS request is not configured. Boomerang packet dropped." }
			id => "msgParserId365"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId366
	# line in RSA: The content server <hostip> is responding to probes.
	else if [logstash][msgparser][id] == "msgParserId366" {
		dissect {
			mapping => { "message" => "The content server %{hostip} is responding to probes." }
			id => "msgParserId366"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId367
	# line in RSA: Invalid MAC for slot <info>
	else if [logstash][msgparser][id] == "msgParserId367" {
		dissect {
			mapping => { "message" => "Invalid MAC for slot %{info}" }
			id => "msgParserId367"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId368
	# line in RSA: Port number[<network_port>] is not valid
	else if [logstash][msgparser][id] == "msgParserId368" {
		dissect {
			mapping => { "message" => "Port number[%{network_port}] is not valid" }
			id => "msgParserId368"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId369
	# line in RSA: Interface <interface> MAC is not registered
	else if [logstash][msgparser][id] == "msgParserId369" {
		dissect {
			mapping => { "message" => "Interface %{interface} MAC is not registered" }
			id => "msgParserId369"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId370
	# line in RSA: Interface <interface>
	else if [logstash][msgparser][id] == "msgParserId370" {
		dissect {
			mapping => { "message" => "Interface %{interface}" }
			id => "msgParserId370"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId371
	# line in RSA:  Interface <interface>{ , | <space> } no buffer available to <fld1>
	else if [logstash][msgparser][id] == "msgParserId371" {
		grok {
			match => { "message" => "^[\s]*Interface[\s]+(?<interface>[^\s\s]*)([\s]*,[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+no[\s]+buffer[\s]+available[\s]+to[\s]+(?<fld1>.*)$" }
			id => "msgParserId371"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId372
	# line in RSA: No buffers available on interface <interface>.
	else if [logstash][msgparser][id] == "msgParserId372" {
		dissect {
			mapping => { "message" => "No buffers available on interface %{interface}." }
			id => "msgParserId372"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId373
	# line in RSA:  <fld1> - No SFP Found
	else if [logstash][msgparser][id] == "msgParserId373" {
		dissect {
			mapping => { "message" => "%{fld1} - No SFP Found" }
			id => "msgParserId373"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId374
	# line in RSA:  Failed to install Boot Loader patch <info>
	else if [logstash][msgparser][id] == "msgParserId374" {
		dissect {
			mapping => { "message" => "Failed to install Boot Loader patch %{info}" }
			id => "msgParserId374"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId375
	# line in RSA:  Candidate-BSR on interface <interface> has been removed
	else if [logstash][msgparser][id] == "msgParserId375" {
		dissect {
			mapping => { "message" => "Candidate-BSR on interface %{interface} has been removed" }
			id => "msgParserId375"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId376
	# line in RSA:  Candidate-RP on interface <interface> has been removed
	else if [logstash][msgparser][id] == "msgParserId376" {
		dissect {
			mapping => { "message" => "Candidate-RP on interface %{interface} has been removed" }
			id => "msgParserId376"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId377
	# line in RSA: Interface <interface>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId377" {
		dissect {
			mapping => { "message" => "Interface %{interface}, %{event_description}" }
			id => "msgParserId377"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId378
	# line in RSA:  passive open from <saddr>(<sport>) -> <fld1> failed
	else if [logstash][msgparser][id] == "msgParserId378" {
		dissect {
			mapping => { "message" => "passive open from %{saddr}(%{sport}) -> %{fld1} failed" }
			id => "msgParserId378"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId379
	# line in RSA: The peer drop timer has incorrectly expired for the peer with CU address <fld1> on interface <interface>. <event_description>
	else if [logstash][msgparser][id] == "msgParserId379" {
		dissect {
			mapping => { "message" => "The peer drop timer has incorrectly expired for the peer with CU address %{fld1} on interface %{interface}. %{event_description}" }
			id => "msgParserId379"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId380
	# line in RSA: Could not setup interface for protocol <protocol>
	else if [logstash][msgparser][id] == "msgParserId380" {
		dissect {
			mapping => { "message" => "Could not setup interface for protocol %{protocol}" }
			id => "msgParserId380"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId381
	# line in RSA: No bstun group defined on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId381" {
		dissect {
			mapping => { "message" => "No bstun group defined on interface %{interface}" }
			id => "msgParserId381"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId382
	# line in RSA: No peer configured to route frame with destination address <daddr> (bstun group <group>)
	else if [logstash][msgparser][id] == "msgParserId382" {
		dissect {
			mapping => { "message" => "No peer configured to route frame with destination address %{daddr} (bstun group %{group})" }
			id => "msgParserId382"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId383
	# line in RSA: Unknown protocol event <fld1> on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId383" {
		dissect {
			mapping => { "message" => "Unknown protocol event %{fld1} on interface %{interface}" }
			id => "msgParserId383"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId384
	# line in RSA: Failed to init Ethernet device <info>
	else if [logstash][msgparser][id] == "msgParserId384" {
		dissect {
			mapping => { "message" => "Failed to init Ethernet device %{info}" }
			id => "msgParserId384"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId385
	# line in RSA: Couldnt open IPC port for port id  <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId385" {
		dissect {
			mapping => { "message" => "Couldnt open IPC port for port id  %{network_port} %{info}" }
			id => "msgParserId385"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId386
	# line in RSA: Cant allocate MAC address for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId386" {
		dissect {
			mapping => { "message" => "Cant allocate MAC address for interface %{interface}" }
			id => "msgParserId386"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId387
	# line in RSA: Port info invalid for port <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId387" {
		dissect {
			mapping => { "message" => "Port info invalid for port %{network_port} %{info}" }
			id => "msgParserId387"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId388
	# line in RSA: Port info invalid for port id <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId388" {
		dissect {
			mapping => { "message" => "Port info invalid for port id %{network_port} %{info}" }
			id => "msgParserId388"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId389
	# line in RSA: Interface (<interface>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId389" {
		dissect {
			mapping => { "message" => "Interface (%{interface}): %{event_description}" }
			id => "msgParserId389"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId390
	# line in RSA: interface type <info> slot <fld1> port <network_port>
	else if [logstash][msgparser][id] == "msgParserId390" {
		dissect {
			mapping => { "message" => "interface type %{info} slot %{fld1} port %{network_port}" }
			id => "msgParserId390"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId391
	# line in RSA: Policy on session <sessionid> and <event_description>
	else if [logstash][msgparser][id] == "msgParserId391" {
		dissect {
			mapping => { "message" => "Policy on session %{sessionid} and %{event_description}" }
			id => "msgParserId391"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId392
	# line in RSA: Downloading Microcode:    file=<filename>  version=<version> 
	else if [logstash][msgparser][id] == "msgParserId392" {
		dissect {
			mapping => { "message" => "Downloading Microcode:    file=%{filename}  version=%{version}" }
			id => "msgParserId392"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId393
	# line in RSA: Interface <interface>- <event_description>
	else if [logstash][msgparser][id] == "msgParserId393" {
		dissect {
			mapping => { "message" => "Interface %{interface}- %{event_description}" }
			id => "msgParserId393"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId394
	# line in RSA: <fld1> received a packet with size <packets>
	else if [logstash][msgparser][id] == "msgParserId394" {
		dissect {
			mapping => { "message" => "%{fld1} received a packet with size %{packets}" }
			id => "msgParserId394"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId395
	# line in RSA: Can't allocate MAC address for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId395" {
		dissect {
			mapping => { "message" => "Can't allocate MAC address for interface %{interface}" }
			id => "msgParserId395"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId396
	# line in RSA: No <fld1> callback registered for <info>. Using default function.
	else if [logstash][msgparser][id] == "msgParserId396" {
		dissect {
			mapping => { "message" => "No %{fld1} callback registered for %{info}. Using default function." }
			id => "msgParserId396"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId397
	# line in RSA:  Too few working fans, <result> { .<info> | <info> }
	else if [logstash][msgparser][id] == "msgParserId397" {
		grok {
			match => { "message" => "^[\s]*Too[\s]+few[\s]+working[\s]+fans,[\s]+(?<result>[^\s]*)[\s]+([\s]*\.(?<info>[^\s]*)[\s]+|[\s]*(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId397"
			add_field => {
				"event_description" => "Too few working fans"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId398
	# line in RSA:  Port <network_port>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId398" {
		dissect {
			mapping => { "message" => "Port %{network_port}: %{event_description}" }
			id => "msgParserId398"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId399
	# line in RSA:  Failed to read the serial eeprom on module <info>, daughter card <fld1>
	else if [logstash][msgparser][id] == "msgParserId399" {
		dissect {
			mapping => { "message" => "Failed to read the serial eeprom on module %{info}, daughter card %{fld1}" }
			id => "msgParserId399"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId400
	# line in RSA: Failed to read gbic serial eeprom on port <network_port>, try reinserting
	else if [logstash][msgparser][id] == "msgParserId400" {
		dissect {
			mapping => { "message" => "Failed to read gbic serial eeprom on port %{network_port}, try reinserting" }
			id => "msgParserId400"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId401
	# line in RSA:  Insufficient power supplies present for specified configuration 
	else if [logstash][msgparser][id] == "msgParserId401" {
		dissect {
			mapping => { "message" => "Insufficient power supplies present for specified configuration" }
			id => "msgParserId401"
			add_field => {
				"event_description" => "Insufficient power supplies present for specified configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId402
	# line in RSA: Failed to read module <info> serial eeprom, try reinserting module
	else if [logstash][msgparser][id] == "msgParserId402" {
		dissect {
			mapping => { "message" => "Failed to read module %{info} serial eeprom, try reinserting module" }
			id => "msgParserId402"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId403
	# line in RSA: Failed to write module <info> serial eeprom
	else if [logstash][msgparser][id] == "msgParserId403" {
		dissect {
			mapping => { "message" => "Failed to write module %{info} serial eeprom" }
			id => "msgParserId403"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId404
	# line in RSA:  Power supplies in the chassis are of different types (AC/DC) or wattage
	else if [logstash][msgparser][id] == "msgParserId404" {
		dissect {
			mapping => { "message" => "Power supplies in the chassis are of different types (AC/DC) or wattage" }
			id => "msgParserId404"
			add_field => {
				"event_description" => "Power supplies of different types (AC/DC) or wattage"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId405
	# line in RSA: Module <dclass_counter1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId405" {
		dissect {
			mapping => { "message" => "Module %{dclass_counter1} %{event_description}" }
			id => "msgParserId405"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId406
	# line in RSA: Port <network_port> has a non-LX SFP
	else if [logstash][msgparser][id] == "msgParserId406" {
		dissect {
			mapping => { "message" => "Port %{network_port} has a non-LX SFP" }
			id => "msgParserId406"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId407
	# line in RSA: SFP integrity check on port <network_port> failed: <event_description>
	else if [logstash][msgparser][id] == "msgParserId407" {
		dissect {
			mapping => { "message" => "SFP integrity check on port %{network_port} failed: %{event_description}" }
			id => "msgParserId407"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId408
	# line in RSA: SFPs on ports <network_port> and <info> have duplicate serial numbers
	else if [logstash][msgparser][id] == "msgParserId408" {
		dissect {
			mapping => { "message" => "SFPs on ports %{network_port} and %{info} have duplicate serial numbers" }
			id => "msgParserId408"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId409
	# line in RSA: Port <network_port>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId409" {
		dissect {
			mapping => { "message" => "Port %{network_port}: %{event_description}" }
			id => "msgParserId409"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId410
	# line in RSA: No igmp group memory to add new group entry for addr <hostip>
	else if [logstash][msgparser][id] == "msgParserId410" {
		dissect {
			mapping => { "message" => "No igmp group memory to add new group entry for addr %{hostip}" }
			id => "msgParserId410"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId411
	# line in RSA: No port host table memory to add entry for addr <hostip> / <info>
	else if [logstash][msgparser][id] == "msgParserId411" {
		dissect {
			mapping => { "message" => "No port host table memory to add entry for addr %{hostip} / %{info}" }
			id => "msgParserId411"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId412
	# line in RSA: No vlan group table memory to add entry for addr <hostip>
	else if [logstash][msgparser][id] == "msgParserId412" {
		dissect {
			mapping => { "message" => "No vlan group table memory to add entry for addr %{hostip}" }
			id => "msgParserId412"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId413
	# line in RSA: No vlan host table memory to add entry for addr <hostip>
	else if [logstash][msgparser][id] == "msgParserId413" {
		dissect {
			mapping => { "message" => "No vlan host table memory to add entry for addr %{hostip}" }
			id => "msgParserId413"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId414
	# line in RSA:  Failed to read seeprom on port <interface>/<network_port>. <info>
	else if [logstash][msgparser][id] == "msgParserId414" {
		dissect {
			mapping => { "message" => "Failed to read seeprom on port %{interface}/%{network_port}. %{info}" }
			id => "msgParserId414"
			add_field => {
				"event_description" => "Failed to read seeprom on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%C4K_EBM-4-HOSTFLAPPING" {
		# MESSAGE %C4K_EBM-4-HOSTFLAPPING
		# line in RSA:  Host <smacaddr> in vlan <vlan> is flapping between port <change_old> and port <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host %{smacaddr} in vlan %{vlan} is flapping between port %{change_old} and port %{change_new}" }
				id => "message-%C4K_EBM-4-HOSTFLAPPING"
				add_field => {
				"event_description" => "Host port flapping"
				"change_attribute" => "interface"
					"[event][id]" => "%C4K_EBM-4-HOSTFLAPPING"
					"[rsa][message][id1]" => "%C4K_EBM-4-HOSTFLAPPING"
					"[event][categoryid]" => "1603030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %C4K_EBM-4-HOSTFLAPPING:01
		# line in RSA:  Host <smacaddr> in vlan <vlan> is moving from port <change_old> to port <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host %{smacaddr} in vlan %{vlan} is moving from port %{change_old} to port %{change_new}" }
				id => "message-%C4K_EBM-4-HOSTFLAPPING:01"
				add_field => {
				"event_description" => "Host port moving"
				"change_attribute" => "interface"
					"[event][id]" => "%C4K_EBM-4-HOSTFLAPPING:01"
					"[rsa][message][id1]" => "%C4K_EBM-4-HOSTFLAPPING:01"
					"[event][categoryid]" => "1603030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId417
	# line in RSA: Filtering Ethernet MAC address of value zero from agent host table interface (port: <network_port>)
	else if [logstash][msgparser][id] == "msgParserId417" {
		dissect {
			mapping => { "message" => "Filtering Ethernet MAC address of value zero from agent host table interface (port: %{network_port})" }
			id => "msgParserId417"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId418
	# line in RSA:  Supervisor <portname> port MAC was reset due to a fatal Rx error
	else if [logstash][msgparser][id] == "msgParserId418" {
		dissect {
			mapping => { "message" => "Supervisor %{portname} port MAC was reset due to a fatal Rx error" }
			id => "msgParserId418"
			add_field => {
				"event_description" => "Supervisor port MAC was reset due to a fatal Rx error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId419
	# line in RSA: Failed to read gbic serial eeprom on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId419" {
		dissect {
			mapping => { "message" => "Failed to read gbic serial eeprom on port %{network_port}" }
			id => "msgParserId419"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId420
	# line in RSA: S2w bus error while looking for changed gbics on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId420" {
		dissect {
			mapping => { "message" => "S2w bus error while looking for changed gbics on port %{network_port}" }
			id => "msgParserId420"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId421
	# line in RSA:  Failed to read seeprom on port <network_port>. <event_description>
	else if [logstash][msgparser][id] == "msgParserId421" {
		dissect {
			mapping => { "message" => "Failed to read seeprom on port %{network_port}. %{event_description}" }
			id => "msgParserId421"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId422
	# line in RSA:  { <device>:Parity | Parity } error detected in <interface> and corrected
	else if [logstash][msgparser][id] == "msgParserId422" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<device>[^:]*):Parity[\s]+|[\s]*Parity[\s]+)[\s]+error[\s]+detected[\s]+in[\s]+(?<interface>[^\s]*)[\s]+and[\s]+corrected$" }
			id => "msgParserId422"
			add_field => {
				"event_description" => "Parity error detected and corrected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId423
	# line in RSA:  Blocked transmit queue <interface> on Switch Phyport <network_port>, count=<dclass_counter1> 
	else if [logstash][msgparser][id] == "msgParserId423" {
		dissect {
			mapping => { "message" => "Blocked transmit queue %{interface} on Switch Phyport %{network_port}, count=%{dclass_counter1}" }
			id => "msgParserId423"
			add_field => {
				"event_description" => "Blocked transmit queue on Switch Phyport"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId424
	# line in RSA:  Switch Phyport <interface>/<network_port> Tx-Queue could be blocked due to <result>
	else if [logstash][msgparser][id] == "msgParserId424" {
		dissect {
			mapping => { "message" => "Switch Phyport %{interface}/%{network_port} Tx-Queue could be blocked due to %{result}" }
			id => "msgParserId424"
			add_field => {
				"event_description" => "Switch Phyport Tx-Queue could be blocked"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId425
	# line in RSA: Failed to allocate internal VLAN for interface <interface>. <event_description>
	else if [logstash][msgparser][id] == "msgParserId425" {
		dissect {
			mapping => { "message" => "Failed to allocate internal VLAN for interface %{interface}. %{event_description}" }
			id => "msgParserId425"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId426
	# line in RSA:  Slot= <device> Port= <network_port>:  GBIC has been inserted
	else if [logstash][msgparser][id] == "msgParserId426" {
		dissect {
			mapping => { "message" => "Slot= %{device} Port= %{network_port}:  GBIC has been inserted" }
			id => "msgParserId426"
			add_field => {
				"event_description" => "GBIC inserted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId427
	# line in RSA:  Slot= <device> Port= <network_port>: GBIC has been {removed | inserted}
	else if [logstash][msgparser][id] == "msgParserId427" {
		grok {
			match => { "message" => "^[\s]*Slot=[\s]+(?<device>[^\s]*)[\s]+Port=[\s]+(?<network_port>[^:]*):[\s]+GBIC[\s]+has[\s]+been[\s]+(removed[\s]+|[\s]*inserted)$" }
			id => "msgParserId427"
			add_field => {
				"event_description" => "GBIC removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId428
	# line in RSA: Packet received on interface <interface> in vlan <vlan> <info>
	else if [logstash][msgparser][id] == "msgParserId428" {
		dissect {
			mapping => { "message" => "Packet received on interface %{interface} in vlan %{vlan} %{info}" }
			id => "msgParserId428"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId429
	# line in RSA: Router Port <network_port> has no internal vlan assigned to transmit packet
	else if [logstash][msgparser][id] == "msgParserId429" {
		dissect {
			mapping => { "message" => "Router Port %{network_port} has no internal vlan assigned to transmit packet" }
			id => "msgParserId429"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId430
	# line in RSA:  Output PACL <fld1> is disabled on port <network_port>, <info>
	else if [logstash][msgparser][id] == "msgParserId430" {
		dissect {
			mapping => { "message" => "Output PACL %{fld1} is disabled on port %{network_port}, %{info}" }
			id => "msgParserId430"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId431
	# line in RSA: Slot=<fld1> Port= <network_port>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId431" {
		dissect {
			mapping => { "message" => "Slot=%{fld1} Port= %{network_port}: %{event_description}" }
			id => "msgParserId431"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId432
	# line in RSA: Dropping packets to be transmitted out on port <network_port> (<event_description>)
	else if [logstash][msgparser][id] == "msgParserId432" {
		dissect {
			mapping => { "message" => "Dropping packets to be transmitted out on port %{network_port} (%{event_description})" }
			id => "msgParserId432"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId433
	# line in RSA:  Slot=<device> Port=<network_port>: Transceiver has been inserted
	else if [logstash][msgparser][id] == "msgParserId433" {
		dissect {
			mapping => { "message" => "Slot=%{device} Port=%{network_port}: Transceiver has been inserted" }
			id => "msgParserId433"
			add_field => {
				"event_description" => "Transceiver inserted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId434
	# line in RSA:  Slot=<device> Port=<network_port>: Transceiver has been removed
	else if [logstash][msgparser][id] == "msgParserId434" {
		dissect {
			mapping => { "message" => "Slot=%{device} Port=%{network_port}: Transceiver has been removed" }
			id => "msgParserId434"
			add_field => {
				"event_description" => "Transceiver removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId435
	# line in RSA:  Transmitting L3 packet on a physical port <network_port> that is part of <fld1> (<packets> packets). <event_description>
	else if [logstash][msgparser][id] == "msgParserId435" {
		dissect {
			mapping => { "message" => "Transmitting L3 packet on a physical port %{network_port} that is part of %{fld1} (%{packets} packets). %{event_description}" }
			id => "msgParserId435"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId436
	# line in RSA: Dropping transmit packet out of interface <interface>
	else if [logstash][msgparser][id] == "msgParserId436" {
		dissect {
			mapping => { "message" => "Dropping transmit packet out of interface %{interface}" }
			id => "msgParserId436"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId437
	# line in RSA:  IOS IP Route Manager:No memory available to allocate FIB Entry for <hostip>
	else if [logstash][msgparser][id] == "msgParserId437" {
		dissect {
			mapping => { "message" => "IOS IP Route Manager:No memory available to allocate FIB Entry for %{hostip}" }
			id => "msgParserId437"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId438
	# line in RSA:   Fan tray has failed
	else if [logstash][msgparser][id] == "msgParserId438" {
		dissect {
			mapping => { "message" => "Fan tray has failed" }
			id => "msgParserId438"
			add_field => {
				"event_description" => "Fan tray has failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId439
	# line in RSA:  Measured inline power higher than configured value
	else if [logstash][msgparser][id] == "msgParserId439" {
		dissect {
			mapping => { "message" => "Measured inline power higher than configured value" }
			id => "msgParserId439"
			add_field => {
				"event_description" => "Measured inline power higher than configured value"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId440
	# line in RSA:   Inline power from power supply <dclass_counter1> has failed or been turned off
	else if [logstash][msgparser][id] == "msgParserId440" {
		dissect {
			mapping => { "message" => "Inline power from power supply %{dclass_counter1} has failed or been turned off" }
			id => "msgParserId440"
			add_field => {
				"event_description" => "Inline power from power supply has failed or been turned off"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId441
	# line in RSA:  Module <dclass_counter1> Sensor air inlet temperature is at or over threshold - <result>
	else if [logstash][msgparser][id] == "msgParserId441" {
		dissect {
			mapping => { "message" => "Module %{dclass_counter1} Sensor air inlet temperature is at or over threshold - %{result}" }
			id => "msgParserId441"
			add_field => {
				"event_description" => "Module Sensor air inlet temperature is at or over threshold"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId442
	# line in RSA:  Power { Supply | supply } <device> has failed or been turned off
	else if [logstash][msgparser][id] == "msgParserId442" {
		grok {
			match => { "message" => "^[\s]*Power[\s]+([\s]*Supply[\s]+|[\s]*supply[\s]+)[\s]+(?<device>[^\s]*)[\s]+has[\s]+failed[\s]+or[\s]+been[\s]+turned[\s]+off$" }
			id => "msgParserId442"
			add_field => {
				"event_description" => "power supply failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId443
	# line in RSA:  Fan of power supply <device> has failed
	else if [logstash][msgparser][id] == "msgParserId443" {
		dissect {
			mapping => { "message" => "Fan of power supply %{device} has failed" }
			id => "msgParserId443"
			add_field => {
				"event_description" => "power supply failure - Fan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId444
	# line in RSA:  Power supply <device> has been removed
	else if [logstash][msgparser][id] == "msgParserId444" {
		dissect {
			mapping => { "message" => "Power supply %{device} has been removed" }
			id => "msgParserId444"
			add_field => {
				"event_description" => "power supply removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId445
	# line in RSA:  Fan tray is okay
	else if [logstash][msgparser][id] == "msgParserId445" {
		dissect {
			mapping => { "message" => "Fan tray is okay" }
			id => "msgParserId445"
			add_field => {
				"event_description" => "Fan tray is okay"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId446
	# line in RSA:   Inline power usage within limits
	else if [logstash][msgparser][id] == "msgParserId446" {
		dissect {
			mapping => { "message" => "Inline power usage within limits" }
			id => "msgParserId446"
			add_field => {
				"event_description" => "Inline power usage within limits"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId447
	# line in RSA:  Inline power from power supply <dclass_counter1> is Ok
	else if [logstash][msgparser][id] == "msgParserId447" {
		dissect {
			mapping => { "message" => "Inline power from power supply %{dclass_counter1} is Ok" }
			id => "msgParserId447"
			add_field => {
				"event_description" => "Inline power from power supply is Ok"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId448
	# line in RSA:  { <device>:Module | Module } <dclass_counter1> is offline
	else if [logstash][msgparser][id] == "msgParserId448" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<device>[^:]*):Module[\s]+|[\s]*Module[\s]+)[\s]+(?<dclass_counter1>[^\s]*)[\s]+is[\s]+offline$" }
			id => "msgParserId448"
			add_field => {
				"event_description" => "Module is online"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId449
	# line in RSA:  { <device>:Module | Module } <dclass_counter1> is online
	else if [logstash][msgparser][id] == "msgParserId449" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<device>[^:]*):Module[\s]+|[\s]*Module[\s]+)[\s]+(?<dclass_counter1>[^\s]*)[\s]+is[\s]+online$" }
			id => "msgParserId449"
			add_field => {
				"event_description" => "Module is online"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId450
	# line in RSA:   { <device>:Module | Module } <dclass_counter1> is removed
	else if [logstash][msgparser][id] == "msgParserId450" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<device>[^:]*):Module[\s]+|[\s]*Module[\s]+)[\s]+(?<dclass_counter1>[^\s]*)[\s]+is[\s]+removed$" }
			id => "msgParserId450"
			add_field => {
				"event_description" => "Module is removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId451
	# line in RSA:  Fan of power supply <device> is okay
	else if [logstash][msgparser][id] == "msgParserId451" {
		dissect {
			mapping => { "message" => "Fan of power supply %{device} is okay" }
			id => "msgParserId451"
			add_field => {
				"event_description" => "power supply OK - Fan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId452
	# line in RSA:  Input <network_port> on Power Supply <device> has been turned on.
	else if [logstash][msgparser][id] == "msgParserId452" {
		dissect {
			mapping => { "message" => "Input %{network_port} on Power Supply %{device} has been turned on." }
			id => "msgParserId452"
			add_field => {
				"event_description" => "Input on Power Supply has been turned on"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId453
	# line in RSA:  <event_description> 
	else if [logstash][msgparser][id] == "msgParserId453" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId453"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId454
	# line in RSA:  Power supply <device> output has increased
	else if [logstash][msgparser][id] == "msgParserId454" {
		dissect {
			mapping => { "message" => "Power supply %{device} output has increased" }
			id => "msgParserId454"
			add_field => {
				"event_description" => "Power supply output has increased"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId455
	# line in RSA: FIB:Attempt to create a duplicate FIB Entry for <hostip>
	else if [logstash][msgparser][id] == "msgParserId455" {
		dissect {
			mapping => { "message" => "FIB:Attempt to create a duplicate FIB Entry for %{hostip}" }
			id => "msgParserId455"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId456
	# line in RSA: FIB Entry:Couldn't delete adj <fld1> from FIB Entry <fld2>, no such adj.
	else if [logstash][msgparser][id] == "msgParserId456" {
		dissect {
			mapping => { "message" => "FIB Entry:Couldn't delete adj %{fld1} from FIB Entry %{fld2}, no such adj." }
			id => "msgParserId456"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId457
	# line in RSA: FIBEntry:Too many adjacencies on FIBEntry for <hostip> tried to add adj <fld1>
	else if [logstash][msgparser][id] == "msgParserId457" {
		dissect {
			mapping => { "message" => "FIBEntry:Too many adjacencies on FIBEntry for %{hostip} tried to add adj %{fld1}" }
			id => "msgParserId457"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId458
	# line in RSA: FIB:No memory available to allocate FIB Entry for <hostip>
	else if [logstash][msgparser][id] == "msgParserId458" {
		dissect {
			mapping => { "message" => "FIB:No memory available to allocate FIB Entry for %{hostip}" }
			id => "msgParserId458"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId459
	# line in RSA:  { (<info>)Packet | Packet } received with invalid source MAC address (<smacaddr>) on port <portname> in vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId459" {
		grok {
			match => { "message" => "^[\s]*([\s]*\((?<info>[^\)]*)\)Packet[\s]+|[\s]*Packet[\s]+)[\s]+received[\s]+with[\s]+invalid[\s]+source[\s]+MAC[\s]+address[\s]+\((?<smacaddr>[^\)]*)\)[\s]+on[\s]+port[\s]+(?<portname>[^\s]*)[\s]+in[\s]+vlan[\s]+(?<vlan>.*)$" }
			id => "msgParserId459"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId460
	# line in RSA: No hardware adjacency resource available for route <hostip>
	else if [logstash][msgparser][id] == "msgParserId460" {
		dissect {
			mapping => { "message" => "No hardware adjacency resource available for route %{hostip}" }
			id => "msgParserId460"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId461
	# line in RSA:  <service>() - management request timed out.
	else if [logstash][msgparser][id] == "msgParserId461" {
		dissect {
			mapping => { "message" => "%{service}() - management request timed out." }
			id => "msgParserId461"
			add_field => {
				"event_description" => "management request timed out"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId462
	# line in RSA:  <service>(<interface>) - consecutive management requests timed out.
	else if [logstash][msgparser][id] == "msgParserId462" {
		dissect {
			mapping => { "message" => "%{service}(%{interface}) - consecutive management requests timed out." }
			id => "msgParserId462"
			add_field => {
				"event_description" => "consecutive management requests timed out on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId463
	# line in RSA: <packets> packets dropped: Unable to determine the ACL action to take because we ran out of memory. Address: src <saddr> dst <daddr>
	else if [logstash][msgparser][id] == "msgParserId463" {
		dissect {
			mapping => { "message" => "%{packets} packets dropped: Unable to determine the ACL action to take because we ran out of memory. Address: src %{saddr} dst %{daddr}" }
			id => "msgParserId463"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId464
	# line in RSA:  { (Suppressed <dclass_counter1> times)Unable | Unable | <result>:Unable } to determine whether to route or bridge replicated software-processed packet with source address <saddr> and destination address <daddr>
	else if [logstash][msgparser][id] == "msgParserId464" {
		grok {
			match => { "message" => "^[\s]*([\s]*\(Suppressed[\s]+(?<dclass_counter1>[^\s]*)[\s]+times\)Unable[\s]+|[\s]*Unable[\s]+|[\s]*(?<result>[^:]*):Unable[\s]+)[\s]+to[\s]+determine[\s]+whether[\s]+to[\s]+route[\s]+or[\s]+bridge[\s]+replicated[\s]+software\-processed[\s]+packet[\s]+with[\s]+source[\s]+address[\s]+(?<saddr>[^\s]*)[\s]+and[\s]+destination[\s]+address[\s]+(?<daddr>.*)$" }
			id => "msgParserId464"
			add_field => {
				"event_description" => "Unable to determine whether to route or bridge replicated software-processed packet"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId465
	# line in RSA:  <packets> packets dropped: Unable to determine source host location of replicated software-processed packet with source address <saddr> and destination address <daddr>
	else if [logstash][msgparser][id] == "msgParserId465" {
		dissect {
			mapping => { "message" => "%{packets} packets dropped: Unable to determine source host location of replicated software-processed packet with source address %{saddr} and destination address %{daddr}" }
			id => "msgParserId465"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId466
	# line in RSA:  <packets> packets dropped:Draining the backed up packets in CPU queue when we cleaned up FIB adjacencies. Last drained packet's source address  <saddr> and destination address <daddr>
	else if [logstash][msgparser][id] == "msgParserId466" {
		dissect {
			mapping => { "message" => "%{packets} packets dropped:Draining the backed up packets in CPU queue when we cleaned up FIB adjacencies. Last drained packet's source address  %{saddr} and destination address %{daddr}" }
			id => "msgParserId466"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId467
	# line in RSA:  <fld1>sent out a loopback packet on port <network_port>, but it came back on port <info>
	else if [logstash][msgparser][id] == "msgParserId467" {
		dissect {
			mapping => { "message" => "%{fld1}sent out a loopback packet on port %{network_port}, but it came back on port %{info}" }
			id => "msgParserId467"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId468
	# line in RSA: <fld1> sent out a loopback packet on port <network_port>, but it came back on port <info>
	else if [logstash][msgparser][id] == "msgParserId468" {
		dissect {
			mapping => { "message" => "%{fld1} sent out a loopback packet on port %{network_port}, but it came back on port %{info}" }
			id => "msgParserId468"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId469
	# line in RSA: Policy-map: <info> with insufficient bandwidth for <fld1> queues not having explicit bandwidth configuration.
	else if [logstash][msgparser][id] == "msgParserId469" {
		dissect {
			mapping => { "message" => "Policy-map: %{info} with insufficient bandwidth for %{fld1} queues not having explicit bandwidth configuration." }
			id => "msgParserId469"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId470
	# line in RSA: Policy map: <info>; with bandwidth percent or bandwidth remaining percent action results in unsupported absolute bandwidth value.
	else if [logstash][msgparser][id] == "msgParserId470" {
		dissect {
			mapping => { "message" => "Policy map: %{info}; with bandwidth percent or bandwidth remaining percent action results in unsupported absolute bandwidth value." }
			id => "msgParserId470"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId471
	# line in RSA: Policy-map: <info>; on the member port of the port-channel has invalid classification filters.
	else if [logstash][msgparser][id] == "msgParserId471" {
		dissect {
			mapping => { "message" => "Policy-map: %{info}; on the member port of the port-channel has invalid classification filters." }
			id => "msgParserId471"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId472
	# line in RSA: Policy-map: <info>; with sum of configured bandwidth exceeding interface speed of <context>
	else if [logstash][msgparser][id] == "msgParserId472" {
		dissect {
			mapping => { "message" => "Policy-map: %{info}; with sum of configured bandwidth exceeding interface speed of %{context}" }
			id => "msgParserId472"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId473
	# line in RSA: Policy map: <info>; with strict priority queuing not supported for default class of traffic.
	else if [logstash][msgparser][id] == "msgParserId473" {
		dissect {
			mapping => { "message" => "Policy map: %{info}; with strict priority queuing not supported for default class of traffic." }
			id => "msgParserId473"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId474
	# line in RSA: Policy-map: <info>; with non-multiple of 8 queue-limit value 
	else if [logstash][msgparser][id] == "msgParserId474" {
		dissect {
			mapping => { "message" => "Policy-map: %{info}; with non-multiple of 8 queue-limit value" }
			id => "msgParserId474"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId475
	# line in RSA: Policy-map: <info>; with bandwidth remaining percent is supported only with priority queuing.
	else if [logstash][msgparser][id] == "msgParserId475" {
		dissect {
			mapping => { "message" => "Policy-map: %{info}; with bandwidth remaining percent is supported only with priority queuing." }
			id => "msgParserId475"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId476
	# line in RSA: Policy map: <info>; with shape percent results in lower than supported absolute shape value. 
	else if [logstash][msgparser][id] == "msgParserId476" {
		dissect {
			mapping => { "message" => "Policy map: %{info}; with shape percent results in lower than supported absolute shape value." }
			id => "msgParserId476"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId477
	# line in RSA: Policy map: <info>; shape value is higher than interface speed.
	else if [logstash][msgparser][id] == "msgParserId477" {
		dissect {
			mapping => { "message" => "Policy map: %{info}; shape value is higher than interface speed." }
			id => "msgParserId477"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId478
	# line in RSA: Policy-map: <info>; can have only 3 non-default queuing classes.
	else if [logstash][msgparser][id] == "msgParserId478" {
		dissect {
			mapping => { "message" => "Policy-map: %{info}; can have only 3 non-default queuing classes." }
			id => "msgParserId478"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId479
	# line in RSA: Policy-map: <info>; with more than one priority queue.
	else if [logstash][msgparser][id] == "msgParserId479" {
		dissect {
			mapping => { "message" => "Policy-map: %{info}; with more than one priority queue." }
			id => "msgParserId479"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId480
	# line in RSA: Policy map: <info>; with queuing action can not be attached to a <fld1>.
	else if [logstash][msgparser][id] == "msgParserId480" {
		dissect {
			mapping => { "message" => "Policy map: %{info}; with queuing action can not be attached to a %{fld1}." }
			id => "msgParserId480"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId481
	# line in RSA:  IOS version mismatch. Active supervisor version is <version>,. Standby supervisor version is <info>,. <result>.
	else if [logstash][msgparser][id] == "msgParserId481" {
		dissect {
			mapping => { "message" => "IOS version mismatch. Active supervisor version is %{version},. Standby supervisor version is %{info},. %{result}." }
			id => "msgParserId481"
			add_field => {
				"event_description" => "IOS version mismatch"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId482
	# line in RSA:  IOS version incompatibility. Active supervisor version is <version>,. Standby supervisor version is <info>,. <result>.
	else if [logstash][msgparser][id] == "msgParserId482" {
		dissect {
			mapping => { "message" => "IOS version incompatibility. Active supervisor version is %{version},. Standby supervisor version is %{info},. %{result}." }
			id => "msgParserId482"
			add_field => {
				"event_description" => "IOS version incompatibility"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId483
	# line in RSA:  The peer Supervisor has been lost
	else if [logstash][msgparser][id] == "msgParserId483" {
		dissect {
			mapping => { "message" => "The peer Supervisor has been lost" }
			id => "msgParserId483"
			add_field => {
				"event_description" => "Peer Supervisor lost"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId484
	# line in RSA:  Galios Redundancy ISSU client <info>
	else if [logstash][msgparser][id] == "msgParserId484" {
		dissect {
			mapping => { "message" => "Galios Redundancy ISSU client %{info}" }
			id => "msgParserId484"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId485
	# line in RSA:  The calendar has been successfully synchronized to the <result>
	else if [logstash][msgparser][id] == "msgParserId485" {
		dissect {
			mapping => { "message" => "The calendar has been successfully synchronized to the %{result}" }
			id => "msgParserId485"
			add_field => {
				"event_description" => "calendar synchronized"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId486
	# line in RSA:  The calendar has been successfully synchronized to the standby supervisor <result>
	else if [logstash][msgparser][id] == "msgParserId486" {
		dissect {
			mapping => { "message" => "The calendar has been successfully synchronized to the standby supervisor %{result}" }
			id => "msgParserId486"
			add_field => {
				"event_description" => "calendar synchronized to the standby supervisior multiple times"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId487
	# line in RSA:  The <filename> has been successfully synchronized to the standby supervisor
	else if [logstash][msgparser][id] == "msgParserId487" {
		dissect {
			mapping => { "message" => "The %{filename} has been successfully synchronized to the standby supervisor" }
			id => "msgParserId487"
			add_field => {
				"event_description" => "config file synchronized to standby supervisor"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId488
	# line in RSA:  The vlan database has been successfully synchronized <result>
	else if [logstash][msgparser][id] == "msgParserId488" {
		dissect {
			mapping => { "message" => "The vlan database has been successfully synchronized %{result}" }
			id => "msgParserId488"
			add_field => {
				"event_description" => "Vlan database successfully synchronized"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId489
	# line in RSA:  Initializing as <obj_type> supervisor
	else if [logstash][msgparser][id] == "msgParserId489" {
		dissect {
			mapping => { "message" => "Initializing as %{obj_type} supervisor" }
			id => "msgParserId489"
			add_field => {
				"event_description" => "Initializing as supervisor"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId490
	# line in RSA:  <fld1> supervisor initializing for <service> mode
	else if [logstash][msgparser][id] == "msgParserId490" {
		dissect {
			mapping => { "message" => "%{fld1} supervisor initializing for %{service} mode" }
			id => "msgParserId490"
			add_field => {
				"event_description" => "supervisor initializing"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId491
	# line in RSA:  Switchover activity detected, changing role from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId491" {
		dissect {
			mapping => { "message" => "Switchover activity detected, changing role from %{change_old} to %{change_new}" }
			id => "msgParserId491"
			add_field => {
				"event_description" => "Switchover activity detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId492
	# line in RSA:  Parity mismatch in freelist memory, flm addr=<device>, reg bits=<fld1>, total=<dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId492" {
		dissect {
			mapping => { "message" => "Parity mismatch in freelist memory, flm addr=%{device}, reg bits=%{fld1}, total=%{dclass_counter1}" }
			id => "msgParserId492"
			add_field => {
				"event_description" => "Parity mismatch in freelist memory"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId493
	# line in RSA:  Parity mismatch in transmit count memory, addr=<device>, reg bits=<fld1>, total=<dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId493" {
		dissect {
			mapping => { "message" => "Parity mismatch in transmit count memory, addr=%{device}, reg bits=%{fld1}, total=%{dclass_counter1}" }
			id => "msgParserId493"
			add_field => {
				"event_description" => "Parity mismatch in transmit count memory"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId494
	# line in RSA:  Internal Event: timed out <info> waiting for Standby to acknowledge port status change for <portname>
	else if [logstash][msgparser][id] == "msgParserId494" {
		dissect {
			mapping => { "message" => "Internal Event: timed out %{info} waiting for Standby to acknowledge port status change for %{portname}" }
			id => "msgParserId494"
			add_field => {
				"event_description" => "timeout waiting for Standby to acknowledge port status change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId495
	# line in RSA: Internal Error: PimEthAutoNegotiator - Can't power off port <network_port>
	else if [logstash][msgparser][id] == "msgParserId495" {
		dissect {
			mapping => { "message" => "Internal Error: PimEthAutoNegotiator - Can't power off port %{network_port}" }
			id => "msgParserId495"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId496
	# line in RSA: Internal Error: PimEthAutoNegotiator - Can't power on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId496" {
		dissect {
			mapping => { "message" => "Internal Error: PimEthAutoNegotiator - Can't power on port %{network_port}" }
			id => "msgParserId496"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId497
	# line in RSA: Power management hardware for port <network_port> bad.
	else if [logstash][msgparser][id] == "msgParserId497" {
		dissect {
			mapping => { "message" => "Power management hardware for port %{network_port} bad." }
			id => "msgParserId497"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId498
	# line in RSA:  Power control to port <network_port> bad. Possibly power is turned on.
	else if [logstash][msgparser][id] == "msgParserId498" {
		dissect {
			mapping => { "message" => "Power control to port %{network_port} bad. Possibly power is turned on." }
			id => "msgParserId498"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId499
	# line in RSA:  (Suppressed <dclass_counter1> times) <agent>: <process> Read/Write Error for port <portname>.
	else if [logstash][msgparser][id] == "msgParserId499" {
		dissect {
			mapping => { "message" => "(Suppressed %{dclass_counter1} times) %{agent}: %{process} Read/Write Error for port %{portname}." }
			id => "msgParserId499"
			add_field => {
				"event_description" => "Read/Write Error on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId500
	# line in RSA: Temporarily disabling port <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId500" {
		dissect {
			mapping => { "message" => "Temporarily disabling port %{network_port} %{info}" }
			id => "msgParserId500"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId501
	# line in RSA:  Fixed creation time of <result>
	else if [logstash][msgparser][id] == "msgParserId501" {
		dissect {
			mapping => { "message" => "Fixed creation time of %{result}" }
			id => "msgParserId501"
			add_field => {
				"event_description" => "Fixed creation time flows"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId502
	# line in RSA:  <fld1> packet(size <packets>) too big.
	else if [logstash][msgparser][id] == "msgParserId502" {
		dissect {
			mapping => { "message" => "%{fld1} packet(size %{packets}) too big." }
			id => "msgParserId502"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId503
	# line in RSA: vlan <vlan> can not be created. media not supported
	else if [logstash][msgparser][id] == "msgParserId503" {
		dissect {
			mapping => { "message" => "vlan %{vlan} can not be created. media not supported" }
			id => "msgParserId503"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId504
	# line in RSA: having problems deleting vlan <vlan> on the NMP
	else if [logstash][msgparser][id] == "msgParserId504" {
		dissect {
			mapping => { "message" => "having problems deleting vlan %{vlan} on the NMP" }
			id => "msgParserId504"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId505
	# line in RSA:  NMP won't allow vlan <vlan> configuration
	else if [logstash][msgparser][id] == "msgParserId505" {
		dissect {
			mapping => { "message" => "NMP won't allow vlan %{vlan} configuration" }
			id => "msgParserId505"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId506
	# line in RSA: vlan <vlan> <event_description>
	else if [logstash][msgparser][id] == "msgParserId506" {
		dissect {
			mapping => { "message" => "vlan %{vlan} %{event_description}" }
			id => "msgParserId506"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "PERU" {
		# MESSAGE PERU:01
		# line in RSA:  <authmethod>(<fld1>): {Method= <fld2>|status = <fld3>|continue_login (user='(<username>)')|port=<portname> list='<fld4>' action=<action> service=<service>|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<authmethod>[^\(]*)\((?<fld1>[^\)]*)\):[\s]+(Method=[\s]+(?<fld2>.*)|status[\s]+=[\s]+(?<fld3>.*)|continue_login[\s]+\(user='\((?<username>[^\)]*)\)'\)|port=(?<portname>[^\s]*)[\s]+list='(?<fld4>[^']*)'[\s]+action=(?<action>[^\s]*)[\s]+service=(?<service>.*)|(?<event_description>.*))$" }
				id => "message-PERU:01"
				add_field => {
					"[event][id]" => "PERU:01"
					"[rsa][message][id1]" => "PERU:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PERU:02
		# line in RSA:  <authmethod>(<fld1>)/<fld2>/<fld3>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod}(%{fld1})/%{fld2}/%{fld3}: %{event_description}" }
				id => "message-PERU:02"
				add_field => {
					"[event][id]" => "PERU:02"
					"[rsa][message][id1]" => "PERU:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PERU:03
		# line in RSA:  <authmethod>: {parse name=<fld1> idb type=<fld2> tty=<terminal>| name=<fld3> flags=<fld4> type=<fld5> shelf=<fld6> slot=<fld7> adapter=<fld8> port=<network_port> channel=<fld9>|free_user (<fld10>) user='<username>' ruser='<c_username>' port='<portname>' rem_addr='<saddr>' authen_type=<fld11> service=<service> priv=<privilege> vrf= <fld12>|<info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<authmethod>[^:]*):[\s]+(parse[\s]+name=(?<fld1>[^\s]*)[\s]+idb[\s]+type=(?<fld2>[^\s]*)[\s]+tty=(?<terminal>.*)|[\s]*name=(?<fld3>[^\s]*)[\s]+flags=(?<fld4>[^\s]*)[\s]+type=(?<fld5>[^\s]*)[\s]+shelf=(?<fld6>[^\s]*)[\s]+slot=(?<fld7>[^\s]*)[\s]+adapter=(?<fld8>[^\s]*)[\s]+port=(?<network_port>[^\s]*)[\s]+channel=(?<fld9>.*)|free_user[\s]+\((?<fld10>[^\)]*)\)[\s]+user='(?<username>[^']*)'[\s]+ruser='(?<c_username>[^']*)'[\s]+port='(?<portname>[^']*)'[\s]+rem_addr='(?<saddr>[^']*)'[\s]+authen_type=(?<fld11>[^\s]*)[\s]+service=(?<service>[^\s]*)[\s]+priv=(?<privilege>[^\s]*)[\s]+vrf=[\s]+(?<fld12>.*)|(?<info>.*))$" }
				id => "message-PERU:03"
				add_field => {
					"[event][id]" => "PERU:03"
					"[rsa][message][id1]" => "PERU:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PERU:04
		# line in RSA:  <authmethod>(<fld1>) <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod}(%{fld1}) %{event_description}" }
				id => "message-PERU:04"
				add_field => {
					"[event][id]" => "PERU:04"
					"[rsa][message][id1]" => "PERU:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PET" {
		# MESSAGE PET:15
		# line in RSA: <authmethod> (<fld2>): continue_login (user='(<username>)')
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod} (%{fld2}): continue_login (user='(%{username})')" }
				id => "message-PET:15"
				add_field => {
				"event_description" => "continue_login"
					"[event][id]" => "PET:15"
					"[rsa][message][id1]" => "PET:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:14
		# line in RSA: <authmethod>(<fld1>): <event_description> - default to enable password
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod}(%{fld1}): %{event_description} - default to enable password" }
				id => "message-PET:14"
				add_field => {
					"[event][id]" => "PET:14"
					"[rsa][message][id1]" => "PET:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:13
		# line in RSA: <fld1> <authmethod>(<fld2>): Method=<fld3> (<fld4>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{authmethod}(%{fld2}): Method=%{fld3} (%{fld4})" }
				id => "message-PET:13"
				add_field => {
				"event_description" => "Post authorization status"
					"[event][id]" => "PET:13"
					"[rsa][message][id1]" => "PET:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:12
		# line in RSA: <authmethod> (<fld2>): port='<portname>' list='<fld3>' action=<action> service=<service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod} (%{fld2}): port='%{portname}' list='%{fld3}' action=%{action} service=%{service}" }
				id => "message-PET:12"
				add_field => {
					"[event][id]" => "PET:12"
					"[rsa][message][id1]" => "PET:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:11
		# line in RSA: <authmethod>(<fld1>): {Method=<fld2>|Post authorization status = <event_state>|status =  <event_state>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<authmethod>[^\(]*)\((?<fld1>[^\)]*)\):[\s]+(Method=(?<fld2>.*)|Post[\s]+authorization[\s]+status[\s]+=[\s]+(?<event_state>.*)|status[\s]+=[\s]+(?<event_state>.*))$" }
				id => "message-PET:11"
				add_field => {
					"[event][id]" => "PET:11"
					"[rsa][message][id1]" => "PET:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:10
		# line in RSA: <authmethod> STOP(<fld1>): Sending stop requests
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod} STOP(%{fld1}): Sending stop requests" }
				id => "message-PET:10"
				add_field => {
				"event_description" => "Sending stop requests"
					"[event][id]" => "PET:10"
					"[rsa][message][id1]" => "PET:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:09
		# line in RSA: <authmethod>(<fld1>): Pick method list '<fld2>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod}(%{fld1}): Pick method list '%{fld2}'" }
				id => "message-PET:09"
				add_field => {
				"event_description" => "Pick method list"
					"[event][id]" => "PET:09"
					"[rsa][message][id1]" => "PET:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:08
		# line in RSA: Getting session id for <authmethod>(<fld2>) : <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Getting session id for %{authmethod}(%{fld2}) : %{fld3}" }
				id => "message-PET:08"
				add_field => {
				"event_description" => "Getting session id"
					"[event][id]" => "PET:08"
					"[rsa][message][id1]" => "PET:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:07
		# line in RSA: <fld1> <authmethod>: <fld2>/"<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{authmethod}: %{fld2}/\"%{event_description}\"" }
				id => "message-PET:07"
				add_field => {
					"[event][id]" => "PET:07"
					"[rsa][message][id1]" => "PET:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:06
		# line in RSA: <fld1> <authmethod> (<fld2>): Port='<portname>' list='<fld3>' service=<service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{authmethod} (%{fld2}): Port='%{portname}' list='%{fld3}' service=%{service}" }
				id => "message-PET:06"
				add_field => {
					"[event][id]" => "PET:06"
					"[rsa][message][id1]" => "PET:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:05
		# line in RSA:  <authmethod>: {parse name=<fld1> idb type=<fld2> tty=<terminal>| name=<fld3> flags=<fld4> type=<fld5> shelf=<fld6> slot=<fld7> adapter=<fld8> port=<network_port> channel=<fld9>|free_user (<fld10>) user='<username>' ruser='<c_username>' port='<portname>' rem_addr='<saddr>' authen_type=<fld11> service=<service> priv=<privilege> vrf= <fld12>|user=<username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<authmethod>[^:]*):[\s]+(parse[\s]+name=(?<fld1>[^\s]*)[\s]+idb[\s]+type=(?<fld2>[^\s]*)[\s]+tty=(?<terminal>.*)|[\s]*name=(?<fld3>[^\s]*)[\s]+flags=(?<fld4>[^\s]*)[\s]+type=(?<fld5>[^\s]*)[\s]+shelf=(?<fld6>[^\s]*)[\s]+slot=(?<fld7>[^\s]*)[\s]+adapter=(?<fld8>[^\s]*)[\s]+port=(?<network_port>[^\s]*)[\s]+channel=(?<fld9>.*)|free_user[\s]+\((?<fld10>[^\)]*)\)[\s]+user='(?<username>[^']*)'[\s]+ruser='(?<c_username>[^']*)'[\s]+port='(?<portname>[^']*)'[\s]+rem_addr='(?<saddr>[^']*)'[\s]+authen_type=(?<fld11>[^\s]*)[\s]+service=(?<service>[^\s]*)[\s]+priv=(?<privilege>[^\s]*)[\s]+vrf=[\s]+(?<fld12>.*)|user=(?<username>.*))$" }
				id => "message-PET:05"
				add_field => {
					"[event][id]" => "PET:05"
					"[rsa][message][id1]" => "PET:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:04
		# line in RSA: <authmethod>: <event_description>: user= '<username>' ruser= '<c_username>'rem_addr= '<saddr>' priv=<privilege> list= <fld12> AUTHOR-TYPE= '<fld13>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod}: %{event_description}: user= '%{username}' ruser= '%{c_username}'rem_addr= '%{saddr}' priv=%{privilege} list= %{fld12} AUTHOR-TYPE= '%{fld13}'" }
				id => "message-PET:04"
				add_field => {
					"[event][id]" => "PET:04"
					"[rsa][message][id1]" => "PET:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:03
		# line in RSA: <authmethod>: (<fld4>): {user=<username>|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<authmethod>[^:]*):[\s]+\((?<fld4>[^\)]*)\):[\s]+(user=(?<username>.*)|(?<event_description>.*))$" }
				id => "message-PET:03"
				add_field => {
					"[event][id]" => "PET:03"
					"[rsa][message][id1]" => "PET:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:02
		# line in RSA: <authmethod> (<fld1>): Method list id=<fld2> not configured. <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{authmethod} (%{fld1}): Method list id=%{fld2} not configured. %{action}" }
				id => "message-PET:02"
				add_field => {
				"event_description" => "Method list not configured"
					"[event][id]" => "PET:02"
					"[rsa][message][id1]" => "PET:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET:01
		# line in RSA: {<fld1> <authmethod> (<fld2>)|<authmethod> (<fld2>)}: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<fld1>[^\s]*)[\s]+(?<authmethod>[^\s]*)[\s]+\((?<fld2>[^\)]*)\)|(?<authmethod>[^\s]*)[\s]+\((?<fld2>[^\)]*)\)):[\s]+(?<event_description>.*)$" }
				id => "message-PET:01"
				add_field => {
					"[event][id]" => "PET:01"
					"[rsa][message][id1]" => "PET:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PET
		# line in RSA: <authmethod>(<fld1>){:<event_description>|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<authmethod>[^\(]*)\((?<fld1>[^\)]*)\)(:(?<event_description>.*)|(?<event_description>.*))$" }
				id => "message-PET"
				add_field => {
					"[event][id]" => "PET"
					"[rsa][message][id1]" => "PET"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId527
	# line in RSA:  Fan-tray <dclass_counter1> is operating in high power mode
	else if [logstash][msgparser][id] == "msgParserId527" {
		dissect {
			mapping => { "message" => "Fan-tray %{dclass_counter1} is operating in high power mode" }
			id => "msgParserId527"
			add_field => {
				"event_description" => "Fan-tray is operating in high power mode"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId528
	# line in RSA:  Fan-tray <dclass_counter1> is operating in restricted power mode
	else if [logstash][msgparser][id] == "msgParserId528" {
		dissect {
			mapping => { "message" => "Fan-tray %{dclass_counter1} is operating in restricted power mode" }
			id => "msgParserId528"
			add_field => {
				"event_description" => "Fan-tray is operating in restricted power mode"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId529
	# line in RSA:  { <fld3> <sport> inlet | module <sport> <interface> |<fld3> <sport> outlet } temperature crossed threshold #<fld1>(=<fld2>C). <result>
	else if [logstash][msgparser][id] == "msgParserId529" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<fld3>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+inlet[\s]+|[\s]*module[\s]+(?<sport>[^\s]*)[\s]+(?<interface>[^\s]*)[\s]+|(?<fld3>[^\s]*)[\s]+(?<sport>[^\s]*)[\s]+outlet[\s]+)[\s]+temperature[\s]+crossed[\s]+threshold[\s]+#(?<fld1>[^\(]*)\(=(?<fld2>[^C]*)C\)\.[\s]+(?<result>.*)$" }
			id => "msgParserId529"
			add_field => {
				"event_description" => "port inlet temperature crossed threshold"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId530
	# line in RSA:  { EARL <sport> inlet | module <sport> <interface> } temperature crossed threshold #<fld1>(=<fld22>C). <result>
	else if [logstash][msgparser][id] == "msgParserId530" {
		grok {
			match => { "message" => "^[\s]*([\s]*EARL[\s]+(?<sport>[^\s]*)[\s]+inlet[\s]+|[\s]*module[\s]+(?<sport>[^\s]*)[\s]+(?<interface>[^\s]*)[\s]+)[\s]+temperature[\s]+crossed[\s]+threshold[\s]+#(?<fld1>[^\(]*)\(=(?<fld22>[^C]*)C\)\.[\s]+(?<result>.*)$" }
			id => "msgParserId530"
			add_field => {
				"event_description" => "port inlet temperature crossed threshold"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId531
	# line in RSA: Interface <interface> is now eligible for ingress loadbalancing
	else if [logstash][msgparser][id] == "msgParserId531" {
		dissect {
			mapping => { "message" => "Interface %{interface} is now eligible for ingress loadbalancing" }
			id => "msgParserId531"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId532
	# line in RSA: Config file <filename> size (<info>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId532" {
		dissect {
			mapping => { "message" => "Config file %{filename} size (%{info}) %{event_description}" }
			id => "msgParserId532"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId533
	# line in RSA:  There's an error detected on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId533" {
		dissect {
			mapping => { "message" => "There's an error detected on port %{network_port}" }
			id => "msgParserId533"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId534
	# line in RSA: There's a hardware problem on port <network_port>. <event_description>
	else if [logstash][msgparser][id] == "msgParserId534" {
		dissect {
			mapping => { "message" => "There's a hardware problem on port %{network_port}. %{event_description}" }
			id => "msgParserId534"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId535
	# line in RSA:  The device connected to port <network_port>/<device> has a hardware problem. <result>
	else if [logstash][msgparser][id] == "msgParserId535" {
		dissect {
			mapping => { "message" => "The device connected to port %{network_port}/%{device} has a hardware problem. %{result}" }
			id => "msgParserId535"
			add_field => {
				"event_description" => "hardware problem"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId536
	# line in RSA:  The device connected to <network_port>/<device> is powered up but its link is not up in 5 seconds. <result>
	else if [logstash][msgparser][id] == "msgParserId536" {
		dissect {
			mapping => { "message" => "The device connected to %{network_port}/%{device} is powered up but its link is not up in 5 seconds. %{result}" }
			id => "msgParserId536"
			add_field => {
				"event_description" => "powered up but its link is not up in 5 seconds"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId537
	# line in RSA:  Can't allocate MAC address for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId537" {
		dissect {
			mapping => { "message" => "Can't allocate MAC address for interface %{interface}" }
			id => "msgParserId537"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%CALLTRKR-6-CALL_RECORD" {
		# MESSAGE %CALLTRKR-6-CALL_RECORD:01
		# line in RSA:  ct_hndl=<process_id>, service=<service>, origin=<from>, category=<content_type>, DS0 slot/port/ds1/chan=<fld1>, called=<calling_to>, calling=<calling_from>, resource slot/port=<network_port>, userid=<uid>, ip=<hostip>, mask=<mask>, account id=<fld3>, setup=<starttime>, conn=<fld4>, phys=<fld5>, service=<fld6>, authen=<fld7> init-rx/tx b-rate=<dclass_counter1>, rx/tx chars=<result>, time=<duration>, disc subsys=<fld8>, disc code=<fld9>, disc text=<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ct_hndl=%{process_id}, service=%{service}, origin=%{from}, category=%{content_type}, DS0 slot/port/ds1/chan=%{fld1}, called=%{calling_to}, calling=%{calling_from}, resource slot/port=%{network_port}, userid=%{uid}, ip=%{hostip}, mask=%{mask}, account id=%{fld3}, setup=%{starttime}, conn=%{fld4}, phys=%{fld5}, service=%{fld6}, authen=%{fld7} init-rx/tx b-rate=%{dclass_counter1}, rx/tx chars=%{result}, time=%{duration}, disc subsys=%{fld8}, disc code=%{fld9}, disc text=%{event_description}" }
				id => "message-%CALLTRKR-6-CALL_RECORD:01"
				add_field => {
					"[event][id]" => "%CALLTRKR-6-CALL_RECORD:01"
					"[rsa][message][id1]" => "%CALLTRKR-6-CALL_RECORD:01"
					"[event][categoryid]" => "1602010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %CALLTRKR-6-CALL_RECORD
		# line in RSA:  ct_hndl=<process_id>, service=<service>, origin=<from>, category=<content_type>, DS0 slot/port/ds1/chan=<fld1>, called=<calling_to>, calling=<calling_from>, resource slot/port=<network_port>, userid=<uid>, ip=<hostip>, account id=<fld3>, setup=<starttime>, conn=<fld4>, phys=<fld5>, service=<fld6>, authen=<fld7> init-rx/tx b-rate=<dclass_counter1>, rx/tx chars=<result>, time=<duration>, disc subsys=<fld8>, disc code=<fld9>, disc text=<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ct_hndl=%{process_id}, service=%{service}, origin=%{from}, category=%{content_type}, DS0 slot/port/ds1/chan=%{fld1}, called=%{calling_to}, calling=%{calling_from}, resource slot/port=%{network_port}, userid=%{uid}, ip=%{hostip}, account id=%{fld3}, setup=%{starttime}, conn=%{fld4}, phys=%{fld5}, service=%{fld6}, authen=%{fld7} init-rx/tx b-rate=%{dclass_counter1}, rx/tx chars=%{result}, time=%{duration}, disc subsys=%{fld8}, disc code=%{fld9}, disc text=%{event_description}" }
				id => "message-%CALLTRKR-6-CALL_RECORD"
				add_field => {
					"[event][id]" => "%CALLTRKR-6-CALL_RECORD"
					"[rsa][message][id1]" => "%CALLTRKR-6-CALL_RECORD"
					"[event][categoryid]" => "1602010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId540
	# line in RSA:  Adding interfaces of the same port-group (<fld1>) on <interface> to an etherchannel will not increase the channel throughput
	else if [logstash][msgparser][id] == "msgParserId540" {
		dissect {
			mapping => { "message" => "Adding interfaces of the same port-group (%{fld1}) on %{interface} to an etherchannel will not increase the channel throughput" }
			id => "msgParserId540"
			add_field => {
				"event_description" => "Adding interfaces of the same port-group"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId541
	# line in RSA: Adding interfaces on <info> to an etherchannel will limit channel throughput to 1 Gbps
	else if [logstash][msgparser][id] == "msgParserId541" {
		dissect {
			mapping => { "message" => "Adding interfaces on %{info} to an etherchannel will limit channel throughput to 1 Gbps" }
			id => "msgParserId541"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId542
	# line in RSA:  Downloading microcode <fld1> for <fld2>  version=<version>
	else if [logstash][msgparser][id] == "msgParserId542" {
		dissect {
			mapping => { "message" => "Downloading microcode %{fld1} for %{fld2}  version=%{version}" }
			id => "msgParserId542"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId543
	# line in RSA: Interface <interface>- <info>
	else if [logstash][msgparser][id] == "msgParserId543" {
		dissect {
			mapping => { "message" => "Interface %{interface}- %{info}" }
			id => "msgParserId543"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId544
	# line in RSA: Interface <interface>{ , | - } <event_description>
	else if [logstash][msgparser][id] == "msgParserId544" {
		grok {
			match => { "message" => "^Interface[\s]+(?<interface>[^\s\s]*)([\s]*,[\s]+|[\s]*\-[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId544"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId545
	# line in RSA:  Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId545" {
		dissect {
			mapping => { "message" => "Interface %{interface} %{event_description}" }
			id => "msgParserId545"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId546
	# line in RSA:  Interface <interface>
	else if [logstash][msgparser][id] == "msgParserId546" {
		dissect {
			mapping => { "message" => "Interface %{interface}" }
			id => "msgParserId546"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId547
	# line in RSA:  Interface <interface>
	else if [logstash][msgparser][id] == "msgParserId547" {
		dissect {
			mapping => { "message" => "Interface %{interface}" }
			id => "msgParserId547"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId548
	# line in RSA:  Interface <interface> excessive input error rate
	else if [logstash][msgparser][id] == "msgParserId548" {
		dissect {
			mapping => { "message" => "Interface %{interface} excessive input error rate" }
			id => "msgParserId548"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId549
	# line in RSA: Select bypass switch may be in bypass position for port <network_port>
	else if [logstash][msgparser][id] == "msgParserId549" {
		dissect {
			mapping => { "message" => "Select bypass switch may be in bypass position for port %{network_port}" }
			id => "msgParserId549"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId550
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId550" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId550"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId551
	# line in RSA: Invalid system reset code (<resultcode>)
	else if [logstash][msgparser][id] == "msgParserId551" {
		dissect {
			mapping => { "message" => "Invalid system reset code (%{resultcode})" }
			id => "msgParserId551"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId552
	# line in RSA: Wrap plug is installed on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId552" {
		dissect {
			mapping => { "message" => "Wrap plug is installed on port %{network_port}" }
			id => "msgParserId552"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId553
	# line in RSA: Client <info> not present
	else if [logstash][msgparser][id] == "msgParserId553" {
		dissect {
			mapping => { "message" => "Client %{info} not present" }
			id => "msgParserId553"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId554
	# line in RSA: No session <sessionid>
	else if [logstash][msgparser][id] == "msgParserId554" {
		dissect {
			mapping => { "message" => "No session %{sessionid}" }
			id => "msgParserId554"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId555
	# line in RSA: duplex mismatch discovered on <dinterface> (<fld12>), with <interface> (<fld13>)
	else if [logstash][msgparser][id] == "msgParserId555" {
		dissect {
			mapping => { "message" => "duplex mismatch discovered on %{dinterface} (%{fld12}), with %{interface} (%{fld13})" }
			id => "msgParserId555"
			add_field => {
				"event_description" => "duplex mismatch discovered"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId556
	# line in RSA: Native VLAN mismatch discovered on <dinterface> (<fld12>), with {Switch <interface> | <interface>} (<fld13>)
	else if [logstash][msgparser][id] == "msgParserId556" {
		grok {
			match => { "message" => "^Native[\s]+VLAN[\s]+mismatch[\s]+discovered[\s]+on[\s]+(?<dinterface>[^\s]*)[\s]+\((?<fld12>[^\)]*)\),[\s]+with[\s]+(Switch[\s]+(?<interface>[^\s]*)[\s]+|[\s]*(?<interface>[^\s]*))[\s]+\((?<fld13>[^\)]*)\)$" }
			id => "msgParserId556"
			add_field => {
				"event_description" => "Native VLAN mismatch discovered"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId557
	# line in RSA:  Native vlan mismatch detected on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId557" {
		dissect {
			mapping => { "message" => "Native vlan mismatch detected on port %{network_port}" }
			id => "msgParserId557"
			add_field => {
				"event_description" => "Native vlan mismatch detected on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId558
	# line in RSA:  Device <hostname> discovered of type <obj_type> with port <portname> on incoming port <interface> with ip addr <saddr> and mgmt ip <hostip>
	else if [logstash][msgparser][id] == "msgParserId558" {
		dissect {
			mapping => { "message" => "Device %{hostname} discovered of type %{obj_type} with port %{portname} on incoming port %{interface} with ip addr %{saddr} and mgmt ip %{hostip}" }
			id => "msgParserId558"
			add_field => {
				"event_description" => "CDP Neighbor discovered on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId559
	# line in RSA:  CDP Neighbor <hostname> on port <portname> has been removed
	else if [logstash][msgparser][id] == "msgParserId559" {
		dissect {
			mapping => { "message" => "CDP Neighbor %{hostname} on port %{portname} has been removed" }
			id => "msgParserId559"
			add_field => {
				"event_description" => "CDP Neighbor on port has been removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId560
	# line in RSA:  <info> for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId560" {
		dissect {
			mapping => { "message" => "%{info} for interface %{interface}" }
			id => "msgParserId560"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId561
	# line in RSA: An invalid ces port for port <network_port> is passed to driver in ces conn req
	else if [logstash][msgparser][id] == "msgParserId561" {
		dissect {
			mapping => { "message" => "An invalid ces port for port %{network_port} is passed to driver in ces conn req" }
			id => "msgParserId561"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId562
	# line in RSA:  EITHER CES OR TDM connections possible from port <network_port>.
	else if [logstash][msgparser][id] == "msgParserId562" {
		dissect {
			mapping => { "message" => "EITHER CES OR TDM connections possible from port %{network_port}." }
			id => "msgParserId562"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId563
	# line in RSA: Interface <interface> is <info>.
	else if [logstash][msgparser][id] == "msgParserId563" {
		dissect {
			mapping => { "message" => "Interface %{interface} is %{info}." }
			id => "msgParserId563"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId564
	# line in RSA:  Assertion Failure <event_description>
	else if [logstash][msgparser][id] == "msgParserId564" {
		dissect {
			mapping => { "message" => "Assertion Failure %{event_description}" }
			id => "msgParserId564"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId565
	# line in RSA:  ILLEGAL call to CF API by client (<info>) on the <context> system
	else if [logstash][msgparser][id] == "msgParserId565" {
		dissect {
			mapping => { "message" => "ILLEGAL call to CF API by client (%{info}) on the %{context} system" }
			id => "msgParserId565"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId566
	# line in RSA:  Failed to register with <info>  rc = <resultcode>
	else if [logstash][msgparser][id] == "msgParserId566" {
		dissect {
			mapping => { "message" => "Failed to register with %{info}  rc = %{resultcode}" }
			id => "msgParserId566"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId567
	# line in RSA: Check Pointing is disabled. Client <info> should not be calling any CF API
	else if [logstash][msgparser][id] == "msgParserId567" {
		dissect {
			mapping => { "message" => "Check Pointing is disabled. Client %{info} should not be calling any CF API" }
			id => "msgParserId567"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId568
	# line in RSA: Checkpoint <info> initialization failed in RF state (<fld1>)
	else if [logstash][msgparser][id] == "msgParserId568" {
		dissect {
			mapping => { "message" => "Checkpoint %{info} initialization failed in RF state (%{fld1})" }
			id => "msgParserId568"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId569
	# line in RSA:  Unable allocate resource for CF on (<device>)
	else if [logstash][msgparser][id] == "msgParserId569" {
		dissect {
			mapping => { "message" => "Unable allocate resource for CF on (%{device})" }
			id => "msgParserId569"
			add_field => {
				"event_description" => "Unable to allocate resource for CF"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId570
	# line in RSA:  <info> for port <network_port>
	else if [logstash][msgparser][id] == "msgParserId570" {
		dissect {
			mapping => { "message" => "%{info} for port %{network_port}" }
			id => "msgParserId570"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId571
	# line in RSA: Host appl. names do not match. Host is <hostname>. <info>
	else if [logstash][msgparser][id] == "msgParserId571" {
		dissect {
			mapping => { "message" => "Host appl. names do not match. Host is %{hostname}. %{info}" }
			id => "msgParserId571"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId572
	# line in RSA: Host system names do not match. Host is \<hostname>\. <info>
	else if [logstash][msgparser][id] == "msgParserId572" {
		dissect {
			mapping => { "message" => "Host system names do not match. Host is \%{hostname}\. %{info}" }
			id => "msgParserId572"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId573
	# line in RSA: Workstation system names do not match. Host is \<hostname>\. <info>
	else if [logstash][msgparser][id] == "msgParserId573" {
		dissect {
			mapping => { "message" => "Workstation system names do not match. Host is \%{hostname}\. %{info}" }
			id => "msgParserId573"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%CLEAR-5-COUNTERS" {
		# MESSAGE %CLEAR-5-COUNTERS:01
		# line in RSA:  Clear counter on all interfaces by <username> on <terminal> (<hostip>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Clear counter on all interfaces by %{username} on %{terminal} (%{hostip})" }
				id => "message-%CLEAR-5-COUNTERS:01"
				add_field => {
					"[event][id]" => "%CLEAR-5-COUNTERS:01"
					"[rsa][message][id1]" => "%CLEAR-5-COUNTERS:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %CLEAR-5-COUNTERS
		# line in RSA: Clear counter on { all interfaces | interface <interface> } by <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Clear[\s]+counter[\s]+on[\s]+([\s]*all[\s]+interfaces[\s]+|[\s]*interface[\s]+(?<interface>[^\s]*)[\s]+)[\s]+by[\s]+(?<username>.*)$" }
				id => "message-%CLEAR-5-COUNTERS"
				add_field => {
				"event_description" => "clear interface counter(s)"
					"[event][id]" => "%CLEAR-5-COUNTERS"
					"[rsa][message][id1]" => "%CLEAR-5-COUNTERS"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId576
	# line in RSA:  Command deleted from the NVDB: <action>
	else if [logstash][msgparser][id] == "msgParserId576" {
		dissect {
			mapping => { "message" => "Command deleted from the NVDB: %{action}" }
			id => "msgParserId576"
			add_field => {
				"event_description" => "Command deleted from the NVDB"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId577
	# line in RSA: <info> authentication failed
	else if [logstash][msgparser][id] == "msgParserId577" {
		dissect {
			mapping => { "message" => "%{info} authentication failed" }
			id => "msgParserId577"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId578
	# line in RSA:  <fld1> Invalid interface clns MTU <info>
	else if [logstash][msgparser][id] == "msgParserId578" {
		dissect {
			mapping => { "message" => "%{fld1} Invalid interface clns MTU %{info}" }
			id => "msgParserId578"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId579
	# line in RSA: ISIS: Inconsistent ip prefix and mask({<hostip>/<mask>|<hostip><mask>}) in ISIS LSP: <info>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId580
	# line in RSA: Interface <interface>, encapsulation of ESH failed, HLEN <fld1>
	else if [logstash][msgparser][id] == "msgParserId580" {
		dissect {
			mapping => { "message" => "Interface %{interface}, encapsulation of ESH failed, HLEN %{fld1}" }
			id => "msgParserId580"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId581
	# line in RSA:  <service>: Adjacency to <terminal> (<interface>) <result>, <fld1> 
	else if [logstash][msgparser][id] == "msgParserId581" {
		dissect {
			mapping => { "message" => "%{service}: Adjacency to %{terminal} (%{interface}) %{result}, %{fld1}" }
			id => "msgParserId581"
			add_field => {
				"event_description" => "Adjacency change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId582
	# line in RSA: Selected management interface: <interface> interface number: <info>
	else if [logstash][msgparser][id] == "msgParserId582" {
		dissect {
			mapping => { "message" => "Selected management interface: %{interface} interface number: %{info}" }
			id => "msgParserId582"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId583
	# line in RSA:  Save access intf config: if: <interface>, port num: <network_port>, vlan <vlan>, <info>
	else if [logstash][msgparser][id] == "msgParserId583" {
		dissect {
			mapping => { "message" => "Save access intf config: if: %{interface}, port num: %{network_port}, vlan %{vlan}, %{info}" }
			id => "msgParserId583"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId584
	# line in RSA:  Unable to process chassis inventory for file <filename> <info>
	else if [logstash][msgparser][id] == "msgParserId584" {
		dissect {
			mapping => { "message" => "Unable to process chassis inventory for file %{filename} %{info}" }
			id => "msgParserId584"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId585
	# line in RSA: Unable to process chassis inventory for file <filename> <info>
	else if [logstash][msgparser][id] == "msgParserId585" {
		dissect {
			mapping => { "message" => "Unable to process chassis inventory for file %{filename} %{info}" }
			id => "msgParserId585"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId586
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId586" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId586"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId587
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId587" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId587"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId588
	# line in RSA: DNS lookup failed - query to DNS server <hostip> timed out
	else if [logstash][msgparser][id] == "msgParserId588" {
		dissect {
			mapping => { "message" => "DNS lookup failed - query to DNS server %{hostip} timed out" }
			id => "msgParserId588"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId589
	# line in RSA:  DNS lookup failed - DNS server <hostip> is unreachable
	else if [logstash][msgparser][id] == "msgParserId589" {
		dissect {
			mapping => { "message" => "DNS lookup failed - DNS server %{hostip} is unreachable" }
			id => "msgParserId589"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId590
	# line in RSA: Conflict with CMP IP address <hostip>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId590" {
		dissect {
			mapping => { "message" => "Conflict with CMP IP address %{hostip}, %{event_description}" }
			id => "msgParserId590"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId591
	# line in RSA: Sending DNS response to <daddr> (request was for <hostip>)
	else if [logstash][msgparser][id] == "msgParserId591" {
		dissect {
			mapping => { "message" => "Sending DNS response to %{daddr} (request was for %{hostip})" }
			id => "msgParserId591"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId592
	# line in RSA: Initialization of process <process> failed, unable to <info>
	else if [logstash][msgparser][id] == "msgParserId592" {
		dissect {
			mapping => { "message" => "Initialization of process %{process} failed, unable to %{info}" }
			id => "msgParserId592"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId593
	# line in RSA: An internal software error occurred. <event_description>
	else if [logstash][msgparser][id] == "msgParserId593" {
		dissect {
			mapping => { "message" => "An internal software error occurred. %{event_description}" }
			id => "msgParserId593"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId594
	# line in RSA: <info> chunk pool could not be <context>. Possible memory leak.
	else if [logstash][msgparser][id] == "msgParserId594" {
		dissect {
			mapping => { "message" => "%{info} chunk pool could not be %{context}. Possible memory leak." }
			id => "msgParserId594"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId595
	# line in RSA:  <fld1> path list <info>
	else if [logstash][msgparser][id] == "msgParserId595" {
		dissect {
			mapping => { "message" => "%{fld1} path list %{info}" }
			id => "msgParserId595"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId596
	# line in RSA: Attempt to create <info> table with illegal tableid <fld1>
	else if [logstash][msgparser][id] == "msgParserId596" {
		dissect {
			mapping => { "message" => "Attempt to create %{info} table with illegal tableid %{fld1}" }
			id => "msgParserId596"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId597
	# line in RSA:  Message <info> is ISSU aware so cannot use old FIB API.
	else if [logstash][msgparser][id] == "msgParserId597" {
		dissect {
			mapping => { "message" => "Message %{info} is ISSU aware so cannot use old FIB API." }
			id => "msgParserId597"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId598
	# line in RSA: <info> distribution broker not found - <event_description>
	else if [logstash][msgparser][id] == "msgParserId598" {
		dissect {
			mapping => { "message" => "%{info} distribution broker not found - %{event_description}" }
			id => "msgParserId598"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId599
	# line in RSA: No <info> subblock control decode function for <context>
	else if [logstash][msgparser][id] == "msgParserId599" {
		dissect {
			mapping => { "message" => "No %{info} subblock control decode function for %{context}" }
			id => "msgParserId599"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId600
	# line in RSA: Memory allocation failure for <info>
	else if [logstash][msgparser][id] == "msgParserId600" {
		dissect {
			mapping => { "message" => "Memory allocation failure for %{info}" }
			id => "msgParserId600"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId601
	# line in RSA: Attempt to clear the name of <info> table with tableid <context>
	else if [logstash][msgparser][id] == "msgParserId601" {
		dissect {
			mapping => { "message" => "Attempt to clear the name of %{info} table with tableid %{context}" }
			id => "msgParserId601"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId602
	# line in RSA: No valid paths for prefix <info>
	else if [logstash][msgparser][id] == "msgParserId602" {
		dissect {
			mapping => { "message" => "No valid paths for prefix %{info}" }
			id => "msgParserId602"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId603
	# line in RSA: Hardware in slot <fld1> missing prefix for <info>
	else if [logstash][msgparser][id] == "msgParserId603" {
		dissect {
			mapping => { "message" => "Hardware in slot %{fld1} missing prefix for %{info}" }
			id => "msgParserId603"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId604
	# line in RSA: Slot <fld1> missing prefix for <fld2> in FIB table <info>
	else if [logstash][msgparser][id] == "msgParserId604" {
		dissect {
			mapping => { "message" => "Slot %{fld1} missing prefix for %{fld2} in FIB table %{info}" }
			id => "msgParserId604"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId605
	# line in RSA:  <hostip>/<network_port> is found to resolve via itself during setting up switching info
	else if [logstash][msgparser][id] == "msgParserId605" {
		dissect {
			mapping => { "message" => "%{hostip}/%{network_port} is found to resolve via itself during setting up switching info" }
			id => "msgParserId605"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId606
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId606" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId606"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Unknown"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId607
	# line in RSA: Name <username>| Result: ACCEPT | Host: <hostip>| Policy: <policyname> | Time: <info>
	else if [logstash][msgparser][id] == "msgParserId607" {
		dissect {
			mapping => { "message" => "Name %{username}| Result: ACCEPT | Host: %{hostip}| Policy: %{policyname} | Time: %{info}" }
			id => "msgParserId607"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId608
	# line in RSA: Name <username>| Result: DENY | Host: <hostip>| Time: <info>
	else if [logstash][msgparser][id] == "msgParserId608" {
		dissect {
			mapping => { "message" => "Name %{username}| Result: DENY | Host: %{hostip}| Time: %{info}" }
			id => "msgParserId608"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId609
	# line in RSA: Resetting Module <dclass_counter1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId609" {
		dissect {
			mapping => { "message" => "Resetting Module %{dclass_counter1} %{event_description}" }
			id => "msgParserId609"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId610
	# line in RSA:  Module <dclass_counter1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId610" {
		dissect {
			mapping => { "message" => "Module %{dclass_counter1} %{event_description}" }
			id => "msgParserId610"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId611
	# line in RSA:  Module <info> <event_description>
	else if [logstash][msgparser][id] == "msgParserId611" {
		dissect {
			mapping => { "message" => "Module %{info} %{event_description}" }
			id => "msgParserId611"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId612
	# line in RSA:  Resetting Module <dclass_counter1> for software recovery, Reason: <result>
	else if [logstash][msgparser][id] == "msgParserId612" {
		dissect {
			mapping => { "message" => "Resetting Module %{dclass_counter1} for software recovery, Reason: %{result}" }
			id => "msgParserId612"
			add_field => {
				"event_description" => "Resetting Module for software recovery"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId613
	# line in RSA:  <info>
	else if [logstash][msgparser][id] == "msgParserId613" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId613"
			add_field => {
				"event_description" => "Test Info"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId614
	# line in RSA:  <service>[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId614" {
		dissect {
			mapping => { "message" => "%{service}[%{process_id}]: %{info}" }
			id => "msgParserId614"
			add_field => {
				"event_description" => "TestFabricCh0Health"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId615
	# line in RSA: An attempt made to send giant packet on <vlan> (<fld1> bytes from <fld2>, max allowed <fld3>) 
	else if [logstash][msgparser][id] == "msgParserId615" {
		dissect {
			mapping => { "message" => "An attempt made to send giant packet on %{vlan} (%{fld1} bytes from %{fld2}, max allowed %{fld3})" }
			id => "msgParserId615"
			add_field => {
				"event_description" => "attempt made to send giant packet on vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId616
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId616" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId616"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId617
	# line in RSA:  Controller <interface>, changed state to <result> 
	else if [logstash][msgparser][id] == "msgParserId617" {
		dissect {
			mapping => { "message" => "Controller %{interface}, changed state to %{result}" }
			id => "msgParserId617"
			add_field => {
				"event_description" => "Controller state change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId618
	# line in RSA:  <fld1> <saddr> - <daddr>
	else if [logstash][msgparser][id] == "msgParserId618" {
		dissect {
			mapping => { "message" => "%{fld1} %{saddr} - %{daddr}" }
			id => "msgParserId618"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId619
	# line in RSA:  <fld1> <saddr> - <daddr> <info>
	else if [logstash][msgparser][id] == "msgParserId619" {
		dissect {
			mapping => { "message" => "%{fld1} %{saddr} - %{daddr} %{info}" }
			id => "msgParserId619"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId620
	# line in RSA:  <fld1> <saddr>(<sport>) - <daddr>(<dport>)
	else if [logstash][msgparser][id] == "msgParserId620" {
		dissect {
			mapping => { "message" => "%{fld1} %{saddr}(%{sport}) - %{daddr}(%{dport})" }
			id => "msgParserId620"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId621
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId621" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId621"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId622
	# line in RSA: Missing <info> driver support on Standby. Active=<event_description>
	else if [logstash][msgparser][id] == "msgParserId622" {
		dissect {
			mapping => { "message" => "Missing %{info} driver support on Standby. Active=%{event_description}" }
			id => "msgParserId622"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId623
	# line in RSA: Mismatch in <info> driver versions. Active=<event_description>
	else if [logstash][msgparser][id] == "msgParserId623" {
		dissect {
			mapping => { "message" => "Mismatch in %{info} driver versions. Active=%{event_description}" }
			id => "msgParserId623"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId624
	# line in RSA: <info> software subsystem. <event_description>
	else if [logstash][msgparser][id] == "msgParserId624" {
		dissect {
			mapping => { "message" => "%{info} software subsystem. %{event_description}" }
			id => "msgParserId624"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId625
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId625" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId625"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "Configuration"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId626
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId626" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId626"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "Certificate"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId627
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId627" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId627"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId628
	# line in RSA:  IKE message from <saddr> has no SA and is not an initialization offer
	else if [logstash][msgparser][id] == "msgParserId628" {
		dissect {
			mapping => { "message" => "IKE message from %{saddr} has no SA and is not an initialization offer" }
			id => "msgParserId628"
			add_field => {
				"event_description" => "IKE message has no SA and is not an initialization offer"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId629
	# line in RSA:  pcp: <bytes> byte packet failed to decompress pcp: dest_addr=<daddr>- src_addr=<saddr>
	else if [logstash][msgparser][id] == "msgParserId629" {
		dissect {
			mapping => { "message" => "pcp: %{bytes} byte packet failed to decompress pcp: dest_addr=%{daddr}- src_addr=%{saddr}" }
			id => "msgParserId629"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%CRYPTO-4-RECVD_PKT_INV_IDENTITY" {
		# MESSAGE %CRYPTO-4-RECVD_PKT_INV_IDENTITY:01
		# line in RSA:  <fld1> (ip) dest_addr= <daddr>, src_addr= <saddr>, prot= <protocol> (ident) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} (ip) dest_addr= %{daddr}, src_addr= %{saddr}, prot= %{protocol} (ident) %{info}" }
				id => "message-%CRYPTO-4-RECVD_PKT_INV_IDENTITY:01"
				add_field => {
					"[event][id]" => "%CRYPTO-4-RECVD_PKT_INV_IDENTITY:01"
					"[rsa][message][id1]" => "%CRYPTO-4-RECVD_PKT_INV_IDENTITY:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %CRYPTO-4-RECVD_PKT_INV_IDENTITY
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-%CRYPTO-4-RECVD_PKT_INV_IDENTITY"
				add_field => {
					"[event][id]" => "%CRYPTO-4-RECVD_PKT_INV_IDENTITY"
					"[rsa][message][id1]" => "%CRYPTO-4-RECVD_PKT_INV_IDENTITY"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId631
	# line in RSA: ipsec check access: identity not allowed by ACL (ip) dest_addr= <daddr> src_addr= <saddr> prot= <protocol>
	else if [logstash][msgparser][id] == "msgParserId631" {
		dissect {
			mapping => { "message" => "ipsec check access: identity not allowed by ACL (ip) dest_addr= %{daddr} src_addr= %{saddr} prot= %{protocol}" }
			id => "msgParserId631"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId632
	# line in RSA: decapsulate: packet missing <info> destadr=<daddr> actual prot=<protocol>
	else if [logstash][msgparser][id] == "msgParserId632" {
		dissect {
			mapping => { "message" => "decapsulate: packet missing %{info} destadr=%{daddr} actual prot=%{protocol}" }
			id => "msgParserId632"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId633
	# line in RSA:  decaps: rec'd IPSEC packet has invalid spi for destaddr=<daddr> prot=<protocol> spi=<info>
	else if [logstash][msgparser][id] == "msgParserId633" {
		dissect {
			mapping => { "message" => "decaps: rec'd IPSEC packet has invalid spi for destaddr=%{daddr} prot=%{protocol} spi=%{info}" }
			id => "msgParserId633"
			add_field => {
				"event_description" => "rec'd IPSEC packet has invalid spi"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId634
	# line in RSA: decapsulate: packet has bad <info> length destadr=<daddr> prot=<protocol> len=<context>
	else if [logstash][msgparser][id] == "msgParserId634" {
		dissect {
			mapping => { "message" => "decapsulate: packet has bad %{info} length destadr=%{daddr} prot=%{protocol} len=%{context}" }
			id => "msgParserId634"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId635
	# line in RSA:  Rec'd packet not an IPSEC packet.<space> (ip) { vrf/dest_addr= <dhost>/<daddr>, | dest_addr=<daddr> } src_addr= <saddr> { , prot= | prot= } <protocol>
	else if [logstash][msgparser][id] == "msgParserId635" {
		grok {
			match => { "message" => "^[\s]*Rec'd[\s]+packet[\s]+not[\s]+an[\s]+IPSEC[\s]+packet\.(?<space>[^\s]*)[\s]+\(ip\)[\s]+([\s]*vrf/dest_addr=[\s]+(?<dhost>[^/]*)/(?<daddr>[^,]*),[\s]+|[\s]*dest_addr=(?<daddr>[^\s]*)[\s]+)[\s]+src_addr=[\s]+(?<saddr>[^\s]*)[\s]+([\s]*,[\s]+prot=[\s]+|[\s]*prot=[\s]+)[\s]+(?<protocol>.*)$" }
			id => "msgParserId635"
			add_field => {
				"event_description" => "Received packet not an IPSEC packet"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%CRYPTO-5-GM_REGSTER" {
		# MESSAGE %CRYPTO-5-GM_REGSTER
		# line in RSA: Start registration to <info> for group <group> using address <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Start registration to %{info} for group %{group} using address %{hostip}" }
				id => "message-%CRYPTO-5-GM_REGSTER"
				add_field => {
					"[event][id]" => "%CRYPTO-5-GM_REGSTER"
					"[rsa][message][id1]" => "%CRYPTO-5-GM_REGSTER"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %CRYPTO-5-GM_REGSTER:01
		# line in RSA: Start registration for group <group> using address <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Start registration for group %{group} using address %{hostip}" }
				id => "message-%CRYPTO-5-GM_REGSTER:01"
				add_field => {
					"[event][id]" => "%CRYPTO-5-GM_REGSTER:01"
					"[rsa][message][id1]" => "%CRYPTO-5-GM_REGSTER:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId638
	# line in RSA: IKE sa's if any, for vip <hostip> will change <info>
	else if [logstash][msgparser][id] == "msgParserId638" {
		dissect {
			mapping => { "message" => "IKE sa's if any, for vip %{hostip} will change %{info}" }
			id => "msgParserId638"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId639
	# line in RSA: IPSec sa's if any <fld1>, for vip <hostip> will change <info>
	else if [logstash][msgparser][id] == "msgParserId639" {
		dissect {
			mapping => { "message" => "IPSec sa's if any %{fld1}, for vip %{hostip} will change %{info}" }
			id => "msgParserId639"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId640
	# line in RSA: Crypto tunnel is <event_state>.  Peer <hostip>:<network_port> <info> 
	else if [logstash][msgparser][id] == "msgParserId640" {
		dissect {
			mapping => { "message" => "Crypto tunnel is %{event_state}.  Peer %{hostip}:%{network_port} %{info}" }
			id => "msgParserId640"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId641
	# line in RSA: (<fld1>)  User=<username>  Group=<group>  Client_public_addr=<saddr>  Server_public_addr= <daddr>
	else if [logstash][msgparser][id] == "msgParserId641" {
		dissect {
			mapping => { "message" => "(%{fld1})  User=%{username}  Group=%{group}  Client_public_addr=%{saddr}  Server_public_addr= %{daddr}" }
			id => "msgParserId641"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId642
	# line in RSA: (<fld1>)  User=<username>  Group=<group>  Client_public_addr=<saddr>  Server_public_addr= <daddr> NEM_Remote_Subnets=<info>
	else if [logstash][msgparser][id] == "msgParserId642" {
		dissect {
			mapping => { "message" => "(%{fld1})  User=%{username}  Group=%{group}  Client_public_addr=%{saddr}  Server_public_addr= %{daddr} NEM_Remote_Subnets=%{info}" }
			id => "msgParserId642"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId643
	# line in RSA:  Authentication method <authmethod> failed with host <hostip>
	else if [logstash][msgparser][id] == "msgParserId643" {
		dissect {
			mapping => { "message" => "Authentication method %{authmethod} failed with host %{hostip}" }
			id => "msgParserId643"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId644
	# line in RSA: Peer <hostip> <event_description>
	else if [logstash][msgparser][id] == "msgParserId644" {
		dissect {
			mapping => { "message" => "Peer %{hostip} %{event_description}" }
			id => "msgParserId644"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId645
	# line in RSA:  Processing of Aggressive mode failed with peer at <daddr>
	else if [logstash][msgparser][id] == "msgParserId645" {
		dissect {
			mapping => { "message" => "Processing of Aggressive mode failed with peer at %{daddr}" }
			id => "msgParserId645"
			add_field => {
				"event_description" => "Aggressive mode failure with peer"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId646
	# line in RSA:  IKE SA manually deleted. Do '<action>' <result>.
	else if [logstash][msgparser][id] == "msgParserId646" {
		dissect {
			mapping => { "message" => "IKE SA manually deleted. Do '%{action}' %{result}." }
			id => "msgParserId646"
			add_field => {
				"event_description" => "IKE SA manually deleted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId647
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId647" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId647"
			add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId648
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId648" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId648"
			add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId649
	# line in RSA:  Crypto RSA ISSU client <info> transform failed for <event_description>
	else if [logstash][msgparser][id] == "msgParserId649" {
		dissect {
			mapping => { "message" => "Crypto RSA ISSU client %{info} transform failed for %{event_description}" }
			id => "msgParserId649"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId650
	# line in RSA:  Module <info> error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId650" {
		dissect {
			mapping => { "message" => "Module %{info} error: %{event_description}" }
			id => "msgParserId650"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId651
	# line in RSA:  Module <info> memory error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId651" {
		dissect {
			mapping => { "message" => "Module %{info} memory error: %{event_description}" }
			id => "msgParserId651"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId652
	# line in RSA:  Module <info> FT error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId652" {
		dissect {
			mapping => { "message" => "Module %{info} FT error: %{event_description}" }
			id => "msgParserId652"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId653
	# line in RSA:  Module <info> configuration reload failed: <event_description>
	else if [logstash][msgparser][id] == "msgParserId653" {
		dissect {
			mapping => { "message" => "Module %{info} configuration reload failed: %{event_description}" }
			id => "msgParserId653"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId654
	# line in RSA:  Module <info> script error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId654" {
		dissect {
			mapping => { "message" => "Module %{info} script error: %{event_description}" }
			id => "msgParserId654"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId655
	# line in RSA:  Module <info> unexpected error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId655" {
		dissect {
			mapping => { "message" => "Module %{info} unexpected error: %{event_description}" }
			id => "msgParserId655"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId656
	# line in RSA:  Module <info> ARP configuration error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId656" {
		dissect {
			mapping => { "message" => "Module %{info} ARP configuration error: %{event_description}" }
			id => "msgParserId656"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId657
	# line in RSA:  Module <info>duplicate ID: <event_description>
	else if [logstash][msgparser][id] == "msgParserId657" {
		dissect {
			mapping => { "message" => "Module %{info}duplicate ID: %{event_description}" }
			id => "msgParserId657"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId658
	# line in RSA:  Module <info> configuration warning: <event_description>
	else if [logstash][msgparser][id] == "msgParserId658" {
		dissect {
			mapping => { "message" => "Module %{info} configuration warning: %{event_description}" }
			id => "msgParserId658"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId659
	# line in RSA:  Module <info> invalid ID: <event_description>
	else if [logstash][msgparser][id] == "msgParserId659" {
		dissect {
			mapping => { "message" => "Module %{info} invalid ID: %{event_description}" }
			id => "msgParserId659"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId660
	# line in RSA:  Module <info> probe configuration error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId660" {
		dissect {
			mapping => { "message" => "Module %{info} probe configuration error: %{event_description}" }
			id => "msgParserId660"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId661
	# line in RSA:  Module <info> FT warning: <event_description>
	else if [logstash][msgparser][id] == "msgParserId661" {
		dissect {
			mapping => { "message" => "Module %{info} FT warning: %{event_description}" }
			id => "msgParserId661"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId662
	# line in RSA:  Module <info> regular expression memory error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId662" {
		dissect {
			mapping => { "message" => "Module %{info} regular expression memory error: %{event_description}" }
			id => "msgParserId662"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId663
	# line in RSA:  Module <info> script warning: <event_description>
	else if [logstash][msgparser][id] == "msgParserId663" {
		dissect {
			mapping => { "message" => "Module %{info} script warning: %{event_description}" }
			id => "msgParserId663"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId664
	# line in RSA:  Module <info> warning: <event_description>
	else if [logstash][msgparser][id] == "msgParserId664" {
		dissect {
			mapping => { "message" => "Module %{info} warning: %{event_description}" }
			id => "msgParserId664"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId665
	# line in RSA:  Module <info> gateway state changed: <event_description>
	else if [logstash][msgparser][id] == "msgParserId665" {
		dissect {
			mapping => { "message" => "Module %{info} gateway state changed: %{event_description}" }
			id => "msgParserId665"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId666
	# line in RSA:  Module <info> info: <event_description>
	else if [logstash][msgparser][id] == "msgParserId666" {
		dissect {
			mapping => { "message" => "Module %{info} info: %{event_description}" }
			id => "msgParserId666"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId667
	# line in RSA:  Module <info> FT info: <event_description>
	else if [logstash][msgparser][id] == "msgParserId667" {
		dissect {
			mapping => { "message" => "Module %{info} FT info: %{event_description}" }
			id => "msgParserId667"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId668
	# line in RSA:   Module <dclass_counter1> server state changed: <service>: <result>
	else if [logstash][msgparser][id] == "msgParserId668" {
		dissect {
			mapping => { "message" => "Module %{dclass_counter1} server state changed: %{service}: %{result}" }
			id => "msgParserId668"
			add_field => {
				"event_description" => "Module server state changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId669
	# line in RSA: Module <info> script info: <event_description>
	else if [logstash][msgparser][id] == "msgParserId669" {
		dissect {
			mapping => { "message" => "Module %{info} script info: %{event_description}" }
			id => "msgParserId669"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId670
	# line in RSA:  Invalid PORT <network_port>
	else if [logstash][msgparser][id] == "msgParserId670" {
		dissect {
			mapping => { "message" => "Invalid PORT %{network_port}" }
			id => "msgParserId670"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId671
	# line in RSA:  Invalid VCD <info> or Port: <event_description>
	else if [logstash][msgparser][id] == "msgParserId671" {
		dissect {
			mapping => { "message" => "Invalid VCD %{info} or Port: %{event_description}" }
			id => "msgParserId671"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId672
	# line in RSA: Interface <interface> provisioning ch(<info>) failed:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId672" {
		dissect {
			mapping => { "message" => "Interface %{interface} provisioning ch(%{info}) failed:  %{event_description}" }
			id => "msgParserId672"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId673
	# line in RSA: Interface <interface> unprovisioning failed:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId673" {
		dissect {
			mapping => { "message" => "Interface %{interface} unprovisioning failed:  %{event_description}" }
			id => "msgParserId673"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId674
	# line in RSA:  config error on port <network_port>(<context>) cmd <info>
	else if [logstash][msgparser][id] == "msgParserId674" {
		dissect {
			mapping => { "message" => "config error on port %{network_port}(%{context}) cmd %{info}" }
			id => "msgParserId674"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId675
	# line in RSA: Port <network_port>- <event_description>
	else if [logstash][msgparser][id] == "msgParserId675" {
		dissect {
			mapping => { "message" => "Port %{network_port}- %{event_description}" }
			id => "msgParserId675"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId676
	# line in RSA:  CCB command error (cmd  <info> arg <param>) on port <network_port> channel <context>
	else if [logstash][msgparser][id] == "msgParserId676" {
		dissect {
			mapping => { "message" => "CCB command error (cmd  %{info} arg %{param}) on port %{network_port} channel %{context}" }
			id => "msgParserId676"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId677
	# line in RSA: Interface <interface> provisioning <fld1> failed: <info>
	else if [logstash][msgparser][id] == "msgParserId677" {
		dissect {
			mapping => { "message" => "Interface %{interface} provisioning %{fld1} failed: %{info}" }
			id => "msgParserId677"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId678
	# line in RSA: Interface <interface> unprovisioning failed: <info>
	else if [logstash][msgparser][id] == "msgParserId678" {
		dissect {
			mapping => { "message" => "Interface %{interface} unprovisioning failed: %{info}" }
			id => "msgParserId678"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId679
	# line in RSA: Process <process> <info>
	else if [logstash][msgparser][id] == "msgParserId679" {
		dissect {
			mapping => { "message" => "Process %{process} %{info}" }
			id => "msgParserId679"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId680
	# line in RSA: Interface config failed on port <network_port> cmd <info> retval <resultcode>
	else if [logstash][msgparser][id] == "msgParserId680" {
		dissect {
			mapping => { "message" => "Interface config failed on port %{network_port} cmd %{info} retval %{resultcode}" }
			id => "msgParserId680"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId681
	# line in RSA: Failed to open IPC port '<network_port>' <info>
	else if [logstash][msgparser][id] == "msgParserId681" {
		dissect {
			mapping => { "message" => "Failed to open IPC port '%{network_port}' %{info}" }
			id => "msgParserId681"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId682
	# line in RSA:  Failed to allocate SCP packet <info>
	else if [logstash][msgparser][id] == "msgParserId682" {
		dissect {
			mapping => { "message" => "Failed to allocate SCP packet %{info}" }
			id => "msgParserId682"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId683
	# line in RSA: Failed to allocate <bytes> bytes memory needed for CWAN SP module initialization
	else if [logstash][msgparser][id] == "msgParserId683" {
		dissect {
			mapping => { "message" => "Failed to allocate %{bytes} bytes memory needed for CWAN SP module initialization" }
			id => "msgParserId683"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId684
	# line in RSA: Unknown CWAN pseudo wire on vlan <vlan>, port <network_port>
	else if [logstash][msgparser][id] == "msgParserId684" {
		dissect {
			mapping => { "message" => "Unknown CWAN pseudo wire on vlan %{vlan}, port %{network_port}" }
			id => "msgParserId684"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId685
	# line in RSA: interface type <info> slot <fld1> port <network_port> <context>
	else if [logstash][msgparser][id] == "msgParserId685" {
		dissect {
			mapping => { "message" => "interface type %{info} slot %{fld1} port %{network_port} %{context}" }
			id => "msgParserId685"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId686
	# line in RSA: Failed to create <process> process
	else if [logstash][msgparser][id] == "msgParserId686" {
		dissect {
			mapping => { "message" => "Failed to create %{process} process" }
			id => "msgParserId686"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId687
	# line in RSA:  Bad LTL index <fld1> for vlan <vlan> local_vc_label <info>
	else if [logstash][msgparser][id] == "msgParserId687" {
		dissect {
			mapping => { "message" => "Bad LTL index %{fld1} for vlan %{vlan} local_vc_label %{info}" }
			id => "msgParserId687"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId688
	# line in RSA: Interface <interface> Port U<network_port> changed state to <event_state>
	else if [logstash][msgparser][id] == "msgParserId688" {
		dissect {
			mapping => { "message" => "Interface %{interface} Port U%{network_port} changed state to %{event_state}" }
			id => "msgParserId688"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId689
	# line in RSA: slot=<fld1> port=<network_port> <event_description>
	else if [logstash][msgparser][id] == "msgParserId689" {
		dissect {
			mapping => { "message" => "slot=%{fld1} port=%{network_port} %{event_description}" }
			id => "msgParserId689"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId690
	# line in RSA: Policy map name <info> not configured for DOCSIS qos flow <context>
	else if [logstash][msgparser][id] == "msgParserId690" {
		dissect {
			mapping => { "message" => "Policy map name %{info} not configured for DOCSIS qos flow %{context}" }
			id => "msgParserId690"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId691
	# line in RSA: Skipped diag for port <network_port>
	else if [logstash][msgparser][id] == "msgParserId691" {
		dissect {
			mapping => { "message" => "Skipped diag for port %{network_port}" }
			id => "msgParserId691"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId692
	# line in RSA:  Could not update encapsulation on <info> to <context>
	else if [logstash][msgparser][id] == "msgParserId692" {
		dissect {
			mapping => { "message" => "Could not update encapsulation on %{info} to %{context}" }
			id => "msgParserId692"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId693
	# line in RSA: Attempted to install HWIDB for port <network_port>
	else if [logstash][msgparser][id] == "msgParserId693" {
		dissect {
			mapping => { "message" => "Attempted to install HWIDB for port %{network_port}" }
			id => "msgParserId693"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId694
	# line in RSA: ATM (port <network_port>):  <info>
	else if [logstash][msgparser][id] == "msgParserId694" {
		dissect {
			mapping => { "message" => "ATM (port %{network_port}):  %{info}" }
			id => "msgParserId694"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId695
	# line in RSA:  FRDM336 disabling link (Port no: <network_port> <info>) failed: <event_description>
	else if [logstash][msgparser][id] == "msgParserId695" {
		dissect {
			mapping => { "message" => "FRDM336 disabling link (Port no: %{network_port} %{info}) failed: %{event_description}" }
			id => "msgParserId695"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId696
	# line in RSA:  FRDM336 enabling link (Port no: <network_port> <info>) failed: <event_description>
	else if [logstash][msgparser][id] == "msgParserId696" {
		dissect {
			mapping => { "message" => "FRDM336 enabling link (Port no: %{network_port} %{info}) failed: %{event_description}" }
			id => "msgParserId696"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId697
	# line in RSA:  NULL VC instance for VC <info> on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId697" {
		dissect {
			mapping => { "message" => "NULL VC instance for VC %{info} on port %{network_port}" }
			id => "msgParserId697"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId698
	# line in RSA:  Error in reading GBIC serial ID (port <network_port>) (error code <resultcode>)
	else if [logstash][msgparser][id] == "msgParserId698" {
		dissect {
			mapping => { "message" => "Error in reading GBIC serial ID (port %{network_port}) (error code %{resultcode})" }
			id => "msgParserId698"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId699
	# line in RSA: GBIC in port <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId699" {
		dissect {
			mapping => { "message" => "GBIC in port %{network_port} %{info}" }
			id => "msgParserId699"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId700
	# line in RSA:  TX Fault on GBIC port <network_port>
	else if [logstash][msgparser][id] == "msgParserId700" {
		dissect {
			mapping => { "message" => "TX Fault on GBIC port %{network_port}" }
			id => "msgParserId700"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId701
	# line in RSA: Cannot determine port from interface <interface> for <info>
	else if [logstash][msgparser][id] == "msgParserId701" {
		dissect {
			mapping => { "message" => "Cannot determine port from interface %{interface} for %{info}" }
			id => "msgParserId701"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId702
	# line in RSA:  Unknown MAC address operation <info> on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId702" {
		dissect {
			mapping => { "message" => "Unknown MAC address operation %{info} on port %{network_port}" }
			id => "msgParserId702"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId703
	# line in RSA: Failed to <info> on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId703" {
		dissect {
			mapping => { "message" => "Failed to %{info} on port %{network_port}" }
			id => "msgParserId703"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId704
	# line in RSA: Port <info> failed on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId704" {
		dissect {
			mapping => { "message" => "Port %{info} failed on port %{network_port}" }
			id => "msgParserId704"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId705
	# line in RSA:  <severity>: Write failed: <result>.<info> - <agent>[<process_id>]
	else if [logstash][msgparser][id] == "msgParserId705" {
		dissect {
			mapping => { "message" => "%{severity}: Write failed: %{result}.%{info} - %{agent}[%{process_id}]" }
			id => "msgParserId705"
			add_field => {
				"event_description" => "fatal - Write failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId706
	# line in RSA:  error: <service>: Authentication failure for <username> from <saddr> 
	else if [logstash][msgparser][id] == "msgParserId706" {
		dissect {
			mapping => { "message" => "error: %{service}: Authentication failure for %{username} from %{saddr}" }
			id => "msgParserId706"
			add_field => {
				"event_description" => "Authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId707
	# line in RSA:  Unknown mode <info> configured for server <hostname>
	else if [logstash][msgparser][id] == "msgParserId707" {
		dissect {
			mapping => { "message" => "Unknown mode %{info} configured for server %{hostname}" }
			id => "msgParserId707"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId708
	# line in RSA:  Bad remote LU <info> configured for server <hostname>
	else if [logstash][msgparser][id] == "msgParserId708" {
		dissect {
			mapping => { "message" => "Bad remote LU %{info} configured for server %{hostname}" }
			id => "msgParserId708"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId709
	# line in RSA: Bad TP name configured for server <hostname>
	else if [logstash][msgparser][id] == "msgParserId709" {
		dissect {
			mapping => { "message" => "Bad TP name configured for server %{hostname}" }
			id => "msgParserId709"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId710
	# line in RSA:  DRDA protocol error from server <hostname>, <info>
	else if [logstash][msgparser][id] == "msgParserId710" {
		dissect {
			mapping => { "message" => "DRDA protocol error from server %{hostname}, %{info}" }
			id => "msgParserId710"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId711
	# line in RSA: Client <saddr> connected to server <hostname> has timed out after <info>.
	else if [logstash][msgparser][id] == "msgParserId711" {
		dissect {
			mapping => { "message" => "Client %{saddr} connected to server %{hostname} has timed out after %{info}." }
			id => "msgParserId711"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId712
	# line in RSA: APPC security failed- client <saddr> using userid <uid> for server <hostname>
	else if [logstash][msgparser][id] == "msgParserId712" {
		dissect {
			mapping => { "message" => "APPC security failed- client %{saddr} using userid %{uid} for server %{hostname}" }
			id => "msgParserId712"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Logon"
				"ec_theme" => "Password"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId713
	# line in RSA: APPC security failed- client <saddr> using userid <uid> for server <hostname>
	else if [logstash][msgparser][id] == "msgParserId713" {
		dissect {
			mapping => { "message" => "APPC security failed- client %{saddr} using userid %{uid} for server %{hostname}" }
			id => "msgParserId713"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId714
	# line in RSA:  APPC security failed- client <saddr> using userid <uid> for server <hostname>
	else if [logstash][msgparser][id] == "msgParserId714" {
		dissect {
			mapping => { "message" => "APPC security failed- client %{saddr} using userid %{uid} for server %{hostname}" }
			id => "msgParserId714"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId715
	# line in RSA:  APPC security failed- client <saddr> using userid <uid> for server <hostname>
	else if [logstash][msgparser][id] == "msgParserId715" {
		dissect {
			mapping => { "message" => "APPC security failed- client %{saddr} using userid %{uid} for server %{hostname}" }
			id => "msgParserId715"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Logon"
				"ec_theme" => "Password"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId716
	# line in RSA: All WLM routes on server <hostname> have become unavailable. Recovery is in progress.
	else if [logstash][msgparser][id] == "msgParserId716" {
		dissect {
			mapping => { "message" => "All WLM routes on server %{hostname} have become unavailable. Recovery is in progress." }
			id => "msgParserId716"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId717
	# line in RSA: WLM transport type mismatch on server <hostname>.
	else if [logstash][msgparser][id] == "msgParserId717" {
		dissect {
			mapping => { "message" => "WLM transport type mismatch on server %{hostname}." }
			id => "msgParserId717"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId718
	# line in RSA:  Not able to open flash:<filename>
	else if [logstash][msgparser][id] == "msgParserId718" {
		dissect {
			mapping => { "message" => "Not able to open flash:%{filename}" }
			id => "msgParserId718"
			add_field => {
				"event_description" => "Not able to open flash"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId719
	# line in RSA: Interface <interface> failed to remove Addr:<info>
	else if [logstash][msgparser][id] == "msgParserId719" {
		dissect {
			mapping => { "message" => "Interface %{interface} failed to remove Addr:%{info}" }
			id => "msgParserId719"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId720
	# line in RSA:  <service> Service has not been registered with DFP.
	else if [logstash][msgparser][id] == "msgParserId720" {
		dissect {
			mapping => { "message" => "%{service} Service has not been registered with DFP." }
			id => "msgParserId720"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId721
	# line in RSA:  Service <service> - Listen failed
	else if [logstash][msgparser][id] == "msgParserId721" {
		dissect {
			mapping => { "message" => "Service %{service} - Listen failed" }
			id => "msgParserId721"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId722
	# line in RSA: <info> Application did not set pointer
	else if [logstash][msgparser][id] == "msgParserId722" {
		dissect {
			mapping => { "message" => "%{info} Application did not set pointer" }
			id => "msgParserId722"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId723
	# line in RSA: Manager <info>: Service <service> - Could not parse message
	else if [logstash][msgparser][id] == "msgParserId723" {
		dissect {
			mapping => { "message" => "Manager %{info}: Service %{service} - Could not parse message" }
			id => "msgParserId723"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId724
	# line in RSA:  Could not queue request for <info> for service <service>
	else if [logstash][msgparser][id] == "msgParserId724" {
		dissect {
			mapping => { "message" => "Could not queue request for %{info} for service %{service}" }
			id => "msgParserId724"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId725
	# line in RSA: <info> Application sent too many values
	else if [logstash][msgparser][id] == "msgParserId725" {
		dissect {
			mapping => { "message" => "%{info} Application sent too many values" }
			id => "msgParserId725"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId726
	# line in RSA: The DFP packet is too small from manager <info> service <service>.
	else if [logstash][msgparser][id] == "msgParserId726" {
		dissect {
			mapping => { "message" => "The DFP packet is too small from manager %{info} service %{service}." }
			id => "msgParserId726"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId727
	# line in RSA: Manager <info>:     Service <service> - Too many read errors
	else if [logstash][msgparser][id] == "msgParserId727" {
		dissect {
			mapping => { "message" => "Manager %{info}:     Service %{service} - Too many read errors" }
			id => "msgParserId727"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId728
	# line in RSA: Service <service> is already intialized <event_description>
	else if [logstash][msgparser][id] == "msgParserId728" {
		dissect {
			mapping => { "message" => "Service %{service} is already intialized %{event_description}" }
			id => "msgParserId728"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId729
	# line in RSA: Manager <info> Service <service> - Socket_recv error <fld1>
	else if [logstash][msgparser][id] == "msgParserId729" {
		dissect {
			mapping => { "message" => "Manager %{info} Service %{service} - Socket_recv error %{fld1}" }
			id => "msgParserId729"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId730
	# line in RSA: The string <info> exceeds 15 characters - too long for service name
	else if [logstash][msgparser][id] == "msgParserId730" {
		dissect {
			mapping => { "message" => "The string %{info} exceeds 15 characters - too long for service name" }
			id => "msgParserId730"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId731
	# line in RSA: Service <service> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId731" {
		dissect {
			mapping => { "message" => "Service %{service} - %{event_description}" }
			id => "msgParserId731"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId732
	# line in RSA: Manager <info> Service <service> - Unknown connection state <event_state>
	else if [logstash][msgparser][id] == "msgParserId732" {
		dissect {
			mapping => { "message" => "Manager %{info} Service %{service} - Unknown connection state %{event_state}" }
			id => "msgParserId732"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId733
	# line in RSA: Manager <info> Service <service> - Unknown message type <context>
	else if [logstash][msgparser][id] == "msgParserId733" {
		dissect {
			mapping => { "message" => "Manager %{info} Service %{service} - Unknown message type %{context}" }
			id => "msgParserId733"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId734
	# line in RSA: Function <info> in DHCP client failed to initialize: <event_description>
	else if [logstash][msgparser][id] == "msgParserId734" {
		dissect {
			mapping => { "message" => "Function %{info} in DHCP client failed to initialize: %{event_description}" }
			id => "msgParserId734"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId735
	# line in RSA:  Interface <interface> assigned DHCP address <hostip> mask <mask> hostname <hostname>
	else if [logstash][msgparser][id] == "msgParserId735" {
		dissect {
			mapping => { "message" => "Interface %{interface} assigned DHCP address %{hostip} mask %{mask} hostname %{hostname}" }
			id => "msgParserId735"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId736
	# line in RSA: Function <info> in DHCP server failed to initialize: <event_description>
	else if [logstash][msgparser][id] == "msgParserId736" {
		dissect {
			mapping => { "message" => "Function %{info} in DHCP server failed to initialize: %{event_description}" }
			id => "msgParserId736"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId737
	# line in RSA:  DHCP address conflict:  client <smacaddr> declined <saddr>.
	else if [logstash][msgparser][id] == "msgParserId737" {
		dissect {
			mapping => { "message" => "DHCP address conflict:  client %{smacaddr} declined %{saddr}." }
			id => "msgParserId737"
			add_field => {
				"event_description" => "DHCP address conflict"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId738
	# line in RSA:  DHCP address conflict:  server pinged <saddr>
	else if [logstash][msgparser][id] == "msgParserId738" {
		dissect {
			mapping => { "message" => "DHCP address conflict:  server pinged %{saddr}" }
			id => "msgParserId738"
			add_field => {
				"event_description" => "DHCP address conflict"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId739
	# line in RSA:  The interface <interface> is receiving more than the threshold set
	else if [logstash][msgparser][id] == "msgParserId739" {
		dissect {
			mapping => { "message" => "The interface %{interface} is receiving more than the threshold set" }
			id => "msgParserId739"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId740
	# line in RSA:  The interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId740" {
		dissect {
			mapping => { "message" => "The interface %{interface} %{info}" }
			id => "msgParserId740"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId741
	# line in RSA:  The interface <interface> is not able to insert opt82 into the packet because of insufficient space in the packet
	else if [logstash][msgparser][id] == "msgParserId741" {
		dissect {
			mapping => { "message" => "The interface %{interface} is not able to insert opt82 into the packet because of insufficient space in the packet" }
			id => "msgParserId741"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId742
	# line in RSA:  DHCP_SNOOPING drop message with mismatched source interface, <result>, message type: <obj_type>, MAC sa: <macaddr>
	else if [logstash][msgparser][id] == "msgParserId742" {
		dissect {
			mapping => { "message" => "DHCP_SNOOPING drop message with mismatched source interface, %{result}, message type: %{obj_type}, MAC sa: %{macaddr}" }
			id => "msgParserId742"
			add_field => {
				"event_description" => "DHCP_SNOOPING drop message with mismatched source interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId743
	# line in RSA:  DHCP_SNOOPING drop message because { <result>, message type: <obj_type>, chaddr: <fld1>, MAC sa: <macaddr> |<result>}
	else if [logstash][msgparser][id] == "msgParserId743" {
		grok {
			match => { "message" => "^[\s]*DHCP_SNOOPING[\s]+drop[\s]+message[\s]+because[\s]+([\s]*(?<result>[^,]*),[\s]+message[\s]+type:[\s]+(?<obj_type>[^,]*),[\s]+chaddr:[\s]+(?<fld1>[^,]*),[\s]+MAC[\s]+sa:[\s]+(?<macaddr>[^\s]*)[\s]+|(?<result>.*))$" }
			id => "msgParserId743"
			add_field => {
				"event_description" => "DHCP_SNOOPING message dropped"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId744
	# line in RSA:  DHCP_SNOOPING drop message with non-zero giaddr or option82 value on untrusted port, message type: <obj_type>, MAC sa: <macaddr>
	else if [logstash][msgparser][id] == "msgParserId744" {
		dissect {
			mapping => { "message" => "DHCP_SNOOPING drop message with non-zero giaddr or option82 value on untrusted port, message type: %{obj_type}, MAC sa: %{macaddr}" }
			id => "msgParserId744"
			add_field => {
				"event_description" => "DHCP_SNOOPING drop message with non-zero giaddr or option82 value on untrusted port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId745
	# line in RSA:  DHCP_SNOOPING drop message on untrusted port, message type: <obj_type>, MAC sa: <macaddr>
	else if [logstash][msgparser][id] == "msgParserId745" {
		dissect {
			mapping => { "message" => "DHCP_SNOOPING drop message on untrusted port, message type: %{obj_type}, MAC sa: %{macaddr}" }
			id => "msgParserId745"
			add_field => {
				"event_description" => "drop message on untrusted port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId746
	# line in RSA:  Create process <process> failed
	else if [logstash][msgparser][id] == "msgParserId746" {
		dissect {
			mapping => { "message" => "Create process %{process} failed" }
			id => "msgParserId746"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId747
	# line in RSA:  Invalid port number : <info>
	else if [logstash][msgparser][id] == "msgParserId747" {
		dissect {
			mapping => { "message" => "Invalid port number : %{info}" }
			id => "msgParserId747"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId748
	# line in RSA: Module <info>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId748" {
		dissect {
			mapping => { "message" => "Module %{info}: %{event_description}" }
			id => "msgParserId748"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId749
	# line in RSA: Module <info> <event_description>
	else if [logstash][msgparser][id] == "msgParserId749" {
		dissect {
			mapping => { "message" => "Module %{info} %{event_description}" }
			id => "msgParserId749"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId750
	# line in RSA:  <device>: Online Diagnostics detected a Major Error. <info>
	else if [logstash][msgparser][id] == "msgParserId750" {
		dissect {
			mapping => { "message" => "%{device}: Online Diagnostics detected a Major Error. %{info}" }
			id => "msgParserId750"
			add_field => {
				"event_description" => "Online Diagnostics detected a Major Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId751
	# line in RSA:  <device>: Online Diagnostics detected a Minor Error. <info>
	else if [logstash][msgparser][id] == "msgParserId751" {
		dissect {
			mapping => { "message" => "%{device}: Online Diagnostics detected a Minor Error. %{info}" }
			id => "msgParserId751"
			add_field => {
				"event_description" => "Online Diagnostics detected a Minor Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId752
	# line in RSA:  Module <dclass_counter1>: Passed Online Diagnostics
	else if [logstash][msgparser][id] == "msgParserId752" {
		dissect {
			mapping => { "message" => "Module %{dclass_counter1}: Passed Online Diagnostics" }
			id => "msgParserId752"
			add_field => {
				"event_description" => "Module Passed Online Diagnostics"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId753
	# line in RSA:  Module <dclass_counter1>: Running Minimum Diagnostics
	else if [logstash][msgparser][id] == "msgParserId753" {
		dissect {
			mapping => { "message" => "Module %{dclass_counter1}: Running Minimum Diagnostics" }
			id => "msgParserId753"
			add_field => {
				"event_description" => "Running Minimum Diagnostics on Module"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId754
	# line in RSA:  Module <dclass_counter1>: Running Minimal Diagnostics
	else if [logstash][msgparser][id] == "msgParserId754" {
		dissect {
			mapping => { "message" => "Module %{dclass_counter1}: Running Minimal Diagnostics" }
			id => "msgParserId754"
			add_field => {
				"event_description" => "Running Minimal Diagnostics on Module"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId755
	# line in RSA: DRP <hostip> was down <info>
	else if [logstash][msgparser][id] == "msgParserId755" {
		dissect {
			mapping => { "message" => "DRP %{hostip} was down %{info}" }
			id => "msgParserId755"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId756
	# line in RSA: Excessive HTTP request overloading: dropping HTTP req from <<cli <hostip>>.
	else if [logstash][msgparser][id] == "msgParserId756" {
		dissect {
			mapping => { "message" => "Excessive HTTP request overloading: dropping HTTP req from <cli %{hostip}>." }
			id => "msgParserId756"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId757
	# line in RSA: server <hostip> (on port <network_port>) has gone <disposition>
	else if [logstash][msgparser][id] == "msgParserId757" {
		dissect {
			mapping => { "message" => "server %{hostip} (on port %{network_port}) has gone %{disposition}" }
			id => "msgParserId757"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId758
	# line in RSA:  answer type <context> host <hostname> cli <saddr> <info>
	else if [logstash][msgparser][id] == "msgParserId758" {
		dissect {
			mapping => { "message" => "answer type %{context} host %{hostname} cli %{saddr} %{info}" }
			id => "msgParserId758"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId759
	# line in RSA: query type <context> host <hostname> cli <saddr> <info>
	else if [logstash][msgparser][id] == "msgParserId759" {
		dissect {
			mapping => { "message" => "query type %{context} host %{hostname} cli %{saddr} %{info}" }
			id => "msgParserId759"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId760
	# line in RSA:  answer type <context> host <hostname> cli <saddr> id# <info> svr <daddr>
	else if [logstash][msgparser][id] == "msgParserId760" {
		dissect {
			mapping => { "message" => "answer type %{context} host %{hostname} cli %{saddr} id# %{info} svr %{daddr}" }
			id => "msgParserId760"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId761
	# line in RSA:  no answer for (host <hostname> cli <saddr> type <info>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId761" {
		dissect {
			mapping => { "message" => "no answer for (host %{hostname} cli %{saddr} type %{info}) %{event_description}" }
			id => "msgParserId761"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId762
	# line in RSA:  select <hostip> (host <hostname> cli <saddr> type <info> id# <fld1>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId762" {
		dissect {
			mapping => { "message" => "select %{hostip} (host %{hostname} cli %{saddr} type %{info} id# %{fld1}) %{event_description}" }
			id => "msgParserId762"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId763
	# line in RSA: <info> failed for <hostip> on <context>
	else if [logstash][msgparser][id] == "msgParserId763" {
		dissect {
			mapping => { "message" => "%{info} failed for %{hostip} on %{context}" }
			id => "msgParserId763"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId764
	# line in RSA: Client <saddr> on <info>
	else if [logstash][msgparser][id] == "msgParserId764" {
		dissect {
			mapping => { "message" => "Client %{saddr} on %{info}" }
			id => "msgParserId764"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId765
	# line in RSA:  <info> <hostip> is <event_state>
	else if [logstash][msgparser][id] == "msgParserId765" {
		dissect {
			mapping => { "message" => "%{info} %{hostip} is %{event_state}" }
			id => "msgParserId765"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId766
	# line in RSA:  <info>-<hostip> socket is <event_state>
	else if [logstash][msgparser][id] == "msgParserId766" {
		dissect {
			mapping => { "message" => "%{info}-%{hostip} socket is %{event_state}" }
			id => "msgParserId766"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId767
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5> <hostip>
	else if [logstash][msgparser][id] == "msgParserId767" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5} %{hostip}" }
			id => "msgParserId767"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId768
	# line in RSA:  DNS View <context> used for client <saddr>/<sport>, querying <info>
	else if [logstash][msgparser][id] == "msgParserId768" {
		dissect {
			mapping => { "message" => "DNS View %{context} used for client %{saddr}/%{sport}, querying %{info}" }
			id => "msgParserId768"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId769
	# line in RSA: {Low available memory: |Excessive DNS query overloading: } dropping TCP request from
	else if [logstash][msgparser][id] == "msgParserId769" {
		grok {
			match => { "message" => "^(Low[\s]+available[\s]+memory:[\s]+|Excessive[\s]+DNS[\s]+query[\s]+overloading:[\s]+)[\s]+dropping[\s]+TCP[\s]+request[\s]+from$" }
			id => "msgParserId769"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId770
	# line in RSA: Error while running fsck on the file <filename>
	else if [logstash][msgparser][id] == "msgParserId770" {
		dissect {
			mapping => { "message" => "Error while running fsck on the file %{filename}" }
			id => "msgParserId770"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId771
	# line in RSA: Error during close of the file <filename>. <info>
	else if [logstash][msgparser][id] == "msgParserId771" {
		dissect {
			mapping => { "message" => "Error during close of the file %{filename}. %{info}" }
			id => "msgParserId771"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId772
	# line in RSA: IP Source Tracker has released address <hostip> from the tracked list due to a conflict.
	else if [logstash][msgparser][id] == "msgParserId772" {
		dissect {
			mapping => { "message" => "IP Source Tracker has released address %{hostip} from the tracked list due to a conflict." }
			id => "msgParserId772"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId773
	# line in RSA:  Interface <interface>, Associated To AP <fld1> <fld2> [<result>]
	else if [logstash][msgparser][id] == "msgParserId773" {
		dissect {
			mapping => { "message" => "Interface %{interface}, Associated To AP %{fld1} %{fld2} [%{result}]" }
			id => "msgParserId773"
			add_field => {
				"event_description" => "Interface associated to AP - Uplink Established"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%DOT11-6-ASSOC" {
		# MESSAGE %DOT11-6-ASSOC
		# line in RSA:   Interface <interface>, Station <smacaddr> Associated <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, Station %{smacaddr} Associated %{info}" }
				id => "message-%DOT11-6-ASSOC"
				add_field => {
					"[event][id]" => "%DOT11-6-ASSOC"
					"[rsa][message][id1]" => "%DOT11-6-ASSOC"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %DOT11-6-ASSOC:01
		# line in RSA:   Interface <interface>, Station <smacaddr> <dmacaddr> Reassociated KEY_MGMT[<result>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, Station %{smacaddr} %{dmacaddr} Reassociated KEY_MGMT[%{result}]" }
				id => "message-%DOT11-6-ASSOC:01"
				add_field => {
					"[event][id]" => "%DOT11-6-ASSOC:01"
					"[rsa][message][id1]" => "%DOT11-6-ASSOC:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %DOT11-6-ASSOC:02
		# line in RSA:   Interface <interface>, Station <smacaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{interface}, Station %{smacaddr}" }
				id => "message-%DOT11-6-ASSOC:02"
				add_field => {
					"[event][id]" => "%DOT11-6-ASSOC:02"
					"[rsa][message][id1]" => "%DOT11-6-ASSOC:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId777
	# line in RSA:  Interface <interface>, Deauthenticating Station <smacaddr> { Reason: <result> | <space> }
	else if [logstash][msgparser][id] == "msgParserId777" {
		grok {
			match => { "message" => "^[\s]*Interface[\s]+(?<interface>[^,]*),[\s]+Deauthenticating[\s]+Station[\s]+(?<smacaddr>[^\s]*)[\s]+([\s]*Reason:[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
			id => "msgParserId777"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId778
	# line in RSA:  { Station <smacaddr> Roamed to <dmacaddr> | Station <smacaddr>. }
	else if [logstash][msgparser][id] == "msgParserId778" {
		grok {
			match => { "message" => "^[\s]*([\s]*Station[\s]+(?<smacaddr>[^\s]*)[\s]+Roamed[\s]+to[\s]+(?<dmacaddr>[^\s]*)[\s]+|[\s]*Station[\s]+(?<smacaddr>[^\.]*)\.[\s]+)$" }
			id => "msgParserId778"
			add_field => {
				"event_description" => "Station roaning"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId779
	# line in RSA:  Interface <interface> radio temperature returned to normal
	else if [logstash][msgparser][id] == "msgParserId779" {
		dissect {
			mapping => { "message" => "Interface %{interface} radio temperature returned to normal" }
			id => "msgParserId779"
			add_field => {
				"event_description" => "radio temperature returned to normal on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId780
	# line in RSA:  Rogue AP <smacaddr> reported. <space> Reason: <result>
	else if [logstash][msgparser][id] == "msgParserId780" {
		dissect {
			mapping => { "message" => "Rogue AP %{smacaddr} reported. %{space} Reason: %{result}" }
			id => "msgParserId780"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId781
	# line in RSA:  Station <smacaddr> Authentication failed
	else if [logstash][msgparser][id] == "msgParserId781" {
		dissect {
			mapping => { "message" => "Station %{smacaddr} Authentication failed" }
			id => "msgParserId781"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId782
	# line in RSA: Station <smacaddr> <event_description>
	else if [logstash][msgparser][id] == "msgParserId782" {
		dissect {
			mapping => { "message" => "Station %{smacaddr} %{event_description}" }
			id => "msgParserId782"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId783
	# line in RSA:  Port <network_port> <event_description>
	else if [logstash][msgparser][id] == "msgParserId783" {
		dissect {
			mapping => { "message" => "Port %{network_port} %{event_description}" }
			id => "msgParserId783"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId784
	# line in RSA: Port <network_port> <event_description>
	else if [logstash][msgparser][id] == "msgParserId784" {
		dissect {
			mapping => { "message" => "Port %{network_port} %{event_description}" }
			id => "msgParserId784"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId785
	# line in RSA:  The VLAN <vlan> <event_description>
	else if [logstash][msgparser][id] == "msgParserId785" {
		dissect {
			mapping => { "message" => "The VLAN %{vlan} %{event_description}" }
			id => "msgParserId785"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId786
	# line in RSA: The VLAN <vlan> <event_description>
	else if [logstash][msgparser][id] == "msgParserId786" {
		dissect {
			mapping => { "message" => "The VLAN %{vlan} %{event_description}" }
			id => "msgParserId786"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId787
	# line in RSA: VLAN <vlan> <event_description>
	else if [logstash][msgparser][id] == "msgParserId787" {
		dissect {
			mapping => { "message" => "VLAN %{vlan} %{event_description}" }
			id => "msgParserId787"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId788
	# line in RSA:  Authentication failed for client {(Unknown MAC)|(<macaddr>)} on Interface {<interface>/<fld1>/<network_port> AuditSessionID <sessionid>|<interface>/<network_port> AuditSessionID <sessionid>|<interface>/<network_port>|<interface>}
	else if [logstash][msgparser][id] == "msgParserId788" {
		grok {
			match => { "message" => "^[\s]*Authentication[\s]+failed[\s]+for[\s]+client[\s]+(\(Unknown[\s]+MAC\)|\((?<macaddr>[^\)]*)\))[\s]+on[\s]+Interface[\s]+((?<interface>[^/]*)/(?<fld1>[^/]*)/(?<network_port>[^\s]*)[\s]+AuditSessionID[\s]+(?<sessionid>.*)|(?<interface>[^/]*)/(?<network_port>[^\s]*)[\s]+AuditSessionID[\s]+(?<sessionid>.*)|(?<interface>[^/]*)/(?<network_port>.*)|(?<interface>.*))$" }
			id => "msgParserId788"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failed for client"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId789
	# line in RSA:  Security violation on the interface <interface>, <info>
	else if [logstash][msgparser][id] == "msgParserId789" {
		dissect {
			mapping => { "message" => "Security violation on the interface %{interface}, %{info}" }
			id => "msgParserId789"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%DOT1X-5-SUCCESS" {
		# MESSAGE %DOT1X-5-SUCCESS
		# line in RSA: Authentication successful for client (<info>) on Interface <interface> AuditSessionID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authentication successful for client (%{info}) on Interface %{interface} AuditSessionID %{sessionid}" }
				id => "message-%DOT1X-5-SUCCESS"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "%DOT1X-5-SUCCESS"
					"[rsa][message][id1]" => "%DOT1X-5-SUCCESS"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %DOT1X-5-SUCCESS:01
		# line in RSA: Authentication successful for client (<info>) on Interface <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authentication successful for client (%{info}) on Interface %{interface}" }
				id => "message-%DOT1X-5-SUCCESS:01"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "%DOT1X-5-SUCCESS:01"
					"[rsa][message][id1]" => "%DOT1X-5-SUCCESS:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%DOT1X_SWITCH-5-ERR_ADDING_ADDRESS" {
		# MESSAGE %DOT1X_SWITCH-5-ERR_ADDING_ADDRESS
		# line in RSA:  Unable to add address <info> on <interface> AuditSessionID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unable to add address %{info} on %{interface} AuditSessionID %{sessionid}" }
				id => "message-%DOT1X_SWITCH-5-ERR_ADDING_ADDRESS"
				add_field => {
					"[event][id]" => "%DOT1X_SWITCH-5-ERR_ADDING_ADDRESS"
					"[rsa][message][id1]" => "%DOT1X_SWITCH-5-ERR_ADDING_ADDRESS"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %DOT1X_SWITCH-5-ERR_ADDING_ADDRESS:01
		# line in RSA:  Unable to add address <info> on <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unable to add address %{info} on %{interface}" }
				id => "message-%DOT1X_SWITCH-5-ERR_ADDING_ADDRESS:01"
				add_field => {
					"[event][id]" => "%DOT1X_SWITCH-5-ERR_ADDING_ADDRESS:01"
					"[rsa][message][id1]" => "%DOT1X_SWITCH-5-ERR_ADDING_ADDRESS:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId794
	# line in RSA:  Attempt to assign primary VLAN <vlan> to 802.1x port <network_port> AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId794" {
		dissect {
			mapping => { "message" => "Attempt to assign primary VLAN %{vlan} to 802.1x port %{network_port} AuditSessionID %{sessionid}" }
			id => "msgParserId794"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId795
	# line in RSA:  Attempt to assign invalid secondary VLAN <vlan> to PVLAN host 802.1x port <network_port> AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId795" {
		dissect {
			mapping => { "message" => "Attempt to assign invalid secondary VLAN %{vlan} to PVLAN host 802.1x port %{network_port} AuditSessionID %{sessionid}" }
			id => "msgParserId795"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId796
	# line in RSA: Attempt to assign VLAN <vlan>, whose primary VLAN does not exist or is shutdown, to 802.1x port <network_port> AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId796" {
		dissect {
			mapping => { "message" => "Attempt to assign VLAN %{vlan}, whose primary VLAN does not exist or is shutdown, to 802.1x port %{network_port} AuditSessionID %{sessionid}" }
			id => "msgParserId796"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId797
	# line in RSA:  Attempt to assign non-existent VLAN <vlan> to dot1x port <network_port>
	else if [logstash][msgparser][id] == "msgParserId797" {
		dissect {
			mapping => { "message" => "Attempt to assign non-existent VLAN %{vlan} to dot1x port %{network_port}" }
			id => "msgParserId797"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId798
	# line in RSA:  Attempt to assign secondary VLAN <vlan> to non-PVLAN host 802.1x port <network_port> AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId798" {
		dissect {
			mapping => { "message" => "Attempt to assign secondary VLAN %{vlan} to non-PVLAN host 802.1x port %{network_port} AuditSessionID %{sessionid}" }
			id => "msgParserId798"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId799
	# line in RSA:  Attempt to assign VLAN <vlan> to 802.1x port <network_port>, which is configured as a SPAN destination AuditSessionID <sessionid>
	else if [logstash][msgparser][id] == "msgParserId799" {
		dissect {
			mapping => { "message" => "Attempt to assign VLAN %{vlan} to 802.1x port %{network_port}, which is configured as a SPAN destination AuditSessionID %{sessionid}" }
			id => "msgParserId799"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId800
	# line in RSA: Data VLAN <vlan> on port <interface> cannot be equivalent to the Voice VLAN
	else if [logstash][msgparser][id] == "msgParserId800" {
		dissect {
			mapping => { "message" => "Data VLAN %{vlan} on port %{interface} cannot be equivalent to the Voice VLAN" }
			id => "msgParserId800"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId801
	# line in RSA:  Attempt to assign non-existent or shutdown VLAN <vlan> to 802.1x port <interface>
	else if [logstash][msgparser][id] == "msgParserId801" {
		dissect {
			mapping => { "message" => "Attempt to assign non-existent or shutdown VLAN %{vlan} to 802.1x port %{interface}" }
			id => "msgParserId801"
			add_field => {
				"event_description" => "Attempt to assign non-existent or shutdown VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId802
	# line in RSA: Out of range PCI port <network_port>
	else if [logstash][msgparser][id] == "msgParserId802" {
		dissect {
			mapping => { "message" => "Out of range PCI port %{network_port}" }
			id => "msgParserId802"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId803
	# line in RSA:  Adding client <info> after DSIP has started.
	else if [logstash][msgparser][id] == "msgParserId803" {
		dissect {
			mapping => { "message" => "Adding client %{info} after DSIP has started." }
			id => "msgParserId803"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId804
	# line in RSA:  Insufficient DSP resources for timeslot <info> on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId804" {
		dissect {
			mapping => { "message" => "Insufficient DSP resources for timeslot %{info} on port %{network_port}" }
			id => "msgParserId804"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId805
	# line in RSA:  Connect out to host <hostname> failed
	else if [logstash][msgparser][id] == "msgParserId805" {
		dissect {
			mapping => { "message" => "Connect out to host %{hostname} failed" }
			id => "msgParserId805"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId806
	# line in RSA: LU <info> received a Notify Neg Resp from host <hostname>
	else if [logstash][msgparser][id] == "msgParserId806" {
		dissect {
			mapping => { "message" => "LU %{info} received a Notify Neg Resp from host %{hostname}" }
			id => "msgParserId806"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId807
	# line in RSA:  Bad size for file [<filename>] during downloading firmware
	else if [logstash][msgparser][id] == "msgParserId807" {
		dissect {
			mapping => { "message" => "Bad size for file [%{filename}] during downloading firmware" }
			id => "msgParserId807"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId808
	# line in RSA:  cannot open file <filename> <info>
	else if [logstash][msgparser][id] == "msgParserId808" {
		dissect {
			mapping => { "message" => "cannot open file %{filename} %{info}" }
			id => "msgParserId808"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId809
	# line in RSA: Erroneous record received from <saddr>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId809" {
		dissect {
			mapping => { "message" => "Erroneous record received from %{saddr}: %{event_description}" }
			id => "msgParserId809"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId810
	# line in RSA: Port <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId810" {
		dissect {
			mapping => { "message" => "Port %{network_port} %{info}" }
			id => "msgParserId810"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId811
	# line in RSA:  Unable to perform trunk negotiation on port <network_port> because of VTP domain mismatch.
	else if [logstash][msgparser][id] == "msgParserId811" {
		dissect {
			mapping => { "message" => "Unable to perform trunk negotiation on port %{network_port} because of VTP domain mismatch." }
			id => "msgParserId811"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId812
	# line in RSA: Port <network_port> has become non-trunk
	else if [logstash][msgparser][id] == "msgParserId812" {
		dissect {
			mapping => { "message" => "Port %{network_port} has become non-trunk" }
			id => "msgParserId812"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId813
	# line in RSA:  Port <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId813" {
		dissect {
			mapping => { "message" => "Port %{network_port} %{info}" }
			id => "msgParserId813"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId814
	# line in RSA:  Port <portname> has become non-trunk
	else if [logstash][msgparser][id] == "msgParserId814" {
		dissect {
			mapping => { "message" => "Port %{portname} has become non-trunk" }
			id => "msgParserId814"
			add_field => {
				"event_description" => "Port has become non-trunk"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId815
	# line in RSA: Interface <interface> going down and <info> links exist
	else if [logstash][msgparser][id] == "msgParserId815" {
		dissect {
			mapping => { "message" => "Interface %{interface} going down and %{info} links exist" }
			id => "msgParserId815"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId816
	# line in RSA:  <fld1> <fld2>: Neighbor <hostip> (<fld3>) is <disposition>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId816" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2}: Neighbor %{hostip} (%{fld3}) is %{disposition}: %{event_description}" }
			id => "msgParserId816"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId817
	# line in RSA: IP=<hostip>| HOST=<hostname>
	else if [logstash][msgparser][id] == "msgParserId817" {
		dissect {
			mapping => { "message" => "IP=%{hostip}| HOST=%{hostname}" }
			id => "msgParserId817"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId818
	# line in RSA:  IP=<hostname>| MPPE_RECV_KEY_LENGTH=<info>
	else if [logstash][msgparser][id] == "msgParserId818" {
		dissect {
			mapping => { "message" => "IP=%{hostname}| MPPE_RECV_KEY_LENGTH=%{info}" }
			id => "msgParserId818"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId819
	# line in RSA:  Netflow TCAM threshold exceeded
	else if [logstash][msgparser][id] == "msgParserId819" {
		dissect {
			mapping => { "message" => "Netflow TCAM threshold exceeded" }
			id => "msgParserId819"
			add_field => {
				"event_description" => "Netflow TCAM threshold exceeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId820
	# line in RSA:  Netflow TCAM threshold exceeded, <info>
	else if [logstash][msgparser][id] == "msgParserId820" {
		dissect {
			mapping => { "message" => "Netflow TCAM threshold exceeded, %{info}" }
			id => "msgParserId820"
			add_field => {
				"event_description" => "Netflow TCAM threshold exceeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId821
	# line in RSA:  <interface> is not compatible with <service> and will be suspended (<result>)
	else if [logstash][msgparser][id] == "msgParserId821" {
		dissect {
			mapping => { "message" => "%{interface} is not compatible with %{service} and will be suspended (%{result})" }
			id => "msgParserId821"
			add_field => {
				"event_description" => "port not compatible"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId822
	# line in RSA:  <sinterface> suspended: incompatible partner port with <dinterface>
	else if [logstash][msgparser][id] == "msgParserId822" {
		dissect {
			mapping => { "message" => "%{sinterface} suspended: incompatible partner port with %{dinterface}" }
			id => "msgParserId822"
			add_field => {
				"event_description" => "Port suspended"
				"result" => "incompatible partner port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId823
	# line in RSA:  Channel protocol mismatch for interface <interface> in group <group>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId823" {
		dissect {
			mapping => { "message" => "Channel protocol mismatch for interface %{interface} in group %{group}: %{event_description}" }
			id => "msgParserId823"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId824
	# line in RSA: Command rejected: the interface <interface> is already part of a channel with a different type of protocol enabled.
	else if [logstash][msgparser][id] == "msgParserId824" {
		dissect {
			mapping => { "message" => "Command rejected: the interface %{interface} is already part of a channel with a different type of protocol enabled." }
			id => "msgParserId824"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId825
	# line in RSA: Command rejected: the interface <interface> is already part of a channel
	else if [logstash][msgparser][id] == "msgParserId825" {
		dissect {
			mapping => { "message" => "Command rejected: the interface %{interface} is already part of a channel" }
			id => "msgParserId825"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId826
	# line in RSA:  <interface> suspended: LACP currently not enabled on the remote port.
	else if [logstash][msgparser][id] == "msgParserId826" {
		dissect {
			mapping => { "message" => "%{interface} suspended: LACP currently not enabled on the remote port." }
			id => "msgParserId826"
			add_field => {
				"event_description" => "port suspended"
				"result" => "LACP currently not enabled on the remote port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId827
	# line in RSA:  Shutting down <interface> as its <result>
	else if [logstash][msgparser][id] == "msgParserId827" {
		dissect {
			mapping => { "message" => "Shutting down %{interface} as its %{result}" }
			id => "msgParserId827"
			add_field => {
				"event_description" => "Shutting down interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId828
	# line in RSA:  <interface> will remain down as its port-channel <fld1> is admin-down
	else if [logstash][msgparser][id] == "msgParserId828" {
		dissect {
			mapping => { "message" => "%{interface} will remain down as its port-channel %{fld1} is admin-down" }
			id => "msgParserId828"
			add_field => {
				"event_description" => "port will remain down"
				"result" => "port-channel is admin-down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId829
	# line in RSA: <interface> is not compatible with <event_description>
	else if [logstash][msgparser][id] == "msgParserId829" {
		dissect {
			mapping => { "message" => "%{interface} is not compatible with %{event_description}" }
			id => "msgParserId829"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId830
	# line in RSA: <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId830" {
		dissect {
			mapping => { "message" => "%{interface} %{event_description}" }
			id => "msgParserId830"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId831
	# line in RSA: <interface> is <event_description>
	else if [logstash][msgparser][id] == "msgParserId831" {
		dissect {
			mapping => { "message" => "%{interface} is %{event_description}" }
			id => "msgParserId831"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId832
	# line in RSA: <interface> suspended: <event_description>
	else if [logstash][msgparser][id] == "msgParserId832" {
		dissect {
			mapping => { "message" => "%{interface} suspended: %{event_description}" }
			id => "msgParserId832"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId833
	# line in RSA:  Shutting down <interface> as its port-channel is admin-down
	else if [logstash][msgparser][id] == "msgParserId833" {
		dissect {
			mapping => { "message" => "Shutting down %{interface} as its port-channel is admin-down" }
			id => "msgParserId833"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId834
	# line in RSA: Interface <interface> left the port-channel <info>
	else if [logstash][msgparser][id] == "msgParserId834" {
		dissect {
			mapping => { "message" => "Interface %{interface} left the port-channel %{info}" }
			id => "msgParserId834"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId835
	# line in RSA: IPv6 on interface <interface> added.
	else if [logstash][msgparser][id] == "msgParserId835" {
		dissect {
			mapping => { "message" => "IPv6 on interface %{interface} added." }
			id => "msgParserId835"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId836
	# line in RSA: IPv6 on interface <interface> failed.
	else if [logstash][msgparser][id] == "msgParserId836" {
		dissect {
			mapping => { "message" => "IPv6 on interface %{interface} failed." }
			id => "msgParserId836"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId837
	# line in RSA:  No pdb for <hostip>
	else if [logstash][msgparser][id] == "msgParserId837" {
		dissect {
			mapping => { "message" => "No pdb for %{hostip}" }
			id => "msgParserId837"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId838
	# line in RSA:  eigrp-<group> [<group_object>] (<obj_type>) IP-EIGRP(<fld1>) <fld2>: Neighbor <daddr> (<interface>) is <event_state>: <result>
	else if [logstash][msgparser][id] == "msgParserId838" {
		dissect {
			mapping => { "message" => "eigrp-%{group} [%{group_object}] (%{obj_type}) IP-EIGRP(%{fld1}) %{fld2}: Neighbor %{daddr} (%{interface}) is %{event_state}: %{result}" }
			id => "msgParserId838"
			add_field => {
				"event_description" => "eigrp neighbor change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId839
	# line in RSA:  The EM function (<process>) searched for the specified open event (<event_type>)
	else if [logstash][msgparser][id] == "msgParserId839" {
		dissect {
			mapping => { "message" => "The EM function (%{process}) searched for the specified open event (%{event_type})" }
			id => "msgParserId839"
			add_field => {
				"event_description" => "EM function searched for a specified open event"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId840
	# line in RSA: IP=<saddr>| Bad Packet=<packets>
	else if [logstash][msgparser][id] == "msgParserId840" {
		dissect {
			mapping => { "message" => "IP=%{saddr}| Bad Packet=%{packets}" }
			id => "msgParserId840"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId841
	# line in RSA:  PROCESS=<process>| ACTION=<event_state>
	else if [logstash][msgparser][id] == "msgParserId841" {
		dissect {
			mapping => { "message" => "PROCESS=%{process}| ACTION=%{event_state}" }
			id => "msgParserId841"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId842
	# line in RSA:  EAPoUDP socket binding fails for PORT=<network_port>. <info>
	else if [logstash][msgparser][id] == "msgParserId842" {
		dissect {
			mapping => { "message" => "EAPoUDP socket binding fails for PORT=%{network_port}. %{info}" }
			id => "msgParserId842"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId843
	# line in RSA: UNKNOWN Event for HOST=<saddr>| Event=<event_description>
	else if [logstash][msgparser][id] == "msgParserId843" {
		dissect {
			mapping => { "message" => "UNKNOWN Event for HOST=%{saddr}| Event=%{event_description}" }
			id => "msgParserId843"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId844
	# line in RSA: Unable to initiate validation for HOST=<saddr>| INTERFACE=<interface>.
	else if [logstash][msgparser][id] == "msgParserId844" {
		dissect {
			mapping => { "message" => "Unable to initiate validation for HOST=%{saddr}| INTERFACE=%{interface}." }
			id => "msgParserId844"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId845
	# line in RSA: HOST=<saddr>| Version=<version>
	else if [logstash][msgparser][id] == "msgParserId845" {
		dissect {
			mapping => { "message" => "HOST=%{saddr}| Version=%{version}" }
			id => "msgParserId845"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId846
	# line in RSA: Received an EAP failure response from AAA for host <saddr>
	else if [logstash][msgparser][id] == "msgParserId846" {
		dissect {
			mapping => { "message" => "Received an EAP failure response from AAA for host %{saddr}" }
			id => "msgParserId846"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId847
	# line in RSA: <disposition>|<saddr>
	else if [logstash][msgparser][id] == "msgParserId847" {
		dissect {
			mapping => { "message" => "%{disposition}|%{saddr}" }
			id => "msgParserId847"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId848
	# line in RSA: IP=<saddr>| AuthType=<authmethod>
	else if [logstash][msgparser][id] == "msgParserId848" {
		dissect {
			mapping => { "message" => "IP=%{saddr}| AuthType=%{authmethod}" }
			id => "msgParserId848"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId849
	# line in RSA: IP=<saddr>| CiscoTrustAgent=<info>
	else if [logstash][msgparser][id] == "msgParserId849" {
		dissect {
			mapping => { "message" => "IP=%{saddr}| CiscoTrustAgent=%{info}" }
			id => "msgParserId849"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId850
	# line in RSA: IP=<saddr>| PROFILE=<info>| POLICYNAME=<policyname>
	else if [logstash][msgparser][id] == "msgParserId850" {
		dissect {
			mapping => { "message" => "IP=%{saddr}| PROFILE=%{info}| POLICYNAME=%{policyname}" }
			id => "msgParserId850"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId851
	# line in RSA: IP=<saddr>| <info>
	else if [logstash][msgparser][id] == "msgParserId851" {
		dissect {
			mapping => { "message" => "IP=%{saddr}| %{info}" }
			id => "msgParserId851"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId852
	# line in RSA: IP=<saddr>| HOST=<info>| Interface=<interface>
	else if [logstash][msgparser][id] == "msgParserId852" {
		dissect {
			mapping => { "message" => "IP=%{saddr}| HOST=%{info}| Interface=%{interface}" }
			id => "msgParserId852"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%EOU-6-SQ" {
		# MESSAGE %EOU-6-SQ
		# line in RSA:  IP=<saddr>| STATUSQUERY|<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IP=%{saddr}| STATUSQUERY|%{result}" }
				id => "message-%EOU-6-SQ"
				add_field => {
					"[event][id]" => "%EOU-6-SQ"
					"[rsa][message][id1]" => "%EOU-6-SQ"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %EOU-6-SQ:01
		# line in RSA:  IP=<saddr>| STATUSQUERY=<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IP=%{saddr}| STATUSQUERY=%{result}" }
				id => "message-%EOU-6-SQ:01"
				add_field => {
					"[event][id]" => "%EOU-6-SQ:01"
					"[rsa][message][id1]" => "%EOU-6-SQ:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId855
	# line in RSA:  Unable to open eventinfo file <filename> (<info>)
	else if [logstash][msgparser][id] == "msgParserId855" {
		dissect {
			mapping => { "message" => "Unable to open eventinfo file %{filename} (%{info})" }
			id => "msgParserId855"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId856
	# line in RSA:  Unable to write to eventinfo file <filename>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId856" {
		dissect {
			mapping => { "message" => "Unable to write to eventinfo file %{filename}: %{event_description}" }
			id => "msgParserId856"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId857
	# line in RSA:  Writing eventinfo to <filename>
	else if [logstash][msgparser][id] == "msgParserId857" {
		dissect {
			mapping => { "message" => "Writing eventinfo to %{filename}" }
			id => "msgParserId857"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId858
	# line in RSA:  interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId858" {
		dissect {
			mapping => { "message" => "interface %{interface} %{event_description}" }
			id => "msgParserId858"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId859
	# line in RSA:  port access VLAN is not compatible
	else if [logstash][msgparser][id] == "msgParserId859" {
		dissect {
			mapping => { "message" => "port access VLAN is not compatible" }
			id => "msgParserId859"
			add_field => {
				"event_description" => "port access VLAN is not compatible"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId860
	# line in RSA:  <interface> is operationally individual
	else if [logstash][msgparser][id] == "msgParserId860" {
		dissect {
			mapping => { "message" => "%{interface} is operationally individual" }
			id => "msgParserId860"
			add_field => {
				"event_description" => "port interface is operationally individual"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId861
	# line in RSA:  <portname> created
	else if [logstash][msgparser][id] == "msgParserId861" {
		dissect {
			mapping => { "message" => "%{portname} created" }
			id => "msgParserId861"
			add_field => {
				"event_description" => "port created"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId862
	# line in RSA:  <portname> deleted
	else if [logstash][msgparser][id] == "msgParserId862" {
		dissect {
			mapping => { "message" => "%{portname} deleted" }
			id => "msgParserId862"
			add_field => {
				"event_description" => "port deleted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId863
	# line in RSA:  <portname>: first operational port changed from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId863" {
		dissect {
			mapping => { "message" => "%{portname}: first operational port changed from %{change_old} to %{change_new}" }
			id => "msgParserId863"
			add_field => {
				"event_description" => "first operational port changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId864
	# line in RSA:  <portname>: <interface> is down
	else if [logstash][msgparser][id] == "msgParserId864" {
		dissect {
			mapping => { "message" => "%{portname}: %{interface} is down" }
			id => "msgParserId864"
			add_field => {
				"event_description" => "port interface is down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId865
	# line in RSA:  individual port <portname> is down
	else if [logstash][msgparser][id] == "msgParserId865" {
		dissect {
			mapping => { "message" => "individual port %{portname} is down" }
			id => "msgParserId865"
			add_field => {
				"event_description" => "individual port is down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId866
	# line in RSA:  <portname>: <interface> is suspended
	else if [logstash][msgparser][id] == "msgParserId866" {
		dissect {
			mapping => { "message" => "%{portname}: %{interface} is suspended" }
			id => "msgParserId866"
			add_field => {
				"event_description" => "port interface is suspended"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId867
	# line in RSA:  <portname>: <interface> is up
	else if [logstash][msgparser][id] == "msgParserId867" {
		dissect {
			mapping => { "message" => "%{portname}: %{interface} is up" }
			id => "msgParserId867"
			add_field => {
				"event_description" => "port interface is up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId868
	# line in RSA:  Port <network_port> left bridge port <info>
	else if [logstash][msgparser][id] == "msgParserId868" {
		dissect {
			mapping => { "message" => "Port %{network_port} left bridge port %{info}" }
			id => "msgParserId868"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId869
	# line in RSA: Port <network_port> joined bridge port <info>
	else if [logstash][msgparser][id] == "msgParserId869" {
		dissect {
			mapping => { "message" => "Port %{network_port} joined bridge port %{info}" }
			id => "msgParserId869"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId870
	# line in RSA: Loop-back detected on <network_port>. The port is forced to linkdown.
	else if [logstash][msgparser][id] == "msgParserId870" {
		dissect {
			mapping => { "message" => "Loop-back detected on %{network_port}. The port is forced to linkdown." }
			id => "msgParserId870"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId871
	# line in RSA:  Loopback operation on interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId871" {
		dissect {
			mapping => { "message" => "Loopback operation on interface %{interface} %{info}" }
			id => "msgParserId871"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId872
	# line in RSA: The client on interface <interface> has entered the OAM session
	else if [logstash][msgparser][id] == "msgParserId872" {
		dissect {
			mapping => { "message" => "The client on interface %{interface} has entered the OAM session" }
			id => "msgParserId872"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId873
	# line in RSA:  The client on interface <interface> has left the OAM session
	else if [logstash][msgparser][id] == "msgParserId873" {
		dissect {
			mapping => { "message" => "The client on interface %{interface} has left the OAM session" }
			id => "msgParserId873"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId874
	# line in RSA:  The client on interface <interface> has timed out and exited the OAM session
	else if [logstash][msgparser][id] == "msgParserId874" {
		dissect {
			mapping => { "message" => "The client on interface %{interface} has timed out and exited the OAM session" }
			id => "msgParserId874"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId875
	# line in RSA:  The client on interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId875" {
		dissect {
			mapping => { "message" => "The client on interface %{interface} %{info}" }
			id => "msgParserId875"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId876
	# line in RSA: The client on interface <interface> has received <info>
	else if [logstash][msgparser][id] == "msgParserId876" {
		dissect {
			mapping => { "message" => "The client on interface %{interface} has received %{info}" }
			id => "msgParserId876"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId877
	# line in RSA:  Ignored VLAN <vlan> in <info>
	else if [logstash][msgparser][id] == "msgParserId877" {
		dissect {
			mapping => { "message" => "Ignored VLAN %{vlan} in %{info}" }
			id => "msgParserId877"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId878
	# line in RSA: VLAN <vlan> configured but <event_description>
	else if [logstash][msgparser][id] == "msgParserId878" {
		dissect {
			mapping => { "message" => "VLAN %{vlan} configured but %{event_description}" }
			id => "msgParserId878"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId879
	# line in RSA: VLAN <vlan> not configured but <info>
	else if [logstash][msgparser][id] == "msgParserId879" {
		dissect {
			mapping => { "message" => "VLAN %{vlan} not configured but %{info}" }
			id => "msgParserId879"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId880
	# line in RSA: Service instance <info> on interface <interface> <context>
	else if [logstash][msgparser][id] == "msgParserId880" {
		dissect {
			mapping => { "message" => "Service instance %{info} on interface %{interface} %{context}" }
			id => "msgParserId880"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId881
	# line in RSA:  Unable to create IPC port (<network_port>).
	else if [logstash][msgparser][id] == "msgParserId881" {
		dissect {
			mapping => { "message" => "Unable to create IPC port (%{network_port})." }
			id => "msgParserId881"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId882
	# line in RSA:  Unable to register IPC port (<network_port>).
	else if [logstash][msgparser][id] == "msgParserId882" {
		dissect {
			mapping => { "message" => "Unable to register IPC port (%{network_port})." }
			id => "msgParserId882"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId883
	# line in RSA:  Unable to remove IPC port (<network_port>).
	else if [logstash][msgparser][id] == "msgParserId883" {
		dissect {
			mapping => { "message" => "Unable to remove IPC port (%{network_port})." }
			id => "msgParserId883"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId884
	# line in RSA:  Unable to create IPC processes on (<network_port>).
	else if [logstash][msgparser][id] == "msgParserId884" {
		dissect {
			mapping => { "message" => "Unable to create IPC processes on (%{network_port})." }
			id => "msgParserId884"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId885
	# line in RSA:  IPC port is NULL  (<info>)
	else if [logstash][msgparser][id] == "msgParserId885" {
		dissect {
			mapping => { "message" => "IPC port is NULL  (%{info})" }
			id => "msgParserId885"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId886
	# line in RSA:  Interface <interface> is down (Error disabled. Reason:<result>)
	else if [logstash][msgparser][id] == "msgParserId886" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down (Error disabled. Reason:%{result})" }
			id => "msgParserId886"
			add_field => {
				"event_description" => "Interface down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId887
	# line in RSA:  Interface <interface> is down (<result>)
	else if [logstash][msgparser][id] == "msgParserId887" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down (%{result})" }
			id => "msgParserId887"
			add_field => {
				"event_description" => "Interface down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId888
	# line in RSA:  VLANs <vlan> on Interface <interface> are <result>.
	else if [logstash][msgparser][id] == "msgParserId888" {
		dissect {
			mapping => { "message" => "VLANs %{vlan} on Interface %{interface} are %{result}." }
			id => "msgParserId888"
			add_field => {
				"event_description" => "VLANs removed from suspended state"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId889
	# line in RSA:  VLANs <vlan> on Interface <interface> are being suspended. (Reason: <result>)
	else if [logstash][msgparser][id] == "msgParserId889" {
		dissect {
			mapping => { "message" => "VLANs %{vlan} on Interface %{interface} are being suspended. (Reason: %{result})" }
			id => "msgParserId889"
			add_field => {
				"event_description" => "VLANs on interface are being suspended"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId890
	# line in RSA:  Interface <interface>, invalid SFP detected
	else if [logstash][msgparser][id] == "msgParserId890" {
		dissect {
			mapping => { "message" => "Interface %{interface}, invalid SFP detected" }
			id => "msgParserId890"
			add_field => {
				"event_description" => "Interface invalid SFP detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId891
	# line in RSA:  Transceiver on interface <interface> is not supported
	else if [logstash][msgparser][id] == "msgParserId891" {
		dissect {
			mapping => { "message" => "Transceiver on interface %{interface} is not supported" }
			id => "msgParserId891"
			add_field => {
				"event_description" => "Transceiver on interface is not supported"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId892
	# line in RSA:  Interface <interface> is up
	else if [logstash][msgparser][id] == "msgParserId892" {
		dissect {
			mapping => { "message" => "Interface %{interface} is up" }
			id => "msgParserId892"
			add_field => {
				"event_description" => "Interface is up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId893
	# line in RSA:  Interface <interface> is admin up
	else if [logstash][msgparser][id] == "msgParserId893" {
		dissect {
			mapping => { "message" => "Interface %{interface} is admin up" }
			id => "msgParserId893"
			add_field => {
				"event_description" => "Interface admin up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId894
	# line in RSA:  Interface <interface>,bandwidth changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId894" {
		dissect {
			mapping => { "message" => "Interface %{interface},bandwidth changed to %{change_new}" }
			id => "msgParserId894"
			add_field => {
				"event_description" => "Interface bandwidth changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId895
	# line in RSA:  Interface <interface> is down(<result>)
	else if [logstash][msgparser][id] == "msgParserId895" {
		dissect {
			mapping => { "message" => "Interface %{interface} is down(%{result})" }
			id => "msgParserId895"
			add_field => {
				"event_description" => "Interface down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId896
	# line in RSA:  Interface <interface>, hardware type changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId896" {
		dissect {
			mapping => { "message" => "Interface %{interface}, hardware type changed to %{change_new}" }
			id => "msgParserId896"
			add_field => {
				"event_description" => "Interface hardware type changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId897
	# line in RSA:  Interface <interface>, vlan <vlan> up
	else if [logstash][msgparser][id] == "msgParserId897" {
		dissect {
			mapping => { "message" => "Interface %{interface}, vlan %{vlan} up" }
			id => "msgParserId897"
			add_field => {
				"event_description" => "Interface on vlan up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId898
	# line in RSA:  Interface <interface> is up
	else if [logstash][msgparser][id] == "msgParserId898" {
		dissect {
			mapping => { "message" => "Interface %{interface} is up" }
			id => "msgParserId898"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId899
	# line in RSA: Fail to initialize IDB eTSEC port <network_port>
	else if [logstash][msgparser][id] == "msgParserId899" {
		dissect {
			mapping => { "message" => "Fail to initialize IDB eTSEC port %{network_port}" }
			id => "msgParserId899"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId900
	# line in RSA: PAK TOO BIG interface <interface> size <packets>
	else if [logstash][msgparser][id] == "msgParserId900" {
		dissect {
			mapping => { "message" => "PAK TOO BIG interface %{interface} size %{packets}" }
			id => "msgParserId900"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId901
	# line in RSA: Fatal Error, Interface <interface> not transmitting
	else if [logstash][msgparser][id] == "msgParserId901" {
		dissect {
			mapping => { "message" => "Fatal Error, Interface %{interface} not transmitting" }
			id => "msgParserId901"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId902
	# line in RSA: Interface <interface> workaround invoked
	else if [logstash][msgparser][id] == "msgParserId902" {
		dissect {
			mapping => { "message" => "Interface %{interface} workaround invoked" }
			id => "msgParserId902"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId903
	# line in RSA:  A probe error to <hostip> occured - <event_description>
	else if [logstash][msgparser][id] == "msgParserId903" {
		dissect {
			mapping => { "message" => "A probe error to %{hostip} occured - %{event_description}" }
			id => "msgParserId903"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId904
	# line in RSA:  <event_description>. Return code <resultcode>
	else if [logstash][msgparser][id] == "msgParserId904" {
		dissect {
			mapping => { "message" => "%{event_description}. Return code %{resultcode}" }
			id => "msgParserId904"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId905
	# line in RSA: Insufficient space to write crashinfo file <filename>
	else if [logstash][msgparser][id] == "msgParserId905" {
		dissect {
			mapping => { "message" => "Insufficient space to write crashinfo file %{filename}" }
			id => "msgParserId905"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId906
	# line in RSA: Open of crashinfo file <filename> failed
	else if [logstash][msgparser][id] == "msgParserId906" {
		dissect {
			mapping => { "message" => "Open of crashinfo file %{filename} failed" }
			id => "msgParserId906"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId907
	# line in RSA:  FCL unable to insert entry through FDM  error code =<resultcode>
	else if [logstash][msgparser][id] == "msgParserId907" {
		dissect {
			mapping => { "message" => "FCL unable to insert entry through FDM  error code =%{resultcode}" }
			id => "msgParserId907"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId908
	# line in RSA:  <event_description> error code = <resultcode>
	else if [logstash][msgparser][id] == "msgParserId908" {
		dissect {
			mapping => { "message" => "%{event_description} error code = %{resultcode}" }
			id => "msgParserId908"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId909
	# line in RSA:  Port (<network_port>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId909" {
		dissect {
			mapping => { "message" => "Port (%{network_port}) %{event_description}" }
			id => "msgParserId909"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId910
	# line in RSA: Port: <network_port> <event_description>
	else if [logstash][msgparser][id] == "msgParserId910" {
		dissect {
			mapping => { "message" => "Port: %{network_port} %{event_description}" }
			id => "msgParserId910"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId911
	# line in RSA: EOP not set for port = <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId911" {
		dissect {
			mapping => { "message" => "EOP not set for port = %{network_port} %{info}" }
			id => "msgParserId911"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId912
	# line in RSA: Replacement particle error for port = <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId912" {
		dissect {
			mapping => { "message" => "Replacement particle error for port = %{network_port} %{info}" }
			id => "msgParserId912"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId913
	# line in RSA:  Descriptor ownership error for port = <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId913" {
		dissect {
			mapping => { "message" => "Descriptor ownership error for port = %{network_port} %{info}" }
			id => "msgParserId913"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId914
	# line in RSA:   Segment length error for port = <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId914" {
		dissect {
			mapping => { "message" => "Segment length error for port = %{network_port} %{info}" }
			id => "msgParserId914"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId915
	# line in RSA:  Uplink-ID <dclass_counter1> of <interface> that is connected with <portname> changed its status from <change_old> <space> <change_new>
	else if [logstash][msgparser][id] == "msgParserId915" {
		dissect {
			mapping => { "message" => "Uplink-ID %{dclass_counter1} of %{interface} that is connected with %{portname} changed its status from %{change_old} %{space} %{change_new}" }
			id => "msgParserId915"
			add_field => {
				"event_description" => "Uplink-ID connected with port changed status"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId916
	# line in RSA:  Expanding initial config size to <bytes> bytes
	else if [logstash][msgparser][id] == "msgParserId916" {
		dissect {
			mapping => { "message" => "Expanding initial config size to %{bytes} bytes" }
			id => "msgParserId916"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId917
	# line in RSA: Error queueing interface <interface> to the auto adjacency list.
	else if [logstash][msgparser][id] == "msgParserId917" {
		dissect {
			mapping => { "message" => "Error queueing interface %{interface} to the auto adjacency list." }
			id => "msgParserId917"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId918
	# line in RSA: Prefix {<hostip><mask> | <hostip>/<mask>} received with zero total traffic count
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId919
	# line in RSA:  <fld1>: <fld2> <fld3> <hostip>/<network_port>
	else if [logstash][msgparser][id] == "msgParserId919" {
		dissect {
			mapping => { "message" => "%{fld1}: %{fld2} %{fld3} %{hostip}/%{network_port}" }
			id => "msgParserId919"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId920
	# line in RSA: Invalid prefix passed to CEF SNMP walker (<hostip>/<mask>). <info>
	else if [logstash][msgparser][id] == "msgParserId920" {
		dissect {
			mapping => { "message" => "Invalid prefix passed to CEF SNMP walker (%{hostip}/%{mask}). %{info}" }
			id => "msgParserId920"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId921
	# line in RSA:  RP missing prefix for <hostip>/<mask> in FIB
	else if [logstash][msgparser][id] == "msgParserId921" {
		dissect {
			mapping => { "message" => "RP missing prefix for %{hostip}/%{mask} in FIB" }
			id => "msgParserId921"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId922
	# line in RSA: RP missing prefix for <hostip>/<mask> in FIB table Default-table (<info>)
	else if [logstash][msgparser][id] == "msgParserId922" {
		dissect {
			mapping => { "message" => "RP missing prefix for %{hostip}/%{mask} in FIB table Default-table (%{info})" }
			id => "msgParserId922"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId923
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId923" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId923"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId924
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId924" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId924"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId925
	# line in RSA:  Error reading cis of Device <device>: <rbytes> bytes read instead of <bytes> bytes
	else if [logstash][msgparser][id] == "msgParserId925" {
		dissect {
			mapping => { "message" => "Error reading cis of Device %{device}: %{rbytes} bytes read instead of %{bytes} bytes" }
			id => "msgParserId925"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId926
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId926" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId926"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Delete"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId927
	# line in RSA:  failed to connect voice-port (<portname>) to dsp_channel(<device>)
	else if [logstash][msgparser][id] == "msgParserId927" {
		dissect {
			mapping => { "message" => "failed to connect voice-port (%{portname}) to dsp_channel(%{device})" }
			id => "msgParserId927"
			add_field => {
				"event_description" => "failed to connect voice-port to dsp_channel"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId928
	# line in RSA:  <fld1>: SRC_IP: <saddr>, SRC_PORT: <sport>, DST_IP:<daddr>, DST_PORT:<dport>, <info>
	else if [logstash][msgparser][id] == "msgParserId928" {
		dissect {
			mapping => { "message" => "%{fld1}: SRC_IP: %{saddr}, SRC_PORT: %{sport}, DST_IP:%{daddr}, DST_PORT:%{dport}, %{info}" }
			id => "msgParserId928"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId929
	# line in RSA:  Cannot create subblock for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId929" {
		dissect {
			mapping => { "message" => "Cannot create subblock for interface %{interface}" }
			id => "msgParserId929"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId930
	# line in RSA: Cannot create memory block for VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId930" {
		dissect {
			mapping => { "message" => "Cannot create memory block for VLAN %{vlan}" }
			id => "msgParserId930"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId931
	# line in RSA:  Cannot allocate <info> label for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId931" {
		dissect {
			mapping => { "message" => "Cannot allocate %{info} label for interface %{interface}" }
			id => "msgParserId931"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId932
	# line in RSA:  Cannot allocate <info> label for VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId932" {
		dissect {
			mapping => { "message" => "Cannot allocate %{info} label for VLAN %{vlan}" }
			id => "msgParserId932"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId933
	# line in RSA: Invalid object (VLAN <vlan>  IDB <info>) used in Feature Manager
	else if [logstash][msgparser][id] == "msgParserId933" {
		dissect {
			mapping => { "message" => "Invalid object (VLAN %{vlan}  IDB %{info}) used in Feature Manager" }
			id => "msgParserId933"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId934
	# line in RSA:  <interface>: <device>:  list <listnum> denied icmp  <saddr> -> <daddr>(<fld1>), <packets> packet
	else if [logstash][msgparser][id] == "msgParserId934" {
		dissect {
			mapping => { "message" => "%{interface}: %{device}:  list %{listnum} denied icmp  %{saddr} -> %{daddr}(%{fld1}), %{packets} packet" }
			id => "msgParserId934"
			add_field => {
				"protocol" => "icmp"
				"event_description" => "denied by list"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%FMANFP-6-IPACCESSLOGNP" {
		# MESSAGE %FMANFP-6-IPACCESSLOGNP
		# line in RSA:  <interface>: <device>:  list <listnum> denied <protocol> <saddr> -> <daddr>, <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{interface}: %{device}:  list %{listnum} denied %{protocol} %{saddr} -> %{daddr}, %{packets} packet" }
				id => "message-%FMANFP-6-IPACCESSLOGNP"
				add_field => {
				"event_description" => "denied by list"
					"[event][id]" => "%FMANFP-6-IPACCESSLOGNP"
					"[rsa][message][id1]" => "%FMANFP-6-IPACCESSLOGNP"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FMANFP-6-IPACCESSLOGNP:01
		# line in RSA:  <interface>: <device>:  list <listnum> permitted <protocol> <saddr> -> <daddr>, <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{interface}: %{device}:  list %{listnum} permitted %{protocol} %{saddr} -> %{daddr}, %{packets} packet" }
				id => "message-%FMANFP-6-IPACCESSLOGNP:01"
				add_field => {
				"event_description" => "permitted by list"
					"[event][id]" => "%FMANFP-6-IPACCESSLOGNP:01"
					"[rsa][message][id1]" => "%FMANFP-6-IPACCESSLOGNP:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%FMANFP-6-IPACCESSLOGP" {
		# MESSAGE %FMANFP-6-IPACCESSLOGP
		# line in RSA:  <interface>: <device>:  list <listnum> permitted <protocol> <saddr>(<sport>) -> <daddr>(<dport>), <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{interface}: %{device}:  list %{listnum} permitted %{protocol} %{saddr}(%{sport}) -> %{daddr}(%{dport}), %{packets} packet" }
				id => "message-%FMANFP-6-IPACCESSLOGP"
				add_field => {
				"event_description" => "permitted by list"
					"[event][id]" => "%FMANFP-6-IPACCESSLOGP"
					"[rsa][message][id1]" => "%FMANFP-6-IPACCESSLOGP"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FMANFP-6-IPACCESSLOGP:01
		# line in RSA:  <interface>: <device>:  list <listnum> denied <protocol> <saddr>(<sport>) -> <daddr>(<dport>), <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{interface}: %{device}:  list %{listnum} denied %{protocol} %{saddr}(%{sport}) -> %{daddr}(%{dport}), %{packets} packet" }
				id => "message-%FMANFP-6-IPACCESSLOGP:01"
				add_field => {
				"event_description" => "denied by list"
					"[event][id]" => "%FMANFP-6-IPACCESSLOGP:01"
					"[rsa][message][id1]" => "%FMANFP-6-IPACCESSLOGP:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId939
	# line in RSA: PfR Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId939" {
		dissect {
			mapping => { "message" => "PfR Interface %{interface} %{event_description}" }
			id => "msgParserId939"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId940
	# line in RSA:  Failed to copy more than <bytes> bytes <info>
	else if [logstash][msgparser][id] == "msgParserId940" {
		dissect {
			mapping => { "message" => "Failed to copy more than %{bytes} bytes %{info}" }
			id => "msgParserId940"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId941
	# line in RSA:  Failed to close <filename> file.
	else if [logstash][msgparser][id] == "msgParserId941" {
		dissect {
			mapping => { "message" => "Failed to close %{filename} file." }
			id => "msgParserId941"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId942
	# line in RSA:  The indicated file <filename> is not a valid <info>
	else if [logstash][msgparser][id] == "msgParserId942" {
		dissect {
			mapping => { "message" => "The indicated file %{filename} is not a valid %{info}" }
			id => "msgParserId942"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId943
	# line in RSA: The indicated file (<filename>) <info>
	else if [logstash][msgparser][id] == "msgParserId943" {
		dissect {
			mapping => { "message" => "The indicated file (%{filename}) %{info}" }
			id => "msgParserId943"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId944
	# line in RSA:  Could not allocate the required <bytes> bytes of memory.
	else if [logstash][msgparser][id] == "msgParserId944" {
		dissect {
			mapping => { "message" => "Could not allocate the required %{bytes} bytes of memory." }
			id => "msgParserId944"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId945
	# line in RSA: Could not read the <filename> file.
	else if [logstash][msgparser][id] == "msgParserId945" {
		dissect {
			mapping => { "message" => "Could not read the %{filename} file." }
			id => "msgParserId945"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId946
	# line in RSA:  <context>: interface <interface>: <info>
	else if [logstash][msgparser][id] == "msgParserId946" {
		dissect {
			mapping => { "message" => "%{context}: interface %{interface}: %{info}" }
			id => "msgParserId946"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId947
	# line in RSA: Interface <interface> -  <event_description>
	else if [logstash][msgparser][id] == "msgParserId947" {
		dissect {
			mapping => { "message" => "Interface %{interface} -  %{event_description}" }
			id => "msgParserId947"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId948
	# line in RSA: Interface <interface> -  <event_description>
	else if [logstash][msgparser][id] == "msgParserId948" {
		dissect {
			mapping => { "message" => "Interface %{interface} -  %{event_description}" }
			id => "msgParserId948"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId949
	# line in RSA:  Inconsistent packet: size <bytes>
	else if [logstash][msgparser][id] == "msgParserId949" {
		dissect {
			mapping => { "message" => "Inconsistent packet: size %{bytes}" }
			id => "msgParserId949"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId950
	# line in RSA:  Unable to setup FR XDR for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId950" {
		dissect {
			mapping => { "message" => "Unable to setup FR XDR for interface %{interface}" }
			id => "msgParserId950"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId951
	# line in RSA:  Must reload to config Interface <interface> as ftc-trunk again
	else if [logstash][msgparser][id] == "msgParserId951" {
		dissect {
			mapping => { "message" => "Must reload to config Interface %{interface} as ftc-trunk again" }
			id => "msgParserId951"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%FTSP-4-FMAIL_FAILED_AUTHENTICATION" {
		# MESSAGE %FTSP-4-FMAIL_FAILED_AUTHENTICATION
		# line in RSA: Authentication for <username> (<hostip>:<network_port>) not found
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authentication for %{username} (%{hostip}:%{network_port}) not found" }
				id => "message-%FTSP-4-FMAIL_FAILED_AUTHENTICATION"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "%FTSP-4-FMAIL_FAILED_AUTHENTICATION"
					"[rsa][message][id1]" => "%FTSP-4-FMAIL_FAILED_AUTHENTICATION"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FTSP-4-FMAIL_FAILED_AUTHENTICATION:01
		# line in RSA: Authentication for > <username> << failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authentication for > %{username} < failed" }
				id => "message-%FTSP-4-FMAIL_FAILED_AUTHENTICATION:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "%FTSP-4-FMAIL_FAILED_AUTHENTICATION:01"
					"[rsa][message][id1]" => "%FTSP-4-FMAIL_FAILED_AUTHENTICATION:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId954
	# line in RSA: Blocking new TCP connections to host <hostip> for <duration> minute <info>
	else if [logstash][msgparser][id] == "msgParserId954" {
		dissect {
			mapping => { "message" => "Blocking new TCP connections to host %{hostip} for %{duration} minute %{info}" }
			id => "msgParserId954"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%FW-3-FTP_NON_MATCHING_IP_ADDR" {
		# MESSAGE %FW-3-FTP_NON_MATCHING_IP_ADDR
		# line in RSA: Non-matching address <hostip> used in <info> -- FTP client <saddr> FTP server <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Non-matching address %{hostip} used in %{info} -- FTP client %{saddr} FTP server %{daddr}" }
				id => "message-%FW-3-FTP_NON_MATCHING_IP_ADDR"
				add_field => {
					"[event][id]" => "%FW-3-FTP_NON_MATCHING_IP_ADDR"
					"[rsa][message][id1]" => "%FW-3-FTP_NON_MATCHING_IP_ADDR"
					"[event][categoryid]" => "1803010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-3-FTP_NON_MATCHING_IP_ADDR:01
		# line in RSA: Non-matching address <hostip> used in <info> -- FTP client <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Non-matching address %{hostip} used in %{info} -- FTP client %{saddr}" }
				id => "message-%FW-3-FTP_NON_MATCHING_IP_ADDR:01"
				add_field => {
					"[event][id]" => "%FW-3-FTP_NON_MATCHING_IP_ADDR:01"
					"[rsa][message][id1]" => "%FW-3-FTP_NON_MATCHING_IP_ADDR:01"
					"[event][categoryid]" => "1803010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId957
	# line in RSA: Privileged port <network_port> used in <info> -- FTP client <saddr> FTP <daddr>
	else if [logstash][msgparser][id] == "msgParserId957" {
		dissect {
			mapping => { "message" => "Privileged port %{network_port} used in %{info} -- FTP client %{saddr} FTP %{daddr}" }
			id => "msgParserId957"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId958
	# line in RSA: Command issued before the session is authenticated -- FTP client <saddr> FTP <daddr>
	else if [logstash][msgparser][id] == "msgParserId958" {
		dissect {
			mapping => { "message" => "Command issued before the session is authenticated -- FTP client %{saddr} FTP %{daddr}" }
			id => "msgParserId958"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId959
	# line in RSA: JAVA applet is blocked from (<saddr>:<sport>) to (<daddr>:<dport>)
	else if [logstash][msgparser][id] == "msgParserId959" {
		dissect {
			mapping => { "message" => "JAVA applet is blocked from (%{saddr}:%{sport}) to (%{daddr}:%{dport})" }
			id => "msgParserId959"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId960
	# line in RSA: Session context for (<saddr>:<sport>) => (<daddr>:<dport>) not found.
	else if [logstash][msgparser][id] == "msgParserId960" {
		dissect {
			mapping => { "message" => "Session context for (%{saddr}:%{sport}) => (%{daddr}:%{dport}) not found." }
			id => "msgParserId960"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId961
	# line in RSA: Dropping packet - Invalid Window Scale option for session <saddr>:<sport> to <daddr>:<dport> (<info>)
	else if [logstash][msgparser][id] == "msgParserId961" {
		dissect {
			mapping => { "message" => "Dropping packet - Invalid Window Scale option for session %{saddr}:%{sport} to %{daddr}:%{dport} (%{info})" }
			id => "msgParserId961"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%FW-3-SMTP_INVALID_COMMAND" {
		# MESSAGE %FW-3-SMTP_INVALID_COMMAND
		# line in RSA: Invalid SMTP command from initiator (<saddr>:<sport>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Invalid SMTP command from initiator (%{saddr}:%{sport})" }
				id => "message-%FW-3-SMTP_INVALID_COMMAND"
				add_field => {
					"[event][id]" => "%FW-3-SMTP_INVALID_COMMAND"
					"[rsa][message][id1]" => "%FW-3-SMTP_INVALID_COMMAND"
					"[event][categoryid]" => "1001030300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-3-SMTP_INVALID_COMMAND:01
		# line in RSA: <fld1>Invalid SMTP command (<info> from initiator (<saddr>:<sport>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}Invalid SMTP command (%{info} from initiator (%{saddr}:%{sport})" }
				id => "message-%FW-3-SMTP_INVALID_COMMAND:01"
				add_field => {
					"[event][id]" => "%FW-3-SMTP_INVALID_COMMAND:01"
					"[rsa][message][id1]" => "%FW-3-SMTP_INVALID_COMMAND:01"
					"[event][categoryid]" => "1001030300"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId964
	# line in RSA: Unsupported SMTP parameter (<info>) from initiator (<saddr>:<sport>)
	else if [logstash][msgparser][id] == "msgParserId964" {
		dissect {
			mapping => { "message" => "Unsupported SMTP parameter (%{info}) from initiator (%{saddr}:%{sport})" }
			id => "msgParserId964"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId965
	# line in RSA:  Max tcp half-open connections (<info>) exceeded for host <hostip>.
	else if [logstash][msgparser][id] == "msgParserId965" {
		dissect {
			mapping => { "message" => "Max tcp half-open connections (%{info}) exceeded for host %{hostip}." }
			id => "msgParserId965"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId966
	# line in RSA:  Accepting packet -Window Scale option for session <saddr>:<sport> to <daddr><dport> <info>
	else if [logstash][msgparser][id] == "msgParserId966" {
		dissect {
			mapping => { "message" => "Accepting packet -Window Scale option for session %{saddr}:%{sport} to %{daddr}%{dport} %{info}" }
			id => "msgParserId966"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId967
	# line in RSA:  Majordomo Execute Attack - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId967" {
		dissect {
			mapping => { "message" => "Majordomo Execute Attack - from %{saddr} to %{daddr}" }
			id => "msgParserId967"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%FW-4-TCP_OoO_SEG" {
		# MESSAGE %FW-4-TCP_OoO_SEG
		# line in RSA:  Deleting session as expected TCP segment with seq:<fld1> has not arrived even after <fld2> seconds - session <saddr>:<sport> to <daddr>:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Deleting session as expected TCP segment with seq:%{fld1} has not arrived even after %{fld2} seconds - session %{saddr}:%{sport} to %{daddr}:%{dport}" }
				id => "message-%FW-4-TCP_OoO_SEG"
				add_field => {
				"event_description" => "Deleting TCP Session"
					"[event][id]" => "%FW-4-TCP_OoO_SEG"
					"[rsa][message][id1]" => "%FW-4-TCP_OoO_SEG"
					"[event][categoryid]" => "1001030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-4-TCP_OoO_SEG:01
		# line in RSA:  Dropping TCP Segment: seq:<ssid> <disposition> expected seq:<bssid>. Reason: <result> - session <saddr>:<sport> to <daddr>:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dropping TCP Segment: seq:%{ssid} %{disposition} expected seq:%{bssid}. Reason: %{result} - session %{saddr}:%{sport} to %{daddr}:%{dport}" }
				id => "message-%FW-4-TCP_OoO_SEG:01"
				add_field => {
				"event_description" => "Deleting TCP Segment"
					"[event][id]" => "%FW-4-TCP_OoO_SEG:01"
					"[rsa][message][id1]" => "%FW-4-TCP_OoO_SEG:01"
					"[event][categoryid]" => "1001030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId970
	# line in RSA:  Sendmail Invalid Sender - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId970" {
		dissect {
			mapping => { "message" => "Sendmail Invalid Sender - from %{saddr} to %{daddr}" }
			id => "msgParserId970"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId971
	# line in RSA:  Sendmail Invalid Recipient - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId971" {
		dissect {
			mapping => { "message" => "Sendmail Invalid Recipient - from %{saddr} to %{daddr}" }
			id => "msgParserId971"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId972
	# line in RSA:  Sendmail Decode Alias - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId972" {
		dissect {
			mapping => { "message" => "Sendmail Decode Alias - from %{saddr} to %{daddr}" }
			id => "msgParserId972"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId973
	# line in RSA:  Invalid SMTP command - <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId973" {
		dissect {
			mapping => { "message" => "Invalid SMTP command - %{saddr} to %{daddr}" }
			id => "msgParserId973"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId974
	# line in RSA:  Archaic Sendmail Attacks - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId974" {
		dissect {
			mapping => { "message" => "Archaic Sendmail Attacks - from %{saddr} to %{daddr}" }
			id => "msgParserId974"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId975
	# line in RSA: New TCP connections to host <hostname> no longer blocked
	else if [logstash][msgparser][id] == "msgParserId975" {
		dissect {
			mapping => { "message" => "New TCP connections to host %{hostname} no longer blocked" }
			id => "msgParserId975"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId976
	# line in RSA: <fld1>Dropping <info> command fragment from initiator (<saddr>:<sport>)
	else if [logstash][msgparser][id] == "msgParserId976" {
		dissect {
			mapping => { "message" => "%{fld1}Dropping %{info} command fragment from initiator (%{saddr}:%{sport})" }
			id => "msgParserId976"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId977
	# line in RSA: <fld1>Command pending from initiator (<saddr>:<sport>): <info>
	else if [logstash][msgparser][id] == "msgParserId977" {
		dissect {
			mapping => { "message" => "%{fld1}Command pending from initiator (%{saddr}:%{sport}): %{info}" }
			id => "msgParserId977"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId978
	# line in RSA: <fld1>Invalid IMAP command from initiator (<saddr>:<sport>): <info>
	else if [logstash][msgparser][id] == "msgParserId978" {
		dissect {
			mapping => { "message" => "%{fld1}Invalid IMAP command from initiator (%{saddr}:%{sport}): %{info}" }
			id => "msgParserId978"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId979
	# line in RSA: <fld1>LOGON IMAP command from initiator (<saddr>:<sport>): <info>
	else if [logstash][msgparser][id] == "msgParserId979" {
		dissect {
			mapping => { "message" => "%{fld1}LOGON IMAP command from initiator (%{saddr}:%{sport}): %{info}" }
			id => "msgParserId979"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId980
	# line in RSA: <fld1>Invalid POP3 command from initiator (<saddr>:<sport>): <info>
	else if [logstash][msgparser][id] == "msgParserId980" {
		dissect {
			mapping => { "message" => "%{fld1}Invalid POP3 command from initiator (%{saddr}:%{sport}): %{info}" }
			id => "msgParserId980"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId981
	# line in RSA: <fld1>LOGON POP3 command from initiator (<saddr>:<sport>): <info>
	else if [logstash][msgparser][id] == "msgParserId981" {
		dissect {
			mapping => { "message" => "%{fld1}LOGON POP3 command from initiator (%{saddr}:%{sport}): %{info}" }
			id => "msgParserId981"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId982
	# line in RSA: Dropping ICMP pkt <saddr> =><daddr> with <info>
	else if [logstash][msgparser][id] == "msgParserId982" {
		dissect {
			mapping => { "message" => "Dropping ICMP pkt %{saddr} =>%{daddr} with %{info}" }
			id => "msgParserId982"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%FW-6-DROP_PKT" {
		# MESSAGE %FW-6-DROP_PKT
		# line in RSA: Dropping <protocol> session <saddr>:<sport> <daddr>:<dport> on zone-pair <interface> class <group> due to <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dropping %{protocol} session %{saddr}:%{sport} %{daddr}:%{dport} on zone-pair %{interface} class %{group} due to %{event_description}" }
				id => "message-%FW-6-DROP_PKT"
				add_field => {
					"[event][id]" => "%FW-6-DROP_PKT"
					"[rsa][message][id1]" => "%FW-6-DROP_PKT"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-6-DROP_PKT:02
		# line in RSA:  Dropping <protocol> session <saddr>:<sport> <daddr>:<dport> due to <result> with ip <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dropping %{protocol} session %{saddr}:%{sport} %{daddr}:%{dport} due to %{result} with ip %{info}" }
				id => "message-%FW-6-DROP_PKT:02"
				add_field => {
				"event_description" => "Dropped packet"
					"[event][id]" => "%FW-6-DROP_PKT:02"
					"[rsa][message][id1]" => "%FW-6-DROP_PKT:02"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-6-DROP_PKT:01
		# line in RSA: Dropping <protocol> pkt <saddr>:<sport> => <daddr>:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dropping %{protocol} pkt %{saddr}:%{sport} => %{daddr}:%{dport}" }
				id => "message-%FW-6-DROP_PKT:01"
				add_field => {
					"[event][id]" => "%FW-6-DROP_PKT:01"
					"[rsa][message][id1]" => "%FW-6-DROP_PKT:01"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-6-DROP_PKT:03
		# line in RSA: Dropping <protocol> session <saddr>:<sport> <daddr>:<dport> on zone-pair <interface> class <group>   with ip ident<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dropping %{protocol} session %{saddr}:%{sport} %{daddr}:%{dport} on zone-pair %{interface} class %{group}   with ip ident%{info}" }
				id => "message-%FW-6-DROP_PKT:03"
				add_field => {
					"[event][id]" => "%FW-6-DROP_PKT:03"
					"[rsa][message][id1]" => "%FW-6-DROP_PKT:03"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId985
	# line in RSA: Dropping tcp pkt <saddr>:<sport> => <daddr>:<dport> due to <event_description>
	else if [logstash][msgparser][id] == "msgParserId985" {
		dissect {
			mapping => { "message" => "Dropping tcp pkt %{saddr}:%{sport} => %{daddr}:%{dport} due to %{event_description}" }
			id => "msgParserId985"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId987
	# line in RSA: Dropping <protocol> pkt <saddr>:<sport> => <daddr>:<dport> with <info>
	else if [logstash][msgparser][id] == "msgParserId987" {
		dissect {
			mapping => { "message" => "Dropping %{protocol} pkt %{saddr}:%{sport} => %{daddr}:%{dport} with %{info}" }
			id => "msgParserId987"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%FW-6-LOG_SUMMARY" {
		# MESSAGE %FW-6-LOG_SUMMARY:02
		# line in RSA: <packets> udp packets were dropped from <saddr>:<sport> => <daddr>:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{packets} udp packets were dropped from %{saddr}:%{sport} => %{daddr}:%{dport}" }
				id => "message-%FW-6-LOG_SUMMARY:02"
				add_field => {
					"[event][id]" => "%FW-6-LOG_SUMMARY:02"
					"[rsa][message][id1]" => "%FW-6-LOG_SUMMARY:02"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-6-LOG_SUMMARY
		# line in RSA: <packets> packets were dropped from <saddr>:<sport> => <daddr>:<dport> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{packets} packets were dropped from %{saddr}:%{sport} => %{daddr}:%{dport} %{info}" }
				id => "message-%FW-6-LOG_SUMMARY"
				add_field => {
					"[event][id]" => "%FW-6-LOG_SUMMARY"
					"[rsa][message][id1]" => "%FW-6-LOG_SUMMARY"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-6-LOG_SUMMARY:01
		# line in RSA: <packets> udp packet were dropped from <saddr>:<sport> => <daddr>:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{packets} udp packet were dropped from %{saddr}:%{sport} => %{daddr}:%{dport}" }
				id => "message-%FW-6-LOG_SUMMARY:01"
				add_field => {
					"[event][id]" => "%FW-6-LOG_SUMMARY:01"
					"[rsa][message][id1]" => "%FW-6-LOG_SUMMARY:01"
					"[event][categoryid]" => "1805010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%FW-6-PRE_ALLOCATED_MEDIA_CHANNEL" {
		# MESSAGE %FW-6-PRE_ALLOCATED_MEDIA_CHANNEL:01
		# line in RSA:  <fld1>Pre-Allocated <fld2> channel from  <saddr>[<info>] to <daddr>[<context>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}Pre-Allocated %{fld2} channel from  %{saddr}[%{info}] to %{daddr}[%{context}]" }
				id => "message-%FW-6-PRE_ALLOCATED_MEDIA_CHANNEL:01"
				add_field => {
					"[event][id]" => "%FW-6-PRE_ALLOCATED_MEDIA_CHANNEL:01"
					"[rsa][message][id1]" => "%FW-6-PRE_ALLOCATED_MEDIA_CHANNEL:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-6-PRE_ALLOCATED_MEDIA_CHANNEL
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-%FW-6-PRE_ALLOCATED_MEDIA_CHANNEL"
				add_field => {
					"[event][id]" => "%FW-6-PRE_ALLOCATED_MEDIA_CHANNEL"
					"[rsa][message][id1]" => "%FW-6-PRE_ALLOCATED_MEDIA_CHANNEL"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%FW-6-SESS_AUDIT_TRAIL" {
		# MESSAGE %FW-6-SESS_AUDIT_TRAIL
		# line in RSA:   <protocol> session initiator (<saddr>:<sport>) sent <sbytes> bytes -- responder (<daddr>:<dport>) sent <rbytes> bytes
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{protocol} session initiator (%{saddr}:%{sport}) sent %{sbytes} bytes -- responder (%{daddr}:%{dport}) sent %{rbytes} bytes" }
				id => "message-%FW-6-SESS_AUDIT_TRAIL"
				add_field => {
					"[event][id]" => "%FW-6-SESS_AUDIT_TRAIL"
					"[rsa][message][id1]" => "%FW-6-SESS_AUDIT_TRAIL"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %FW-6-SESS_AUDIT_TRAIL:01
		# line in RSA:   <fld1> Stop <protocol> session: initiator (<saddr>:<sport>) sent <sbytes> bytes -- responder (<daddr>:<dport>) sent <rbytes> bytes
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} Stop %{protocol} session: initiator (%{saddr}:%{sport}) sent %{sbytes} bytes -- responder (%{daddr}:%{dport}) sent %{rbytes} bytes" }
				id => "message-%FW-6-SESS_AUDIT_TRAIL:01"
				add_field => {
					"[event][id]" => "%FW-6-SESS_AUDIT_TRAIL:01"
					"[rsa][message][id1]" => "%FW-6-SESS_AUDIT_TRAIL:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId993
	# line in RSA:  <fld1> Change to <info> session: initiator (<saddr>:<sport>) sent <sbytes> bytes -- responder (<daddr>:<dport>) sent <rbytes> bytes
	else if [logstash][msgparser][id] == "msgParserId993" {
		dissect {
			mapping => { "message" => "%{fld1} Change to %{info} session: initiator (%{saddr}:%{sport}) sent %{sbytes} bytes -- responder (%{daddr}:%{dport}) sent %{rbytes} bytes" }
			id => "msgParserId993"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId994
	# line in RSA:  { (<info>):Start | Start } <protocol> session: initiator (<saddr>:<sport>) -- responder (<daddr>:<dport>) 
	else if [logstash][msgparser][id] == "msgParserId994" {
		grok {
			match => { "message" => "^[\s]*([\s]*\((?<info>[^\)]*)\):Start[\s]+|[\s]*Start[\s]+)[\s]+(?<protocol>[^\s]*)[\s]+session:[\s]+initiator[\s]+\((?<saddr>[^:]*):(?<sport>[^\)]*)\)[\s]+\-\-[\s]+responder[\s]+\((?<daddr>[^:]*):(?<dport>[^\)]*)\)[\s]+$" }
			id => "msgParserId994"
			add_field => {
				"event_description" => "start session"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId995
	# line in RSA: Skinny VoIP phone[<saddr>:<sport>] has registered with Call Manager/Call Manager Express[<daddr>:<dport>] 
	else if [logstash][msgparser][id] == "msgParserId995" {
		dissect {
			mapping => { "message" => "Skinny VoIP phone[%{saddr}:%{sport}] has registered with Call Manager/Call Manager Express[%{daddr}:%{dport}]" }
			id => "msgParserId995"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId996
	# line in RSA: <fld1>Start <info> standby session: initiator (<saddr>:<sport>) -- responder (<daddr>:<dport>)
	else if [logstash][msgparser][id] == "msgParserId996" {
		dissect {
			mapping => { "message" => "%{fld1}Start %{info} standby session: initiator (%{saddr}:%{sport}) -- responder (%{daddr}:%{dport})" }
			id => "msgParserId996"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId997
	# line in RSA: <fld1>Stop <info> standby session: initiator (<saddr>:<sport>) -- responder (<daddr>:<dport>)
	else if [logstash][msgparser][id] == "msgParserId997" {
		dissect {
			mapping => { "message" => "%{fld1}Stop %{info} standby session: initiator (%{saddr}:%{sport}) -- responder (%{daddr}:%{dport})" }
			id => "msgParserId997"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId998
	# line in RSA: Sessions matching HSRP group <group> <event_description>
	else if [logstash][msgparser][id] == "msgParserId998" {
		dissect {
			mapping => { "message" => "Sessions matching HSRP group %{group} %{event_description}" }
			id => "msgParserId998"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId999
	# line in RSA:  GBIC EEPROM data check sum failed for GBIC interface <interface>.
	else if [logstash][msgparser][id] == "msgParserId999" {
		dissect {
			mapping => { "message" => "GBIC EEPROM data check sum failed for GBIC interface %{interface}." }
			id => "msgParserId999"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1000
	# line in RSA:  Unable to read vendor name for GBIC interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1000" {
		dissect {
			mapping => { "message" => "Unable to read vendor name for GBIC interface %{interface}" }
			id => "msgParserId1000"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1001
	# line in RSA:  Unable to read vendor-specific data for GBIC interface <interface>.
	else if [logstash][msgparser][id] == "msgParserId1001" {
		dissect {
			mapping => { "message" => "Unable to read vendor-specific data for GBIC interface %{interface}." }
			id => "msgParserId1001"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1002
	# line in RSA:  Unable to read serial number for GBIC interface <interface>.
	else if [logstash][msgparser][id] == "msgParserId1002" {
		dissect {
			mapping => { "message" => "Unable to read serial number for GBIC interface %{interface}." }
			id => "msgParserId1002"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1003
	# line in RSA:  GBIC interface <interface> has unrecognized extended type.
	else if [logstash][msgparser][id] == "msgParserId1003" {
		dissect {
			mapping => { "message" => "GBIC interface %{interface} has unrecognized extended type." }
			id => "msgParserId1003"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1004
	# line in RSA:  Internal error occurred in setup for GBIC interface <interface>.
	else if [logstash][msgparser][id] == "msgParserId1004" {
		dissect {
			mapping => { "message" => "Internal error occurred in setup for GBIC interface %{interface}." }
			id => "msgParserId1004"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1005
	# line in RSA: Unrecognizable GBIC found in <interface> (<info>).
	else if [logstash][msgparser][id] == "msgParserId1005" {
		dissect {
			mapping => { "message" => "Unrecognizable GBIC found in %{interface} (%{info})." }
			id => "msgParserId1005"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1006
	# line in RSA:  GBIC interface <interface> has the same serial number as another GBIC interface.
	else if [logstash][msgparser][id] == "msgParserId1006" {
		dissect {
			mapping => { "message" => "GBIC interface %{interface} has the same serial number as another GBIC interface." }
			id => "msgParserId1006"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1007
	# line in RSA:  Identification check failed for GBIC interface <interface>.
	else if [logstash][msgparser][id] == "msgParserId1007" {
		dissect {
			mapping => { "message" => "Identification check failed for GBIC interface %{interface}." }
			id => "msgParserId1007"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1008
	# line in RSA:  GBIC interface <interface> manufactured by an unrecognized vendor.
	else if [logstash][msgparser][id] == "msgParserId1008" {
		dissect {
			mapping => { "message" => "GBIC interface %{interface} manufactured by an unrecognized vendor." }
			id => "msgParserId1008"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1009
	# line in RSA:  GBIC interface <interface> has bad crc.
	else if [logstash][msgparser][id] == "msgParserId1009" {
		dissect {
			mapping => { "message" => "GBIC interface %{interface} has bad crc." }
			id => "msgParserId1009"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1010
	# line in RSA:  Identification check failed for GBIC in port <network_port>.
	else if [logstash][msgparser][id] == "msgParserId1010" {
		dissect {
			mapping => { "message" => "Identification check failed for GBIC in port %{network_port}." }
			id => "msgParserId1010"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1011
	# line in RSA:  GBIC in port <network_port> manufactured by an unrecognized vendor.
	else if [logstash][msgparser][id] == "msgParserId1011" {
		dissect {
			mapping => { "message" => "GBIC in port %{network_port} manufactured by an unrecognized vendor." }
			id => "msgParserId1011"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1012
	# line in RSA:  GBIC in port <network_port> has bad crc.
	else if [logstash][msgparser][id] == "msgParserId1012" {
		dissect {
			mapping => { "message" => "GBIC in port %{network_port} has bad crc." }
			id => "msgParserId1012"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1013
	# line in RSA:  GBIC interface <interface> is a duplicate of GBIC interface <info>
	else if [logstash][msgparser][id] == "msgParserId1013" {
		dissect {
			mapping => { "message" => "GBIC interface %{interface} is a duplicate of GBIC interface %{info}" }
			id => "msgParserId1013"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1014
	# line in RSA:  RSA Key - <serial_number>: Not found, <result>
	else if [logstash][msgparser][id] == "msgParserId1014" {
		dissect {
			mapping => { "message" => "RSA Key - %{serial_number}: Not found, %{result}" }
			id => "msgParserId1014"
			add_field => {
				"event_description" => "RSA Key Not found"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1015
	# line in RSA: Group <group> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1015" {
		dissect {
			mapping => { "message" => "Group %{group} %{event_description}" }
			id => "msgParserId1015"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1016
	# line in RSA:  Cooperative KS <info> Unreachable in group <group>
	else if [logstash][msgparser][id] == "msgParserId1016" {
		dissect {
			mapping => { "message" => "Cooperative KS %{info} Unreachable in group %{group}" }
			id => "msgParserId1016"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1017
	# line in RSA: Announcement message dropped due to packet size <packets>
	else if [logstash][msgparser][id] == "msgParserId1017" {
		dissect {
			mapping => { "message" => "Announcement message dropped due to packet size %{packets}" }
			id => "msgParserId1017"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1018
	# line in RSA: Processing of REKEY payloads failed on GM  <hostip> in the group <group>, with peer at <info>
	else if [logstash][msgparser][id] == "msgParserId1018" {
		dissect {
			mapping => { "message" => "Processing of REKEY payloads failed on GM  %{hostip} in the group %{group}, with peer at %{info}" }
			id => "msgParserId1018"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1019
	# line in RSA:  Registration: incomplete config for group <group>
	else if [logstash][msgparser][id] == "msgParserId1019" {
		dissect {
			mapping => { "message" => "Registration: incomplete config for group %{group}" }
			id => "msgParserId1019"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1020
	# line in RSA: KS blackholing GM <hostip> in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1020" {
		dissect {
			mapping => { "message" => "KS blackholing GM %{hostip} in group %{group}." }
			id => "msgParserId1020"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1021
	# line in RSA:   Re-Key: GM <hostip> revoked by KS in the group <group>.
	else if [logstash][msgparser][id] == "msgParserId1021" {
		dissect {
			mapping => { "message" => "Re-Key: GM %{hostip} revoked by KS in the group %{group}." }
			id => "msgParserId1021"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1022
	# line in RSA:  Registration: Unauthorized <hostip> tried to join the group <group>
	else if [logstash][msgparser][id] == "msgParserId1022" {
		dissect {
			mapping => { "message" => "Registration: Unauthorized %{hostip} tried to join the group %{group}" }
			id => "msgParserId1022"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1023
	# line in RSA:  An anti replay check has failed in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1023" {
		dissect {
			mapping => { "message" => "An anti replay check has failed in group %{group}." }
			id => "msgParserId1023"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1024
	# line in RSA:  Contact from unauthorized KS <context> in group <group> <info>
	else if [logstash][msgparser][id] == "msgParserId1024" {
		dissect {
			mapping => { "message" => "Contact from unauthorized KS %{context} in group %{group} %{info}" }
			id => "msgParserId1024"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1025
	# line in RSA:  GM <ssid> deleted from group <group>.
	else if [logstash][msgparser][id] == "msgParserId1025" {
		dissect {
			mapping => { "message" => "GM %{ssid} deleted from group %{group}." }
			id => "msgParserId1025"
			add_field => {
				"event_description" => "GM deleted from group"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1026
	# line in RSA: GM received delete from KS <hostip> in the group <group>
	else if [logstash][msgparser][id] == "msgParserId1026" {
		dissect {
			mapping => { "message" => "GM received delete from KS %{hostip} in the group %{group}" }
			id => "msgParserId1026"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1027
	# line in RSA: GM did not receive rekey from KS <hostip> in group <group>
	else if [logstash][msgparser][id] == "msgParserId1027" {
		dissect {
			mapping => { "message" => "GM did not receive rekey from KS %{hostip} in group %{group}" }
			id => "msgParserId1027"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1028
	# line in RSA:  KS received unsolicited ACK from GM <hostip> in group <group>
	else if [logstash][msgparser][id] == "msgParserId1028" {
		dissect {
			mapping => { "message" => "KS received unsolicited ACK from GM %{hostip} in group %{group}" }
			id => "msgParserId1028"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1029
	# line in RSA: GM <hostip> deleted from LKH in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1029" {
		dissect {
			mapping => { "message" => "GM %{hostip} deleted from LKH in group %{group}." }
			id => "msgParserId1029"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1030
	# line in RSA:  <info> added as COOP Key Server in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1030" {
		dissect {
			mapping => { "message" => "%{info} added as COOP Key Server in group %{group}." }
			id => "msgParserId1030"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1031
	# line in RSA:  KS entering election mode in group <group> <info>
	else if [logstash][msgparser][id] == "msgParserId1031" {
		dissect {
			mapping => { "message" => "KS entering election mode in group %{group} %{info}" }
			id => "msgParserId1031"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1032
	# line in RSA:  ACL betweem KS and GM in group <group> merged.
	else if [logstash][msgparser][id] == "msgParserId1032" {
		dissect {
			mapping => { "message" => "ACL betweem KS and GM in group %{group} merged." }
			id => "msgParserId1032"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1033
	# line in RSA:  Crypto map attached for GM in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1033" {
		dissect {
			mapping => { "message" => "Crypto map attached for GM in group %{group}." }
			id => "msgParserId1033"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1034
	# line in RSA:  Crypto map detached for GM in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1034" {
		dissect {
			mapping => { "message" => "Crypto map detached for GM in group %{group}." }
			id => "msgParserId1034"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1035
	# line in RSA:  <event_description> in group <group>
	else if [logstash][msgparser][id] == "msgParserId1035" {
		dissect {
			mapping => { "message" => "%{event_description} in group %{group}" }
			id => "msgParserId1035"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1036
	# line in RSA: GM <hostip> deleted from group <group>.
	else if [logstash][msgparser][id] == "msgParserId1036" {
		dissect {
			mapping => { "message" => "GM %{hostip} deleted from group %{group}." }
			id => "msgParserId1036"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1037
	# line in RSA:  KEK expired for group <group> and was deleted
	else if [logstash][msgparser][id] == "msgParserId1037" {
		dissect {
			mapping => { "message" => "KEK expired for group %{group} and was deleted" }
			id => "msgParserId1037"
			add_field => {
				"event_description" => "KEK expired for group and was deleted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1038
	# line in RSA: GM has enabled ACL on GDOI crypto map in group <group>
	else if [logstash][msgparser][id] == "msgParserId1038" {
		dissect {
			mapping => { "message" => "GM has enabled ACL on GDOI crypto map in group %{group}" }
			id => "msgParserId1038"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1039
	# line in RSA:  <result>: Installation of Reg/Rekey policies from <hostname> <hostip> for group <group> & gm identity  <saddr>
	else if [logstash][msgparser][id] == "msgParserId1039" {
		dissect {
			mapping => { "message" => "%{result}: Installation of Reg/Rekey policies from %{hostname} %{hostip} for group %{group} & gm identity  %{saddr}" }
			id => "msgParserId1039"
			add_field => {
				"event_description" => "Successful installation of Reg/Rekey policies for group"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1040
	# line in RSA:  Received Rekey for group <group> from <saddr> to <daddr> with seq # <info>
	else if [logstash][msgparser][id] == "msgParserId1040" {
		dissect {
			mapping => { "message" => "Received Rekey for group %{group} from %{saddr} to %{daddr} with seq # %{info}" }
			id => "msgParserId1040"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1041
	# line in RSA: Registration to KS <info> complete for group <group> using address <hostip>
	else if [logstash][msgparser][id] == "msgParserId1041" {
		dissect {
			mapping => { "message" => "Registration to KS %{info} complete for group %{group} using address %{hostip}" }
			id => "msgParserId1041"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1042
	# line in RSA: Group <group> transitioned to multicast rekey.
	else if [logstash][msgparser][id] == "msgParserId1042" {
		dissect {
			mapping => { "message" => "Group %{group} transitioned to multicast rekey." }
			id => "msgParserId1042"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1043
	# line in RSA:  Group <group> transitioned to Unicast Rekey.
	else if [logstash][msgparser][id] == "msgParserId1043" {
		dissect {
			mapping => { "message" => "Group %{group} transitioned to Unicast Rekey." }
			id => "msgParserId1043"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1044
	# line in RSA: Receive only ACL received from KS <hostip> in group <group>
	else if [logstash][msgparser][id] == "msgParserId1044" {
		dissect {
			mapping => { "message" => "Receive only ACL received from KS %{hostip} in group %{group}" }
			id => "msgParserId1044"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1045
	# line in RSA:  GM left the group <group>.
	else if [logstash][msgparser][id] == "msgParserId1045" {
		dissect {
			mapping => { "message" => "GM left the group %{group}." }
			id => "msgParserId1045"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1046
	# line in RSA: IPSec SAs converted to Duplex in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1046" {
		dissect {
			mapping => { "message" => "IPSec SAs converted to Duplex in group %{group}." }
			id => "msgParserId1046"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1047
	# line in RSA:  IPSec SAs converted to Ingress in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1047" {
		dissect {
			mapping => { "message" => "IPSec SAs converted to Ingress in group %{group}." }
			id => "msgParserId1047"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1048
	# line in RSA: Config: KS <hostip> added to the Group <group>.
	else if [logstash][msgparser][id] == "msgParserId1048" {
		dissect {
			mapping => { "message" => "Config: KS %{hostip} added to the Group %{group}." }
			id => "msgParserId1048"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1049
	# line in RSA: Config: KS <hostip> removed from the Group <group>.
	else if [logstash][msgparser][id] == "msgParserId1049" {
		dissect {
			mapping => { "message" => "Config: KS %{hostip} removed from the Group %{group}." }
			id => "msgParserId1049"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1050
	# line in RSA:  KS ejected GM<hostip> in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1050" {
		dissect {
			mapping => { "message" => "KS ejected GM%{hostip} in group %{group}." }
			id => "msgParserId1050"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1051
	# line in RSA:  KS completed successful registration in group <group> with <info>
	else if [logstash][msgparser][id] == "msgParserId1051" {
		dissect {
			mapping => { "message" => "KS completed successful registration in group %{group} with %{info}" }
			id => "msgParserId1051"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1052
	# line in RSA: Group <group> transitioned to Unicast Rekey.
	else if [logstash][msgparser][id] == "msgParserId1052" {
		dissect {
			mapping => { "message" => "Group %{group} transitioned to Unicast Rekey." }
			id => "msgParserId1052"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1053
	# line in RSA:  Sending Multicast Rekey for group <group> from <info>
	else if [logstash][msgparser][id] == "msgParserId1053" {
		dissect {
			mapping => { "message" => "Sending Multicast Rekey for group %{group} from %{info}" }
			id => "msgParserId1053"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1054
	# line in RSA: Sending Unicast Rekey for group <group> from <info>
	else if [logstash][msgparser][id] == "msgParserId1054" {
		dissect {
			mapping => { "message" => "Sending Unicast Rekey for group %{group} from %{info}" }
			id => "msgParserId1054"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1055
	# line in RSA:  LKH disabled in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1055" {
		dissect {
			mapping => { "message" => "LKH disabled in group %{group}." }
			id => "msgParserId1055"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1056
	# line in RSA:  LKH enabled in group <group>.
	else if [logstash][msgparser][id] == "msgParserId1056" {
		dissect {
			mapping => { "message" => "LKH enabled in group %{group}." }
			id => "msgParserId1056"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1057
	# line in RSA:  SA KEK was updated 
	else if [logstash][msgparser][id] == "msgParserId1057" {
		dissect {
			mapping => { "message" => "SA KEK was updated" }
			id => "msgParserId1057"
			add_field => {
				"event_description" => "SA KEK was updated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1058
	# line in RSA:  SA TEK was updated 
	else if [logstash][msgparser][id] == "msgParserId1058" {
		dissect {
			mapping => { "message" => "SA TEK was updated" }
			id => "msgParserId1058"
			add_field => {
				"event_description" => "SA TEK was updated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1059
	# line in RSA: Unpacked <packets> bytes and attempted to consume <info>
	else if [logstash][msgparser][id] == "msgParserId1059" {
		dissect {
			mapping => { "message" => "Unpacked %{packets} bytes and attempted to consume %{info}" }
			id => "msgParserId1059"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1060
	# line in RSA: GigaStack GBIC in <interface> initialization failed.
	else if [logstash][msgparser][id] == "msgParserId1060" {
		dissect {
			mapping => { "message" => "GigaStack GBIC in %{interface} initialization failed." }
			id => "msgParserId1060"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1061
	# line in RSA: Link loss is detected in the GigaStack loop. Link 2 of the GigaStack GBIC in <interface> is re-enabled.
	else if [logstash][msgparser][id] == "msgParserId1061" {
		dissect {
			mapping => { "message" => "Link loss is detected in the GigaStack loop. Link 2 of the GigaStack GBIC in %{interface} is re-enabled." }
			id => "msgParserId1061"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1062
	# line in RSA:  GigaStack GBIC in <interface> is selected as Master Loop Breaker. Link 2 of the GigaStack GBIC is disabled to break the loop.
	else if [logstash][msgparser][id] == "msgParserId1062" {
		dissect {
			mapping => { "message" => "GigaStack GBIC in %{interface} is selected as Master Loop Breaker. Link 2 of the GigaStack GBIC is disabled to break the loop." }
			id => "msgParserId1062"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1063
	# line in RSA:  GKTMP Server: <hostname> is connected with Gatekeeper: <info>
	else if [logstash][msgparser][id] == "msgParserId1063" {
		dissect {
			mapping => { "message" => "GKTMP Server: %{hostname} is connected with Gatekeeper: %{info}" }
			id => "msgParserId1063"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1064
	# line in RSA:  AnswerCall ARQ with source IP <saddr> <info>
	else if [logstash][msgparser][id] == "msgParserId1064" {
		dissect {
			mapping => { "message" => "AnswerCall ARQ with source IP %{saddr} %{info}" }
			id => "msgParserId1064"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1065
	# line in RSA:  The connection to GKTMP server <hostname>( <hostip>) appears to be hung and will be closed.
	else if [logstash][msgparser][id] == "msgParserId1065" {
		dissect {
			mapping => { "message" => "The connection to GKTMP server %{hostname}( %{hostip}) appears to be hung and will be closed." }
			id => "msgParserId1065"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1066
	# line in RSA:  Cannot add MAC address <macaddr> to interface <interface> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId1066" {
		dissect {
			mapping => { "message" => "Cannot add MAC address %{macaddr} to interface %{interface} - %{event_description}" }
			id => "msgParserId1066"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1067
	# line in RSA:  Bad authentication received from <hostip> group <group>
	else if [logstash][msgparser][id] == "msgParserId1067" {
		dissect {
			mapping => { "message" => "Bad authentication received from %{hostip} group %{group}" }
			id => "msgParserId1067"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1068
	# line in RSA: <fld1> Grp <group> address <hostip>  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1068" {
		dissect {
			mapping => { "message" => "%{fld1} Grp %{group} address %{hostip}  %{event_description}" }
			id => "msgParserId1068"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1069
	# line in RSA: Duplicate address <fld1> on <fld2> sourced by <fld3>
	else if [logstash][msgparser][id] == "msgParserId1069" {
		dissect {
			mapping => { "message" => "Duplicate address %{fld1} on %{fld2} sourced by %{fld3}" }
			id => "msgParserId1069"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1070
	# line in RSA: <fld1> <group> <fld2> address <fld3> <info>
	else if [logstash][msgparser][id] == "msgParserId1070" {
		dissect {
			mapping => { "message" => "%{fld1} %{group} %{fld2} address %{fld3} %{info}" }
			id => "msgParserId1070"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1071
	# line in RSA: GSN:  <hostip> <info>
	else if [logstash][msgparser][id] == "msgParserId1071" {
		dissect {
			mapping => { "message" => "GSN:  %{hostip} %{info}" }
			id => "msgParserId1071"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1072
	# line in RSA: GSN:  <hostip>, <info>
	else if [logstash][msgparser][id] == "msgParserId1072" {
		dissect {
			mapping => { "message" => "GSN:  %{hostip}, %{info}" }
			id => "msgParserId1072"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1073
	# line in RSA: GSN:  <hostip>
	else if [logstash][msgparser][id] == "msgParserId1073" {
		dissect {
			mapping => { "message" => "GSN:  %{hostip}" }
			id => "msgParserId1073"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1074
	# line in RSA: GSN :     <hostip> IMSI : <info>
	else if [logstash][msgparser][id] == "msgParserId1074" {
		dissect {
			mapping => { "message" => "GSN :     %{hostip} IMSI : %{info}" }
			id => "msgParserId1074"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1075
	# line in RSA: GSN :     <hostip> TID : <info>
	else if [logstash][msgparser][id] == "msgParserId1075" {
		dissect {
			mapping => { "message" => "GSN :     %{hostip} TID : %{info}" }
			id => "msgParserId1075"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1076
	# line in RSA: GSN :  <hostip> <info>
	else if [logstash][msgparser][id] == "msgParserId1076" {
		dissect {
			mapping => { "message" => "GSN :  %{hostip} %{info}" }
			id => "msgParserId1076"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1077
	# line in RSA:  <info> State: <event_state>
	else if [logstash][msgparser][id] == "msgParserId1077" {
		dissect {
			mapping => { "message" => "%{info} State: %{event_state}" }
			id => "msgParserId1077"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1078
	# line in RSA: Ucode file <filename> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1078" {
		dissect {
			mapping => { "message" => "Ucode file %{filename} %{event_description}" }
			id => "msgParserId1078"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1079
	# line in RSA:  <event_description> for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1079" {
		dissect {
			mapping => { "message" => "%{event_description} for interface %{interface}" }
			id => "msgParserId1079"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1080
	# line in RSA:  <event_description> State = <event_state>
	else if [logstash][msgparser][id] == "msgParserId1080" {
		dissect {
			mapping => { "message" => "%{event_description} State = %{event_state}" }
			id => "msgParserId1080"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1081
	# line in RSA:  Interface (<interface>)
	else if [logstash][msgparser][id] == "msgParserId1081" {
		dissect {
			mapping => { "message" => "Interface (%{interface})" }
			id => "msgParserId1081"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1082
	# line in RSA:  Interface (<interface>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId1082" {
		dissect {
			mapping => { "message" => "Interface (%{interface}): %{event_description}" }
			id => "msgParserId1082"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1083
	# line in RSA:  port (<network_port>) already exists
	else if [logstash][msgparser][id] == "msgParserId1083" {
		dissect {
			mapping => { "message" => "port (%{network_port}) already exists" }
			id => "msgParserId1083"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1084
	# line in RSA: For port (<network_port>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId1084" {
		dissect {
			mapping => { "message" => "For port (%{network_port}): %{event_description}" }
			id => "msgParserId1084"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1085
	# line in RSA:  FE - interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1085" {
		dissect {
			mapping => { "message" => "FE - interface %{interface} %{event_description}" }
			id => "msgParserId1085"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1086
	# line in RSA: FE - interface: <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1086" {
		dissect {
			mapping => { "message" => "FE - interface: %{interface} %{event_description}" }
			id => "msgParserId1086"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1087
	# line in RSA: FE - interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1087" {
		dissect {
			mapping => { "message" => "FE - interface %{interface} %{event_description}" }
			id => "msgParserId1087"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1088
	# line in RSA: FE - interface: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1088" {
		dissect {
			mapping => { "message" => "FE - interface: %{event_description}" }
			id => "msgParserId1088"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1089
	# line in RSA: FE - count: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1089" {
		dissect {
			mapping => { "message" => "FE - count: %{event_description}" }
			id => "msgParserId1089"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1090
	# line in RSA:  Unexpected DCD transition interrupt on wic <info> port <network_port> occured
	else if [logstash][msgparser][id] == "msgParserId1090" {
		dissect {
			mapping => { "message" => "Unexpected DCD transition interrupt on wic %{info} port %{network_port} occured" }
			id => "msgParserId1090"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1091
	# line in RSA:  On int <interface> tx pak is <bytes> bytes
	else if [logstash][msgparser][id] == "msgParserId1091" {
		dissect {
			mapping => { "message" => "On int %{interface} tx pak is %{bytes} bytes" }
			id => "msgParserId1091"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1092
	# line in RSA:  On int <interface> tx pak size is <bytes> bytes
	else if [logstash][msgparser][id] == "msgParserId1092" {
		dissect {
			mapping => { "message" => "On int %{interface} tx pak size is %{bytes} bytes" }
			id => "msgParserId1092"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1093
	# line in RSA: GSN service <service> changed state to <event_state>
	else if [logstash][msgparser][id] == "msgParserId1093" {
		dissect {
			mapping => { "message" => "GSN service %{service} changed state to %{event_state}" }
			id => "msgParserId1093"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1094
	# line in RSA: gulf2488 chip initialization failed (errcode=<resultcode>): <event_description>
	else if [logstash][msgparser][id] == "msgParserId1094" {
		dissect {
			mapping => { "message" => "gulf2488 chip initialization failed (errcode=%{resultcode}): %{event_description}" }
			id => "msgParserId1094"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1095
	# line in RSA: MAC learning on VLAN <vlan> is <info>
	else if [logstash][msgparser][id] == "msgParserId1095" {
		dissect {
			mapping => { "message" => "MAC learning on VLAN %{vlan} is %{info}" }
			id => "msgParserId1095"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1096
	# line in RSA:  Active HA version (<version>) differs from <info>
	else if [logstash][msgparser][id] == "msgParserId1096" {
		dissect {
			mapping => { "message" => "Active HA version (%{version}) differs from %{info}" }
			id => "msgParserId1096"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1097
	# line in RSA:  Cant allocate MAC address for interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1097" {
		dissect {
			mapping => { "message" => "Cant allocate MAC address for interface %{interface}" }
			id => "msgParserId1097"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1098
	# line in RSA: Port info invalid for port <network_port> slot <info>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1098" {
		dissect {
			mapping => { "message" => "Port info invalid for port %{network_port} slot %{info}: %{event_description}" }
			id => "msgParserId1098"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1099
	# line in RSA: port number <network_port> is invalid
	else if [logstash][msgparser][id] == "msgParserId1099" {
		dissect {
			mapping => { "message" => "port number %{network_port} is invalid" }
			id => "msgParserId1099"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1100
	# line in RSA:  <event_description> for session[<sessionid>]
	else if [logstash][msgparser][id] == "msgParserId1100" {
		dissect {
			mapping => { "message" => "%{event_description} for session[%{sessionid}]" }
			id => "msgParserId1100"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1101
	# line in RSA:  Error executing applet <product>
	else if [logstash][msgparser][id] == "msgParserId1101" {
		dissect {
			mapping => { "message" => "Error executing applet %{product}" }
			id => "msgParserId1101"
			add_field => {
				"event_description" => "Error executing applet statement"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1102
	# line in RSA:  Error occurred when sending mail to SMTP server: <hostip>: <result>
	else if [logstash][msgparser][id] == "msgParserId1102" {
		dissect {
			mapping => { "message" => "Error occurred when sending mail to SMTP server: %{hostip}: %{result}" }
			id => "msgParserId1102"
			add_field => {
				"event_description" => "Error occurred when sending mail to SMTP server"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1103
	# line in RSA:  <fld1>:     Checksum error for policy <policyname> - this policy will not be run
	else if [logstash][msgparser][id] == "msgParserId1103" {
		dissect {
			mapping => { "message" => "%{fld1}:     Checksum error for policy %{policyname} - this policy will not be run" }
			id => "msgParserId1103"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%HA_EM-6-LOG" {
		# MESSAGE %HA_EM-6-LOG
		# line in RSA:  TrackRoute_cisMN013a01a15: route to <hostname> is up
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TrackRoute_cisMN013a01a15: route to %{hostname} is up" }
				id => "message-%HA_EM-6-LOG"
				add_field => {
				"event_description" => "route is up"
					"[event][id]" => "%HA_EM-6-LOG"
					"[rsa][message][id1]" => "%HA_EM-6-LOG"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %HA_EM-6-LOG:01
		# line in RSA:  email_diff: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "email_diff: %{result}" }
				id => "message-%HA_EM-6-LOG:01"
				add_field => {
				"event_description" => "email_diff"
					"[event][id]" => "%HA_EM-6-LOG:01"
					"[rsa][message][id1]" => "%HA_EM-6-LOG:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %HA_EM-6-LOG:02
		# line in RSA:  Mandatory.go_unusedportlpbk.tcl: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Mandatory.go_unusedportlpbk.tcl: %{result}" }
				id => "message-%HA_EM-6-LOG:02"
				add_field => {
				"event_description" => "EEM TCL Policy"
					"[event][id]" => "%HA_EM-6-LOG:02"
					"[rsa][message][id1]" => "%HA_EM-6-LOG:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %HA_EM-6-LOG:03
		# line in RSA:  clearTCP.tcl: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "clearTCP.tcl: %{result}" }
				id => "message-%HA_EM-6-LOG:03"
				add_field => {
				"event_description" => "clearTCP"
					"[event][id]" => "%HA_EM-6-LOG:03"
					"[rsa][message][id1]" => "%HA_EM-6-LOG:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %HA_EM-6-LOG:04
		# line in RSA:  monitoring_mt_881.tcl: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "monitoring_mt_881.tcl: %{result}" }
				id => "message-%HA_EM-6-LOG:04"
				add_field => {
				"event_description" => "monitoring_mt_881.tcl"
					"[event][id]" => "%HA_EM-6-LOG:04"
					"[rsa][message][id1]" => "%HA_EM-6-LOG:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %HA_EM-6-LOG:05
		# line in RSA:  monitoring.tcl: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "monitoring.tcl: %{result}" }
				id => "message-%HA_EM-6-LOG:05"
				add_field => {
				"event_description" => "monitoring.tcl"
					"[event][id]" => "%HA_EM-6-LOG:05"
					"[rsa][message][id1]" => "%HA_EM-6-LOG:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %HA_EM-6-LOG:06
		# line in RSA:  monitoring_mt_891.tcl: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "monitoring_mt_891.tcl: %{result}" }
				id => "message-%HA_EM-6-LOG:06"
				add_field => {
				"event_description" => "monitoring_mt_891.tcl"
					"[event][id]" => "%HA_EM-6-LOG:06"
					"[rsa][message][id1]" => "%HA_EM-6-LOG:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %HA_EM-6-LOG:07
		# line in RSA:  Tunnel_Rescue: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Tunnel_Rescue: %{result}" }
				id => "message-%HA_EM-6-LOG:07"
				add_field => {
				"event_description" => "Tunnel_Rescue"
					"[event][id]" => "%HA_EM-6-LOG:07"
					"[rsa][message][id1]" => "%HA_EM-6-LOG:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1107
	# line in RSA:  Configuration for interface <interface> failed.
	else if [logstash][msgparser][id] == "msgParserId1107" {
		dissect {
			mapping => { "message" => "Configuration for interface %{interface} failed." }
			id => "msgParserId1107"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1108
	# line in RSA: Grp <group> <info>:      <event_description>
	else if [logstash][msgparser][id] == "msgParserId1108" {
		dissect {
			mapping => { "message" => "Grp %{group} %{info}:      %{event_description}" }
			id => "msgParserId1108"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1109
	# line in RSA:  Received crash notification from <saddr>
	else if [logstash][msgparser][id] == "msgParserId1109" {
		dissect {
			mapping => { "message" => "Received crash notification from %{saddr}" }
			id => "msgParserId1109"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1110
	# line in RSA:  HDV in slot <info>: packet size (<packets>) too big.
	else if [logstash][msgparser][id] == "msgParserId1110" {
		dissect {
			mapping => { "message" => "HDV in slot %{info}: packet size (%{packets}) too big." }
			id => "msgParserId1110"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1111
	# line in RSA:  Heartbeat messages have not been heard for <info> seconds
	else if [logstash][msgparser][id] == "msgParserId1111" {
		dissect {
			mapping => { "message" => "Heartbeat messages have not been heard for %{info} seconds" }
			id => "msgParserId1111"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1112
	# line in RSA:  <info>received a packet with size <packets>.
	else if [logstash][msgparser][id] == "msgParserId1112" {
		dissect {
			mapping => { "message" => "%{info}received a packet with size %{packets}." }
			id => "msgParserId1112"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1113
	# line in RSA:  IP address <hostip> not in mac tables, mac-address <macaddr>, vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId1113" {
		dissect {
			mapping => { "message" => "IP address %{hostip} not in mac tables, mac-address %{macaddr}, vlan %{vlan}" }
			id => "msgParserId1113"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1114
	# line in RSA:  Interface <interface> IPV4 Grp <group> Active router is <change_new>
	else if [logstash][msgparser][id] == "msgParserId1114" {
		dissect {
			mapping => { "message" => "Interface %{interface} IPV4 Grp %{group} Active router is %{change_new}" }
			id => "msgParserId1114"
			add_field => {
				"event_description" => "Interface IPV4 group Active router ip changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1115
	# line in RSA:  Interface <interface> IPV4 Grp <group> Active router priority changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId1115" {
		dissect {
			mapping => { "message" => "Interface %{interface} IPV4 Grp %{group} Active router priority changed to %{change_new}" }
			id => "msgParserId1115"
			add_field => {
				"event_description" => "Interface IPV4 group Active router priority changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1116
	# line in RSA:  Interface <interface> IPV4 Grp <group> state changed from <change_old> to <change_new> reason <result>
	else if [logstash][msgparser][id] == "msgParserId1116" {
		dissect {
			mapping => { "message" => "Interface %{interface} IPV4 Grp %{group} state changed from %{change_old} to %{change_new} reason %{result}" }
			id => "msgParserId1116"
			add_field => {
				"event_description" => "Interface IPV4 group state changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1117
	# line in RSA:  Interface <interface> IPV4 Grp <group> priority changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId1117" {
		dissect {
			mapping => { "message" => "Interface %{interface} IPV4 Grp %{group} priority changed to %{change_new}" }
			id => "msgParserId1117"
			add_field => {
				"event_description" => "Interface IPV4 group priority changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1118
	# line in RSA:  Interface <interface> IPV4 Grp <group> Standby router is <change_new>
	else if [logstash][msgparser][id] == "msgParserId1118" {
		dissect {
			mapping => { "message" => "Interface %{interface} IPV4 Grp %{group} Standby router is %{change_new}" }
			id => "msgParserId1118"
			add_field => {
				"event_description" => "Interface IPV4 group Standby router ip changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1119
	# line in RSA:  Interface <interface> IPV4 Grp <group> Standby router priority changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId1119" {
		dissect {
			mapping => { "message" => "Interface %{interface} IPV4 Grp %{group} Standby router priority changed to %{change_new}" }
			id => "msgParserId1119"
			add_field => {
				"event_description" => "Interface IPV4 group Standby router priority changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1120
	# line in RSA:  <interface> IPV4 Grp <group> state move to <change_new>
	else if [logstash][msgparser][id] == "msgParserId1120" {
		dissect {
			mapping => { "message" => "%{interface} IPV4 Grp %{group} state move to %{change_new}" }
			id => "msgParserId1120"
			add_field => {
				"event_description" => "Interface IPV4 group state moved"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1121
	# line in RSA:  <interface> IPV4 Grp <group> state moving from <change_old>
	else if [logstash][msgparser][id] == "msgParserId1121" {
		dissect {
			mapping => { "message" => "%{interface} IPV4 Grp %{group} state moving from %{change_old}" }
			id => "msgParserId1121"
			add_field => {
				"event_description" => "Interface IPV4 group state moving"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1122
	# line in RSA:  Bad authentication from <saddr>{ , | <space> } group <group>{ , | <space> } remote state <info>
	else if [logstash][msgparser][id] == "msgParserId1122" {
		grok {
			match => { "message" => "^[\s]*Bad[\s]+authentication[\s]+from[\s]+(?<saddr>[^\s\s]*)([\s]*,[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+group[\s]+(?<group>[^\s\s]*)([\s]*,[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+remote[\s]+state[\s]+(?<info>.*)$" }
			id => "msgParserId1122"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1123
	# line in RSA: Bad authentication from <saddr>
	else if [logstash][msgparser][id] == "msgParserId1123" {
		dissect {
			mapping => { "message" => "Bad authentication from %{saddr}" }
			id => "msgParserId1123"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%HSRP-4-DIFFVIP1" {
		# MESSAGE %HSRP-4-DIFFVIP1:01
		# line in RSA:  <fld1> Grp <fld2> active routers virtual IP address <fld3> is different to the locally configured address <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} Grp %{fld2} active routers virtual IP address %{fld3} is different to the locally configured address %{hostip}" }
				id => "message-%HSRP-4-DIFFVIP1:01"
				add_field => {
				"action" => "active routers virtual ip different from locally configured address"
					"[event][id]" => "%HSRP-4-DIFFVIP1:01"
					"[rsa][message][id1]" => "%HSRP-4-DIFFVIP1:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %HSRP-4-DIFFVIP1
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-%HSRP-4-DIFFVIP1"
				add_field => {
					"[event][id]" => "%HSRP-4-DIFFVIP1"
					"[rsa][message][id1]" => "%HSRP-4-DIFFVIP1"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1125
	# line in RSA:  Duplicate address <daddr> on <vlan>, sourced by <fld1>
	else if [logstash][msgparser][id] == "msgParserId1125" {
		dissect {
			mapping => { "message" => "Duplicate address %{daddr} on %{vlan}, sourced by %{fld1}" }
			id => "msgParserId1125"
			add_field => {
				"event_description" => "Duplicate address Vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1126
	# line in RSA: The connection to server <hostip> appears to be hung and will be closed.
	else if [logstash][msgparser][id] == "msgParserId1126" {
		dissect {
			mapping => { "message" => "The connection to server %{hostip} appears to be hung and will be closed." }
			id => "msgParserId1126"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1127
	# line in RSA: The connection to server <hostip> failed
	else if [logstash][msgparser][id] == "msgParserId1127" {
		dissect {
			mapping => { "message" => "The connection to server %{hostip} failed" }
			id => "msgParserId1127"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1128
	# line in RSA:  request URI <url> failed
	else if [logstash][msgparser][id] == "msgParserId1128" {
		dissect {
			mapping => { "message" => "request URI %{url} failed" }
			id => "msgParserId1128"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1129
	# line in RSA: Bad port number <network_port>
	else if [logstash][msgparser][id] == "msgParserId1129" {
		dissect {
			mapping => { "message" => "Bad port number %{network_port}" }
			id => "msgParserId1129"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1130
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1130" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1130"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Unknown"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1131
	# line in RSA: SFP in interface <interface> has the same serial number
	else if [logstash][msgparser][id] == "msgParserId1131" {
		dissect {
			mapping => { "message" => "SFP in interface %{interface} has the same serial number" }
			id => "msgParserId1131"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1132
	# line in RSA: SFP in interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1132" {
		dissect {
			mapping => { "message" => "SFP in interface %{interface} %{event_description}" }
			id => "msgParserId1132"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1133
	# line in RSA:  SFP in interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1133" {
		dissect {
			mapping => { "message" => "SFP in interface %{interface} %{event_description}" }
			id => "msgParserId1133"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1134
	# line in RSA:  Excessive modem signal transitions detected on line <interface>
	else if [logstash][msgparser][id] == "msgParserId1134" {
		dissect {
			mapping => { "message" => "Excessive modem signal transitions detected on line %{interface}" }
			id => "msgParserId1134"
			add_field => {
				"event_description" => "Excessive modem signal transitions detected on line"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1135
	# line in RSA:  <fld1> packet too big (<packets>)  src <saddr>  dst <daddr>
	else if [logstash][msgparser][id] == "msgParserId1135" {
		dissect {
			mapping => { "message" => "%{fld1} packet too big (%{packets})  src %{saddr}  dst %{daddr}" }
			id => "msgParserId1135"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1136
	# line in RSA: GBIC interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1136" {
		dissect {
			mapping => { "message" => "GBIC interface %{interface} %{event_description}" }
			id => "msgParserId1136"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1137
	# line in RSA:  Identification check failed for GBIC interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1137" {
		dissect {
			mapping => { "message" => "Identification check failed for GBIC interface %{interface}" }
			id => "msgParserId1137"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1138
	# line in RSA:  <fld1> packet too big (<packets>)  from <info>
	else if [logstash][msgparser][id] == "msgParserId1138" {
		dissect {
			mapping => { "message" => "%{fld1} packet too big (%{packets})  from %{info}" }
			id => "msgParserId1138"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1139
	# line in RSA:  <event_description> interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1139" {
		dissect {
			mapping => { "message" => "%{event_description} interface %{interface}" }
			id => "msgParserId1139"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1140
	# line in RSA:  Interface <interface>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1140" {
		dissect {
			mapping => { "message" => "Interface %{interface}: %{event_description}" }
			id => "msgParserId1140"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1141
	# line in RSA:  Cannot validate if-index for this interface: <info>
	else if [logstash][msgparser][id] == "msgParserId1141" {
		dissect {
			mapping => { "message" => "Cannot validate if-index for this interface: %{info}" }
			id => "msgParserId1141"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1142
	# line in RSA:  <fld1> Group <group> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1142" {
		dissect {
			mapping => { "message" => "%{fld1} Group %{group} %{event_description}" }
			id => "msgParserId1142"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1143
	# line in RSA:  <event_description> Vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId1143" {
		dissect {
			mapping => { "message" => "%{event_description} Vlan %{vlan}" }
			id => "msgParserId1143"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1144
	# line in RSA: <fld1>:Vlan <vlan> not set since it already has Vlan <info>
	else if [logstash][msgparser][id] == "msgParserId1144" {
		dissect {
			mapping => { "message" => "%{fld1}:Vlan %{vlan} not set since it already has Vlan %{info}" }
			id => "msgParserId1144"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1145
	# line in RSA: Vlan <vlan> is mapped to <info>
	else if [logstash][msgparser][id] == "msgParserId1145" {
		dissect {
			mapping => { "message" => "Vlan %{vlan} is mapped to %{info}" }
			id => "msgParserId1145"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1146
	# line in RSA: Sig:<sigid>:<context> - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId1146" {
		dissect {
			mapping => { "message" => "Sig:%{sigid}:%{context} - from %{saddr} to %{daddr}" }
			id => "msgParserId1146"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1147
	# line in RSA: Sig:<sigid>:<context> - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId1147" {
		dissect {
			mapping => { "message" => "Sig:%{sigid}:%{context} - from %{saddr} to %{daddr}" }
			id => "msgParserId1147"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"protocol" => "ICMP"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1148
	# line in RSA: Sig:<fld1>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId1148" {
		dissect {
			mapping => { "message" => "Sig:%{fld1}:%{event_description}" }
			id => "msgParserId1148"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1149
	# line in RSA:  Connection to HostID:<saddr> OrgID:<fld1>
	else if [logstash][msgparser][id] == "msgParserId1149" {
		dissect {
			mapping => { "message" => "Connection to HostID:%{saddr} OrgID:%{fld1}" }
			id => "msgParserId1149"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1150
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1150" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1150"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1151
	# line in RSA: Sig:<sigid> Subsig:<sigid1> Sev:<severity> <info> [<saddr>:<sport> - <daddr>:<dport>]
	else if [logstash][msgparser][id] == "msgParserId1151" {
		dissect {
			mapping => { "message" => "Sig:%{sigid} Subsig:%{sigid1} Sev:%{severity} %{info} [%{saddr}:%{sport} - %{daddr}:%{dport}]" }
			id => "msgParserId1151"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1152
	# line in RSA: Sig:<sigid> Subsig:<sigid1> Global Summary: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1152" {
		dissect {
			mapping => { "message" => "Sig:%{sigid} Subsig:%{sigid1} Global Summary: %{event_description}" }
			id => "msgParserId1152"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1153
	# line in RSA: Sig:<sigid>:<context> - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId1153" {
		dissect {
			mapping => { "message" => "Sig:%{sigid}:%{context} - from %{saddr} to %{daddr}" }
			id => "msgParserId1153"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"protocol" => "TCP"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1154
	# line in RSA: Invalid SMTP command - from <saddr> to <daddr>
	else if [logstash][msgparser][id] == "msgParserId1154" {
		dissect {
			mapping => { "message" => "Invalid SMTP command - from %{saddr} to %{daddr}" }
			id => "msgParserId1154"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1155
	# line in RSA:   IF manager attempted to use interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId1155" {
		dissect {
			mapping => { "message" => "IF manager attempted to use interface %{interface} %{info}" }
			id => "msgParserId1155"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1156
	# line in RSA: IF manager attempted to add interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId1156" {
		dissect {
			mapping => { "message" => "IF manager attempted to add interface %{interface} %{info}" }
			id => "msgParserId1156"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1157
	# line in RSA: IF manager added interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId1157" {
		dissect {
			mapping => { "message" => "IF manager added interface %{interface} %{info}" }
			id => "msgParserId1157"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1158
	# line in RSA:  Interface <interface> is shutdown as it is consuming more than the maximum configured power <info> milliwatts.
	else if [logstash][msgparser][id] == "msgParserId1158" {
		dissect {
			mapping => { "message" => "Interface %{interface} is shutdown as it is consuming more than the maximum configured power %{info} milliwatts." }
			id => "msgParserId1158"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1159
	# line in RSA:  Interface <interface> is overdrawing power. it is consuming <info>
	else if [logstash][msgparser][id] == "msgParserId1159" {
		dissect {
			mapping => { "message" => "Interface %{interface} is overdrawing power. it is consuming %{info}" }
			id => "msgParserId1159"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1160
	# line in RSA:  Interface <interface> is NOT overdrawing power. <info>
	else if [logstash][msgparser][id] == "msgParserId1160" {
		dissect {
			mapping => { "message" => "Interface %{interface} is NOT overdrawing power. %{info}" }
			id => "msgParserId1160"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1161
	# line in RSA:  <interface> is <event_state> in vdc <vlan>
	else if [logstash][msgparser][id] == "msgParserId1161" {
		dissect {
			mapping => { "message" => "%{interface} is %{event_state} in vdc %{vlan}" }
			id => "msgParserId1161"
			add_field => {
				"event_description" => "Interface state"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1162
	# line in RSA:  archive verification failed for file <filename> archive <info>.
	else if [logstash][msgparser][id] == "msgParserId1162" {
		dissect {
			mapping => { "message" => "archive verification failed for file %{filename} archive %{info}." }
			id => "msgParserId1162"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1163
	# line in RSA:  Interface name <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1163" {
		dissect {
			mapping => { "message" => "Interface name %{interface} %{event_description}" }
			id => "msgParserId1163"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1164
	# line in RSA:  <interface> in progress of being inserted/removed, ignoring new request to <info>
	else if [logstash][msgparser][id] == "msgParserId1164" {
		dissect {
			mapping => { "message" => "%{interface} in progress of being inserted/removed, ignoring new request to %{info}" }
			id => "msgParserId1164"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1165
	# line in RSA:  <event_description> on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1165" {
		dissect {
			mapping => { "message" => "%{event_description} on interface %{interface}" }
			id => "msgParserId1165"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1166
	# line in RSA:  Line Protocol on Interface <interface>, <result>
	else if [logstash][msgparser][id] == "msgParserId1166" {
		dissect {
			mapping => { "message" => "Line Protocol on Interface %{interface}, %{result}" }
			id => "msgParserId1166"
			add_field => {
				"event_description" => "Line Protocol on Interface changed to up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1167
	# line in RSA: TDM connection failed from interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1167" {
		dissect {
			mapping => { "message" => "TDM connection failed from interface %{interface}" }
			id => "msgParserId1167"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1168
	# line in RSA:  System dropped <bytes> bytes of <info>
	else if [logstash][msgparser][id] == "msgParserId1168" {
		dissect {
			mapping => { "message" => "System dropped %{bytes} bytes of %{info}" }
			id => "msgParserId1168"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1169
	# line in RSA:  Unable to set <info> as a default file system.
	else if [logstash][msgparser][id] == "msgParserId1169" {
		dissect {
			mapping => { "message" => "Unable to set %{info} as a default file system." }
			id => "msgParserId1169"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1170
	# line in RSA:  Could not add filesystem <info> to IFS links
	else if [logstash][msgparser][id] == "msgParserId1170" {
		dissect {
			mapping => { "message" => "Could not add filesystem %{info} to IFS links" }
			id => "msgParserId1170"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1171
	# line in RSA:  <event_description>(setting protocol <protocol>)
	else if [logstash][msgparser][id] == "msgParserId1171" {
		dissect {
			mapping => { "message" => "%{event_description}(setting protocol %{protocol})" }
			id => "msgParserId1171"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1172
	# line in RSA: src=<saddr>, dst=<daddr>, NULL desthost
	else if [logstash][msgparser][id] == "msgParserId1172" {
		dissect {
			mapping => { "message" => "src=%{saddr}, dst=%{daddr}, NULL desthost" }
			id => "msgParserId1172"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1173
	# line in RSA: <event_description> -src=<saddr>, dst=<daddr>, <info>
	else if [logstash][msgparser][id] == "msgParserId1173" {
		dissect {
			mapping => { "message" => "%{event_description} -src=%{saddr}, dst=%{daddr}, %{info}" }
			id => "msgParserId1173"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1174
	# line in RSA:  Looping packet detected and dropped <fld1> src=<saddr>, dst=<daddr>, <info>
	else if [logstash][msgparser][id] == "msgParserId1174" {
		dissect {
			mapping => { "message" => "Looping packet detected and dropped %{fld1} src=%{saddr}, dst=%{daddr}, %{info}" }
			id => "msgParserId1174"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1175
	# line in RSA: Attempt to overwrite Sticky ARP entry: <hostip> <info>
	else if [logstash][msgparser][id] == "msgParserId1175" {
		dissect {
			mapping => { "message" => "Attempt to overwrite Sticky ARP entry: %{hostip} %{info}" }
			id => "msgParserId1175"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1176
	# line in RSA:  Bad IP address and mask {<hostip><mask> | <hostip>/<mask>} in <info>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId1177
	# line in RSA:  FAILED midchain stack: ipaddr=<hostip> <info>
	else if [logstash][msgparser][id] == "msgParserId1177" {
		dissect {
			mapping => { "message" => "FAILED midchain stack: ipaddr=%{hostip} %{info}" }
			id => "msgParserId1177"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1178
	# line in RSA: Selected IP address <hostip>
	else if [logstash][msgparser][id] == "msgParserId1178" {
		dissect {
			mapping => { "message" => "Selected IP address %{hostip}" }
			id => "msgParserId1178"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1179
	# line in RSA: Sending DNS response to <hostip> (request was for <saddr>)
	else if [logstash][msgparser][id] == "msgParserId1179" {
		dissect {
			mapping => { "message" => "Sending DNS response to %{hostip} (request was for %{saddr})" }
			id => "msgParserId1179"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1180
	# line in RSA:  Attempting web install from host <hostip>
	else if [logstash][msgparser][id] == "msgParserId1180" {
		dissect {
			mapping => { "message" => "Attempting web install from host %{hostip}" }
			id => "msgParserId1180"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1181
	# line in RSA:  <event_description>, src=<saddr>, dst=<daddr>
	else if [logstash][msgparser][id] == "msgParserId1181" {
		dissect {
			mapping => { "message" => "%{event_description}, src=%{saddr}, dst=%{daddr}" }
			id => "msgParserId1181"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1182
	# line in RSA:  port: <network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId1182" {
		dissect {
			mapping => { "message" => "port: %{network_port} %{info}" }
			id => "msgParserId1182"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1183
	# line in RSA:   Invalid interface(<interface>)
	else if [logstash][msgparser][id] == "msgParserId1183" {
		dissect {
			mapping => { "message" => "Invalid interface(%{interface})" }
			id => "msgParserId1183"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1184
	# line in RSA:  Cannot find hwidb for interface(<interface>)
	else if [logstash][msgparser][id] == "msgParserId1184" {
		dissect {
			mapping => { "message" => "Cannot find hwidb for interface(%{interface})" }
			id => "msgParserId1184"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1185
	# line in RSA:  Image bundle file <filename> corrupted.
	else if [logstash][msgparser][id] == "msgParserId1185" {
		dissect {
			mapping => { "message" => "Image bundle file %{filename} corrupted." }
			id => "msgParserId1185"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1186
	# line in RSA:  Image bundle file <filename> does not contain image file <info>
	else if [logstash][msgparser][id] == "msgParserId1186" {
		dissect {
			mapping => { "message" => "Image bundle file %{filename} does not contain image file %{info}" }
			id => "msgParserId1186"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1187
	# line in RSA:  Image bundle file <filename> not found.
	else if [logstash][msgparser][id] == "msgParserId1187" {
		dissect {
			mapping => { "message" => "Image bundle file %{filename} not found." }
			id => "msgParserId1187"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1188
	# line in RSA:  The packet size <packets> overflows the pre-defined size <info>
	else if [logstash][msgparser][id] == "msgParserId1188" {
		dissect {
			mapping => { "message" => "The packet size %{packets} overflows the pre-defined size %{info}" }
			id => "msgParserId1188"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1189
	# line in RSA:  Multiple Configuration Masters in domain <domain>. <info>
	else if [logstash][msgparser][id] == "msgParserId1189" {
		dissect {
			mapping => { "message" => "Multiple Configuration Masters in domain %{domain}. %{info}" }
			id => "msgParserId1189"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1190
	# line in RSA:  Failed to add <info> entry for host <hostip> of tableid <context>
	else if [logstash][msgparser][id] == "msgParserId1190" {
		dissect {
			mapping => { "message" => "Failed to add %{info} entry for host %{hostip} of tableid %{context}" }
			id => "msgParserId1190"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1191
	# line in RSA:  Host <hostip> is attached to multiple forwarders. <info>
	else if [logstash][msgparser][id] == "msgParserId1191" {
		dissect {
			mapping => { "message" => "Host %{hostip} is attached to multiple forwarders. %{info}" }
			id => "msgParserId1191"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1192
	# line in RSA:  Host <hostip> on interface <interface> has duplicate ip address.
	else if [logstash][msgparser][id] == "msgParserId1192" {
		dissect {
			mapping => { "message" => "Host %{hostip} on interface %{interface} has duplicate ip address." }
			id => "msgParserId1192"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1193
	# line in RSA:  No support available for interface <interface> (<info>)
	else if [logstash][msgparser][id] == "msgParserId1193" {
		dissect {
			mapping => { "message" => "No support available for interface %{interface} (%{info})" }
			id => "msgParserId1193"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1194
	# line in RSA:  Cache update request at interrupt level: <saddr>(<sport>)-><daddr>(<dport>)
	else if [logstash][msgparser][id] == "msgParserId1194" {
		dissect {
			mapping => { "message" => "Cache update request at interrupt level: %{saddr}(%{sport})->%{daddr}(%{dport})" }
			id => "msgParserId1194"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1195
	# line in RSA: Invalid cache destination <daddr>/<dport>
	else if [logstash][msgparser][id] == "msgParserId1195" {
		dissect {
			mapping => { "message" => "Invalid cache destination %{daddr}/%{dport}" }
			id => "msgParserId1195"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1196
	# line in RSA:  Error trying to start RPF watch for prefix <hostip> <info>
	else if [logstash][msgparser][id] == "msgParserId1196" {
		dissect {
			mapping => { "message" => "Error trying to start RPF watch for prefix %{hostip} %{info}" }
			id => "msgParserId1196"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1197
	# line in RSA: RPF for <hostip> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1197" {
		dissect {
			mapping => { "message" => "RPF for %{hostip} %{event_description}" }
			id => "msgParserId1197"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1198
	# line in RSA:  RPF route lookup loop for <hostip>
	else if [logstash][msgparser][id] == "msgParserId1198" {
		dissect {
			mapping => { "message" => "RPF route lookup loop for %{hostip}" }
			id => "msgParserId1198"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1199
	# line in RSA: Port <network_port> not found in any DSP group
	else if [logstash][msgparser][id] == "msgParserId1199" {
		dissect {
			mapping => { "message" => "Port %{network_port} not found in any DSP group" }
			id => "msgParserId1199"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1200
	# line in RSA: Insufficient DSP resources for timeslot <info> on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId1200" {
		dissect {
			mapping => { "message" => "Insufficient DSP resources for timeslot %{info} on port %{network_port}" }
			id => "msgParserId1200"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1201
	# line in RSA:  <event_description>: <bytes> bytes
	else if [logstash][msgparser][id] == "msgParserId1201" {
		dissect {
			mapping => { "message" => "%{event_description}: %{bytes} bytes" }
			id => "msgParserId1201"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1202
	# line in RSA: Portlist for address <hostip> proto <info> is nul
	else if [logstash][msgparser][id] == "msgParserId1202" {
		dissect {
			mapping => { "message" => "Portlist for address %{hostip} proto %{info} is nul" }
			id => "msgParserId1202"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1203
	# line in RSA:  Name=<rulename> Load=<service> Last=<result>
	else if [logstash][msgparser][id] == "msgParserId1203" {
		dissect {
			mapping => { "message" => "Name=%{rulename} Load=%{service} Last=%{result}" }
			id => "msgParserId1203"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1204
	# line in RSA:  ephone-<version>:<product> IP:<daddr> Socket:<fld2> DeviceType:<fld1>
	else if [logstash][msgparser][id] == "msgParserId1204" {
		dissect {
			mapping => { "message" => "ephone-%{version}:%{product} IP:%{daddr} Socket:%{fld2} DeviceType:%{fld1}" }
			id => "msgParserId1204"
			add_field => {
				"event_description" => "Phone has registered"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1205
	# line in RSA:  ephone-<dclass_counter1>:<serial_number> IP:<saddr> Socket:<dclass_counter2> DeviceType:<event_description>
	else if [logstash][msgparser][id] == "msgParserId1205" {
		dissect {
			mapping => { "message" => "ephone-%{dclass_counter1}:%{serial_number} IP:%{saddr} Socket:%{dclass_counter2} DeviceType:%{event_description}" }
			id => "msgParserId1205"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1206
	# line in RSA: <info> [<saddr>:<sport> - <daddr>:<dport>]
	else if [logstash][msgparser][id] == "msgParserId1206" {
		dissect {
			mapping => { "message" => "%{info} [%{saddr}:%{sport} - %{daddr}:%{dport}]" }
			id => "msgParserId1206"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1207
	# line in RSA: Sig:<sigid> Subsig:<sigid1> Sev:<severity> <signame>[<saddr>:<sport> -> <daddr>:<dport>]
	else if [logstash][msgparser][id] == "msgParserId1207" {
		dissect {
			mapping => { "message" => "Sig:%{sigid} Subsig:%{sigid1} Sev:%{severity} %{signame}[%{saddr}:%{sport} -> %{daddr}:%{dport}]" }
			id => "msgParserId1207"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1208
	# line in RSA: <event_description>(ip) dest_addr=<daddr>, src_addr=<saddr>, prot=<protocol>
	else if [logstash][msgparser][id] == "msgParserId1208" {
		dissect {
			mapping => { "message" => "%{event_description}(ip) dest_addr=%{daddr}, src_addr=%{saddr}, prot=%{protocol}" }
			id => "msgParserId1208"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1209
	# line in RSA:  decapsulate: packet missing <packets>, destadr=<daddr>, actual prot=<protocol>
	else if [logstash][msgparser][id] == "msgParserId1209" {
		dissect {
			mapping => { "message" => "decapsulate: packet missing %{packets}, destadr=%{daddr}, actual prot=%{protocol}" }
			id => "msgParserId1209"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1210
	# line in RSA: decaps: rec'd IPSEC packet has invalid spi for destaddr=<daddr>, prot=<protocol>, spi=<info>, srcaddr=<saddr>
	else if [logstash][msgparser][id] == "msgParserId1210" {
		dissect {
			mapping => { "message" => "decaps: rec'd IPSEC packet has invalid spi for destaddr=%{daddr}, prot=%{protocol}, spi=%{info}, srcaddr=%{saddr}" }
			id => "msgParserId1210"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1211
	# line in RSA:  decapsulate: packet has bad <fld1> length destadr=<daddr>, prot=<protocol>, len=<info>
	else if [logstash][msgparser][id] == "msgParserId1211" {
		dissect {
			mapping => { "message" => "decapsulate: packet has bad %{fld1} length destadr=%{daddr}, prot=%{protocol}, len=%{info}" }
			id => "msgParserId1211"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1212
	# line in RSA: Cannot send incremental SAP update to peer on interface <interface>. <info>
	else if [logstash][msgparser][id] == "msgParserId1212" {
		dissect {
			mapping => { "message" => "Cannot send incremental SAP update to peer on interface %{interface}. %{info}" }
			id => "msgParserId1212"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1213
	# line in RSA:  Host mac-address <macaddr> ip-address <hostip> interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1213" {
		dissect {
			mapping => { "message" => "Host mac-address %{macaddr} ip-address %{hostip} interface %{interface}" }
			id => "msgParserId1213"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1214
	# line in RSA:  SNMP trap source <info> has no ip address
	else if [logstash][msgparser][id] == "msgParserId1214" {
		dissect {
			mapping => { "message" => "SNMP trap source %{info} has no ip address" }
			id => "msgParserId1214"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1215
	# line in RSA:  SNMP trap source <info> has no ipv6 address
	else if [logstash][msgparser][id] == "msgParserId1215" {
		dissect {
			mapping => { "message" => "SNMP trap source %{info} has no ipv6 address" }
			id => "msgParserId1215"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1216
	# line in RSA:  <info>: from the host <saddr> destined to <daddr>
	else if [logstash][msgparser][id] == "msgParserId1216" {
		dissect {
			mapping => { "message" => "%{info}: from the host %{saddr} destined to %{daddr}" }
			id => "msgParserId1216"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1217
	# line in RSA: <info>: from the host <saddr> destined to <daddr>
	else if [logstash][msgparser][id] == "msgParserId1217" {
		dissect {
			mapping => { "message" => "%{info}: from the host %{saddr} destined to %{daddr}" }
			id => "msgParserId1217"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1218
	# line in RSA:  <event_description> - sent by <saddr>, destined to <daddr>
	else if [logstash][msgparser][id] == "msgParserId1218" {
		dissect {
			mapping => { "message" => "%{event_description} - sent by %{saddr}, destined to %{daddr}" }
			id => "msgParserId1218"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1219
	# line in RSA: ISDN FATAL ERROR: file <filename>  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1219" {
		dissect {
			mapping => { "message" => "ISDN FATAL ERROR: file %{filename}  %{event_description}" }
			id => "msgParserId1219"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1220
	# line in RSA:  Layer 2 for Interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId1220" {
		dissect {
			mapping => { "message" => "Layer 2 for Interface %{interface} %{info}" }
			id => "msgParserId1220"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1221
	# line in RSA: Layer 2 for Interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId1221" {
		dissect {
			mapping => { "message" => "Layer 2 for Interface %{interface} %{info}" }
			id => "msgParserId1221"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1222
	# line in RSA:  Interface <interface>{,|-} <event_description>
	else if [logstash][msgparser][id] == "msgParserId1222" {
		grok {
			match => { "message" => "^[\s]*Interface[\s]+(?<interface>[^,\-]*)(,|\-)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1222"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1223
	# line in RSA: Interface <interface>{,|-} <event_description>
	else if [logstash][msgparser][id] == "msgParserId1223" {
		grok {
			match => { "message" => "^Interface[\s]+(?<interface>[^,\-]*)(,|\-)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1223"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1224
	# line in RSA:  <event_description> on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId1224" {
		dissect {
			mapping => { "message" => "%{event_description} on port %{network_port}" }
			id => "msgParserId1224"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1225
	# line in RSA: Interface <interface>  disconnected from <service>, call lasted <fld11> seconds
	else if [logstash][msgparser][id] == "msgParserId1225" {
		dissect {
			mapping => { "message" => "Interface %{interface}  disconnected from %{service}, call lasted %{fld11} seconds" }
			id => "msgParserId1225"
			add_field => {
				"event_description" => "Disconnected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1226
	# line in RSA:   Layer 2 for Interface <interface>, TEI <device> changed to <result>
	else if [logstash][msgparser][id] == "msgParserId1226" {
		dissect {
			mapping => { "message" => "Layer 2 for Interface %{interface}, TEI %{device} changed to %{result}" }
			id => "msgParserId1226"
			add_field => {
				"event_description" => "Layer 2 for interface set to down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1227
	# line in RSA:   Layer 2 for Interface <interface>, TEI <device> changed to <result>
	else if [logstash][msgparser][id] == "msgParserId1227" {
		dissect {
			mapping => { "message" => "Layer 2 for Interface %{interface}, TEI %{device} changed to %{result}" }
			id => "msgParserId1227"
			add_field => {
				"event_description" => "Layer 2 for interface set to up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1228
	# line in RSA:   Invalid params <info> under session(<sessionid>)
	else if [logstash][msgparser][id] == "msgParserId1228" {
		dissect {
			mapping => { "message" => "Invalid params %{info} under session(%{sessionid})" }
			id => "msgParserId1228"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1229
	# line in RSA: The intended session <sessionid> <info>
	else if [logstash][msgparser][id] == "msgParserId1229" {
		dissect {
			mapping => { "message" => "The intended session %{sessionid} %{info}" }
			id => "msgParserId1229"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1230
	# line in RSA:  Negotiation is not finished for msg session(<sessionid>).
	else if [logstash][msgparser][id] == "msgParserId1230" {
		dissect {
			mapping => { "message" => "Negotiation is not finished for msg session(%{sessionid})." }
			id => "msgParserId1230"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1231
	# line in RSA: VLAN (<vlan>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId1231" {
		dissect {
			mapping => { "message" => "VLAN (%{vlan}) %{event_description}" }
			id => "msgParserId1231"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1232
	# line in RSA:  LACP port <portname>(<fld1>) of port-channel <interface>(<fld2>) not receiving any LACP BPDUs  suspending (individual) port
	else if [logstash][msgparser][id] == "msgParserId1232" {
		dissect {
			mapping => { "message" => "LACP port %{portname}(%{fld1}) of port-channel %{interface}(%{fld2}) not receiving any LACP BPDUs  suspending (individual) port" }
			id => "msgParserId1232"
			add_field => {
				"event_description" => "LACP port of port-channel not receiving any LACP BPDUs"
				"result" => "suspending individual port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1233
	# line in RSA: Unit <interface> Transmits stalled. Check ethernet cable connection
	else if [logstash][msgparser][id] == "msgParserId1233" {
		dissect {
			mapping => { "message" => "Unit %{interface} Transmits stalled. Check ethernet cable connection" }
			id => "msgParserId1233"
			add_field => {
				"event_description" => "bad ethernet cable connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1234
	# line in RSA:  Unit <info>
	else if [logstash][msgparser][id] == "msgParserId1234" {
		dissect {
			mapping => { "message" => "Unit %{info}" }
			id => "msgParserId1234"
			add_field => {
				"event_description" => "excessive collisions detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1235
	# line in RSA:  Interface <interface>, <info>
	else if [logstash][msgparser][id] == "msgParserId1235" {
		dissect {
			mapping => { "message" => "Interface %{interface}, %{info}" }
			id => "msgParserId1235"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1236
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1236" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1236"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1237
	# line in RSA: Channel or Port <network_port>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1237" {
		dissect {
			mapping => { "message" => "Channel or Port %{network_port}: %{event_description}" }
			id => "msgParserId1237"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1238
	# line in RSA: MPLS loadsharing inconsistency for <hostip>/<info>
	else if [logstash][msgparser][id] == "msgParserId1238" {
		dissect {
			mapping => { "message" => "MPLS loadsharing inconsistency for %{hostip}/%{info}" }
			id => "msgParserId1238"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1239
	# line in RSA:  Cannot read GBIC in port <network_port>- <event_description>
	else if [logstash][msgparser][id] == "msgParserId1239" {
		dissect {
			mapping => { "message" => "Cannot read GBIC in port %{network_port}- %{event_description}" }
			id => "msgParserId1239"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1240
	# line in RSA: GR session <saddr>:<sport> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1240" {
		dissect {
			mapping => { "message" => "GR session %{saddr}:%{sport} %{event_description}" }
			id => "msgParserId1240"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1241
	# line in RSA: { LDP | TDP } Neighbor <saddr>:<sport> is {DOWN | UP}
	else if [logstash][msgparser][id] == "msgParserId1241" {
		grok {
			match => { "message" => "^([\s]*LDP[\s]+|[\s]*TDP[\s]+)[\s]+Neighbor[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+is[\s]+(DOWN[\s]+|[\s]*UP)$" }
			id => "msgParserId1241"
			add_field => {
				"event_description" => "Neighbor state change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1242
	# line in RSA: <saddr>:<sport>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1242" {
		dissect {
			mapping => { "message" => "%{saddr}:%{sport}: %{event_description}" }
			id => "msgParserId1242"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1243
	# line in RSA:  All interface counters cleared by user
	else if [logstash][msgparser][id] == "msgParserId1243" {
		dissect {
			mapping => { "message" => "All interface counters cleared by user" }
			id => "msgParserId1243"
			add_field => {
				"event_description" => "All interface counters cleared by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1244
	# line in RSA:   Installing <interface> LIIN interface tableid failed
	else if [logstash][msgparser][id] == "msgParserId1244" {
		dissect {
			mapping => { "message" => "Installing %{interface} LIIN interface tableid failed" }
			id => "msgParserId1244"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1245
	# line in RSA: Line protocol on Interface <interface> changed state to <disposition>
	else if [logstash][msgparser][id] == "msgParserId1245" {
		dissect {
			mapping => { "message" => "Line protocol on Interface %{interface} changed state to %{disposition}" }
			id => "msgParserId1245"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1246
	# line in RSA:  Line protocol on Interface <interface>, changed state to <disposition> 
	else if [logstash][msgparser][id] == "msgParserId1246" {
		dissect {
			mapping => { "message" => "Line protocol on Interface %{interface}, changed state to %{disposition}" }
			id => "msgParserId1246"
			add_field => {
				"event_description" => "Line protocol state change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1247
	# line in RSA:  { <device>: Interface | Interface } <interface> { , changed | changed } state to <disposition>
	else if [logstash][msgparser][id] == "msgParserId1247" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<device>[^:]*):[\s]+Interface[\s]+|[\s]*Interface[\s]+)[\s]+(?<interface>[^\s]*)[\s]+([\s]*,[\s]+changed[\s]+|[\s]*changed[\s]+)[\s]+state[\s]+to[\s]+(?<disposition>.*)$" }
			id => "msgParserId1247"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Link state change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1248
	# line in RSA: <interface> is experiencing errors
	else if [logstash][msgparser][id] == "msgParserId1248" {
		dissect {
			mapping => { "message" => "%{interface} is experiencing errors" }
			id => "msgParserId1248"
			add_field => {
				"event_description" => "experiencing errors"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1249
	# line in RSA:  Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1249" {
		dissect {
			mapping => { "message" => "Interface %{interface} %{event_description}" }
			id => "msgParserId1249"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1250
	# line in RSA:  <fld1> address <hostip>, resolved by <info>
	else if [logstash][msgparser][id] == "msgParserId1250" {
		dissect {
			mapping => { "message" => "%{fld1} address %{hostip}, resolved by %{info}" }
			id => "msgParserId1250"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1251
	# line in RSA: Interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1251" {
		dissect {
			mapping => { "message" => "Interface %{interface}" }
			id => "msgParserId1251"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1252
	# line in RSA:  <fld1> address <hostip> <info>
	else if [logstash][msgparser][id] == "msgParserId1252" {
		dissect {
			mapping => { "message" => "%{fld1} address %{hostip} %{info}" }
			id => "msgParserId1252"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1253
	# line in RSA:  Server with Chassis ID <smacaddr> Port ID <macaddr> on local port <portname> has been removed
	else if [logstash][msgparser][id] == "msgParserId1253" {
		dissect {
			mapping => { "message" => "Server with Chassis ID %{smacaddr} Port ID %{macaddr} on local port %{portname} has been removed" }
			id => "msgParserId1253"
			add_field => {
				"event_description" => "Server on local port has been removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1254
	# line in RSA:  Server with Chassis ID <smacaddr> Port ID <macaddr> management address <fld1> discovered on local port <portname> in vlan <vlan> with <result>
	else if [logstash][msgparser][id] == "msgParserId1254" {
		dissect {
			mapping => { "message" => "Server with Chassis ID %{smacaddr} Port ID %{macaddr} management address %{fld1} discovered on local port %{portname} in vlan %{vlan} with %{result}" }
			id => "msgParserId1254"
			add_field => {
				"event_description" => "Server on local port has been added on local port in vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1255
	# line in RSA:  Loading file <filename>
	else if [logstash][msgparser][id] == "msgParserId1255" {
		dissect {
			mapping => { "message" => "Loading file %{filename}" }
			id => "msgParserId1255"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1256
	# line in RSA: CPE on interface <interface> is in invalid mode MODE.
	else if [logstash][msgparser][id] == "msgParserId1256" {
		dissect {
			mapping => { "message" => "CPE on interface %{interface} is in invalid mode MODE." }
			id => "msgParserId1256"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1257
	# line in RSA: CPE on interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1257" {
		dissect {
			mapping => { "message" => "CPE on interface %{interface} %{event_description}" }
			id => "msgParserId1257"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1258
	# line in RSA:  Could not fetch CPE firmware version and checksum on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1258" {
		dissect {
			mapping => { "message" => "Could not fetch CPE firmware version and checksum on interface %{interface}" }
			id => "msgParserId1258"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1259
	# line in RSA:  CPE has unrecognizable model number <info> on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1259" {
		dissect {
			mapping => { "message" => "CPE has unrecognizable model number %{info} on interface %{interface}" }
			id => "msgParserId1259"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1260
	# line in RSA:  CPE unit on interface <interface> changed.
	else if [logstash][msgparser][id] == "msgParserId1260" {
		dissect {
			mapping => { "message" => "CPE unit on interface %{interface} changed." }
			id => "msgParserId1260"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1261
	# line in RSA:  LRE Log: Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1261" {
		dissect {
			mapping => { "message" => "LRE Log: Interface %{interface} %{event_description}" }
			id => "msgParserId1261"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1262
	# line in RSA: (Interface <interface>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId1262" {
		dissect {
			mapping => { "message" => "(Interface %{interface}) %{event_description}" }
			id => "msgParserId1262"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1263
	# line in RSA:  <event_description> - File <filename> Line <info>
	else if [logstash][msgparser][id] == "msgParserId1263" {
		dissect {
			mapping => { "message" => "%{event_description} - File %{filename} Line %{info}" }
			id => "msgParserId1263"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1264
	# line in RSA:  LTL parity check request for <device>.
	else if [logstash][msgparser][id] == "msgParserId1264" {
		dissect {
			mapping => { "message" => "LTL parity check request for %{device}." }
			id => "msgParserId1264"
			add_field => {
				"event_description" => "LTL parity check request"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1265
	# line in RSA:  Authentication failed for client {(Unknown MAC)|(<macaddr>)} on Interface {<interface>/<network_port>|<interface>}
	else if [logstash][msgparser][id] == "msgParserId1265" {
		grok {
			match => { "message" => "^[\s]*Authentication[\s]+failed[\s]+for[\s]+client[\s]+(\(Unknown[\s]+MAC\)|\((?<macaddr>[^\)]*)\))[\s]+on[\s]+Interface[\s]+((?<interface>[^/]*)/(?<network_port>.*)|(?<interface>.*))$" }
			id => "msgParserId1265"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1266
	# line in RSA:  Authentication successful for client ({%<fld1>|<smacaddr>}) on {Interface <interface> AuditSessionID <sessionid>|Interface <interface>}
	else if [logstash][msgparser][id] == "msgParserId1266" {
		grok {
			match => { "message" => "^[\s]*Authentication[\s]+successful[\s]+for[\s]+client[\s]+\((%(?<fld1>[^\)]*)|(?<smacaddr>[^\)]*))\)[\s]+on[\s]+(Interface[\s]+(?<interface>[^\s]*)[\s]+AuditSessionID[\s]+(?<sessionid>.*)|Interface[\s]+(?<interface>.*))$" }
			id => "msgParserId1266"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1267
	# line in RSA: Vlan <vlan> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1267" {
		dissect {
			mapping => { "message" => "Vlan %{vlan} %{event_description}" }
			id => "msgParserId1267"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1268
	# line in RSA: Enforcing limit on Vlan <vlan> with configured limit <info>
	else if [logstash][msgparser][id] == "msgParserId1268" {
		dissect {
			mapping => { "message" => "Enforcing limit on Vlan %{vlan} with configured limit %{info}" }
			id => "msgParserId1268"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1269
	# line in RSA: Host <hostname> in vlan <vlan> is flapping between port <network_port> and port <change_new>
	else if [logstash][msgparser][id] == "msgParserId1269" {
		dissect {
			mapping => { "message" => "Host %{hostname} in vlan %{vlan} is flapping between port %{network_port} and port %{change_new}" }
			id => "msgParserId1269"
			add_field => {
				"change_attribute" => "port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1270
	# line in RSA:  Host <hostname> in vlan <vlan> is flapping between port <network_port> and port <change_new>
	else if [logstash][msgparser][id] == "msgParserId1270" {
		dissect {
			mapping => { "message" => "Host %{hostname} in vlan %{vlan} is flapping between port %{network_port} and port %{change_new}" }
			id => "msgParserId1270"
			add_field => {
				"change_attribute" => "port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1271
	# line in RSA: Failed to start SCC for port <network_port> on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1271" {
		dissect {
			mapping => { "message" => "Failed to start SCC for port %{network_port} on interface %{interface}" }
			id => "msgParserId1271"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1272
	# line in RSA: Attempt to enable the port no <network_port> on Mux while <info>
	else if [logstash][msgparser][id] == "msgParserId1272" {
		dissect {
			mapping => { "message" => "Attempt to enable the port no %{network_port} on Mux while %{info}" }
			id => "msgParserId1272"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1273
	# line in RSA:  { Entering | Exiting } Holdover for Controller <fld11> 
	else if [logstash][msgparser][id] == "msgParserId1273" {
		grok {
			match => { "message" => "^[\s]*([\s]*Entering[\s]+|[\s]*Exiting[\s]+)[\s]+Holdover[\s]+for[\s]+Controller[\s]+(?<fld11>[^\s]*)[\s]+$" }
			id => "msgParserId1273"
			add_field => {
				"event_description" => "Entering/Exiting Holdover for Controller"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1274
	# line in RSA:  Failed to transmit MBUS message for over <info> secs
	else if [logstash][msgparser][id] == "msgParserId1274" {
		dissect {
			mapping => { "message" => "Failed to transmit MBUS message for over %{info} secs" }
			id => "msgParserId1274"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1275
	# line in RSA:   Multicast Expansion table has exceeded <resultcode> of its capacity and <result>
	else if [logstash][msgparser][id] == "msgParserId1275" {
		dissect {
			mapping => { "message" => "Multicast Expansion table has exceeded %{resultcode} of its capacity and %{result}" }
			id => "msgParserId1275"
			add_field => {
				"event_description" => "Multicast Expansion table has almost exceeded its capacity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1276
	# line in RSA:  <event_description> file <filename>
	else if [logstash][msgparser][id] == "msgParserId1276" {
		dissect {
			mapping => { "message" => "%{event_description} file %{filename}" }
			id => "msgParserId1276"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1277
	# line in RSA:  Attempt to malloc <bytes> bytes <info>
	else if [logstash][msgparser][id] == "msgParserId1277" {
		dissect {
			mapping => { "message" => "Attempt to malloc %{bytes} bytes %{info}" }
			id => "msgParserId1277"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1278
	# line in RSA: memory pool exceeds maximum (<bytes> bytes) allowed.
	else if [logstash][msgparser][id] == "msgParserId1278" {
		dissect {
			mapping => { "message" => "memory pool exceeds maximum (%{bytes} bytes) allowed." }
			id => "msgParserId1278"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1279
	# line in RSA: The VLAN [<vlan>] is invalid for this platform.
	else if [logstash][msgparser][id] == "msgParserId1279" {
		dissect {
			mapping => { "message" => "The VLAN [%{vlan}] is invalid for this platform." }
			id => "msgParserId1279"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1280
	# line in RSA:  VLAN <vlan> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1280" {
		dissect {
			mapping => { "message" => "VLAN %{vlan} %{event_description}" }
			id => "msgParserId1280"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1281
	# line in RSA: Couldnt allocate <bytes> bytes in <info>
	else if [logstash][msgparser][id] == "msgParserId1281" {
		dissect {
			mapping => { "message" => "Couldnt allocate %{bytes} bytes in %{info}" }
			id => "msgParserId1281"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1282
	# line in RSA:  Error reading URL <url>
	else if [logstash][msgparser][id] == "msgParserId1282" {
		dissect {
			mapping => { "message" => "Error reading URL %{url}" }
			id => "msgParserId1282"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1283
	# line in RSA:  Error reading URL <url> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1283" {
		dissect {
			mapping => { "message" => "Error reading URL %{url} %{event_description}" }
			id => "msgParserId1283"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1284
	# line in RSA: Error reading URL <url> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1284" {
		dissect {
			mapping => { "message" => "Error reading URL %{url} %{event_description}" }
			id => "msgParserId1284"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1285
	# line in RSA: Couldnt open URL <url>
	else if [logstash][msgparser][id] == "msgParserId1285" {
		dissect {
			mapping => { "message" => "Couldnt open URL %{url}" }
			id => "msgParserId1285"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1286
	# line in RSA:  interface/mask entry installation failed on <hostip>/<mask>, vlan <vlan>
	else if [logstash][msgparser][id] == "msgParserId1286" {
		dissect {
			mapping => { "message" => "interface/mask entry installation failed on %{hostip}/%{mask}, vlan %{vlan}" }
			id => "msgParserId1286"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1287
	# line in RSA:  Failed to allocate MET entry, <result>. <info>
	else if [logstash][msgparser][id] == "msgParserId1287" {
		dissect {
			mapping => { "message" => "Failed to allocate MET entry, %{result}. %{info}" }
			id => "msgParserId1287"
			add_field => {
				"event_description" => "Failed to allocate MET entry"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1288
	# line in RSA: Error adding vlan <vlan> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1288" {
		dissect {
			mapping => { "message" => "Error adding vlan %{vlan} %{event_description}" }
			id => "msgParserId1288"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1289
	# line in RSA: Integrated modem image file <filename> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1289" {
		dissect {
			mapping => { "message" => "Integrated modem image file %{filename} %{event_description}" }
			id => "msgParserId1289"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1290
	# line in RSA:  Module <fld11> is online (serial: <fld12>)
	else if [logstash][msgparser][id] == "msgParserId1290" {
		dissect {
			mapping => { "message" => "Module %{fld11} is online (serial: %{fld12})" }
			id => "msgParserId1290"
			add_field => {
				"event_description" => "Module is online"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1291
	# line in RSA:  Session <sessionid> is down. Reason "<result>"
	else if [logstash][msgparser][id] == "msgParserId1291" {
		dissect {
			mapping => { "message" => "Session %{sessionid} is down. Reason \"%{result}\"" }
			id => "msgParserId1291"
			add_field => {
				"event_description" => "Session down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1292
	# line in RSA:  Session <sessionid> is up.
	else if [logstash][msgparser][id] == "msgParserId1292" {
		dissect {
			mapping => { "message" => "Session %{sessionid} is up." }
			id => "msgParserId1292"
			add_field => {
				"event_description" => "Session up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1293
	# line in RSA: Sub-interface <interface> is null
	else if [logstash][msgparser][id] == "msgParserId1293" {
		dissect {
			mapping => { "message" => "Sub-interface %{interface} is null" }
			id => "msgParserId1293"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1294
	# line in RSA:  Router id (<hostip>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId1294" {
		dissect {
			mapping => { "message" => "Router id (%{hostip}) %{event_description}" }
			id => "msgParserId1294"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1295
	# line in RSA: Invalid router id (<hostip>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId1295" {
		dissect {
			mapping => { "message" => "Invalid router id (%{hostip}) %{event_description}" }
			id => "msgParserId1295"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1296
	# line in RSA:  <fld1> RD <fld2> <hostip>/<network_port> label <info>
	else if [logstash][msgparser][id] == "msgParserId1296" {
		dissect {
			mapping => { "message" => "%{fld1} RD %{fld2} %{hostip}/%{network_port} label %{info}" }
			id => "msgParserId1296"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1297
	# line in RSA:  LC in slot <ssid> failed to open IPC port to RP, error = <result>
	else if [logstash][msgparser][id] == "msgParserId1297" {
		dissect {
			mapping => { "message" => "LC in slot %{ssid} failed to open IPC port to RP, error = %{result}" }
			id => "msgParserId1297"
			add_field => {
				"event_description" => "LC in slot failed to open IPC port to RP"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1298
	# line in RSA: Error initializing IP <protocol> radix for <hostip>
	else if [logstash][msgparser][id] == "msgParserId1298" {
		dissect {
			mapping => { "message" => "Error initializing IP %{protocol} radix for %{hostip}" }
			id => "msgParserId1298"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1299
	# line in RSA: IGMP group <hostip> to delete from interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId1299" {
		dissect {
			mapping => { "message" => "IGMP group %{hostip} to delete from interface %{interface} %{info}" }
			id => "msgParserId1299"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1300
	# line in RSA: IGMP wavl <fld1> failed for group <hostip> in interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1300" {
		dissect {
			mapping => { "message" => "IGMP wavl %{fld1} failed for group %{hostip} in interface %{interface}" }
			id => "msgParserId1300"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1301
	# line in RSA: Exceeded multicast limit for group <hostip>, source <saddr> on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1301" {
		dissect {
			mapping => { "message" => "Exceeded multicast limit for group %{hostip}, source %{saddr} on interface %{interface}" }
			id => "msgParserId1301"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1302
	# line in RSA: Error trying to delete multicast route entry <hostip>/<network_port> for <info> (<context>)
	else if [logstash][msgparser][id] == "msgParserId1302" {
		dissect {
			mapping => { "message" => "Error trying to delete multicast route entry %{hostip}/%{network_port} for %{info} (%{context})" }
			id => "msgParserId1302"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1303
	# line in RSA: Error trying to add multicast route entry <hostip>/<network_port> for <info> (<context>)
	else if [logstash][msgparser][id] == "msgParserId1303" {
		dissect {
			mapping => { "message" => "Error trying to add multicast route entry %{hostip}/%{network_port} for %{info} (%{context})" }
			id => "msgParserId1303"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1304
	# line in RSA:  Inserted dynamically learnt multicast source mac <macaddr>! <info>: <action>
	else if [logstash][msgparser][id] == "msgParserId1304" {
		dissect {
			mapping => { "message" => "Inserted dynamically learnt multicast source mac %{macaddr}! %{info}: %{action}" }
			id => "msgParserId1304"
			add_field => {
				"event_description" => "Inserted dynamically learnt multicast source mac"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1305
	# line in RSA:  <hostip>/<network_port> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId1305" {
		dissect {
			mapping => { "message" => "%{hostip}/%{network_port} - %{event_description}" }
			id => "msgParserId1305"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1306
	# line in RSA:   <event_description>
	else if [logstash][msgparser][id] == "msgParserId1306" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1306"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1307
	# line in RSA: Port info invalid for port id <network_port> slot <info>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1307" {
		dissect {
			mapping => { "message" => "Port info invalid for port id %{network_port} slot %{info}: %{event_description}" }
			id => "msgParserId1307"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1308
	# line in RSA:  System minor alarm on power supply <dclass_counter1>: <result>
	else if [logstash][msgparser][id] == "msgParserId1308" {
		dissect {
			mapping => { "message" => "System minor alarm on power supply %{dclass_counter1}: %{result}" }
			id => "msgParserId1308"
			add_field => {
				"event_description" => "System minor alarm on power supply"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1309
	# line in RSA:  <result>: System minor alarm on power supply <dclass_counter1>: failed
	else if [logstash][msgparser][id] == "msgParserId1309" {
		dissect {
			mapping => { "message" => "%{result}: System minor alarm on power supply %{dclass_counter1}: failed" }
			id => "msgParserId1309"
			add_field => {
				"event_description" => "System minor alarm on power supply"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1310
	# line in RSA:  <device> Off-line (Serial Number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId1310" {
		dissect {
			mapping => { "message" => "%{device} Off-line (Serial Number %{serial_number})" }
			id => "msgParserId1310"
			add_field => {
				"event_description" => "FEX offline"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1311
	# line in RSA:  <device> On-line 
	else if [logstash][msgparser][id] == "msgParserId1311" {
		dissect {
			mapping => { "message" => "%{device} On-line" }
			id => "msgParserId1311"
			add_field => {
				"event_description" => "FEX online"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1312
	# line in RSA: NAK Response Received on invalid slot/port <info>/<network_port>
	else if [logstash][msgparser][id] == "msgParserId1312" {
		dissect {
			mapping => { "message" => "NAK Response Received on invalid slot/port %{info}/%{network_port}" }
			id => "msgParserId1312"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1313
	# line in RSA:  <event_description> for port <network_port>
	else if [logstash][msgparser][id] == "msgParserId1313" {
		dissect {
			mapping => { "message" => "%{event_description} for port %{network_port}" }
			id => "msgParserId1313"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1314
	# line in RSA: NextPort Module <info> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1314" {
		dissect {
			mapping => { "message" => "NextPort Module %{info} %{event_description}" }
			id => "msgParserId1314"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1315
	# line in RSA:  Could not open crashinfo file <filename>
	else if [logstash][msgparser][id] == "msgParserId1315" {
		dissect {
			mapping => { "message" => "Could not open crashinfo file %{filename}" }
			id => "msgParserId1315"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1316
	# line in RSA: Peer <hostip> is unreachable
	else if [logstash][msgparser][id] == "msgParserId1316" {
		dissect {
			mapping => { "message" => "Peer %{hostip} is unreachable" }
			id => "msgParserId1316"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1317
	# line in RSA: NTP synced to peer <hostip>
	else if [logstash][msgparser][id] == "msgParserId1317" {
		dissect {
			mapping => { "message" => "NTP synced to peer %{hostip}" }
			id => "msgParserId1317"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1318
	# line in RSA: Peer <hostip> is reachable
	else if [logstash][msgparser][id] == "msgParserId1318" {
		dissect {
			mapping => { "message" => "Peer %{hostip} is reachable" }
			id => "msgParserId1318"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1319
	# line in RSA: Slot <fld1> Subcard <fld2> port <network_port>:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1319" {
		dissect {
			mapping => { "message" => "Slot %{fld1} Subcard %{fld2} port %{network_port}:  %{event_description}" }
			id => "msgParserId1319"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1320
	# line in RSA:  Card in module <fld11>, is being power-cycled (<result>)
	else if [logstash][msgparser][id] == "msgParserId1320" {
		dissect {
			mapping => { "message" => "Card in module %{fld11}, is being power-cycled (%{result})" }
			id => "msgParserId1320"
			add_field => {
				"event_description" => "Card in module is being power-cycled"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1321
	# line in RSA: Module <fld11> DFC installed is not identical to system PFC and will perform at current system operating mode.
	else if [logstash][msgparser][id] == "msgParserId1321" {
		dissect {
			mapping => { "message" => "Module %{fld11} DFC installed is not identical to system PFC and will perform at current system operating mode." }
			id => "msgParserId1321"
			add_field => {
				"event_description" => "DFC installed is not identical to system PFC"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1322
	# line in RSA:  Card inserted in slot <fld11>, <result> 
	else if [logstash][msgparser][id] == "msgParserId1322" {
		dissect {
			mapping => { "message" => "Card inserted in slot %{fld11}, %{result}" }
			id => "msgParserId1322"
			add_field => {
				"event_description" => "Card inserted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1323
	# line in RSA:  Module <fld11> is being disabled due to power convertor failure <resultcode>
	else if [logstash][msgparser][id] == "msgParserId1323" {
		dissect {
			mapping => { "message" => "Module %{fld11} is being disabled due to power convertor failure %{resultcode}" }
			id => "msgParserId1323"
			add_field => {
				"event_description" => "Module disabled due to power convertor failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1324
	# line in RSA:  Card removed from slot <fld11>, <result> 
	else if [logstash][msgparser][id] == "msgParserId1324" {
		dissect {
			mapping => { "message" => "Card removed from slot %{fld11}, %{result}" }
			id => "msgParserId1324"
			add_field => {
				"event_description" => "Card removed from slot"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1325
	# line in RSA: LMP rcvd msg from unknown src ip 0x<saddr>, <info>
	else if [logstash][msgparser][id] == "msgParserId1325" {
		dissect {
			mapping => { "message" => "LMP rcvd msg from unknown src ip 0x%{saddr}, %{info}" }
			id => "msgParserId1325"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1326
	# line in RSA:  Module <info>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1326" {
		dissect {
			mapping => { "message" => "Module %{info}: %{event_description}" }
			id => "msgParserId1326"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1327
	# line in RSA:  Port info invalid for port <network_port> slot <info> 
	else if [logstash][msgparser][id] == "msgParserId1327" {
		dissect {
			mapping => { "message" => "Port info invalid for port %{network_port} slot %{info}" }
			id => "msgParserId1327"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1328
	# line in RSA:  Port info invalid for port id <network_port> slot <info> 
	else if [logstash][msgparser][id] == "msgParserId1328" {
		dissect {
			mapping => { "message" => "Port info invalid for port id %{network_port} slot %{info}" }
			id => "msgParserId1328"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1329
	# line in RSA: area <info> lsid <hostip> mask <mask> adv <fld3> type <context>
	else if [logstash][msgparser][id] == "msgParserId1329" {
		dissect {
			mapping => { "message" => "area %{info} lsid %{hostip} mask %{mask} adv %{fld3} type %{context}" }
			id => "msgParserId1329"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1330
	# line in RSA: Invalid length <context> in OSPF packet from <saddr> (<info>)
	else if [logstash][msgparser][id] == "msgParserId1330" {
		dissect {
			mapping => { "message" => "Invalid length %{context} in OSPF packet from %{saddr} (%{info})" }
			id => "msgParserId1330"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1331
	# line in RSA: Received <info> from unknown neighbor <saddr>
	else if [logstash][msgparser][id] == "msgParserId1331" {
		dissect {
			mapping => { "message" => "Received %{info} from unknown neighbor %{saddr}" }
			id => "msgParserId1331"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1332
	# line in RSA:  Process <fld1>  Nbr <hostip> on <fld3> from <change_old> to <change_new> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1332" {
		dissect {
			mapping => { "message" => "Process %{fld1}  Nbr %{hostip} on %{fld3} from %{change_old} to %{change_new} %{event_description}" }
			id => "msgParserId1332"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1333
	# line in RSA:   Base topology enabled on interface <interface> attached to MTR compatible
	else if [logstash][msgparser][id] == "msgParserId1333" {
		dissect {
			mapping => { "message" => "Base topology enabled on interface %{interface} attached to MTR compatible" }
			id => "msgParserId1333"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1334
	# line in RSA:   Interface <interface> is attached to more than one area
	else if [logstash][msgparser][id] == "msgParserId1334" {
		dissect {
			mapping => { "message" => "Interface %{interface} is attached to more than one area" }
			id => "msgParserId1334"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1335
	# line in RSA:  Init failed for interface <interface>, <info>.
	else if [logstash][msgparser][id] == "msgParserId1335" {
		dissect {
			mapping => { "message" => "Init failed for interface %{interface}, %{info}." }
			id => "msgParserId1335"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1336
	# line in RSA: Detected router with duplicate router ID <hostip> in <info>
	else if [logstash][msgparser][id] == "msgParserId1336" {
		dissect {
			mapping => { "message" => "Detected router with duplicate router ID %{hostip} in %{info}" }
			id => "msgParserId1336"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1337
	# line in RSA: OSPF detected duplicate router-id <hostip> <info>
	else if [logstash][msgparser][id] == "msgParserId1337" {
		dissect {
			mapping => { "message" => "OSPF detected duplicate router-id %{hostip} %{info}" }
			id => "msgParserId1337"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1338
	# line in RSA: interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1338" {
		dissect {
			mapping => { "message" => "interface %{interface} %{event_description}" }
			id => "msgParserId1338"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1339
	# line in RSA: User: <username> command:<info>
	else if [logstash][msgparser][id] == "msgParserId1339" {
		dissect {
			mapping => { "message" => "User: %{username} command:%{info}" }
			id => "msgParserId1339"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1340
	# line in RSA: User: <username> <info>
	else if [logstash][msgparser][id] == "msgParserId1340" {
		dissect {
			mapping => { "message" => "User: %{username} %{info}" }
			id => "msgParserId1340"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1341
	# line in RSA: Command:<info>
	else if [logstash][msgparser][id] == "msgParserId1341" {
		dissect {
			mapping => { "message" => "Command:%{info}" }
			id => "msgParserId1341"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1342
	# line in RSA: Configuration logger persistency: Applying config command '<info>' failed. result '<resultcode>'
	else if [logstash][msgparser][id] == "msgParserId1342" {
		dissect {
			mapping => { "message" => "Configuration logger persistency: Applying config command '%{info}' failed. result '%{resultcode}'" }
			id => "msgParserId1342"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1343
	# line in RSA:  Could not delete config log session:<sessionid> for user:<username>
	else if [logstash][msgparser][id] == "msgParserId1343" {
		dissect {
			mapping => { "message" => "Could not delete config log session:%{sessionid} for user:%{username}" }
			id => "msgParserId1343"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1344
	# line in RSA: Bad range for command <info>
	else if [logstash][msgparser][id] == "msgParserId1344" {
		dissect {
			mapping => { "message" => "Bad range for command %{info}" }
			id => "msgParserId1344"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1345
	# line in RSA: User: <username> logged command:<info>
	else if [logstash][msgparser][id] == "msgParserId1345" {
		dissect {
			mapping => { "message" => "User: %{username} logged command:%{info}" }
			id => "msgParserId1345"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1346
	# line in RSA:  Configuration lock cleared by user <username> <info>
	else if [logstash][msgparser][id] == "msgParserId1346" {
		dissect {
			mapping => { "message" => "Configuration lock cleared by user %{username} %{info}" }
			id => "msgParserId1346"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1347
	# line in RSA: Error during close of the file <filename>. <event_description>
	else if [logstash][msgparser][id] == "msgParserId1347" {
		dissect {
			mapping => { "message" => "Error during close of the file %{filename}. %{event_description}" }
			id => "msgParserId1347"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1348
	# line in RSA:  Power source change from <change_old> to Auxilliary Power. <info>
	else if [logstash][msgparser][id] == "msgParserId1348" {
		dissect {
			mapping => { "message" => "Power source change from %{change_old} to Auxilliary Power. %{info}" }
			id => "msgParserId1348"
			add_field => {
				"event_description" => "Power source change to Auxilliary Power"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%PFMA-2-FEX_STATUS" {
		# MESSAGE %PFMA-2-FEX_STATUS
		# line in RSA:  <device> is offline
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{device} is offline" }
				id => "message-%PFMA-2-FEX_STATUS"
				add_field => {
				"event_description" => "device is offline"
					"[event][id]" => "%PFMA-2-FEX_STATUS"
					"[rsa][message][id1]" => "%PFMA-2-FEX_STATUS"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %PFMA-2-FEX_STATUS:01
		# line in RSA:  <device> is online
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{device} is online" }
				id => "message-%PFMA-2-FEX_STATUS:01"
				add_field => {
				"event_description" => "device is online"
					"[event][id]" => "%PFMA-2-FEX_STATUS:01"
					"[rsa][message][id1]" => "%PFMA-2-FEX_STATUS:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1351
	# line in RSA:  The bootfile <filename> is not present in standby
	else if [logstash][msgparser][id] == "msgParserId1351" {
		dissect {
			mapping => { "message" => "The bootfile %{filename} is not present in standby" }
			id => "msgParserId1351"
			add_field => {
				"event_description" => "bootfile not present in standby"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1352
	# line in RSA:  Ready for SSO mode
	else if [logstash][msgparser][id] == "msgParserId1352" {
		dissect {
			mapping => { "message" => "Ready for SSO mode" }
			id => "msgParserId1352"
			add_field => {
				"event_description" => "Ready for SSO mode"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1353
	# line in RSA:   Unable to locate <network_port> port during registration
	else if [logstash][msgparser][id] == "msgParserId1353" {
		dissect {
			mapping => { "message" => "Unable to locate %{network_port} port during registration" }
			id => "msgParserId1353"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1354
	# line in RSA: Invalid <context> address <hostip> in <info>
	else if [logstash][msgparser][id] == "msgParserId1354" {
		dissect {
			mapping => { "message" => "Invalid %{context} address %{hostip} in %{info}" }
			id => "msgParserId1354"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1355
	# line in RSA:  Incompatible SR interval from <saddr> on <info>
	else if [logstash][msgparser][id] == "msgParserId1355" {
		dissect {
			mapping => { "message" => "Incompatible SR interval from %{saddr} on %{info}" }
			id => "msgParserId1355"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1356
	# line in RSA:  Received Register from <saddr> for (<info>), not willing to be RP
	else if [logstash][msgparser][id] == "msgParserId1356" {
		dissect {
			mapping => { "message" => "Received Register from %{saddr} for (%{info}), not willing to be RP" }
			id => "msgParserId1356"
			add_field => {
				"event_description" => "Received Register from host not willing to be RP"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1357
	# line in RSA: DR change from neighbor <change_old> to <change_new> on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1357" {
		dissect {
			mapping => { "message" => "DR change from neighbor %{change_old} to %{change_new} on interface %{interface}" }
			id => "msgParserId1357"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1358
	# line in RSA: neighbor <hostip> <event_state> on interface <interface> { (<info>) | <info> }
	else if [logstash][msgparser][id] == "msgParserId1358" {
		grok {
			match => { "message" => "^neighbor[\s]+(?<hostip>[^\s]*)[\s]+(?<event_state>[^\s]*)[\s]+on[\s]+interface[\s]+(?<interface>[^\s]*)[\s]+([\s]*\((?<info>[^\)]*)\)[\s]+|[\s]*(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId1358"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1359
	# line in RSA: Bad register from  <saddr> for <info>
	else if [logstash][msgparser][id] == "msgParserId1359" {
		dissect {
			mapping => { "message" => "Bad register from  %{saddr} for %{info}" }
			id => "msgParserId1359"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1360
	# line in RSA: Bad SA from RP <saddr> for <info>
	else if [logstash][msgparser][id] == "msgParserId1360" {
		dissect {
			mapping => { "message" => "Bad SA from RP %{saddr} for %{info}" }
			id => "msgParserId1360"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1361
	# line in RSA: GMAC is not in SYNC: port <network_port>
	else if [logstash][msgparser][id] == "msgParserId1361" {
		dissect {
			mapping => { "message" => "GMAC is not in SYNC: port %{network_port}" }
			id => "msgParserId1361"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1362
	# line in RSA:  Failed to send out message to CA server.
	else if [logstash][msgparser][id] == "msgParserId1362" {
		dissect {
			mapping => { "message" => "Failed to send out message to CA server." }
			id => "msgParserId1362"
			add_field => {
				"event_description" => "Failed to send out message to CA server"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1363
	# line in RSA:  Configuration was modified.  <info>
	else if [logstash][msgparser][id] == "msgParserId1363" {
		dissect {
			mapping => { "message" => "Configuration was modified.  %{info}" }
			id => "msgParserId1363"
			add_field => {
				"event_description" => "Configuration was modified"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1364
	# line in RSA:  Power supply <device> is <event_state>, <info>
	else if [logstash][msgparser][id] == "msgParserId1364" {
		dissect {
			mapping => { "message" => "Power supply %{device} is %{event_state}, %{info}" }
			id => "msgParserId1364"
			add_field => {
				"event_description" => "Power supply is absent"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1365
	# line in RSA:  Power supply <device> changed its capacity. possibly <result> (Serial number <serial_number>)
	else if [logstash][msgparser][id] == "msgParserId1365" {
		dissect {
			mapping => { "message" => "Power supply %{device} changed its capacity. possibly %{result} (Serial number %{serial_number})" }
			id => "msgParserId1365"
			add_field => {
				"event_description" => "Power supply changed its capacity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1366
	# line in RSA:  Power supply <device> detected but shutdown (Serial number <serial_number>) 
	else if [logstash][msgparser][id] == "msgParserId1366" {
		dissect {
			mapping => { "message" => "Power supply %{device} detected but shutdown (Serial number %{serial_number})" }
			id => "msgParserId1366"
			add_field => {
				"event_description" => "Power supply detected but shutdown"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1367
	# line in RSA:  Power supply <device> failed or shut down (Serial number <serial_number>) 
	else if [logstash][msgparser][id] == "msgParserId1367" {
		dissect {
			mapping => { "message" => "Power supply %{device} failed or shut down (Serial number %{serial_number})" }
			id => "msgParserId1367"
			add_field => {
				"event_description" => "Power supply failed or shutdown"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1368
	# line in RSA:  Power supply <device> present but all AC/DC inputs are not connected, <info> 
	else if [logstash][msgparser][id] == "msgParserId1368" {
		dissect {
			mapping => { "message" => "Power supply %{device} present but all AC/DC inputs are not connected, %{info}" }
			id => "msgParserId1368"
			add_field => {
				"event_description" => "Power supply present but all AC/DC inputs are not connected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1369
	# line in RSA:  Power redundancy operational mode changed to configured mode
	else if [logstash][msgparser][id] == "msgParserId1369" {
		dissect {
			mapping => { "message" => "Power redundancy operational mode changed to configured mode" }
			id => "msgParserId1369"
			add_field => {
				"event_description" => "Power redundancy operational mode changed to configured mode"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1370
	# line in RSA:  Power supply <device> removed (Serial number <serial_number>) 
	else if [logstash][msgparser][id] == "msgParserId1370" {
		dissect {
			mapping => { "message" => "Power supply %{device} removed (Serial number %{serial_number})" }
			id => "msgParserId1370"
			add_field => {
				"event_description" => "Power supply removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1371
	# line in RSA:  '<action>' CLI is deprecated. <result>
	else if [logstash][msgparser][id] == "msgParserId1371" {
		dissect {
			mapping => { "message" => "'%{action}' CLI is deprecated. %{result}" }
			id => "msgParserId1371"
			add_field => {
				"event_description" => "CLI action is deprecated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1372
	# line in RSA:  FRU Power Supply is not responding { (<vsys>) | <vsys> } 
	else if [logstash][msgparser][id] == "msgParserId1372" {
		grok {
			match => { "message" => "^[\s]*FRU[\s]+Power[\s]+Supply[\s]+is[\s]+not[\s]+responding[\s]+([\s]*\((?<vsys>[^\)]*)\)[\s]+|[\s]*(?<vsys>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId1372"
			add_field => {
				"event_description" => "FRU Power Supply is not responding"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1373
	# line in RSA:  POWER_GOOD signal on power supply <device> is faulty { (<vsys>) | <vsys> } 
	else if [logstash][msgparser][id] == "msgParserId1373" {
		grok {
			match => { "message" => "^[\s]*POWER_GOOD[\s]+signal[\s]+on[\s]+power[\s]+supply[\s]+(?<device>[^\s]*)[\s]+is[\s]+faulty[\s]+([\s]*\((?<vsys>[^\)]*)\)[\s]+|[\s]*(?<vsys>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId1373"
			add_field => {
				"event_description" => "POWER_GOOD signal on power supply is faulty"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1374
	# line in RSA:  RPS cable removed
	else if [logstash][msgparser][id] == "msgParserId1374" {
		dissect {
			mapping => { "message" => "RPS cable removed" }
			id => "msgParserId1374"
			add_field => {
				"event_description" => "RPS cable removed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1375
	# line in RSA:  Port Manager Internal Software Error (<result>)
	else if [logstash][msgparser][id] == "msgParserId1375" {
		dissect {
			mapping => { "message" => "Port Manager Internal Software Error (%{result})" }
			id => "msgParserId1375"
			add_field => {
				"event_description" => "Port Manager Internal Software Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1376
	# line in RSA:  Slot/Port <info>/<network_port> is out of range
	else if [logstash][msgparser][id] == "msgParserId1376" {
		dissect {
			mapping => { "message" => "Slot/Port %{info}/%{network_port} is out of range" }
			id => "msgParserId1376"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1377
	# line in RSA:  <obj_type> error detected on <portname>, { <result> (<info>) | <result> }
	else if [logstash][msgparser][id] == "msgParserId1377" {
		grok {
			match => { "message" => "^[\s]*(?<obj_type>[^\s]*)[\s]+error[\s]+detected[\s]+on[\s]+(?<portname>[^,]*),[\s]+([\s]*(?<result>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
			id => "msgParserId1377"
			add_field => {
				"event_description" => "error detected on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1378
	# line in RSA:  STANDBY:Attempting to recover from link-flap err-disable state on <portname>
	else if [logstash][msgparser][id] == "msgParserId1378" {
		dissect {
			mapping => { "message" => "STANDBY:Attempting to recover from link-flap err-disable state on %{portname}" }
			id => "msgParserId1378"
			add_field => {
				"event_description" => "Attempting to recover from link-flap err-disable state on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1379
	# line in RSA:   Port <network_port> was bounced by <event_description>.
	else if [logstash][msgparser][id] == "msgParserId1379" {
		dissect {
			mapping => { "message" => "Port %{network_port} was bounced by %{event_description}." }
			id => "msgParserId1379"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1380
	# line in RSA:   STANDBY:Port <portname> consistency has been restored, <result>
	else if [logstash][msgparser][id] == "msgParserId1380" {
		dissect {
			mapping => { "message" => "STANDBY:Port %{portname} consistency has been restored, %{result}" }
			id => "msgParserId1380"
			add_field => {
				"event_description" => "STANDBY:Port consistency has been restored"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1381
	# line in RSA:  STANDBY:Port <portname> is inconsistent: <result> (<fld1>), link: up (<fld2>)
	else if [logstash][msgparser][id] == "msgParserId1381" {
		dissect {
			mapping => { "message" => "STANDBY:Port %{portname} is inconsistent: %{result} (%{fld1}), link: up (%{fld2})" }
			id => "msgParserId1381"
			add_field => {
				"event_description" => "Port is inconsistent"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1382
	# line in RSA:  Dynamic access VLAN <vlan> same as voice vlan on <interface>.
	else if [logstash][msgparser][id] == "msgParserId1382" {
		dissect {
			mapping => { "message" => "Dynamic access VLAN %{vlan} same as voice vlan on %{interface}." }
			id => "msgParserId1382"
			add_field => {
				"event_description" => "Dynamic access VLAN same as voice vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1383
	# line in RSA:  <service> error detected on <interface>, <result>
	else if [logstash][msgparser][id] == "msgParserId1383" {
		dissect {
			mapping => { "message" => "%{service} error detected on %{interface}, %{result}" }
			id => "msgParserId1383"
			add_field => {
				"event_description" => "error detected on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1384
	# line in RSA:  Attempting to recover from <service> err-disable state on <interface>
	else if [logstash][msgparser][id] == "msgParserId1384" {
		dissect {
			mapping => { "message" => "Attempting to recover from %{service} err-disable state on %{interface}" }
			id => "msgParserId1384"
			add_field => {
				"event_description" => "Attempting to recover from err-disable state"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1385
	# line in RSA:  The number of vlan-port instances on module <device> exceeded the recommended limit of <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId1385" {
		dissect {
			mapping => { "message" => "The number of vlan-port instances on module %{device} exceeded the recommended limit of %{dclass_counter1}" }
			id => "msgParserId1385"
			add_field => {
				"event_description" => "number of vlan-port instances on module exceeded the recommended limit"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1386
	# line in RSA:  <fld1> error detected on <interface>, <result>
	else if [logstash][msgparser][id] == "msgParserId1386" {
		dissect {
			mapping => { "message" => "%{fld1} error detected on %{interface}, %{result}" }
			id => "msgParserId1386"
			add_field => {
				"a" => " error detected on interface"
				"event_description" => "%{fld1}\t%{a}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1387
	# line in RSA:  Attempting to recover from bpduguard err-disable state on <interface>
	else if [logstash][msgparser][id] == "msgParserId1387" {
		dissect {
			mapping => { "message" => "Attempting to recover from bpduguard err-disable state on %{interface}" }
			id => "msgParserId1387"
			add_field => {
				"event_description" => "Attempting to recover from err-disable state on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1388
	# line in RSA: Authentication for <hostip> unavailable
	else if [logstash][msgparser][id] == "msgParserId1388" {
		dissect {
			mapping => { "message" => "Authentication for %{hostip} unavailable" }
			id => "msgParserId1388"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1389
	# line in RSA: Mobile Node <hostip> registration failed due to authentication failure
	else if [logstash][msgparser][id] == "msgParserId1389" {
		dissect {
			mapping => { "message" => "Mobile Node %{hostip} registration failed due to authentication failure" }
			id => "msgParserId1389"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1390
	# line in RSA: Mobile Node <hostip> mobile ip registration failed
	else if [logstash][msgparser][id] == "msgParserId1390" {
		dissect {
			mapping => { "message" => "Mobile Node %{hostip} mobile ip registration failed" }
			id => "msgParserId1390"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1391
	# line in RSA: Mobile Node <hostip> registration failed due to Foreign Agent denial
	else if [logstash][msgparser][id] == "msgParserId1391" {
		dissect {
			mapping => { "message" => "Mobile Node %{hostip} registration failed due to Foreign Agent denial" }
			id => "msgParserId1391"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1392
	# line in RSA: Mobile Node <hostip> registration failed due to Home Agent denial
	else if [logstash][msgparser][id] == "msgParserId1392" {
		dissect {
			mapping => { "message" => "Mobile Node %{hostip} registration failed due to Home Agent denial" }
			id => "msgParserId1392"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1393
	# line in RSA:  Mobile IP Agent <hostip> is down or unavailable
	else if [logstash][msgparser][id] == "msgParserId1393" {
		dissect {
			mapping => { "message" => "Mobile IP Agent %{hostip} is down or unavailable" }
			id => "msgParserId1393"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1394
	# line in RSA:   Interface <interface> does not support receive-only transceivers
	else if [logstash][msgparser][id] == "msgParserId1394" {
		dissect {
			mapping => { "message" => "Interface %{interface} does not support receive-only transceivers" }
			id => "msgParserId1394"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1395
	# line in RSA:  Late collision message from module <service>, port:<network_port>
	else if [logstash][msgparser][id] == "msgParserId1395" {
		dissect {
			mapping => { "message" => "Late collision message from module %{service}, port:%{network_port}" }
			id => "msgParserId1395"
			add_field => {
				"event_description" => "Late collision message from module"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1396
	# line in RSA:  Received unknown unsolicited message from module <fld11>, opcode <resultcode>
	else if [logstash][msgparser][id] == "msgParserId1396" {
		dissect {
			mapping => { "message" => "Received unknown unsolicited message from module %{fld11}, opcode %{resultcode}" }
			id => "msgParserId1396"
			add_field => {
				"event_description" => "Received unknown unsolicited message from module"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1397
	# line in RSA:  Module <fld11> is experiencing the following error: <result>
	else if [logstash][msgparser][id] == "msgParserId1397" {
		dissect {
			mapping => { "message" => "Module %{fld11} is experiencing the following error: %{result}" }
			id => "msgParserId1397"
			add_field => {
				"event_description" => "module error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1398
	# line in RSA:  <service> Interface <interface> is down (<result>)
	else if [logstash][msgparser][id] == "msgParserId1398" {
		dissect {
			mapping => { "message" => "%{service} Interface %{interface} is down (%{result})" }
			id => "msgParserId1398"
			add_field => {
				"event_description" => "Interface is down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1399
	# line in RSA:  GMAC is not in SYNC:    port <network_port>
	else if [logstash][msgparser][id] == "msgParserId1399" {
		dissect {
			mapping => { "message" => "GMAC is not in SYNC:    port %{network_port}" }
			id => "msgParserId1399"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1400
	# line in RSA: <service> Interface <interface> is down (<result>)
	else if [logstash][msgparser][id] == "msgParserId1400" {
		dissect {
			mapping => { "message" => "%{service} Interface %{interface} is down (%{result})" }
			id => "msgParserId1400"
			add_field => {
				"event_description" => "Interface is down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1401
	# line in RSA: <service> Interface <interface> is up <result>
	else if [logstash][msgparser][id] == "msgParserId1401" {
		dissect {
			mapping => { "message" => "%{service} Interface %{interface} is up %{result}" }
			id => "msgParserId1401"
			add_field => {
				"event_description" => "Interface is up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1402
	# line in RSA:  Security violation occurred, caused by MAC address <smacaddr> on port <interface>.
	else if [logstash][msgparser][id] == "msgParserId1402" {
		dissect {
			mapping => { "message" => "Security violation occurred, caused by MAC address %{smacaddr} on port %{interface}." }
			id => "msgParserId1402"
			add_field => {
				"event_description" => "Security violation occurred"
				"result" => "caused by MAC address"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1403
	# line in RSA:   Security violation on port <network_port> due to MAC address <macaddr> on VLAN <vlan>
	else if [logstash][msgparser][id] == "msgParserId1403" {
		dissect {
			mapping => { "message" => "Security violation on port %{network_port} due to MAC address %{macaddr} on VLAN %{vlan}" }
			id => "msgParserId1403"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1404
	# line in RSA:  Security violation occurred on module <fld11> port <network_port> caused by MAC address <smacaddr>
	else if [logstash][msgparser][id] == "msgParserId1404" {
		dissect {
			mapping => { "message" => "Security violation occurred on module %{fld11} port %{network_port} caused by MAC address %{smacaddr}" }
			id => "msgParserId1404"
			add_field => {
				"event_description" => "Security violation occurred"
				"result" => "caused by MAC address"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1405
	# line in RSA:  Security violation occurred, caused by MAC address <smacaddr> on port <network_port>
	else if [logstash][msgparser][id] == "msgParserId1405" {
		dissect {
			mapping => { "message" => "Security violation occurred, caused by MAC address %{smacaddr} on port %{network_port}" }
			id => "msgParserId1405"
			add_field => {
				"event_description" => "Security violation occurred"
				"result" => "caused by MAC address"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1406
	# line in RSA: ACL merge error for Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1406" {
		dissect {
			mapping => { "message" => "ACL merge error for Interface %{interface} %{event_description}" }
			id => "msgParserId1406"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1407
	# line in RSA: Interface <interface>  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1407" {
		dissect {
			mapping => { "message" => "Interface %{interface}  %{event_description}" }
			id => "msgParserId1407"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1408
	# line in RSA: interface <interface>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1408" {
		dissect {
			mapping => { "message" => "interface %{interface}: %{event_description}" }
			id => "msgParserId1408"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1409
	# line in RSA:   service policy <policyname> detached:     as it cannot be supported.
	else if [logstash][msgparser][id] == "msgParserId1409" {
		dissect {
			mapping => { "message" => "service policy %{policyname} detached:     as it cannot be supported." }
			id => "msgParserId1409"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1410
	# line in RSA:   Please detach output policy <policyname> from the interface prior to removing the class.
	else if [logstash][msgparser][id] == "msgParserId1410" {
		dissect {
			mapping => { "message" => "Please detach output policy %{policyname} from the interface prior to removing the class." }
			id => "msgParserId1410"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1411
	# line in RSA:   Policers per port <network_port> limit exceeded in hardware
	else if [logstash][msgparser][id] == "msgParserId1411" {
		dissect {
			mapping => { "message" => "Policers per port %{network_port} limit exceeded in hardware" }
			id => "msgParserId1411"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1412
	# line in RSA: Configuration failed. <event_description>
	else if [logstash][msgparser][id] == "msgParserId1412" {
		dissect {
			mapping => { "message" => "Configuration failed. %{event_description}" }
			id => "msgParserId1412"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1413
	# line in RSA:   Action <action> is not supported for a per port QoS child policy-map.
	else if [logstash][msgparser][id] == "msgParserId1413" {
		dissect {
			mapping => { "message" => "Action %{action} is not supported for a per port QoS child policy-map." }
			id => "msgParserId1413"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1414
	# line in RSA: Group <group>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1414" {
		dissect {
			mapping => { "message" => "Group %{group}: %{event_description}" }
			id => "msgParserId1414"
			add_field => {
				"ec_subject" => "Group"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1415
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1415" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1415"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1416
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1416" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1416"
			add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1417
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1417" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1417"
			add_field => {
				"ec_subject" => "Process"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1418
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1418" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1418"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%RADIUS-3-RADIUS_ERROR_MESSAGE" {
		# MESSAGE %RADIUS-3-RADIUS_ERROR_MESSAGE
		# line in RSA:  { All RADIUS servers | RADIUS server <hostip> } failed to respond
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*All[\s]+RADIUS[\s]+servers[\s]+|[\s]*RADIUS[\s]+server[\s]+(?<hostip>[^\s]*)[\s]+)[\s]+failed[\s]+to[\s]+respond$" }
				id => "message-%RADIUS-3-RADIUS_ERROR_MESSAGE"
				add_field => {
				"event_description" => "RADIUS server(s) failed to respond"
					"[event][id]" => "%RADIUS-3-RADIUS_ERROR_MESSAGE"
					"[rsa][message][id1]" => "%RADIUS-3-RADIUS_ERROR_MESSAGE"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %RADIUS-3-RADIUS_ERROR_MESSAGE:01
		# line in RSA:  packet from RADIUS server <hostip> fails verification: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "packet from RADIUS server %{hostip} fails verification: %{result}" }
				id => "message-%RADIUS-3-RADIUS_ERROR_MESSAGE:01"
				add_field => {
				"event_description" => "packet from RADIUS server fails verification"
					"[event][id]" => "%RADIUS-3-RADIUS_ERROR_MESSAGE:01"
					"[rsa][message][id1]" => "%RADIUS-3-RADIUS_ERROR_MESSAGE:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1421
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1421" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1421"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1422
	# line in RSA:  Servers <hostip> and <info> in server group <group> are of different types.
	else if [logstash][msgparser][id] == "msgParserId1422" {
		dissect {
			mapping => { "message" => "Servers %{hostip} and %{info} in server group %{group} are of different types." }
			id => "msgParserId1422"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1423
	# line in RSA:  Warning: Unable to allocate port <network_port>
	else if [logstash][msgparser][id] == "msgParserId1423" {
		dissect {
			mapping => { "message" => "Warning: Unable to allocate port %{network_port}" }
			id => "msgParserId1423"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1424
	# line in RSA:  Warning: Attribute list <info> is not defined.
	else if [logstash][msgparser][id] == "msgParserId1424" {
		dissect {
			mapping => { "message" => "Warning: Attribute list %{info} is not defined." }
			id => "msgParserId1424"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1425
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1425" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1425"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Detect"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1426
	# line in RSA:  <severity>: Server <hostip>:<portname> is not defined
	else if [logstash][msgparser][id] == "msgParserId1426" {
		dissect {
			mapping => { "message" => "%{severity}: Server %{hostip}:%{portname} is not defined" }
			id => "msgParserId1426"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1427
	# line in RSA: RADIUS server <hostip>:<network_port>, <info>
	else if [logstash][msgparser][id] == "msgParserId1427" {
		dissect {
			mapping => { "message" => "RADIUS server %{hostip}:%{network_port}, %{info}" }
			id => "msgParserId1427"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1428
	# line in RSA:  RADIUS server <hostip>:<network_port>, <info>
	else if [logstash][msgparser][id] == "msgParserId1428" {
		dissect {
			mapping => { "message" => "RADIUS server %{hostip}:%{network_port}, %{info}" }
			id => "msgParserId1428"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1429
	# line in RSA:  Warning: Server <hostip>:<network_port>{,|-} <info>
	else if [logstash][msgparser][id] == "msgParserId1429" {
		grok {
			match => { "message" => "^[\s]*Warning:[\s]+Server[\s]+(?<hostip>[^:]*):(?<network_port>[^,\-]*)(,|\-)[\s]+(?<info>.*)$" }
			id => "msgParserId1429"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1430
	# line in RSA: Retrieving IP-Pools via user <username>
	else if [logstash][msgparser][id] == "msgParserId1430" {
		dissect {
			mapping => { "message" => "Retrieving IP-Pools via user %{username}" }
			id => "msgParserId1430"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1431
	# line in RSA:  Retrieving static routes in user <username>
	else if [logstash][msgparser][id] == "msgParserId1431" {
		dissect {
			mapping => { "message" => "Retrieving static routes in user %{username}" }
			id => "msgParserId1431"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%RADIUS-6-RESETDEADSERVER" {
		# MESSAGE %RADIUS-6-RESETDEADSERVER:01
		# line in RSA: Group <group>: Marked alive as Radius server <hostip>:<network_port>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Group %{group}: Marked alive as Radius server %{hostip}:%{network_port}, %{info}" }
				id => "message-%RADIUS-6-RESETDEADSERVER:01"
				add_field => {
					"[event][id]" => "%RADIUS-6-RESETDEADSERVER:01"
					"[rsa][message][id1]" => "%RADIUS-6-RESETDEADSERVER:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %RADIUS-6-RESETDEADSERVER
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-%RADIUS-6-RESETDEADSERVER"
				add_field => {
					"[event][id]" => "%RADIUS-6-RESETDEADSERVER"
					"[rsa][message][id1]" => "%RADIUS-6-RESETDEADSERVER"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1433
	# line in RSA:  Group <group>: Radius server <hostip>:<network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId1433" {
		dissect {
			mapping => { "message" => "Group %{group}: Radius server %{hostip}:%{network_port} %{info}" }
			id => "msgParserId1433"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1434
	# line in RSA: NAS shared key mismatch with <hostip>
	else if [logstash][msgparser][id] == "msgParserId1434" {
		dissect {
			mapping => { "message" => "NAS shared key mismatch with %{hostip}" }
			id => "msgParserId1434"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1435
	# line in RSA: Unknown authenticator: <hostip>
	else if [logstash][msgparser][id] == "msgParserId1435" {
		dissect {
			mapping => { "message" => "Unknown authenticator: %{hostip}" }
			id => "msgParserId1435"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1436
	# line in RSA:  Attempted to connect to <service> from <saddr>
	else if [logstash][msgparser][id] == "msgParserId1436" {
		dissect {
			mapping => { "message" => "Attempted to connect to %{service} from %{saddr}" }
			id => "msgParserId1436"
			add_field => {
				"event_description" => "connection attempt"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1437
	# line in RSA:  Terminal state reached for (SSO)
	else if [logstash][msgparser][id] == "msgParserId1437" {
		dissect {
			mapping => { "message" => "Terminal state reached for (SSO)" }
			id => "msgParserId1437"
			add_field => {
				"event_description" => "Terminal state reached for (SSO)"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1438
	# line in RSA: Txacc of Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1438" {
		dissect {
			mapping => { "message" => "Txacc of Interface %{interface} %{event_description}" }
			id => "msgParserId1438"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1439
	# line in RSA: No valid keys left for <hostip>
	else if [logstash][msgparser][id] == "msgParserId1439" {
		dissect {
			mapping => { "message" => "No valid keys left for %{hostip}" }
			id => "msgParserId1439"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1440
	# line in RSA: <fld1> message from  <saddr>
	else if [logstash][msgparser][id] == "msgParserId1440" {
		dissect {
			mapping => { "message" => "%{fld1} message from  %{saddr}" }
			id => "msgParserId1440"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1441
	# line in RSA: <fld1> message from  <saddr> discarded <info>
	else if [logstash][msgparser][id] == "msgParserId1441" {
		dissect {
			mapping => { "message" => "%{fld1} message from  %{saddr} discarded %{info}" }
			id => "msgParserId1441"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1442
	# line in RSA: <fld1> message from  <saddr> <info>
	else if [logstash][msgparser][id] == "msgParserId1442" {
		dissect {
			mapping => { "message" => "%{fld1} message from  %{saddr} %{info}" }
			id => "msgParserId1442"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1443
	# line in RSA: <interface> link down/up <fld11> times per min
	else if [logstash][msgparser][id] == "msgParserId1443" {
		dissect {
			mapping => { "message" => "%{interface} link down/up %{fld11} times per min" }
			id => "msgParserId1443"
			add_field => {
				"event_description" => "link flapping"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1444
	# line in RSA:  FEX-103 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1444" {
		grok {
			match => { "message" => "^[\s]*FEX\-103[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1444"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1445
	# line in RSA:  FEX-104 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1445" {
		grok {
			match => { "message" => "^[\s]*FEX\-104[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1445"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1446
	# line in RSA:  FEX-105 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1446" {
		grok {
			match => { "message" => "^[\s]*FEX\-105[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1446"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1447
	# line in RSA:  FEX-106 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1447" {
		grok {
			match => { "message" => "^[\s]*FEX\-106[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1447"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1448
	# line in RSA:  FEX-107 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1448" {
		grok {
			match => { "message" => "^[\s]*FEX\-107[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1448"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1449
	# line in RSA:  FEX-108 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1449" {
		grok {
			match => { "message" => "^[\s]*FEX\-108[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1449"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1450
	# line in RSA:  FEX-119 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1450" {
		grok {
			match => { "message" => "^[\s]*FEX\-119[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1450"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1451
	# line in RSA:  FEX-120 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1451" {
		grok {
			match => { "message" => "^[\s]*FEX\-120[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1451"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1452
	# line in RSA:  FEX-121 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1452" {
		grok {
			match => { "message" => "^[\s]*FEX\-121[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1452"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1453
	# line in RSA:  FEX-122 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1453" {
		grok {
			match => { "message" => "^[\s]*FEX\-122[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1453"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1454
	# line in RSA:  FEX-123 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1454" {
		grok {
			match => { "message" => "^[\s]*FEX\-123[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1454"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1455
	# line in RSA:  FEX-124 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1455" {
		grok {
			match => { "message" => "^[\s]*FEX\-124[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1455"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1456
	# line in RSA:  FEX-125 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1456" {
		grok {
			match => { "message" => "^[\s]*FEX\-125[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1456"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1457
	# line in RSA:  FEX-127 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1457" {
		grok {
			match => { "message" => "^[\s]*FEX\-127[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1457"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1458
	# line in RSA:  FEX-151 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1458" {
		grok {
			match => { "message" => "^[\s]*FEX\-151[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1458"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1459
	# line in RSA:  FEX-152 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1459" {
		grok {
			match => { "message" => "^[\s]*FEX\-152[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1459"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1460
	# line in RSA:  FEX-157 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1460" {
		grok {
			match => { "message" => "^[\s]*FEX\-157[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1460"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1461
	# line in RSA:  FEX-158 { Module <dclass_counter1>: <event_description>: | <event_description>: } <result>
	else if [logstash][msgparser][id] == "msgParserId1461" {
		grok {
			match => { "message" => "^[\s]*FEX\-158[\s]+([\s]*Module[\s]+(?<dclass_counter1>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+|[\s]*(?<event_description>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId1461"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1462
	# line in RSA:  SCB on port <network_port> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1462" {
		dissect {
			mapping => { "message" => "SCB on port %{network_port} %{event_description}" }
			id => "msgParserId1462"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1463
	# line in RSA: SCB limit on port <network_port>  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1463" {
		dissect {
			mapping => { "message" => "SCB limit on port %{network_port}  %{event_description}" }
			id => "msgParserId1463"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1464
	# line in RSA: <fld1> IP:<hostip> Socket: <info> DeviceType:<event_description>
	else if [logstash][msgparser][id] == "msgParserId1464" {
		dissect {
			mapping => { "message" => "%{fld1} IP:%{hostip} Socket: %{info} DeviceType:%{event_description}" }
			id => "msgParserId1464"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1465
	# line in RSA:  <fld1> IP:<hostip> Socket: <info> DeviceType:<event_description>
	else if [logstash][msgparser][id] == "msgParserId1465" {
		dissect {
			mapping => { "message" => "%{fld1} IP:%{hostip} Socket: %{info} DeviceType:%{event_description}" }
			id => "msgParserId1465"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%SEC-6-IPACCESSLOGDP" {
		# MESSAGE %SEC-6-IPACCESSLOGDP
		# line in RSA:  list <listnum> permitted icmp <saddr> -> {<daddr> (<fld1>/<fld2>)|<daddr> (<dport>)}, <packets> packet
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*list[\s]+(?<listnum>[^\s]*)[\s]+permitted[\s]+icmp[\s]+(?<saddr>[^\s]*)[\s]+\->[\s]+((?<daddr>[^\s]*)[\s]+\((?<fld1>[^/]*)/(?<fld2>[^\)]*)\)|(?<daddr>[^\s]*)[\s]+\((?<dport>[^\)]*)\)),[\s]+(?<packets>[^\s]*)[\s]+packet$" }
				id => "message-%SEC-6-IPACCESSLOGDP"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
				"protocol" => "icmp"
					"[event][id]" => "%SEC-6-IPACCESSLOGDP"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGDP"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGDP:01
		# line in RSA:  list <listnum> permitted <protocol> <saddr>(<sport>) -> <daddr>(<dport>), <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "list %{listnum} permitted %{protocol} %{saddr}(%{sport}) -> %{daddr}(%{dport}), %{packets} packet" }
				id => "message-%SEC-6-IPACCESSLOGDP:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Permit"
				"ec_theme" => "Communication"
					"[event][id]" => "%SEC-6-IPACCESSLOGDP:01"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGDP:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGDP:02
		# line in RSA:   list <listnum> denied icmp <saddr> -> <daddr>({<dport>/<fld1>|<dport>}), <packets> { packets | packet }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*list[\s]+(?<listnum>[^\s]*)[\s]+denied[\s]+icmp[\s]+(?<saddr>[^\s]*)[\s]+\->[\s]+(?<daddr>[^\(]*)\(((?<dport>[^/]*)/(?<fld1>[^\)]*)|(?<dport>[^\)]*))\),[\s]+(?<packets>[^\s]*)[\s]+([\s]*packets[\s]+|[\s]*packet[\s]+)$" }
				id => "message-%SEC-6-IPACCESSLOGDP:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"protocol" => "icmp"
					"[event][id]" => "%SEC-6-IPACCESSLOGDP:02"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGDP:02"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGDP:03
		# line in RSA:  list <listnum> denied <protocol> <saddr>(<sport>) -> <daddr>(<dport>), <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "list %{listnum} denied %{protocol} %{saddr}(%{sport}) -> %{daddr}(%{dport}), %{packets} packet" }
				id => "message-%SEC-6-IPACCESSLOGDP:03"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
					"[event][id]" => "%SEC-6-IPACCESSLOGDP:03"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGDP:03"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGDP:04
		# line in RSA:   <listnum> denied icmp <saddr> -> {<daddr> (<fld1>/<fld2>)|<daddr> (<dport>)}, <packets> packet
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<listnum>[^\s]*)[\s]+denied[\s]+icmp[\s]+(?<saddr>[^\s]*)[\s]+\->[\s]+((?<daddr>[^\s]*)[\s]+\((?<fld1>[^/]*)/(?<fld2>[^\)]*)\)|(?<daddr>[^\s]*)[\s]+\((?<dport>[^\)]*)\)),[\s]+(?<packets>[^\s]*)[\s]+packet$" }
				id => "message-%SEC-6-IPACCESSLOGDP:04"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"protocol" => "icmp"
					"[event][id]" => "%SEC-6-IPACCESSLOGDP:04"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGDP:04"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGDP:05
		# line in RSA:  <listnum> denied <protocol> <saddr>(<sport>) -> <daddr>(<dport>), <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{listnum} denied %{protocol} %{saddr}(%{sport}) -> %{daddr}(%{dport}), %{packets} packet" }
				id => "message-%SEC-6-IPACCESSLOGDP:05"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
					"[event][id]" => "%SEC-6-IPACCESSLOGDP:05"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGDP:05"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGDP:06
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-%SEC-6-IPACCESSLOGDP:06"
				add_field => {
					"[event][id]" => "%SEC-6-IPACCESSLOGDP:06"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGDP:06"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%SEC-6-IPACCESSLOGNP" {
		# MESSAGE %SEC-6-IPACCESSLOGNP
		# line in RSA: list <listnum> denied <fld1> <saddr> -> <daddr> <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "list %{listnum} denied %{fld1} %{saddr} -> %{daddr} %{packets} packet" }
				id => "message-%SEC-6-IPACCESSLOGNP"
				add_field => {
					"[event][id]" => "%SEC-6-IPACCESSLOGNP"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGNP"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGNP:01
		# line in RSA: list <listnum> permitted <fld1> <saddr> {[ (<fld2>)]| (<fld2>)} -> <daddr>, <packets> packet
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^list[\s]+(?<listnum>[^\s]*)[\s]+permitted[\s]+(?<fld1>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+(\[[\s]+\((?<fld2>[^\)]*)\)\]|[\s]*\((?<fld2>[^\)]*)\))[\s]+\->[\s]+(?<daddr>[^,]*),[\s]+(?<packets>[^\s]*)[\s]+packet$" }
				id => "message-%SEC-6-IPACCESSLOGNP:01"
				add_field => {
					"[event][id]" => "%SEC-6-IPACCESSLOGNP:01"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGNP:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGNP:02
		# line in RSA: list <listnum> permitted <protocol> <saddr> -> <daddr>, <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "list %{listnum} permitted %{protocol} %{saddr} -> %{daddr}, %{packets} packet" }
				id => "message-%SEC-6-IPACCESSLOGNP:02"
				add_field => {
					"[event][id]" => "%SEC-6-IPACCESSLOGNP:02"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGNP:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%SEC-6-IPACCESSLOGP" {
		# MESSAGE %SEC-6-IPACCESSLOGP
		# line in RSA:  list <listnum> permitted icmp <saddr> -> <daddr>(<fld1>), <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "list %{listnum} permitted icmp %{saddr} -> %{daddr}(%{fld1}), %{packets} packet" }
				id => "message-%SEC-6-IPACCESSLOGP"
				add_field => {
				"protocol" => "icmp"
					"[event][id]" => "%SEC-6-IPACCESSLOGP"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGP"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGP:01
		# line in RSA:  list <listnum> permitted <protocol> <saddr>(<sport>) -> <daddr>(<dport>), <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "list %{listnum} permitted %{protocol} %{saddr}(%{sport}) -> %{daddr}(%{dport}), %{packets} packet" }
				id => "message-%SEC-6-IPACCESSLOGP:01"
				add_field => {
					"[event][id]" => "%SEC-6-IPACCESSLOGP:01"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGP:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGP:02
		# line in RSA:  { list <listnum> | <listnum> } denied icmp <saddr> -> <daddr>(<fld1>), <packets> packet
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*list[\s]+(?<listnum>[^\s]*)[\s]+|[\s]*(?<listnum>[^\s]*)[\s]+)[\s]+denied[\s]+icmp[\s]+(?<saddr>[^\s]*)[\s]+\->[\s]+(?<daddr>[^\(]*)\((?<fld1>[^\)]*)\),[\s]+(?<packets>[^\s]*)[\s]+packet$" }
				id => "message-%SEC-6-IPACCESSLOGP:02"
				add_field => {
				"protocol" => "icmp"
					"[event][id]" => "%SEC-6-IPACCESSLOGP:02"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGP:02"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGP:03
		# line in RSA:  { list <listnum> | <listnum> } denied <protocol> {<saddr>(<sport>) (<interface>/<fld1>/<network_port> <macaddr>)|<saddr>(<sport>) (<interface>/<fld1>/<network_port>)|<saddr>(<sport>)} -> <daddr>(<dport>), <packets> packet
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*list[\s]+(?<listnum>[^\s]*)[\s]+|[\s]*(?<listnum>[^\s]*)[\s]+)[\s]+denied[\s]+(?<protocol>[^\s]*)[\s]+((?<saddr>[^\(]*)\((?<sport>[^\)]*)\)[\s]+\((?<interface>[^/]*)/(?<fld1>[^/]*)/(?<network_port>[^\s]*)[\s]+(?<macaddr>[^\)]*)\)|(?<saddr>[^\(]*)\((?<sport>[^\)]*)\)[\s]+\((?<interface>[^/]*)/(?<fld1>[^/]*)/(?<network_port>[^\)]*)\)|(?<saddr>[^\(]*)\((?<sport>[^\)]*)\))[\s]+\->[\s]+(?<daddr>[^\(]*)\((?<dport>[^\)]*)\),[\s]+(?<packets>[^\s]*)[\s]+packet$" }
				id => "message-%SEC-6-IPACCESSLOGP:03"
				add_field => {
					"[event][id]" => "%SEC-6-IPACCESSLOGP:03"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGP:03"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SEC-6-IPACCESSLOGP:04
		# line in RSA:  list <listnum> <protocol> <saddr>(<sport>) -> <daddr>(<dport>), <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "list %{listnum} %{protocol} %{saddr}(%{sport}) -> %{daddr}(%{dport}), %{packets} packet" }
				id => "message-%SEC-6-IPACCESSLOGP:04"
				add_field => {
					"[event][id]" => "%SEC-6-IPACCESSLOGP:04"
					"[rsa][message][id1]" => "%SEC-6-IPACCESSLOGP:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1480
	# line in RSA:  list <listnum> { permitted | denied } <protocol> <saddr> -> <daddr> <packets> packet
	else if [logstash][msgparser][id] == "msgParserId1480" {
		grok {
			match => { "message" => "^[\s]*list[\s]+(?<listnum>[^\s]*)[\s]+([\s]*permitted[\s]+|[\s]*denied[\s]+)[\s]+(?<protocol>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+\->[\s]+(?<daddr>[^\s]*)[\s]+(?<packets>[^\s]*)[\s]+packet$" }
			id => "msgParserId1480"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1481
	# line in RSA:  list <listnum> {permitted <saddr> <packets> packets|<info> packet <packets>}
	else if [logstash][msgparser][id] == "msgParserId1481" {
		grok {
			match => { "message" => "^[\s]*list[\s]+(?<listnum>[^\s]*)[\s]+(permitted[\s]+(?<saddr>[^\s]*)[\s]+(?<packets>[^\s]*)[\s]+packets|(?<info>[^\s]*)[\s]+packet[\s]+(?<packets>.*))$" }
			id => "msgParserId1481"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1482
	# line in RSA:  list <listnum> { permitted | denied } <protocol> <saddr> -> <daddr> (<network_port>)
	else if [logstash][msgparser][id] == "msgParserId1482" {
		grok {
			match => { "message" => "^[\s]*list[\s]+(?<listnum>[^\s]*)[\s]+([\s]*permitted[\s]+|[\s]*denied[\s]+)[\s]+(?<protocol>[^\s]*)[\s]+(?<saddr>[^\s]*)[\s]+\->[\s]+(?<daddr>[^\s]*)[\s]+\((?<network_port>[^\)]*)\)$" }
			id => "msgParserId1482"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1483
	# line in RSA: Failed authentication attempt by user '<username>' from '<saddr>' on '<shost>'
	else if [logstash][msgparser][id] == "msgParserId1483" {
		dissect {
			mapping => { "message" => "Failed authentication attempt by user '%{username}' from '%{saddr}' on '%{shost}'" }
			id => "msgParserId1483"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1484
	# line in RSA: Still timeleft for watching failures is <info> secs, [user: <username>] [Source: <saddr>] [localport: <sport>] [Reason: <event_description>] [ACL: <listnum>] at <fld1> <fld2> { Mon|Tue|Wed|Thu|Fri|Sat|Sun } <fld3>
	else if [logstash][msgparser][id] == "msgParserId1484" {
		grok {
			match => { "message" => "^Still[\s]+timeleft[\s]+for[\s]+watching[\s]+failures[\s]+is[\s]+(?<info>[^\s]*)[\s]+secs,[\s]+\[user:[\s]+(?<username>[^\]]*)\][\s]+\[Source:[\s]+(?<saddr>[^\]]*)\][\s]+\[localport:[\s]+(?<sport>[^\]]*)\][\s]+\[Reason:[\s]+(?<event_description>[^\]]*)\][\s]+\[ACL:[\s]+(?<listnum>[^\]]*)\][\s]+at[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+([\s]*Mon|Tue|Wed|Thu|Fri|Sat|Sun[\s]+)[\s]+(?<fld3>.*)$" }
			id => "msgParserId1484"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:m:s" ] }
		}
	}
	# PARSER msgParserId1485
	# line in RSA:  Login failed [user: <username>] [Source: <saddr>] [localport: <sport>] [Reason: <result>] at <fld1> <fld2> { Mon|Tue|Wed|Thu|Fri|Sat|Sun } <fld3>
	else if [logstash][msgparser][id] == "msgParserId1485" {
		grok {
			match => { "message" => "^[\s]*Login[\s]+failed[\s]+\[user:[\s]+(?<username>[^\]]*)\][\s]+\[Source:[\s]+(?<saddr>[^\]]*)\][\s]+\[localport:[\s]+(?<sport>[^\]]*)\][\s]+\[Reason:[\s]+(?<result>[^\]]*)\][\s]+at[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+([\s]*Mon|Tue|Wed|Thu|Fri|Sat|Sun[\s]+)[\s]+(?<fld3>.*)$" }
			id => "msgParserId1485"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"hostname" => "%{fld1}"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:m:s" ] }
		}
	}
	# PARSER msgParserId1486
	# line in RSA:  Login Success [user: <username>] [Source: <saddr>] [localport: <sport>] at <fld1> <fld2> { Mon|Tue|Wed|Thu|Fri|Sat|Sun } <fld3>
	else if [logstash][msgparser][id] == "msgParserId1486" {
		grok {
			match => { "message" => "^[\s]*Login[\s]+Success[\s]+\[user:[\s]+(?<username>[^\]]*)\][\s]+\[Source:[\s]+(?<saddr>[^\]]*)\][\s]+\[localport:[\s]+(?<sport>[^\]]*)\][\s]+at[\s]+(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+([\s]*Mon|Tue|Wed|Thu|Fri|Sat|Sun[\s]+)[\s]+(?<fld3>.*)$" }
			id => "msgParserId1486"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:m:s" ] }
		}
	}
	# PARSER msgParserId1487
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1487" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1487"
			add_field => {
				"ec_subject" => "Service"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1488
	# line in RSA: <fld1> Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1488" {
		dissect {
			mapping => { "message" => "%{fld1} Interface %{interface} %{event_description}" }
			id => "msgParserId1488"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1489
	# line in RSA:  Verification failed for switch-profile '<obj_name>' Session type: '<obj_type>'
	else if [logstash][msgparser][id] == "msgParserId1489" {
		dissect {
			mapping => { "message" => "Verification failed for switch-profile '%{obj_name}' Session type: '%{obj_type}'" }
			id => "msgParserId1489"
			add_field => {
				"event_description" => "Verification failed for switch-profile"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1490
	# line in RSA:  <event_type>: Name:'<obj_name>', checkpoint_id: '<id>'
	else if [logstash][msgparser][id] == "msgParserId1490" {
		dissect {
			mapping => { "message" => "%{event_type}: Name:'%{obj_name}', checkpoint_id: '%{id}'" }
			id => "msgParserId1490"
			add_field => {
				"event_description" => "Create-checkpoint success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1491
	# line in RSA:  <event_type>: Name:'<obj_name>'
	else if [logstash][msgparser][id] == "msgParserId1491" {
		dissect {
			mapping => { "message" => "%{event_type}: Name:'%{obj_name}'" }
			id => "msgParserId1491"
			add_field => {
				"event_description" => "Delete-checkpoint successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1492
	# line in RSA:  <event_type>: Name '<obj_name>' <space> Type:'<obj_type>' Subtype:'<content_type>' <space> Local status:'<event_state>' Peer:'<daddr>' Peer status:'<result>'
	else if [logstash][msgparser][id] == "msgParserId1492" {
		dissect {
			mapping => { "message" => "%{event_type}: Name '%{obj_name}' %{space} Type:'%{obj_type}' Subtype:'%{content_type}' %{space} Local status:'%{event_state}' Peer:'%{daddr}' Peer status:'%{result}'" }
			id => "msgParserId1492"
			add_field => {
				"event_description" => "session completion"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1493
	# line in RSA:  Initiating a session. <event_type>: Profile name:'<obj_name>' Type:'<obj_type>' Subtype:'<content_type>' Peer <daddr>
	else if [logstash][msgparser][id] == "msgParserId1493" {
		dissect {
			mapping => { "message" => "Initiating a session. %{event_type}: Profile name:'%{obj_name}' Type:'%{obj_type}' Subtype:'%{content_type}' Peer %{daddr}" }
			id => "msgParserId1493"
			add_field => {
				"event_description" => "Initiating a session"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1494
	# line in RSA:  Received peer-add for peer-ip: '<daddr>'
	else if [logstash][msgparser][id] == "msgParserId1494" {
		dissect {
			mapping => { "message" => "Received peer-add for peer-ip: '%{daddr}'" }
			id => "msgParserId1494"
			add_field => {
				"event_description" => "Received peer-add for peer-ip"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1495
	# line in RSA:  Received peer-delete for <obj_name>: '<macaddr>'
	else if [logstash][msgparser][id] == "msgParserId1495" {
		dissect {
			mapping => { "message" => "Received peer-delete for %{obj_name}: '%{macaddr}'" }
			id => "msgParserId1495"
			add_field => {
				"event_description" => "Received peer-delete for peer"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1496
	# line in RSA:  SFP in interface <interface> has the same serial number as another SFP 
	else if [logstash][msgparser][id] == "msgParserId1496" {
		dissect {
			mapping => { "message" => "SFP in interface %{interface} has the same serial number as another SFP" }
			id => "msgParserId1496"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1497
	# line in RSA: Stack group <group>IP address <hostip>
	else if [logstash][msgparser][id] == "msgParserId1497" {
		dissect {
			mapping => { "message" => "Stack group %{group}IP address %{hostip}" }
			id => "msgParserId1497"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1498
	# line in RSA:  <hostip> not known
	else if [logstash][msgparser][id] == "msgParserId1498" {
		dissect {
			mapping => { "message" => "%{hostip} not known" }
			id => "msgParserId1498"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1499
	# line in RSA:  <fld1> from peer at <hostip>
	else if [logstash][msgparser][id] == "msgParserId1499" {
		dissect {
			mapping => { "message" => "%{fld1} from peer at %{hostip}" }
			id => "msgParserId1499"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1500
	# line in RSA:  <event_description> group <group>
	else if [logstash][msgparser][id] == "msgParserId1500" {
		dissect {
			mapping => { "message" => "%{event_description} group %{group}" }
			id => "msgParserId1500"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1501
	# line in RSA:  Failed to respond to <fld1> group <group>- <event_description>
	else if [logstash][msgparser][id] == "msgParserId1501" {
		dissect {
			mapping => { "message" => "Failed to respond to %{fld1} group %{group}- %{event_description}" }
			id => "msgParserId1501"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1502
	# line in RSA:  <fld1> Unable to auto delete file <filename>. <info>
	else if [logstash][msgparser][id] == "msgParserId1502" {
		dissect {
			mapping => { "message" => "%{fld1} Unable to auto delete file %{filename}. %{info}" }
			id => "msgParserId1502"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1503
	# line in RSA: <fld1> Signature not valid for file <filename>.
	else if [logstash][msgparser][id] == "msgParserId1503" {
		dissect {
			mapping => { "message" => "%{fld1} Signature not valid for file %{filename}." }
			id => "msgParserId1503"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1504
	# line in RSA: <fld1> Signature not found in file <filename>.
	else if [logstash][msgparser][id] == "msgParserId1504" {
		dissect {
			mapping => { "message" => "%{fld1} Signature not found in file %{filename}." }
			id => "msgParserId1504"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1505
	# line in RSA: No static template found for slot <fld1> port <network_port> with parameters provided
	else if [logstash][msgparser][id] == "msgParserId1505" {
		dissect {
			mapping => { "message" => "No static template found for slot %{fld1} port %{network_port} with parameters provided" }
			id => "msgParserId1505"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1506
	# line in RSA: Real <hostip> (<fld1>) has changed state to <event_state>
	else if [logstash][msgparser][id] == "msgParserId1506" {
		dissect {
			mapping => { "message" => "Real %{hostip} (%{fld1}) has changed state to %{event_state}" }
			id => "msgParserId1506"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1507
	# line in RSA: Agent <hostip>:<network_port> -  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1507" {
		dissect {
			mapping => { "message" => "Agent %{hostip}:%{network_port} -  %{event_description}" }
			id => "msgParserId1507"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1508
	# line in RSA:  Manager <hostip> is reconnecting
	else if [logstash][msgparser][id] == "msgParserId1508" {
		dissect {
			mapping => { "message" => "Manager %{hostip} is reconnecting" }
			id => "msgParserId1508"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1509
	# line in RSA:  Reset of Port <network_port> NMI failed
	else if [logstash][msgparser][id] == "msgParserId1509" {
		dissect {
			mapping => { "message" => "Reset of Port %{network_port} NMI failed" }
			id => "msgParserId1509"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1510
	# line in RSA:  Persistent event '<change_old>' did not leave the current state '<change_new>': pm_port <portname>
	else if [logstash][msgparser][id] == "msgParserId1510" {
		dissect {
			mapping => { "message" => "Persistent event '%{change_old}' did not leave the current state '%{change_new}': pm_port %{portname}" }
			id => "msgParserId1510"
			add_field => {
				"event_description" => " Port persistent event did not leave current state"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1511
	# line in RSA:  Authentication failure for SNMP { request | req } from host <hostip>
	else if [logstash][msgparser][id] == "msgParserId1511" {
		grok {
			match => { "message" => "^[\s]*Authentication[\s]+failure[\s]+for[\s]+SNMP[\s]+([\s]*request[\s]+|[\s]*req[\s]+)[\s]+from[\s]+host[\s]+(?<hostip>.*)$" }
			id => "msgParserId1511"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "Authentication failure for SNMP request"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1512
	# line in RSA: SNMP agent on host <shost> is undergoing a cold start
	else if [logstash][msgparser][id] == "msgParserId1512" {
		dissect {
			mapping => { "message" => "SNMP agent on host %{shost} is undergoing a cold start" }
			id => "msgParserId1512"
			add_field => {
				"event_description" => "SNMP agent undergoing cold start"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1513
	# line in RSA:  Unsupported SNMP authorization type: <info>
	else if [logstash][msgparser][id] == "msgParserId1513" {
		dissect {
			mapping => { "message" => "Unsupported SNMP authorization type: %{info}" }
			id => "msgParserId1513"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1514
	# line in RSA: APS Bad authentication from <hostip>
	else if [logstash][msgparser][id] == "msgParserId1514" {
		dissect {
			mapping => { "message" => "APS Bad authentication from %{hostip}" }
			id => "msgParserId1514"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1515
	# line in RSA:  slot <device> Packet src:<saddr> dst:<daddr> seq num: <result> failed replay check <info>
	else if [logstash][msgparser][id] == "msgParserId1515" {
		dissect {
			mapping => { "message" => "slot %{device} Packet src:%{saddr} dst:%{daddr} seq num: %{result} failed replay check %{info}" }
			id => "msgParserId1515"
			add_field => {
				"event_description" => "Packet failed replay check"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1516
	# line in RSA:  Blocking on INTERFACE <interface>. <event_description>
	else if [logstash][msgparser][id] == "msgParserId1516" {
		dissect {
			mapping => { "message" => "Blocking on INTERFACE %{interface}. %{event_description}" }
			id => "msgParserId1516"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1517
	# line in RSA:  Received BPDU on port <portname>  with BPDU Guard enabled. <result>.
	else if [logstash][msgparser][id] == "msgParserId1517" {
		dissect {
			mapping => { "message" => "Received BPDU on port %{portname}  with BPDU Guard enabled. %{result}." }
			id => "msgParserId1517"
			add_field => {
				"event_description" => "port disabled - BPDU received on guarded port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1518
	# line in RSA:  Blocking <interface> on vlan <vlan>. 
	else if [logstash][msgparser][id] == "msgParserId1518" {
		dissect {
			mapping => { "message" => "Blocking %{interface} on vlan %{vlan}." }
			id => "msgParserId1518"
			add_field => {
				"event_description" => "Blocking FastEthernet"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1519
	# line in RSA:  Blocking <interface> on <vlan>. <result>.
	else if [logstash][msgparser][id] == "msgParserId1519" {
		dissect {
			mapping => { "message" => "Blocking %{interface} on %{vlan}. %{result}." }
			id => "msgParserId1519"
			add_field => {
				"event_description" => "Interface blocked on vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1520
	# line in RSA:  Blocking <interface> on <vlan>. <result>.
	else if [logstash][msgparser][id] == "msgParserId1520" {
		dissect {
			mapping => { "message" => "Blocking %{interface} on %{vlan}. %{result}." }
			id => "msgParserId1520"
			add_field => {
				"event_description" => "blocking interface on vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1521
	# line in RSA:  Loop guard blocking port <network_port> on <vlan>.
	else if [logstash][msgparser][id] == "msgParserId1521" {
		dissect {
			mapping => { "message" => "Loop guard blocking port %{network_port} on %{vlan}." }
			id => "msgParserId1521"
			add_field => {
				"event_description" => "Port blocked"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1522
	# line in RSA:  Loop guard unblocking port <network_port> on <vlan>.
	else if [logstash][msgparser][id] == "msgParserId1522" {
		dissect {
			mapping => { "message" => "Loop guard unblocking port %{network_port} on %{vlan}." }
			id => "msgParserId1522"
			add_field => {
				"event_description" => "Port unblocked"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1523
	# line in RSA: Superior PVST BPDU rcvd on { VLAN | vlan }  <vlan> port <network_port>, <info>
	else if [logstash][msgparser][id] == "msgParserId1523" {
		grok {
			match => { "message" => "^Superior[\s]+PVST[\s]+BPDU[\s]+rcvd[\s]+on[\s]+([\s]*VLAN[\s]+|[\s]*vlan[\s]+)[\s]+(?<vlan>[^\s]*)[\s]+port[\s]+(?<network_port>[^,]*),[\s]+(?<info>.*)$" }
			id => "msgParserId1523"
			add_field => {
				"event_description" => "Superior PVST BPDU rcvd on vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1524
	# line in RSA:  Received BPDU with inconsistent peer vlan id <vlan> on <interface> <info>.
	else if [logstash][msgparser][id] == "msgParserId1524" {
		dissect {
			mapping => { "message" => "Received BPDU with inconsistent peer vlan id %{vlan} on %{interface} %{info}." }
			id => "msgParserId1524"
			add_field => {
				"event_description" => "Received BPDU with inconsistent peer"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1525
	# line in RSA:  Root guard blocking port <network_port> on <interface>
	else if [logstash][msgparser][id] == "msgParserId1525" {
		dissect {
			mapping => { "message" => "Root guard blocking port %{network_port} on %{interface}" }
			id => "msgParserId1525"
			add_field => {
				"event_description" => "Root guard blocking port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1526
	# line in RSA:  Root guard unblocking port <network_port> on <interface>
	else if [logstash][msgparser][id] == "msgParserId1526" {
		dissect {
			mapping => { "message" => "Root guard unblocking port %{network_port} on %{interface}" }
			id => "msgParserId1526"
			add_field => {
				"event_description" => "Root guard unblocking port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1527
	# line in RSA: Received BPDU on PortFast enabled port. Disabling <network_port>
	else if [logstash][msgparser][id] == "msgParserId1527" {
		dissect {
			mapping => { "message" => "Received BPDU on PortFast enabled port. Disabling %{network_port}" }
			id => "msgParserId1527"
			add_field => {
				"event_description" => "Disabling port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1528
	# line in RSA:  Unblocking <interface> on <vlan>. <result>.
	else if [logstash][msgparser][id] == "msgParserId1528" {
		dissect {
			mapping => { "message" => "Unblocking %{interface} on %{vlan}. %{result}." }
			id => "msgParserId1528"
			add_field => {
				"event_description" => "Unblocking interface on vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1529
	# line in RSA: { Port | port } <network_port> state in { VLAN | vlan }  <vlan> changed to { listening | Listening }
	else if [logstash][msgparser][id] == "msgParserId1529" {
		grok {
			match => { "message" => "^([\s]*Port[\s]+|[\s]*port[\s]+)[\s]+(?<network_port>[^\s]*)[\s]+state[\s]+in[\s]+([\s]*VLAN[\s]+|[\s]*vlan[\s]+)[\s]+(?<vlan>[^\s]*)[\s]+changed[\s]+to[\s]+([\s]*listening[\s]+|[\s]*Listening[\s]+)$" }
			id => "msgParserId1529"
			add_field => {
				"event_description" => "port changed to listening"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1530
	# line in RSA:  Root { changed for Vlan | Changed for vlan } <vlan>: New { root port <network_port>. | Root Port is <portname>. } New { Root mac address | Root Mac Address } is <smacaddr>
	else if [logstash][msgparser][id] == "msgParserId1530" {
		grok {
			match => { "message" => "^[\s]*Root[\s]+([\s]*changed[\s]+for[\s]+Vlan[\s]+|[\s]*Changed[\s]+for[\s]+vlan[\s]+)[\s]+(?<vlan>[^:]*):[\s]+New[\s]+([\s]*root[\s]+port[\s]+(?<network_port>[^\.]*)\.[\s]+|[\s]*Root[\s]+Port[\s]+is[\s]+(?<portname>[^\.]*)\.[\s]+)[\s]+New[\s]+([\s]*Root[\s]+mac[\s]+address[\s]+|[\s]*Root[\s]+Mac[\s]+Address[\s]+)[\s]+is[\s]+(?<smacaddr>.*)$" }
			id => "msgParserId1530"
			add_field => {
				"event_description" => "Root changed for Vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1531
	# line in RSA:  Topology Change Trap for vlan <vlan> 
	else if [logstash][msgparser][id] == "msgParserId1531" {
		dissect {
			mapping => { "message" => "Topology Change Trap for vlan %{vlan}" }
			id => "msgParserId1531"
			add_field => {
				"event_description" => "Topology Change Trap for vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1532
	# line in RSA:  {Port | port } <network_port> state in { VLAN <vlan> | vlan <vlan> | MST instance <vlan> } changed to blocking 
	else if [logstash][msgparser][id] == "msgParserId1532" {
		grok {
			match => { "message" => "^[\s]*(Port[\s]+|[\s]*port[\s]+)[\s]+(?<network_port>[^\s]*)[\s]+state[\s]+in[\s]+([\s]*VLAN[\s]+(?<vlan>[^\s]*)[\s]+|[\s]*vlan[\s]+(?<vlan>[^\s]*)[\s]+|[\s]*MST[\s]+instance[\s]+(?<vlan>[^\s]*)[\s]+)[\s]+changed[\s]+to[\s]+blocking[\s]+$" }
			id => "msgParserId1532"
			add_field => {
				"event_description" => "port state changed to blocking"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1533
	# line in RSA:  {Port | port } <network_port> state in { VLAN <vlan> | vlan <vlan> | MST instance <vlan> } changed to forwarding 
	else if [logstash][msgparser][id] == "msgParserId1533" {
		grok {
			match => { "message" => "^[\s]*(Port[\s]+|[\s]*port[\s]+)[\s]+(?<network_port>[^\s]*)[\s]+state[\s]+in[\s]+([\s]*VLAN[\s]+(?<vlan>[^\s]*)[\s]+|[\s]*vlan[\s]+(?<vlan>[^\s]*)[\s]+|[\s]*MST[\s]+instance[\s]+(?<vlan>[^\s]*)[\s]+)[\s]+changed[\s]+to[\s]+forwarding[\s]+$" }
			id => "msgParserId1533"
			add_field => {
				"event_description" => "port state changed to forwarding"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1534
	# line in RSA:  {Port | port } <network_port> state in { VLAN <vlan> | vlan <vlan> | MST instance <vlan> } changed to { learning | Learning } 
	else if [logstash][msgparser][id] == "msgParserId1534" {
		grok {
			match => { "message" => "^[\s]*(Port[\s]+|[\s]*port[\s]+)[\s]+(?<network_port>[^\s]*)[\s]+state[\s]+in[\s]+([\s]*VLAN[\s]+(?<vlan>[^\s]*)[\s]+|[\s]*vlan[\s]+(?<vlan>[^\s]*)[\s]+|[\s]*MST[\s]+instance[\s]+(?<vlan>[^\s]*)[\s]+)[\s]+changed[\s]+to[\s]+([\s]*learning[\s]+|[\s]*Learning[\s]+)[\s]+$" }
			id => "msgParserId1534"
			add_field => {
				"event_description" => "port state changed to learning"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1535
	# line in RSA:  Received inferior BPDU on port <network_port> in { VLAN | vlan }  <vlan>
	else if [logstash][msgparser][id] == "msgParserId1535" {
		grok {
			match => { "message" => "^[\s]*Received[\s]+inferior[\s]+BPDU[\s]+on[\s]+port[\s]+(?<network_port>[^\s]*)[\s]+in[\s]+([\s]*VLAN[\s]+|[\s]*vlan[\s]+)[\s]+(?<vlan>.*)$" }
			id => "msgParserId1535"
			add_field => {
				"event_description" => "Received inferior BPDU on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1536
	# line in RSA:  Blocking <network_port> on <vlan>. <result>.
	else if [logstash][msgparser][id] == "msgParserId1536" {
		dissect {
			mapping => { "message" => "Blocking %{network_port} on %{vlan}. %{result}." }
			id => "msgParserId1536"
			add_field => {
				"event_description" => "Blocking port  on VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1537
	# line in RSA:  Received <group> BPDU on non trunk <network_port> <vlan>.
	else if [logstash][msgparser][id] == "msgParserId1537" {
		dissect {
			mapping => { "message" => "Received %{group} BPDU on non trunk %{network_port} %{vlan}." }
			id => "msgParserId1537"
			add_field => {
				"event_description" => "Received BPDU on non trunk"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1538
	# line in RSA:  Blocking <network_port> on <vlan>. <result>
	else if [logstash][msgparser][id] == "msgParserId1538" {
		dissect {
			mapping => { "message" => "Blocking %{network_port} on %{vlan}. %{result}" }
			id => "msgParserId1538"
			add_field => {
				"event_description" => "Blocking port on vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1539
	# line in RSA:  Loop guard blocking port <interface> on <vlan>.
	else if [logstash][msgparser][id] == "msgParserId1539" {
		dissect {
			mapping => { "message" => "Loop guard blocking port %{interface} on %{vlan}." }
			id => "msgParserId1539"
			add_field => {
				"event_description" => "Loop guard blocking port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1540
	# line in RSA:  Loop guard unblocking port <interface> on <vlan>.
	else if [logstash][msgparser][id] == "msgParserId1540" {
		dissect {
			mapping => { "message" => "Loop guard unblocking port %{interface} on %{vlan}." }
			id => "msgParserId1540"
			add_field => {
				"event_description" => "Loop guard unblocking port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1541
	# line in RSA:  Unblocking <network_port> on <vlan>. <result>
	else if [logstash][msgparser][id] == "msgParserId1541" {
		dissect {
			mapping => { "message" => "Unblocking %{network_port} on %{vlan}. %{result}" }
			id => "msgParserId1541"
			add_field => {
				"event_description" => "Unblocking port on vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1542
	# line in RSA:  pre-standard MST interaction not configured (<interface>). <info>
	else if [logstash][msgparser][id] == "msgParserId1542" {
		dissect {
			mapping => { "message" => "pre-standard MST interaction not configured (%{interface}). %{info}" }
			id => "msgParserId1542"
			add_field => {
				"event_description" => "pre-standard MST interaction not configured on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1543
	# line in RSA:  Extended SysId enabled for type vlan <info>
	else if [logstash][msgparser][id] == "msgParserId1543" {
		dissect {
			mapping => { "message" => "Extended SysId enabled for type vlan %{info}" }
			id => "msgParserId1543"
			add_field => {
				"event_description" => "Extended SysId enabled for type vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1544
	# line in RSA:  Extended SysId enabled for type vlan. <info>
	else if [logstash][msgparser][id] == "msgParserId1544" {
		dissect {
			mapping => { "message" => "Extended SysId enabled for type vlan. %{info}" }
			id => "msgParserId1544"
			add_field => {
				"event_description" => "Extended SysId enabled for type vlan"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1545
	# line in RSA:  Invalid modulus length
	else if [logstash][msgparser][id] == "msgParserId1545" {
		dissect {
			mapping => { "message" => "Invalid modulus length" }
			id => "msgParserId1545"
			add_field => {
				"event_description" => "Invalid modulus length"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1546
	# line in RSA:  Unable to retrieve RSA private key for <info>
	else if [logstash][msgparser][id] == "msgParserId1546" {
		dissect {
			mapping => { "message" => "Unable to retrieve RSA private key for %{info}" }
			id => "msgParserId1546"
			add_field => {
				"event_description" => "Unable to retrieve RSA private "
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1547
	# line in RSA:  <protocol> <version> has been <disposition>
	else if [logstash][msgparser][id] == "msgParserId1547" {
		dissect {
			mapping => { "message" => "%{protocol} %{version} has been %{disposition}" }
			id => "msgParserId1547"
			add_field => {
				"event_description" => "SSH enabled"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1548
	# line in RSA: SSH2 Session from <saddr> (<info>) for user '<username>' using crypto cipher '<encryption_type>', hmac '<context>' closed
	else if [logstash][msgparser][id] == "msgParserId1548" {
		dissect {
			mapping => { "message" => "SSH2 Session from %{saddr} (%{info}) for user '%{username}' using crypto cipher '%{encryption_type}', hmac '%{context}' closed" }
			id => "msgParserId1548"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%SSH-5-SSH2_SESSION" {
		# MESSAGE %SSH-5-SSH2_SESSION
		# line in RSA: SSH2 Session request from <saddr> (<info>) using crypto cipher '<encryption_type>', hmac '<context>' Succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SSH2 Session request from %{saddr} (%{info}) using crypto cipher '%{encryption_type}', hmac '%{context}' Succeeded" }
				id => "message-%SSH-5-SSH2_SESSION"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "%SSH-5-SSH2_SESSION"
					"[rsa][message][id1]" => "%SSH-5-SSH2_SESSION"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SSH-5-SSH2_SESSION:01
		# line in RSA: SSH2 Session request from <saddr> (<info>) using crypto cipher '<encryption_type>', hmac '<context>' Failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SSH2 Session request from %{saddr} (%{info}) using crypto cipher '%{encryption_type}', hmac '%{context}' Failed" }
				id => "message-%SSH-5-SSH2_SESSION:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "%SSH-5-SSH2_SESSION:01"
					"[rsa][message][id1]" => "%SSH-5-SSH2_SESSION:01"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%SSH-5-SSH2_USERAUTH" {
		# MESSAGE %SSH-5-SSH2_USERAUTH
		# line in RSA: User '<username>' authentication for SSH2 Session from <saddr> (<info>) using crypto cipher '<encryption_type>', hmac '<context>' Succeeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User '%{username}' authentication for SSH2 Session from %{saddr} (%{info}) using crypto cipher '%{encryption_type}', hmac '%{context}' Succeeded" }
				id => "message-%SSH-5-SSH2_USERAUTH"
				add_field => {
					"[event][id]" => "%SSH-5-SSH2_USERAUTH"
					"[rsa][message][id1]" => "%SSH-5-SSH2_USERAUTH"
					"[event][categoryid]" => "1613050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SSH-5-SSH2_USERAUTH:01
		# line in RSA: User '<username>' authentication for SSH2 Session from <saddr> (<info>) using crypto cipher '<encryption_type>', hmac '<context>' Failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User '%{username}' authentication for SSH2 Session from %{saddr} (%{info}) using crypto cipher '%{encryption_type}', hmac '%{context}' Failed" }
				id => "message-%SSH-5-SSH2_USERAUTH:01"
				add_field => {
					"[event][id]" => "%SSH-5-SSH2_USERAUTH:01"
					"[rsa][message][id1]" => "%SSH-5-SSH2_USERAUTH:01"
					"[event][categoryid]" => "1613050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1553
	# line in RSA: SSH Session from <saddr> (<info>) for user '<username>' using crypto cipher '<encryption_type>' closed
	else if [logstash][msgparser][id] == "msgParserId1553" {
		dissect {
			mapping => { "message" => "SSH Session from %{saddr} (%{info}) for user '%{username}' using crypto cipher '%{encryption_type}' closed" }
			id => "msgParserId1553"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1554
	# line in RSA: SSH Session request from <saddr> (<info>) using crypto cipher '<encryption_type>' Succeeded
	else if [logstash][msgparser][id] == "msgParserId1554" {
		dissect {
			mapping => { "message" => "SSH Session request from %{saddr} (%{info}) using crypto cipher '%{encryption_type}' Succeeded" }
			id => "msgParserId1554"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1555
	# line in RSA: User <username> authentication for SSH Session from <saddr> (<info>) using crypto cipher '<encryption_type>' Succeeded
	else if [logstash][msgparser][id] == "msgParserId1555" {
		dissect {
			mapping => { "message" => "User %{username} authentication for SSH Session from %{saddr} (%{info}) using crypto cipher '%{encryption_type}' Succeeded" }
			id => "msgParserId1555"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1556
	# line in RSA:  Stack Port <network_port> Switch <fld11> has changed to state <info>
	else if [logstash][msgparser][id] == "msgParserId1556" {
		dissect {
			mapping => { "message" => "Stack Port %{network_port} Switch %{fld11} has changed to state %{info}" }
			id => "msgParserId1556"
			add_field => {
				"event_description" => "Stack Port Switch changed state"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1557
	# line in RSA:  <fld1> Group <group> active routers virtual IP address <hostip> is different to the locally configured address <info> 
	else if [logstash][msgparser][id] == "msgParserId1557" {
		dissect {
			mapping => { "message" => "%{fld1} Group %{group} active routers virtual IP address %{hostip} is different to the locally configured address %{info}" }
			id => "msgParserId1557"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1558
	# line in RSA:  Duplicate address <hostip> on <info>
	else if [logstash][msgparser][id] == "msgParserId1558" {
		dissect {
			mapping => { "message" => "Duplicate address %{hostip} on %{info}" }
			id => "msgParserId1558"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1559
	# line in RSA:  <fld1> Group <group> address <hostip> is already assigned to <info> 
	else if [logstash][msgparser][id] == "msgParserId1559" {
		dissect {
			mapping => { "message" => "%{fld1} Group %{group} address %{hostip} is already assigned to %{info}" }
			id => "msgParserId1559"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1560
	# line in RSA: <fld1> Group <group> address <hostip> is already assigned on this interface
	else if [logstash][msgparser][id] == "msgParserId1560" {
		dissect {
			mapping => { "message" => "%{fld1} Group %{group} address %{hostip} is already assigned on this interface" }
			id => "msgParserId1560"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1561
	# line in RSA: <fld1> Group <group> address <hostip> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1561" {
		dissect {
			mapping => { "message" => "%{fld1} Group %{group} address %{hostip} %{event_description}" }
			id => "msgParserId1561"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1562
	# line in RSA:  A <event_type> detected on <interface>. <result>
	else if [logstash][msgparser][id] == "msgParserId1562" {
		dissect {
			mapping => { "message" => "A %{event_type} detected on %{interface}. %{result}" }
			id => "msgParserId1562"
			add_field => {
				"event_description" => "A storm detected on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1563
	# line in RSA:  A Broadcast storm detected on <interface>. <result>.
	else if [logstash][msgparser][id] == "msgParserId1563" {
		dissect {
			mapping => { "message" => "A Broadcast storm detected on %{interface}. %{result}." }
			id => "msgParserId1563"
			add_field => {
				"event_description" => "Broadcast storm detected on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1564
	# line in RSA:  Bridge <obj_name> blocking port <portname> <vlan>.
	else if [logstash][msgparser][id] == "msgParserId1564" {
		dissect {
			mapping => { "message" => "Bridge %{obj_name} blocking port %{portname} %{vlan}." }
			id => "msgParserId1564"
			add_field => {
				"event_description" => "Bridge blocking port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1565
	# line in RSA:  Dispute resolved for port <portname> on <vlan>.
	else if [logstash][msgparser][id] == "msgParserId1565" {
		dissect {
			mapping => { "message" => "Dispute resolved for port %{portname} on %{vlan}." }
			id => "msgParserId1565"
			add_field => {
				"event_description" => "Dispute resolved for port on VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1566
	# line in RSA:  Dispute detected on port <portname> on <vlan>.
	else if [logstash][msgparser][id] == "msgParserId1566" {
		dissect {
			mapping => { "message" => "Dispute detected on port %{portname} on %{vlan}." }
			id => "msgParserId1566"
			add_field => {
				"event_description" => "Dispute detected on port on VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1567
	# line in RSA:  vPC peer-switch configuration is disabled. <info>
	else if [logstash][msgparser][id] == "msgParserId1567" {
		dissect {
			mapping => { "message" => "vPC peer-switch configuration is disabled. %{info}" }
			id => "msgParserId1567"
			add_field => {
				"event_description" => "vPC peer-switch configuration is disabled"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1568
	# line in RSA:  Interface <interface>, added to <vlan> with <result>, state <event_state>, cost <dclass_counter1>, priority <privilege>, link-type <protocol_detail>
	else if [logstash][msgparser][id] == "msgParserId1568" {
		dissect {
			mapping => { "message" => "Interface %{interface}, added to %{vlan} with %{result}, state %{event_state}, cost %{dclass_counter1}, priority %{privilege}, link-type %{protocol_detail}" }
			id => "msgParserId1568"
			add_field => {
				"event_description" => "Interface added to VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1569
	# line in RSA:  Port <portname> instance <vlan> cost changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId1569" {
		dissect {
			mapping => { "message" => "Port %{portname} instance %{vlan} cost changed to %{change_new}" }
			id => "msgParserId1569"
			add_field => {
				"event_description" => "port cost changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1570
	# line in RSA:  Interface <interface>, removed from <vlan>
	else if [logstash][msgparser][id] == "msgParserId1570" {
		dissect {
			mapping => { "message" => "Interface %{interface}, removed from %{vlan}" }
			id => "msgParserId1570"
			add_field => {
				"event_description" => "Interface removed from VLAN"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1571
	# line in RSA:  Interface <interface> added to vlan=<vlan> with <result>, priority <privilege>, link-type <protocol_detail>
	else if [logstash][msgparser][id] == "msgParserId1571" {
		dissect {
			mapping => { "message" => "Interface %{interface} added to vlan=%{vlan} with %{result}, priority %{privilege}, link-type %{protocol_detail}" }
			id => "msgParserId1571"
			add_field => {
				"event_description" => "Interface added to VLAN range"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1572
	# line in RSA:  Interface <interface> removed from vlan=<vlan> 
	else if [logstash][msgparser][id] == "msgParserId1572" {
		dissect {
			mapping => { "message" => "Interface %{interface} removed from vlan=%{vlan}" }
			id => "msgParserId1572"
			add_field => {
				"event_description" => "Interface removed from VLAN range"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1573
	# line in RSA:  Port <portname> instance <vlan> role changed to <result>
	else if [logstash][msgparser][id] == "msgParserId1573" {
		dissect {
			mapping => { "message" => "Port %{portname} instance %{vlan} role changed to %{result}" }
			id => "msgParserId1573"
			add_field => {
				"event_description" => "Port VLAN instance role changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1574
	# line in RSA:  new_role=<change_new> interface=<interface> vlan=<vlan>
	else if [logstash][msgparser][id] == "msgParserId1574" {
		dissect {
			mapping => { "message" => "new_role=%{change_new} interface=%{interface} vlan=%{vlan}" }
			id => "msgParserId1574"
			add_field => {
				"event_description" => "Port VLAN range role changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1575
	# line in RSA:  new_state=<change_new> interface=<interface> vlan=<vlan>
	else if [logstash][msgparser][id] == "msgParserId1575" {
		dissect {
			mapping => { "message" => "new_state=%{change_new} interface=%{interface} vlan=%{vlan}" }
			id => "msgParserId1575"
			add_field => {
				"event_description" => "Port VLAN range state changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1576
	# line in RSA:  Port <portname> instance <vlan> moving from <change_old> <fld1> <change_new>
	else if [logstash][msgparser][id] == "msgParserId1576" {
		dissect {
			mapping => { "message" => "Port %{portname} instance %{vlan} moving from %{change_old} %{fld1} %{change_new}" }
			id => "msgParserId1576"
			add_field => {
				"event_description" => "Port VLAN instance state changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1577
	# line in RSA:  Root bridge for <vlan> changed to <macaddr>
	else if [logstash][msgparser][id] == "msgParserId1577" {
		dissect {
			mapping => { "message" => "Root bridge for %{vlan} changed to %{macaddr}" }
			id => "msgParserId1577"
			add_field => {
				"event_description" => "Root bridge for VLAN changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1578
	# line in RSA:  Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1578" {
		dissect {
			mapping => { "message" => "Interface %{interface} %{event_description}" }
			id => "msgParserId1578"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1579
	# line in RSA:  cisco-phone no longer detected on port <interface>, <result>
	else if [logstash][msgparser][id] == "msgParserId1579" {
		dissect {
			mapping => { "message" => "cisco-phone no longer detected on port %{interface}, %{result}" }
			id => "msgParserId1579"
			add_field => {
				"event_description" => "cisco-phone no longer detected on port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1580
	# line in RSA:  cisco-phone detected on port <interface>, <result> 
	else if [logstash][msgparser][id] == "msgParserId1580" {
		dissect {
			mapping => { "message" => "cisco-phone detected on port %{interface}, %{result}" }
			id => "msgParserId1580"
			add_field => {
				"event_description" => "cisco-phone detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1581
	# line in RSA:  <fld13> Invalid ARPs (<fld1>) on <interface>, vlan <vlan>.([<info>])
	else if [logstash][msgparser][id] == "msgParserId1581" {
		dissect {
			mapping => { "message" => "%{fld13} Invalid ARPs (%{fld1}) on %{interface}, vlan %{vlan}.([%{info}])" }
			id => "msgParserId1581"
			add_field => {
				"event_description" => "dhcp snooping detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1582
	# line in RSA:  <fld13> packets received in <fld12> milliseconds on <interface>
	else if [logstash][msgparser][id] == "msgParserId1582" {
		dissect {
			mapping => { "message" => "%{fld13} packets received in %{fld12} milliseconds on %{interface}" }
			id => "msgParserId1582"
			add_field => {
				"event_description" => "packet rate exceeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1583
	# line in RSA:  VLAN manager received an internal error <result> from vtp function <service>
	else if [logstash][msgparser][id] == "msgParserId1583" {
		dissect {
			mapping => { "message" => "VLAN manager received an internal error %{result} from vtp function %{service}" }
			id => "msgParserId1583"
			add_field => {
				"event_description" => "VLAN manager received an internal error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1584
	# line in RSA:  VTP semaphore is unavailable for function <service>. <result>
	else if [logstash][msgparser][id] == "msgParserId1584" {
		dissect {
			mapping => { "message" => "VTP semaphore is unavailable for function %{service}. %{result}" }
			id => "msgParserId1584"
			add_field => {
				"event_description" => "VTP semaphore is unavailable for function"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1585
	# line in RSA:  VTP Operational Pruning Disabled.
	else if [logstash][msgparser][id] == "msgParserId1585" {
		dissect {
			mapping => { "message" => "VTP Operational Pruning Disabled." }
			id => "msgParserId1585"
			add_field => {
				"event_description" => "VTP Operational Pruning Disabled"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1586
	# line in RSA:   Threshold: Total CPU Utilization(Total/Intr) <info>.
	else if [logstash][msgparser][id] == "msgParserId1586" {
		dissect {
			mapping => { "message" => "Threshold: Total CPU Utilization(Total/Intr) %{info}." }
			id => "msgParserId1586"
			add_field => {
				"event_description" => "CPU Falling Threshold"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1587
	# line in RSA:   Threshold: Total CPU Utilization(Total/Intr): <info>
	else if [logstash][msgparser][id] == "msgParserId1587" {
		dissect {
			mapping => { "message" => "Threshold: Total CPU Utilization(Total/Intr): %{info}" }
			id => "msgParserId1587"
			add_field => {
				"event_description" => "CPU Rising Threshold"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1588
	# line in RSA: Unknown socket protocol <protocol>
	else if [logstash][msgparser][id] == "msgParserId1588" {
		dissect {
			mapping => { "message" => "Unknown socket protocol %{protocol}" }
			id => "msgParserId1588"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1589
	# line in RSA:  Number of siblings in a chunk has gone above the threshold. Threshold:<dclass_counter1> Sibling-Count:<dclass_counter2> Chunk:<info> Name: <pool_name>
	else if [logstash][msgparser][id] == "msgParserId1589" {
		dissect {
			mapping => { "message" => "Number of siblings in a chunk has gone above the threshold. Threshold:%{dclass_counter1} Sibling-Count:%{dclass_counter2} Chunk:%{info} Name: %{pool_name}" }
			id => "msgParserId1589"
			add_field => {
				"event_description" => "Number of siblings in a chunk has gone above the threshold"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1590
	# line in RSA:  SNMP WriteNet request. Writing current configuration to <hostip>
	else if [logstash][msgparser][id] == "msgParserId1590" {
		dissect {
			mapping => { "message" => "SNMP WriteNet request. Writing current configuration to %{hostip}" }
			id => "msgParserId1590"
			add_field => {
				"action" => "SNMP writing current configuration "
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%SYS-5-CONFIG_I" {
		# MESSAGE %SYS-5-CONFIG_I:01
		# line in RSA:  Configured from console by <username> on <terminal> (<hostip>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configured from console by %{username} on %{terminal} (%{hostip})" }
				id => "message-%SYS-5-CONFIG_I:01"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Configure by user on terminal"
					"[event][id]" => "%SYS-5-CONFIG_I:01"
					"[rsa][message][id1]" => "%SYS-5-CONFIG_I:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE %SYS-5-CONFIG_I
		# line in RSA:  Configured from console by <terminal> (<hostip>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configured from console by %{terminal} (%{hostip})" }
				id => "message-%SYS-5-CONFIG_I"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "%SYS-5-CONFIG_I"
					"[rsa][message][id1]" => "%SYS-5-CONFIG_I"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SYS-5-CONFIG_I:03
		# line in RSA:  Configured from console by {<username><fld>on <terminal>|<username>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE %SYS-5-CONFIG_I:02
		# line in RSA:  Configured from <filename> by console
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configured from %{filename} by console" }
				id => "message-%SYS-5-CONFIG_I:02"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Configured from file by console"
					"[event][id]" => "%SYS-5-CONFIG_I:02"
					"[rsa][message][id1]" => "%SYS-5-CONFIG_I:02"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SYS-5-CONFIG_I:04
		# line in RSA:  Configured from <saddr> by snmp
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configured from %{saddr} by snmp" }
				id => "message-%SYS-5-CONFIG_I:04"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Configured by snmp"
					"[event][id]" => "%SYS-5-CONFIG_I:04"
					"[rsa][message][id1]" => "%SYS-5-CONFIG_I:04"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1596
	# line in RSA:  Configuration file <filename> accepted, aborting setup 
	else if [logstash][msgparser][id] == "msgParserId1596" {
		dissect {
			mapping => { "message" => "Configuration file %{filename} accepted, aborting setup" }
			id => "msgParserId1596"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1597
	# line in RSA:  Authentication to { Privilage | privilege } level <privilege> failed by <username> on <device> (<saddr>)
	else if [logstash][msgparser][id] == "msgParserId1597" {
		grok {
			match => { "message" => "^[\s]*Authentication[\s]+to[\s]+([\s]*Privilage[\s]+|[\s]*privilege[\s]+)[\s]+level[\s]+(?<privilege>[^\s]*)[\s]+failed[\s]+by[\s]+(?<username>[^\s]*)[\s]+on[\s]+(?<device>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)$" }
			id => "msgParserId1597"
			add_field => {
				"event_description" => "Authentication to privilege level failed by username"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1598
	# line in RSA: Privilege level set to <privilege> by <username> on <interface> (<hostip>)
	else if [logstash][msgparser][id] == "msgParserId1598" {
		dissect {
			mapping => { "message" => "Privilege level set to %{privilege} by %{username} on %{interface} (%{hostip})" }
			id => "msgParserId1598"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1599
	# line in RSA:   Privilege level set to <privilege> by <username> on <interface> (<hostip>)
	else if [logstash][msgparser][id] == "msgParserId1599" {
		dissect {
			mapping => { "message" => "Privilege level set to %{privilege} by %{username} on %{interface} (%{hostip})" }
			id => "msgParserId1599"
			add_field => {
				"event_description" => "Privilege level set by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1600
	# line in RSA:  Reload requested for <fld7> <fld9> { Mon|Tue|Wed|Thu|Fri|Sat|Sun } <fld10> at <fld1> by <username> on <interface> (<hostip>) 
	else if [logstash][msgparser][id] == "msgParserId1600" {
		grok {
			match => { "message" => "^[\s]*Reload[\s]+requested[\s]+for[\s]+(?<fld7>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+([\s]*Mon|Tue|Wed|Thu|Fri|Sat|Sun[\s]+)[\s]+(?<fld10>[^\s]*)[\s]+at[\s]+(?<fld1>[^\s]*)[\s]+by[\s]+(?<username>[^\s]*)[\s]+on[\s]+(?<interface>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)[\s]+$" }
			id => "msgParserId1600"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld10} %{fld7}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId1601
	# line in RSA:  Scheduled reload cancelled at  <fld7> <fld9> { Mon|Tue|Wed|Thu|Fri|Sat|Sun } <fld10>
	else if [logstash][msgparser][id] == "msgParserId1601" {
		grok {
			match => { "message" => "^[\s]*Scheduled[\s]+reload[\s]+cancelled[\s]+at[\s]+(?<fld7>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+([\s]*Mon|Tue|Wed|Thu|Fri|Sat|Sun[\s]+)[\s]+(?<fld10>.*)$" }
			id => "msgParserId1601"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld10} %{fld7}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId1602
	# line in RSA:  System clock has been updated from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId1602" {
		dissect {
			mapping => { "message" => "System clock has been updated from %{change_old} to %{change_new}" }
			id => "msgParserId1602"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1603
	# line in RSA:  (<terminal> (<hostip>)) exec-timeout timer expired for user <username>
	else if [logstash][msgparser][id] == "msgParserId1603" {
		dissect {
			mapping => { "message" => "(%{terminal} (%{hostip})) exec-timeout timer expired for user %{username}" }
			id => "msgParserId1603"
			add_field => {
				"event_description" => "exec-timeout timer expired for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1604
	# line in RSA: User <username> has exited <fld1> session <sessionid>(<hostip>)
	else if [logstash][msgparser][id] == "msgParserId1604" {
		dissect {
			mapping => { "message" => "User %{username} has exited %{fld1} session %{sessionid}(%{hostip})" }
			id => "msgParserId1604"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1605
	# line in RSA:   {STANDBY:Logging|Logging} to{ host <hostip> port <network_port> | host <hostip> } {(<fld1>)<action> - <result>|<action> - <result>| <result>}
	else if [logstash][msgparser][id] == "msgParserId1605" {
		grok {
			match => { "message" => "^[\s]*(STANDBY:Logging|Logging)[\s]+to([\s]*host[\s]+(?<hostip>[^\s]*)[\s]+port[\s]+(?<network_port>[^\s]*)[\s]+|[\s]*host[\s]+(?<hostip>[^\s]*)[\s]+)[\s]+(\((?<fld1>[^\)]*)\)(?<action>[^\s]*)[\s]+\-[\s]+(?<result>.*)|(?<action>[^\s]*)[\s]+\-[\s]+(?<result>.*)|[\s]*(?<result>.*))$" }
			id => "msgParserId1605"
			add_field => {
				"event_description" => "Logging to host started or stopped"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1606
	# line in RSA:  Message from <terminal>(user id: <username>): <info>
	else if [logstash][msgparser][id] == "msgParserId1606" {
		dissect {
			mapping => { "message" => "Message from %{terminal}(user id: %{username}): %{info}" }
			id => "msgParserId1606"
			add_field => {
				"event_description" => "User Logon"
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{year} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
		}
	}
	# PARSER msgParserId1607
	# line in RSA:   User <username> has exited <protocol> session <sessionid> (<hostip>)
	else if [logstash][msgparser][id] == "msgParserId1607" {
		dissect {
			mapping => { "message" => "User %{username} has exited %{protocol} session %{sessionid} (%{hostip})" }
			id => "msgParserId1607"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"event_description" => "User logout"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1608
	# line in RSA:  (<event_description>, tty <device> (<saddr>)), user <username>
	else if [logstash][msgparser][id] == "msgParserId1608" {
		dissect {
			mapping => { "message" => "(%{event_description}, tty %{device} (%{saddr})), user %{username}" }
			id => "msgParserId1608"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1609
	# line in RSA:  Initialized the geometry of nvram
	else if [logstash][msgparser][id] == "msgParserId1609" {
		dissect {
			mapping => { "message" => "Initialized the geometry of nvram" }
			id => "msgParserId1609"
			add_field => {
				"event_description" => "Initialized nvramgeometry"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1610
	# line in RSA:  <event_description> --
	else if [logstash][msgparser][id] == "msgParserId1610" {
		dissect {
			mapping => { "message" => "%{event_description} --" }
			id => "msgParserId1610"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1611
	# line in RSA:  Task is running for (<resultcode>)msecs, <result>,process = <process>.
	else if [logstash][msgparser][id] == "msgParserId1611" {
		dissect {
			mapping => { "message" => "Task is running for (%{resultcode})msecs, %{result},process = %{process}." }
			id => "msgParserId1611"
			add_field => {
				"event_description" => "Task running over time"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1612
	# line in RSA:  Memory allocation of <bytes> bytes failed from  <info>
	else if [logstash][msgparser][id] == "msgParserId1612" {
		dissect {
			mapping => { "message" => "Memory allocation of %{bytes} bytes failed from  %{info}" }
			id => "msgParserId1612"
			add_field => {
				"event_description" => "Memory allocation failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1613
	# line in RSA:  System was paused for <duration_string> to ensure console debugging output.
	else if [logstash][msgparser][id] == "msgParserId1613" {
		dissect {
			mapping => { "message" => "System was paused for %{duration_string} to ensure console debugging output." }
			id => "msgParserId1613"
			add_field => {
				"event_description" => "System was paused to ensure console debugging output"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1614
	# line in RSA:  System restarted
	else if [logstash][msgparser][id] == "msgParserId1614" {
		dissect {
			mapping => { "message" => "System restarted" }
			id => "msgParserId1614"
			add_field => {
				"event_description" => "System restarted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1615
	# line in RSA:  Failed to add Syslog file {<filename>, | <filename>-} <event_description>
	else if [logstash][msgparser][id] == "msgParserId1615" {
		grok {
			match => { "message" => "^[\s]*Failed[\s]+to[\s]+add[\s]+Syslog[\s]+file[\s]+((?<filename>[^,]*),[\s]+|[\s]*(?<filename>[^\-]*)\-)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1615"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1616
	# line in RSA: Syslog file <filename> exists.
	else if [logstash][msgparser][id] == "msgParserId1616" {
		dissect {
			mapping => { "message" => "Syslog file %{filename} exists." }
			id => "msgParserId1616"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1617
	# line in RSA:  Service "<service>" in vdc <dclass_counter1> started with PID(<process_id>).
	else if [logstash][msgparser][id] == "msgParserId1617" {
		dissect {
			mapping => { "message" => "Service \"%{service}\" in vdc %{dclass_counter1} started with PID(%{process_id})." }
			id => "msgParserId1617"
			add_field => {
				"event_description" => "Service started"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1618
	# line in RSA:  "<service>" (PID <process_id>) has successfully exited with exit code <result> (<resultcode>).
	else if [logstash][msgparser][id] == "msgParserId1618" {
		dissect {
			mapping => { "message" => "\"%{service}\" (PID %{process_id}) has successfully exited with exit code %{result} (%{resultcode})." }
			id => "msgParserId1618"
			add_field => {
				"event_description" => "Service exited with success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1619
	# line in RSA:  Error condition detected: <result>
	else if [logstash][msgparser][id] == "msgParserId1619" {
		dissect {
			mapping => { "message" => "Error condition detected: %{result}" }
			id => "msgParserId1619"
			add_field => {
				"event_description" => "Error condition detected"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1620
	# line in RSA:  System Controller is reset:<result>
	else if [logstash][msgparser][id] == "msgParserId1620" {
		dissect {
			mapping => { "message" => "System Controller is reset:%{result}" }
			id => "msgParserId1620"
			add_field => {
				"event_description" => "System Controller is reset"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1621
	# line in RSA:  All servers failed to respond
	else if [logstash][msgparser][id] == "msgParserId1621" {
		dissect {
			mapping => { "message" => "All servers failed to respond" }
			id => "msgParserId1621"
			add_field => {
				"event_description" => "All servers failed to respond"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1622
	# line in RSA:  <portname> port is found up
	else if [logstash][msgparser][id] == "msgParserId1622" {
		dissect {
			mapping => { "message" => "%{portname} port is found up" }
			id => "msgParserId1622"
			add_field => {
				"event_description" => "port is found up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1623
	# line in RSA:   Maxhop=<fld1> hopcount=<fld2> for {<hostip><mask> | <hostip>/<mask>} on <info>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId1624
	# line in RSA:  Multiple entry for packet <packets>
	else if [logstash][msgparser][id] == "msgParserId1624" {
		dissect {
			mapping => { "message" => "Multiple entry for packet %{packets}" }
			id => "msgParserId1624"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1625
	# line in RSA:  No MD5 digest from <saddr>(<sport>) to <daddr>(<dport>) tableid - <fld13>
	else if [logstash][msgparser][id] == "msgParserId1625" {
		dissect {
			mapping => { "message" => "No MD5 digest from %{saddr}(%{sport}) to %{daddr}(%{dport}) tableid - %{fld13}" }
			id => "msgParserId1625"
			add_field => {
				"event_description" => "No MD5 digest"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1626
	# line in RSA:  Host does not support dddlu at IP addr <hostip>{,|-} port <network_port>
	else if [logstash][msgparser][id] == "msgParserId1626" {
		grok {
			match => { "message" => "^[\s]*Host[\s]+does[\s]+not[\s]+support[\s]+dddlu[\s]+at[\s]+IP[\s]+addr[\s]+(?<hostip>[^,\-]*)(,|\-)[\s]+port[\s]+(?<network_port>.*)$" }
			id => "msgParserId1626"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1627
	# line in RSA:  selected clock on slot <fld1> port <network_port> is bad.Accepting the config.
	else if [logstash][msgparser][id] == "msgParserId1627" {
		dissect {
			mapping => { "message" => "selected clock on slot %{fld1} port %{network_port} is bad.Accepting the config." }
			id => "msgParserId1627"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1628
	# line in RSA: Invalid <fld1> port [<network_port> <info>
	else if [logstash][msgparser][id] == "msgParserId1628" {
		dissect {
			mapping => { "message" => "Invalid %{fld1} port [%{network_port} %{info}" }
			id => "msgParserId1628"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1629
	# line in RSA:  <event_description> from client <saddr>
	else if [logstash][msgparser][id] == "msgParserId1629" {
		dissect {
			mapping => { "message" => "%{event_description} from client %{saddr}" }
			id => "msgParserId1629"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1630
	# line in RSA: Interface <interface>  ARP request from invalid source. IP= <hostip>  MAC=<macaddr> <info>
	else if [logstash][msgparser][id] == "msgParserId1630" {
		dissect {
			mapping => { "message" => "Interface %{interface}  ARP request from invalid source. IP= %{hostip}  MAC=%{macaddr} %{info}" }
			id => "msgParserId1630"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1631
	# line in RSA:  Interface <interface>  IP packet from invalid source. IP= <hostip>  MAC=<macaddr>  <info>
	else if [logstash][msgparser][id] == "msgParserId1631" {
		dissect {
			mapping => { "message" => "Interface %{interface}  IP packet from invalid source. IP= %{hostip}  MAC=%{macaddr}  %{info}" }
			id => "msgParserId1631"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1632
	# line in RSA: Interface <interface> Port U<network_port> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1632" {
		dissect {
			mapping => { "message" => "Interface %{interface} Port U%{network_port} %{event_description}" }
			id => "msgParserId1632"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1633
	# line in RSA: Interface <interface> IP address <saddr> from MAC <smacaddr> is already in use. <info>
	else if [logstash][msgparser][id] == "msgParserId1633" {
		dissect {
			mapping => { "message" => "Interface %{interface} IP address %{saddr} from MAC %{smacaddr} is already in use. %{info}" }
			id => "msgParserId1633"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1634
	# line in RSA:  <event_description> for IP <hostip>
	else if [logstash][msgparser][id] == "msgParserId1634" {
		dissect {
			mapping => { "message" => "%{event_description} for IP %{hostip}" }
			id => "msgParserId1634"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1635
	# line in RSA:  <event_description> file <filename> from flash
	else if [logstash][msgparser][id] == "msgParserId1635" {
		dissect {
			mapping => { "message" => "%{event_description} file %{filename} from flash" }
			id => "msgParserId1635"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1636
	# line in RSA: File <filename> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1636" {
		dissect {
			mapping => { "message" => "File %{filename} %{event_description}" }
			id => "msgParserId1636"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1637
	# line in RSA:  UDLD disabled interface <interface>, <result>
	else if [logstash][msgparser][id] == "msgParserId1637" {
		dissect {
			mapping => { "message" => "UDLD disabled interface %{interface}, %{result}" }
			id => "msgParserId1637"
			add_field => {
				"event_description" => "interface disabled"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1638
	# line in RSA:  user delete failed for <username>:userdel: <filename> not owned by <c_username>, { <disposition>: <info> | <disposition> }
	else if [logstash][msgparser][id] == "msgParserId1638" {
		grok {
			match => { "message" => "^[\s]*user[\s]+delete[\s]+failed[\s]+for[\s]+(?<username>[^:]*):userdel:[\s]+(?<filename>[^\s]*)[\s]+not[\s]+owned[\s]+by[\s]+(?<c_username>[^,]*),[\s]+([\s]*(?<disposition>[^:]*):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<disposition>[^\s]*)[\s]+)$" }
			id => "msgParserId1638"
			add_field => {
				"event_description" => "User delete failed"
				"result" => "user file not owned by deleter"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1639
	# line in RSA:  <application>:<dclass_counter1> Error on call to sysapiRegistryGet routine with key <id>.
	else if [logstash][msgparser][id] == "msgParserId1639" {
		dissect {
			mapping => { "message" => "%{application}:%{dclass_counter1} Error on call to sysapiRegistryGet routine with key %{id}." }
			id => "msgParserId1639"
			add_field => {
				"event_description" => "Error on call to sysapiRegistryGet routine"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1640
	# line in RSA: Traffic to prefix <hostip> punted.
	else if [logstash][msgparser][id] == "msgParserId1640" {
		dissect {
			mapping => { "message" => "Traffic to prefix %{hostip} punted." }
			id => "msgParserId1640"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1641
	# line in RSA:  IPC port <network_port> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1641" {
		dissect {
			mapping => { "message" => "IPC port %{network_port} %{event_description}" }
			id => "msgParserId1641"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1642
	# line in RSA:  <agent>: Internal Error (<result>): IEC=<device> on { callID <connectionid> GUID=<ssid> | callID <connectionid> }
	else if [logstash][msgparser][id] == "msgParserId1642" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+Internal[\s]+Error[\s]+\((?<result>[^\)]*)\):[\s]+IEC=(?<device>[^\s]*)[\s]+on[\s]+([\s]*callID[\s]+(?<connectionid>[^\s]*)[\s]+GUID=(?<ssid>[^\s]*)[\s]+|[\s]*callID[\s]+(?<connectionid>[^\s]*)[\s]+)$" }
			id => "msgParserId1642"
			add_field => {
				"event_description" => "Internal Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1643
	# line in RSA:  CallLegType <content_type>, ConnectionId <process_id>, SetupTime <fld7>.<fld8> <fld9> { Mon|Tue|Wed|Thu|Fri|Sat|Sun } <fld10>, PeerAddress <calling_to>, PeerSubAddress <fld14> , DisconnectCause <fld12>, DisconnectText <event_description> (<fld1>), ConnectTime <fld20>.<fld21> <fld22> { Mon|Tue|Wed|Thu|Fri|Sat|Sun } <fld23>, DisconnectTime <fld25>.<fld26> <fld27> { Mon|Tue|Wed|Thu|Fri|Sat|Sun } <fld28>, CallOrigin <calling_from>, ChargedUnits <fld4>, InfoType <fld13>, TransmitPackets <fld5>, TransmitBytes <sbytes>, ReceivePackets <fld6>, ReceiveBytes <rbytes>
	else if [logstash][msgparser][id] == "msgParserId1643" {
		grok {
			match => { "message" => "^[\s]*CallLegType[\s]+(?<content_type>[^,]*),[\s]+ConnectionId[\s]+(?<process_id>[^,]*),[\s]+SetupTime[\s]+(?<fld7>[^\.]*)\.(?<fld8>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+([\s]*Mon|Tue|Wed|Thu|Fri|Sat|Sun[\s]+)[\s]+(?<fld10>[^,]*),[\s]+PeerAddress[\s]+(?<calling_to>[^,]*),[\s]+PeerSubAddress[\s]+(?<fld14>[^\s]*)[\s]+,[\s]+DisconnectCause[\s]+(?<fld12>[^,]*),[\s]+DisconnectText[\s]+(?<event_description>[^\s]*)[\s]+\((?<fld1>[^\)]*)\),[\s]+ConnectTime[\s]+(?<fld20>[^\.]*)\.(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+([\s]*Mon|Tue|Wed|Thu|Fri|Sat|Sun[\s]+)[\s]+(?<fld23>[^,]*),[\s]+DisconnectTime[\s]+(?<fld25>[^\.]*)\.(?<fld26>[^\s]*)[\s]+(?<fld27>[^\s]*)[\s]+([\s]*Mon|Tue|Wed|Thu|Fri|Sat|Sun[\s]+)[\s]+(?<fld28>[^,]*),[\s]+CallOrigin[\s]+(?<calling_from>[^,]*),[\s]+ChargedUnits[\s]+(?<fld4>[^,]*),[\s]+InfoType[\s]+(?<fld13>[^,]*),[\s]+TransmitPackets[\s]+(?<fld5>[^,]*),[\s]+TransmitBytes[\s]+(?<sbytes>[^,]*),[\s]+ReceivePackets[\s]+(?<fld6>[^,]*),[\s]+ReceiveBytes[\s]+(?<rbytes>.*)$" }
			id => "msgParserId1643"
			add_field => {
				"uid" => "VOIP"
				"[logstash][fullDateTimeString]" => "%{fld10} %{fld7}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy HH:m:s" ] }
		}
	}
	# PARSER msgParserId1644
	# line in RSA:  In domain <domain>, <vlan> peer keep-alive receive has failed
	else if [logstash][msgparser][id] == "msgParserId1644" {
		dissect {
			mapping => { "message" => "In domain %{domain}, %{vlan} peer keep-alive receive has failed" }
			id => "msgParserId1644"
			add_field => {
				"event_description" => "peer keep-alive receive failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1645
	# line in RSA:  In domain <domain>, <vlan> peer keep-alive send has failed
	else if [logstash][msgparser][id] == "msgParserId1645" {
		dissect {
			mapping => { "message" => "In domain %{domain}, %{vlan} peer keep-alive send has failed" }
			id => "msgParserId1645"
			add_field => {
				"event_description" => "peer keep-alive send failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1646
	# line in RSA:  In domain <domain>, <vlan> configuration is not consistent (<result>)
	else if [logstash][msgparser][id] == "msgParserId1646" {
		dissect {
			mapping => { "message" => "In domain %{domain}, %{vlan} configuration is not consistent (%{result})" }
			id => "msgParserId1646"
			add_field => {
				"event_description" => "vlan configuration is not consistent in domain"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1647
	# line in RSA:  vPC <vlan> bringup failed (<result>)
	else if [logstash][msgparser][id] == "msgParserId1647" {
		dissect {
			mapping => { "message" => "vPC %{vlan} bringup failed (%{result})" }
			id => "msgParserId1647"
			add_field => {
				"event_description" => "vPC bringup failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1648
	# line in RSA:  VPC Peer-link is down { (<result>) | <space> }
	else if [logstash][msgparser][id] == "msgParserId1648" {
		grok {
			match => { "message" => "^[\s]*VPC[\s]+Peer\-link[\s]+is[\s]+down[\s]+([\s]*\((?<result>[^\)]*)\)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
			id => "msgParserId1648"
			add_field => {
				"event_description" => "Peer link is down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1649
	# line in RSA:  Peer vPC <vlan> deleted
	else if [logstash][msgparser][id] == "msgParserId1649" {
		dissect {
			mapping => { "message" => "Peer vPC %{vlan} deleted" }
			id => "msgParserId1649"
			add_field => {
				"event_description" => "Peer vlan deleted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1650
	# line in RSA:  In domain <domain>, VPC role status has changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId1650" {
		dissect {
			mapping => { "message" => "In domain %{domain}, VPC role status has changed to %{change_new}" }
			id => "msgParserId1650"
			add_field => {
				"event_description" => "VPC role status has changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1651
	# line in RSA:  In domain <domain>, <vlan> configuration is consistent
	else if [logstash][msgparser][id] == "msgParserId1651" {
		dissect {
			mapping => { "message" => "In domain %{domain}, %{vlan} configuration is consistent" }
			id => "msgParserId1651"
			add_field => {
				"event_description" => "vlan configuration is consistent in domain"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1652
	# line in RSA:  In domain <domain>, <vlan> peer-keepalive received on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1652" {
		dissect {
			mapping => { "message" => "In domain %{domain}, %{vlan} peer-keepalive received on interface %{interface}" }
			id => "msgParserId1652"
			add_field => {
				"event_description" => "peer-keepalive received on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1653
	# line in RSA:  In domain <domain>, <vlan> peer-keepalive sent on interface <interface>
	else if [logstash][msgparser][id] == "msgParserId1653" {
		dissect {
			mapping => { "message" => "In domain %{domain}, %{vlan} peer-keepalive sent on interface %{interface}" }
			id => "msgParserId1653"
			add_field => {
				"event_description" => "peer-keepalive sent on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1654
	# line in RSA:  In domain <domain>, peer keep-alive status changed to <change_new>
	else if [logstash][msgparser][id] == "msgParserId1654" {
		dissect {
			mapping => { "message" => "In domain %{domain}, peer keep-alive status changed to %{change_new}" }
			id => "msgParserId1654"
			add_field => {
				"event_description" => "peer keep-alive status changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1655
	# line in RSA:  <action>, delay interface-vlan bringup timer expired, <result>
	else if [logstash][msgparser][id] == "msgParserId1655" {
		dissect {
			mapping => { "message" => "%{action}, delay interface-vlan bringup timer expired, %{result}" }
			id => "msgParserId1655"
			add_field => {
				"event_description" => "delay interface-vlan bringup timer expired"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1656
	# line in RSA:  vPC restore timer expired, <result>
	else if [logstash][msgparser][id] == "msgParserId1656" {
		dissect {
			mapping => { "message" => "vPC restore timer expired, %{result}" }
			id => "msgParserId1656"
			add_field => {
				"event_description" => "vPC restore timer expired"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1657
	# line in RSA:  vPC restore timer started to reinit vPCs
	else if [logstash][msgparser][id] == "msgParserId1657" {
		dissect {
			mapping => { "message" => "vPC restore timer started to reinit vPCs" }
			id => "msgParserId1657"
			add_field => {
				"event_description" => "vPC restore timer started to reinit vPCs"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1658
	# line in RSA:  In domain <domain>, vPC <vlan> configuration is consistent
	else if [logstash][msgparser][id] == "msgParserId1658" {
		dissect {
			mapping => { "message" => "In domain %{domain}, vPC %{vlan} configuration is consistent" }
			id => "msgParserId1658"
			add_field => {
				"event_description" => "In domain vPC configuration is consistent"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1659
	# line in RSA:  interface-<interface> configuration for VPC is not compatible
	else if [logstash][msgparser][id] == "msgParserId1659" {
		dissect {
			mapping => { "message" => "interface-%{interface} configuration for VPC is not compatible" }
			id => "msgParserId1659"
			add_field => {
				"event_description" => "interface configuration for VPC is not compatible"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1660
	# line in RSA:  In domain <domain>, vPC peer keep-alive receive is successful
	else if [logstash][msgparser][id] == "msgParserId1660" {
		dissect {
			mapping => { "message" => "In domain %{domain}, vPC peer keep-alive receive is successful" }
			id => "msgParserId1660"
			add_field => {
				"event_description" => "vPC peer keep-alive receive successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1661
	# line in RSA:  peer vPC <vlan> is configured
	else if [logstash][msgparser][id] == "msgParserId1661" {
		dissect {
			mapping => { "message" => "peer vPC %{vlan} is configured" }
			id => "msgParserId1661"
			add_field => {
				"event_description" => "Peer vPC configured"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1662
	# line in RSA:  Peer <vlan> configured vlans changed
	else if [logstash][msgparser][id] == "msgParserId1662" {
		dissect {
			mapping => { "message" => "Peer %{vlan} configured vlans changed" }
			id => "msgParserId1662"
			add_field => {
				"event_description" => "Peer configured vlans changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1663
	# line in RSA:  Peer vPC <vlan> is down (<result>)
	else if [logstash][msgparser][id] == "msgParserId1663" {
		dissect {
			mapping => { "message" => "Peer vPC %{vlan} is down (%{result})" }
			id => "msgParserId1663"
			add_field => {
				"event_description" => "Peer vlan is down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1664
	# line in RSA:  Peer vPC <vlan> is up
	else if [logstash][msgparser][id] == "msgParserId1664" {
		dissect {
			mapping => { "message" => "Peer vPC %{vlan} is up" }
			id => "msgParserId1664"
			add_field => {
				"event_description" => "Peer vlan is down"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1665
	# line in RSA:  <vlan> is configured
	else if [logstash][msgparser][id] == "msgParserId1665" {
		dissect {
			mapping => { "message" => "%{vlan} is configured" }
			id => "msgParserId1665"
			add_field => {
				"event_description" => "vlan is configured"
				"event_state" => "confiogured"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1666
	# line in RSA:  <vlan> is up
	else if [logstash][msgparser][id] == "msgParserId1666" {
		dissect {
			mapping => { "message" => "%{vlan} is up" }
			id => "msgParserId1666"
			add_field => {
				"event_description" => "vlan is up"
				"event_state" => "up"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1667
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId1667" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1667"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1668
	# line in RSA: LSG dead cache entry <hostip> <info>
	else if [logstash][msgparser][id] == "msgParserId1668" {
		dissect {
			mapping => { "message" => "LSG dead cache entry %{hostip} %{info}" }
			id => "msgParserId1668"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1669
	# line in RSA:  slot <fld1> Policy check failed for pkt src:<saddr> dst:<daddr> proto:<protocol> index:<fld2>
	else if [logstash][msgparser][id] == "msgParserId1669" {
		dissect {
			mapping => { "message" => "slot %{fld1} Policy check failed for pkt src:%{saddr} dst:%{daddr} proto:%{protocol} index:%{fld2}" }
			id => "msgParserId1669"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1670
	# line in RSA: slot <fld1> Illegal clear pkt src:<saddr> dst:<daddr> proto:<protocol>.
	else if [logstash][msgparser][id] == "msgParserId1670" {
		dissect {
			mapping => { "message" => "slot %{fld1} Illegal clear pkt src:%{saddr} dst:%{daddr} proto:%{protocol}." }
			id => "msgParserId1670"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1671
	# line in RSA: slot <fld1> Packet src:<saddr> dst:<daddr> seq num:<fld2>.
	else if [logstash][msgparser][id] == "msgParserId1671" {
		dissect {
			mapping => { "message" => "slot %{fld1} Packet src:%{saddr} dst:%{daddr} seq num:%{fld2}." }
			id => "msgParserId1671"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1672
	# line in RSA: Probing primary server <hostip>
	else if [logstash][msgparser][id] == "msgParserId1672" {
		dissect {
			mapping => { "message" => "Probing primary server %{hostip}" }
			id => "msgParserId1672"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1673
	# line in RSA:   Interface <interface> shutdown by community vlan <vlan> limit
	else if [logstash][msgparser][id] == "msgParserId1673" {
		dissect {
			mapping => { "message" => "Interface %{interface} shutdown by community vlan %{vlan} limit" }
			id => "msgParserId1673"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1674
	# line in RSA:  Bad authentication from <saddr>  group <group>   type <authmethod>
	else if [logstash][msgparser][id] == "msgParserId1674" {
		dissect {
			mapping => { "message" => "Bad authentication from %{saddr}  group %{group}   type %{authmethod}" }
			id => "msgParserId1674"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1675
	# line in RSA: vlan <vlan> (port <network_port>) denied arp ip <saddr> - <daddr>, <packets> packet
	else if [logstash][msgparser][id] == "msgParserId1675" {
		dissect {
			mapping => { "message" => "vlan %{vlan} (port %{network_port}) denied arp ip %{saddr} - %{daddr}, %{packets} packet" }
			id => "msgParserId1675"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1676
	# line in RSA: vlan <vlan> (port <network_port>) denied <protocol> <saddr> - <daddr>, <packets> packet
	else if [logstash][msgparser][id] == "msgParserId1676" {
		dissect {
			mapping => { "message" => "vlan %{vlan} (port %{network_port}) denied %{protocol} %{saddr} - %{daddr}, %{packets} packet" }
			id => "msgParserId1676"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1677
	# line in RSA: vlan <vlan> (port <network_port>) denied ip protocol=<protocol> <saddr> - <daddr>, <packets> packet
	else if [logstash][msgparser][id] == "msgParserId1677" {
		dissect {
			mapping => { "message" => "vlan %{vlan} (port %{network_port}) denied ip protocol=%{protocol} %{saddr} - %{daddr}, %{packets} packet" }
			id => "msgParserId1677"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%VSEC-6-VLANACCESSLOGP" {
		# MESSAGE %VSEC-6-VLANACCESSLOGP
		# line in RSA: vlan <vlan> (port <network_port>) permitted <protocol> <saddr> - <daddr>, <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vlan %{vlan} (port %{network_port}) permitted %{protocol} %{saddr} - %{daddr}, %{packets} packet" }
				id => "message-%VSEC-6-VLANACCESSLOGP"
				add_field => {
					"[event][id]" => "%VSEC-6-VLANACCESSLOGP"
					"[rsa][message][id1]" => "%VSEC-6-VLANACCESSLOGP"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %VSEC-6-VLANACCESSLOGP:01
		# line in RSA: vlan <vlan> (port <network_port>) denied <protocol> <saddr> - <daddr>, <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vlan %{vlan} (port %{network_port}) denied %{protocol} %{saddr} - %{daddr}, %{packets} packet" }
				id => "message-%VSEC-6-VLANACCESSLOGP:01"
				add_field => {
					"[event][id]" => "%VSEC-6-VLANACCESSLOGP:01"
					"[rsa][message][id1]" => "%VSEC-6-VLANACCESSLOGP:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "%VSEC-6-VLANACCESSLOGRP" {
		# MESSAGE %VSEC-6-VLANACCESSLOGRP
		# line in RSA: vlan <vlan> (port <network_port>) permitted <protocol> <saddr> - <daddr>, <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vlan %{vlan} (port %{network_port}) permitted %{protocol} %{saddr} - %{daddr}, %{packets} packet" }
				id => "message-%VSEC-6-VLANACCESSLOGRP"
				add_field => {
					"[event][id]" => "%VSEC-6-VLANACCESSLOGRP"
					"[rsa][message][id1]" => "%VSEC-6-VLANACCESSLOGRP"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %VSEC-6-VLANACCESSLOGRP:01
		# line in RSA: vlan <vlan> (port <network_port>) denied <protocol> <saddr> - <daddr>, <packets> packet
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "vlan %{vlan} (port %{network_port}) denied %{protocol} %{saddr} - %{daddr}, %{packets} packet" }
				id => "message-%VSEC-6-VLANACCESSLOGRP:01"
				add_field => {
					"[event][id]" => "%VSEC-6-VLANACCESSLOGRP:01"
					"[rsa][message][id1]" => "%VSEC-6-VLANACCESSLOGRP:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1680
	# line in RSA:  Configured from <terminal> by <username> on <hostname>
	else if [logstash][msgparser][id] == "msgParserId1680" {
		dissect {
			mapping => { "message" => "Configured from %{terminal} by %{username} on %{hostname}" }
			id => "msgParserId1680"
			add_field => {
				"event_description" => "Configured from terminal by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1681
	# line in RSA:  New cli role <user_role> created
	else if [logstash][msgparser][id] == "msgParserId1681" {
		dissect {
			mapping => { "message" => "New cli role %{user_role} created" }
			id => "msgParserId1681"
			add_field => {
				"event_description" => "New cli role created"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1682
	# line in RSA:  Service <service> lost on {Web Cache | WCCP client } <hostip>
	else if [logstash][msgparser][id] == "msgParserId1682" {
		grok {
			match => { "message" => "^[\s]*Service[\s]+(?<service>[^\s]*)[\s]+lost[\s]+on[\s]+(Web[\s]+Cache[\s]+|[\s]*WCCP[\s]+client[\s]+)[\s]+(?<hostip>.*)$" }
			id => "msgParserId1682"
			add_field => {
				"event_description" => "Service lost on Web Cache or WCCP client"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1683
	# line in RSA:  Service <service> acquired on {Web Cache | WCCP client } <hostip>
	else if [logstash][msgparser][id] == "msgParserId1683" {
		grok {
			match => { "message" => "^[\s]*Service[\s]+(?<service>[^\s]*)[\s]+acquired[\s]+on[\s]+(Web[\s]+Cache[\s]+|[\s]*WCCP[\s]+client[\s]+)[\s]+(?<hostip>.*)$" }
			id => "msgParserId1683"
			add_field => {
				"event_description" => "Service acquired on Web Cache or WCCP client"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1684
	# line in RSA:  Interface <interface> <info>
	else if [logstash][msgparser][id] == "msgParserId1684" {
		dissect {
			mapping => { "message" => "Interface %{interface} %{info}" }
			id => "msgParserId1684"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1685
	# line in RSA:  Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1685" {
		dissect {
			mapping => { "message" => "Interface %{interface} %{event_description}" }
			id => "msgParserId1685"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1686
	# line in RSA: Interface <interface> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1686" {
		dissect {
			mapping => { "message" => "Interface %{interface} %{event_description}" }
			id => "msgParserId1686"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1687
	# line in RSA: Interface <interface> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId1687" {
		dissect {
			mapping => { "message" => "Interface %{interface} - %{event_description}" }
			id => "msgParserId1687"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1688
	# line in RSA:  <application>: XML subagent session <sessionid> terminated, <result>
	else if [logstash][msgparser][id] == "msgParserId1688" {
		dissect {
			mapping => { "message" => "%{application}: XML subagent session %{sessionid} terminated, %{result}" }
			id => "msgParserId1688"
			add_field => {
				"event_description" => "XML subagent session terminated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1689
	# line in RSA:  Rcv hello from <saddr> area <info> from <fld1> <daddr>
	else if [logstash][msgparser][id] == "msgParserId1689" {
		dissect {
			mapping => { "message" => "Rcv hello from %{saddr} area %{info} from %{fld1} %{daddr}" }
			id => "msgParserId1689"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1690
	# line in RSA:  state: <hostip> went from nsf_not_active to nsf_not_active
	else if [logstash][msgparser][id] == "msgParserId1690" {
		dissect {
			mapping => { "message" => "state: %{hostip} went from nsf_not_active to nsf_not_active" }
			id => "msgParserId1690"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1691
	# line in RSA: Neighbor <hostip> not on common subnet for <vlan>
	else if [logstash][msgparser][id] == "msgParserId1691" {
		dissect {
			mapping => { "message" => "Neighbor %{hostip} not on common subnet for %{vlan}" }
			id => "msgParserId1691"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1692
	# line in RSA: Packet received via <protocol> from <saddr> on <interface>
	else if [logstash][msgparser][id] == "msgParserId1692" {
		dissect {
			mapping => { "message" => "Packet received via %{protocol} from %{saddr} on %{interface}" }
			id => "msgParserId1692"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1693
	# line in RSA: password authentication failed for <username>
	else if [logstash][msgparser][id] == "msgParserId1693" {
		dissect {
			mapping => { "message" => "password authentication failed for %{username}" }
			id => "msgParserId1693"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1694
	# line in RSA:  <fld2>  Server <obj_name> has been notified to stop
	else if [logstash][msgparser][id] == "msgParserId1694" {
		dissect {
			mapping => { "message" => "%{fld2}  Server %{obj_name} has been notified to stop" }
			id => "msgParserId1694"
			add_field => {
				"obj_type" => "Server"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1695
	# line in RSA:  <fld2>  Server <obj_name> has been notified to start
	else if [logstash][msgparser][id] == "msgParserId1695" {
		dissect {
			mapping => { "message" => "%{fld2}  Server %{obj_name} has been notified to start" }
			id => "msgParserId1695"
			add_field => {
				"obj_type" => "Server"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ciscorouter_2" {
		# MESSAGE ciscorouter_2
		# line in RSA:  <fld1>:  connection id=<connectionid>, sequence number=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}:  connection id=%{connectionid}, sequence number=%{fld2}" }
				id => "message-ciscorouter_2"
				add_field => {
					"[event][id]" => "ciscorouter_2"
					"[rsa][message][id1]" => "ciscorouter_2"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ciscorouter_2:01
		# line in RSA:   <fld1>: <fld2>: <fld3> <fld4> <fld5> <fld6>.<fld7> <fld8>: %<fld9>: Line protocol on Interface <interface>, changed state to <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: %{fld2}: %{fld3} %{fld4} %{fld5} %{fld6}.%{fld7} %{fld8}: %%{fld9}: Line protocol on Interface %{interface}, changed state to %{disposition}" }
				id => "message-ciscorouter_2:01"
				add_field => {
				"event_description" => "Line protocol on Interface changed state"
					"[event][id]" => "ciscorouter_2:01"
					"[rsa][message][id1]" => "ciscorouter_2:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4} %{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
		# MESSAGE ciscorouter_2:02
		# line in RSA:   <fld1>: <fld2>: <fld3> <fld4> <fld5> <fld6>.<fld7> <fld8>: %<fld9>: Interface <interface>, changed state to <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: %{fld2}: %{fld3} %{fld4} %{fld5} %{fld6}.%{fld7} %{fld8}: %%{fld9}: Interface %{interface}, changed state to %{disposition}" }
				id => "message-ciscorouter_2:02"
				add_field => {
				"event_description" => "Interface changed state"
					"[event][id]" => "ciscorouter_2:02"
					"[rsa][message][id1]" => "ciscorouter_2:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4} %{fld5} %{fld6}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId1699
	# line in RSA:  (target:class)-(<info>:class-default) Passing <protocol> pkt <saddr>:<sport> => <daddr>:<dport> with ip ident <fld37> 
	else if [logstash][msgparser][id] == "msgParserId1699" {
		dissect {
			mapping => { "message" => "(target:class)-(%{info}:class-default) Passing %{protocol} pkt %{saddr}:%{sport} => %{daddr}:%{dport} with ip ident %{fld37}" }
			id => "msgParserId1699"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1707
	# line in RSA:  Process <process_id>, Nbr <hostip> on Vlan<vlan> from <change_old> to <change_new>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId1707" {
		dissect {
			mapping => { "message" => "Process %{process_id}, Nbr %{hostip} on Vlan%{vlan} from %{change_old} to %{change_new}, %{event_description}" }
			id => "msgParserId1707"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "%SYS-SW1-5-CONFIG_I" {
		# MESSAGE %SYS-SW1-5-CONFIG_I
		# line in RSA:  Configured from <saddr> by snmp
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Configured from %{saddr} by snmp" }
				id => "message-%SYS-SW1-5-CONFIG_I"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Configure by snmp"
					"[event][id]" => "%SYS-SW1-5-CONFIG_I"
					"[rsa][message][id1]" => "%SYS-SW1-5-CONFIG_I"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE %SYS-SW1-5-CONFIG_I:01
		# line in RSA:  Configured from {console by <username> on <terminal> (<hostip>)|console}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Configured[\s]+from[\s]+(console[\s]+by[\s]+(?<username>[^\s]*)[\s]+on[\s]+(?<terminal>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)|console)$" }
				id => "message-%SYS-SW1-5-CONFIG_I:01"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Configure by user on terminal"
					"[event][id]" => "%SYS-SW1-5-CONFIG_I:01"
					"[rsa][message][id1]" => "%SYS-SW1-5-CONFIG_I:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1710
	# line in RSA:  Duplicate address <hostip> on Vlan<vlan>, sourced by <macaddr>
	else if [logstash][msgparser][id] == "msgParserId1710" {
		dissect {
			mapping => { "message" => "Duplicate address %{hostip} on Vlan%{vlan}, sourced by %{macaddr}" }
			id => "msgParserId1710"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1711
	# line in RSA:  Interface <interface>, <action> to <event_state>
	else if [logstash][msgparser][id] == "msgParserId1711" {
		dissect {
			mapping => { "message" => "Interface %{interface}, %{action} to %{event_state}" }
			id => "msgParserId1711"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_activity" => "Modify"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1712
	# line in RSA: Clear counter on all interfaces by <username> on <terminal> (<hostip>)
	else if [logstash][msgparser][id] == "msgParserId1712" {
		dissect {
			mapping => { "message" => "Clear counter on all interfaces by %{username} on %{terminal} (%{hostip})" }
			id => "msgParserId1712"
			add_field => {
				"event_description" => "clear interface counter(s)"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1713
	# line in RSA:  <protocol> error detected on <interface>, putting <fld1> in { <result> (<info>) | <result> state}
	else if [logstash][msgparser][id] == "msgParserId1713" {
		grok {
			match => { "message" => "^[\s]*(?<protocol>[^\s]*)[\s]+error[\s]+detected[\s]+on[\s]+(?<interface>[^,]*),[\s]+putting[\s]+(?<fld1>[^\s]*)[\s]+in[\s]+([\s]*(?<result>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+|[\s]*(?<result>[^\s]*)[\s]+state)$" }
			id => "msgParserId1713"
			add_field => {
				"event_description" => "protocol error detected on interface"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1714
	# line in RSA:  <protocol> disabled interface <interface>, aggressive mode failure detected
	else if [logstash][msgparser][id] == "msgParserId1714" {
		dissect {
			mapping => { "message" => "%{protocol} disabled interface %{interface}, aggressive mode failure detected" }
			id => "msgParserId1714"
			add_field => {
				"result" => "disabled"
				"event_description" => "Aggressive mode failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1715
	# line in RSA:  Signature {creation|connection} failed, status <fld1>
	else if [logstash][msgparser][id] == "msgParserId1715" {
		grok {
			match => { "message" => "^[\s]*Signature[\s]+(creation|connection)[\s]+failed,[\s]+status[\s]+(?<fld1>.*)$" }
			id => "msgParserId1715"
			add_field => {
				"event_description" => "Signature {connection|creation} failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1716
	# line in RSA: SIP1: hman:  undefined:<fld1>, Traceback=<fld2> {binos:<fld3> evlib:<fld4>|binos:<fld3>}
	else if [logstash][msgparser][id] == "msgParserId1716" {
		grok {
			match => { "message" => "^SIP1:[\s]+hman:[\s]+undefined:(?<fld1>[^,]*),[\s]+Traceback=(?<fld2>[^\s]*)[\s]+(binos:(?<fld3>[^\s]*)[\s]+evlib:(?<fld4>.*)|binos:(?<fld3>.*))$" }
			id => "msgParserId1716"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1717
	# line in RSA: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1717" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId1717"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1718
	# line in RSA:  Neighbor <daddr> <action> (<fld1>)
	else if [logstash][msgparser][id] == "msgParserId1718" {
		dissect {
			mapping => { "message" => "Neighbor %{daddr} %{action} (%{fld1})" }
			id => "msgParserId1718"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1719
	# line in RSA:  DHCPACK: Could not find destination port. Destination MAC <dmacaddr>
	else if [logstash][msgparser][id] == "msgParserId1719" {
		dissect {
			mapping => { "message" => "DHCPACK: Could not find destination port. Destination MAC %{dmacaddr}" }
			id => "msgParserId1719"
			add_field => {
				"event_description" => "Could not find destination port"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1720
	# line in RSA:  udp <saddr>:<sport> <daddr>:<dport> <fld1>:<fld2> <fld3>
	else if [logstash][msgparser][id] == "msgParserId1720" {
		dissect {
			mapping => { "message" => "udp %{saddr}:%{sport} %{daddr}:%{dport} %{fld1}:%{fld2} %{fld3}" }
			id => "msgParserId1720"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ciscorouter_osr" {
		# MESSAGE ciscorouter_osr
		# line in RSA: <space>osr <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{space}osr %{fld1}" }
				id => "message-ciscorouter_osr"
				add_field => {
				"event_description" => "osr"
					"[event][id]" => "ciscorouter_osr"
					"[rsa][message][id1]" => "ciscorouter_osr"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ciscorouter_osr:01
		# line in RSA: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}" }
				id => "message-ciscorouter_osr:01"
				add_field => {
					"[event][id]" => "ciscorouter_osr:01"
					"[rsa][message][id1]" => "ciscorouter_osr:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1723
	# line in RSA: cpp_cp: QFP:<fld1> Thread:<fld2> TS:<fld3> %FW-6-DROP_PKT: Dropping <protocol> pkt from Port-channel<fld4>.<fld5> <saddr>:<sport> => <daddr>:<dport>(target:class)-(<fld6>) due to <trigger_desc> with ip ident <fld7> tcp flag <fld8>,<fld9>
	else if [logstash][msgparser][id] == "msgParserId1723" {
		dissect {
			mapping => { "message" => "cpp_cp: QFP:%{fld1} Thread:%{fld2} TS:%{fld3} %FW-6-DROP_PKT: Dropping %{protocol} pkt from Port-channel%{fld4}.%{fld5} %{saddr}:%{sport} => %{daddr}:%{dport}(target:class)-(%{fld6}) due to %{trigger_desc} with ip ident %{fld7} tcp flag %{fld8},%{fld9}" }
			id => "msgParserId1723"
			add_field => {
				"event_description" => "Dropping pkt"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1724
	# line in RSA: [<smacaddr>, <interface>] {<fld1>: <event_description>|<event_description> on Client <fld2>| <event_description> for <fld3>}
	else if [logstash][msgparser][id] == "msgParserId1724" {
		grok {
			match => { "message" => "^\[(?<smacaddr>[^,]*),[\s]+(?<interface>[^\]]*)\][\s]+((?<fld1>[^:]*):[\s]+(?<event_description>.*)|(?<event_description>[^\s]*)[\s]+on[\s]+Client[\s]+(?<fld2>.*)|[\s]*(?<event_description>[^\s]*)[\s]+for[\s]+(?<fld3>.*))$" }
			id => "msgParserId1724"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1725
	# line in RSA: [<smacaddr>, <interface>] <event_description> {for <fld1>|(<fld1>)}
	else if [logstash][msgparser][id] == "msgParserId1725" {
		grok {
			match => { "message" => "^\[(?<smacaddr>[^,]*),[\s]+(?<interface>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+(for[\s]+(?<fld1>.*)|\((?<fld1>[^\)]*)\))$" }
			id => "msgParserId1725"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1726
	# line in RSA: <interface>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId1726" {
		dissect {
			mapping => { "message" => "%{interface}:%{event_description}" }
			id => "msgParserId1726"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1727
	# line in RSA: Configuration committed by user '<username>'.<info>
	else if [logstash][msgparser][id] == "msgParserId1727" {
		dissect {
			mapping => { "message" => "Configuration committed by user '%{username}'.%{info}" }
			id => "msgParserId1727"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"event_description" => "Configuration committed by user"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1728
	# line in RSA: list<listnum>denied<daddr><packets>packets
	else if [logstash][msgparser][id] == "msgParserId1728" {
		dissect {
			mapping => { "message" => "list%{listnum}denied%{daddr}%{packets}packets" }
			id => "msgParserId1728"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1729
	# line in RSA: DHCP packet may be headed in the directionof the relay<daddr>, not extracting<fld1>information
	else if [logstash][msgparser][id] == "msgParserId1729" {
		dissect {
			mapping => { "message" => "DHCP packet may be headed in the directionof the relay%{daddr}, not extracting%{fld1}information" }
			id => "msgParserId1729"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ciscorouter_3" {
		# MESSAGE ciscorouter_3
		# line in RSA: Received disconnect from<daddr>:<dport>:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Received disconnect from%{daddr}:%{dport}:%{result}" }
				id => "message-ciscorouter_3"
				add_field => {
				"event_description" => "Received disconnect"
					"[event][id]" => "ciscorouter_3"
					"[rsa][message][id1]" => "ciscorouter_3"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ciscorouter_3:02
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-ciscorouter_3:02"
				add_field => {
					"[event][id]" => "ciscorouter_3:02"
					"[rsa][message][id1]" => "ciscorouter_3:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1722
	# line in RSA: <info>
	else if [logstash][msgparser][id] == "msgParserId1722" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId1722"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1731
	# line in RSA: No. of <fld1> prefixes received from <saddr> has reached <dclass_counter1>, max <trigger_val>
	else if [logstash][msgparser][id] == "msgParserId1731" {
		dissect {
			mapping => { "message" => "No. of %{fld1} prefixes received from %{saddr} has reached %{dclass_counter1}, max %{trigger_val}" }
			id => "msgParserId1731"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1732
	# line in RSA: Peer MEP change: <event_description> - domain <domain>, service <network_service>, local MEP ID <id>, local interface <interface>, peer MEP ID <id1>, peer MAC address <macaddr>,{errors cleared:<fld4> current:<fld5>| errors set:<fld4> current:<fld5>|errors current: <fld5>}  
	else if [logstash][msgparser][id] == "msgParserId1732" {
		grok {
			match => { "message" => "^Peer[\s]+MEP[\s]+change:[\s]+(?<event_description>[^\s]*)[\s]+\-[\s]+domain[\s]+(?<domain>[^,]*),[\s]+service[\s]+(?<network_service>[^,]*),[\s]+local[\s]+MEP[\s]+ID[\s]+(?<id>[^,]*),[\s]+local[\s]+interface[\s]+(?<interface>[^,]*),[\s]+peer[\s]+MEP[\s]+ID[\s]+(?<id1>[^,]*),[\s]+peer[\s]+MAC[\s]+address[\s]+(?<macaddr>[^,]*),(errors[\s]+cleared:(?<fld4>[^\s]*)[\s]+current:(?<fld5>[^\s]*)|[\s]*errors[\s]+set:(?<fld4>[^\s]*)[\s]+current:(?<fld5>[^\s]*)|errors[\s]+current:[\s]+(?<fld5>[^\s]*))[\s]+$" }
			id => "msgParserId1732"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1733
	# line in RSA: Successfully authenticated user '<username>' from '<saddr>' on '<terminal>'(cipher '<encryption_type>', mac '<context>')  
	else if [logstash][msgparser][id] == "msgParserId1733" {
		dissect {
			mapping => { "message" => "Successfully authenticated user '%{username}' from '%{saddr}' on '%{terminal}'(cipher '%{encryption_type}', mac '%{context}')" }
			id => "msgParserId1733"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => " The sshd successful login information"
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1734
	# line in RSA: Interface <interface>, Detected <fld1> Fault   
	else if [logstash][msgparser][id] == "msgParserId1734" {
		dissect {
			mapping => { "message" => "Interface %{interface}, Detected %{fld1} Fault" }
			id => "msgParserId1734"
			add_field => {
				"a" => "Detected "
				"b" => "Fault"
				"event_description" => " *STRCAT(a,fld1,' ',b)"
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1735
	# line in RSA: NSR disabled on neighbor <hostip> on standby due to <result>,<info>    
	else if [logstash][msgparser][id] == "msgParserId1735" {
		dissect {
			mapping => { "message" => "NSR disabled on neighbor %{hostip} on standby due to %{result},%{info}" }
			id => "msgParserId1735"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1736
	# line in RSA: The configured MTU of <bytes> on <interface> is close to the H/W limit, and hence large <fld1> frames may be dropped as oversized frames     
	else if [logstash][msgparser][id] == "msgParserId1736" {
		dissect {
			mapping => { "message" => "The configured MTU of %{bytes} on %{interface} is close to the H/W limit, and hence large %{fld1} frames may be dropped as oversized frames" }
			id => "msgParserId1736"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1737
	# line in RSA: Interface <interface>, Detected <fld1> Fault     
	else if [logstash][msgparser][id] == "msgParserId1737" {
		dissect {
			mapping => { "message" => "Interface %{interface}, Detected %{fld1} Fault" }
			id => "msgParserId1737"
			add_field => {
				"a" => "Detected "
				"b" => "Fault"
				"event_description" => " *STRCAT(a,fld1,' ',b)"
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1738
	# line in RSA: Session to neighbor <hostip> on interface <interface> entered <event_state> state (initial: <fld1>,secondary: <fld2>,maximum: <fld3>). 
	else if [logstash][msgparser][id] == "msgParserId1738" {
		dissect {
			mapping => { "message" => "Session to neighbor %{hostip} on interface %{interface} entered %{event_state} state (initial: %{fld1},secondary: %{fld2},maximum: %{fld3})." }
			id => "msgParserId1738"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1739
	# line in RSA: Interface <interface>, dampening state changed to <event_state>  
	else if [logstash][msgparser][id] == "msgParserId1739" {
		dissect {
			mapping => { "message" => "Interface %{interface}, dampening state changed to %{event_state}" }
			id => "msgParserId1739"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1740
	# line in RSA: <interface> is no longer Active as part of <info> 
	else if [logstash][msgparser][id] == "msgParserId1740" {
		dissect {
			mapping => { "message" => "%{interface} is no longer Active as part of %{info}" }
			id => "msgParserId1740"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1741
	# line in RSA: <fld1> alarm occured for <sensor> sensor at temperature <fld2> deg C, against configured threshold of <fld3> deg C  
	else if [logstash][msgparser][id] == "msgParserId1741" {
		dissect {
			mapping => { "message" => "%{fld1} alarm occured for %{sensor} sensor at temperature %{fld2} deg C, against configured threshold of %{fld3} deg C" }
			id => "msgParserId1741"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1742
	# line in RSA: Neighbor <hostip>:<network_port>, {<event_state>(<info>)|<event_state>}  
	else if [logstash][msgparser][id] == "msgParserId1742" {
		grok {
			match => { "message" => "^Neighbor[\s]+(?<hostip>[^:]*):(?<network_port>[^,]*),[\s]+((?<event_state>[^\(]*)\((?<info>[^\)]*)\)|(?<event_state>[^\s]*))[\s]+$" }
			id => "msgParserId1742"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1743
	# line in RSA: {'<obj_name>' detected the '<severity>' condition '<result>'|<info>} - for session, retry  
	else if [logstash][msgparser][id] == "msgParserId1743" {
		grok {
			match => { "message" => "^('(?<obj_name>[^']*)'[\s]+detected[\s]+the[\s]+'(?<severity>[^']*)'[\s]+condition[\s]+'(?<result>[^']*)'|(?<info>[^\s]*))[\s]+\-[\s]+for[\s]+session,[\s]+retry[\s]+$" }
			id => "msgParserId1743"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1744
	# line in RSA: Interface <interface>, <fld1> Fault  
	else if [logstash][msgparser][id] == "msgParserId1744" {
		dissect {
			mapping => { "message" => "Interface %{interface}, %{fld1} Fault" }
			id => "msgParserId1744"
			add_field => {
				"a" => "Detected "
				"b" => "Fault"
				"event_description" => " *STRCAT(a,fld1,' ',b)"
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1745
	# line in RSA: Process <fld1>, Nbr <hostip> on <interface> in area <fld2> from <fld3> to <event_state>, <result>,<space>vrf <fld4> vrfid <fld5>  
	else if [logstash][msgparser][id] == "msgParserId1745" {
		dissect {
			mapping => { "message" => "Process %{fld1}, Nbr %{hostip} on %{interface} in area %{fld2} from %{fld3} to %{event_state}, %{result},%{space}vrf %{fld4} vrfid %{fld5}" }
			id => "msgParserId1745"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1746
	# line in RSA: Process <fld1>, Nbr <hostip> on <interface> from <fld3> to <event_state>, <result>
	else if [logstash][msgparser][id] == "msgParserId1746" {
		dissect {
			mapping => { "message" => "Process %{fld1}, Nbr %{hostip} on %{interface} from %{fld3} to %{event_state}, %{result}" }
			id => "msgParserId1746"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1747
	# line in RSA: VRF '<fld1>' (<fld2>), Session {recovery succeeded|hold up initiated} for peer <hostip>:<network_port> 
	else if [logstash][msgparser][id] == "msgParserId1747" {
		grok {
			match => { "message" => "^VRF[\s]+'(?<fld1>[^']*)'[\s]+\((?<fld2>[^\)]*)\),[\s]+Session[\s]+(recovery[\s]+succeeded|hold[\s]+up[\s]+initiated)[\s]+for[\s]+peer[\s]+(?<hostip>[^:]*):(?<network_port>[^\s]*)[\s]+$" }
			id => "msgParserId1747"
			add_field => {
				"process" => "%{hservice}"
				"process_id" => "%{hfld2}"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1748
	# line in RSA: <process>(<fld1>) (jid <fld2>) (pid <process_id>) (fail_count <dclass_counter1>) <result>, <action>  
	else if [logstash][msgparser][id] == "msgParserId1748" {
		dissect {
			mapping => { "message" => "%{process}(%{fld1}) (jid %{fld2}) (pid %{process_id}) (fail_count %{dclass_counter1}) %{result}, %{action}" }
			id => "msgParserId1748"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1749
	# line in RSA: <process>[<process_id>]: <result>, <action>. 
	else if [logstash][msgparser][id] == "msgParserId1749" {
		dissect {
			mapping => { "message" => "%{process}[%{process_id}]: %{result}, %{action}." }
			id => "msgParserId1749"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId1750
	# line in RSA: <fld5>: cpp_cp: QFP:<fld1> Thread:<fld2> TS:<fld3> %IPSEC-3-REPLAY_ERROR: IPSec SA receives anti-replay error, DP Handle <dclass_counter1>, src_addr <saddr>, dest_addr <daddr>, SPI <fld4> 
	else if [logstash][msgparser][id] == "msgParserId1750" {
		dissect {
			mapping => { "message" => "%{fld5}: cpp_cp: QFP:%{fld1} Thread:%{fld2} TS:%{fld3} %IPSEC-3-REPLAY_ERROR: IPSec SA receives anti-replay error, DP Handle %{dclass_counter1}, src_addr %{saddr}, dest_addr %{daddr}, SPI %{fld4}" }
			id => "msgParserId1750"
			add_field => {
				"event_description" => " IPSec SA receives anti-replay error"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
		}
	}
	# PARSER msgParserId1751
	# line in RSA:  <event_description> callID(<connectionid>), port(<port>) socket(<fld1>) 
	else if [logstash][msgparser][id] == "msgParserId1751" {
		dissect {
			mapping => { "message" => "%{event_description} callID(%{connectionid}), port(%{port}) socket(%{fld1})" }
			id => "msgParserId1751"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_ciscoroutermsg.json"
#			template_name => "ciscorouter_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
