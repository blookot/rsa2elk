# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "jenkins"
			"[observer][name]" => "Jenkins"
			"[observer][type]" => "Application Servers"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth> <hdate> <htime> <hhostname> <hfld1> jenkins-<messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+jenkins\-(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hdate> <htime> <hhostname> jenkins-<messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+jenkins\-(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-jenkinsmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "system" {
		# MESSAGE system
		# line in RSA: <event_type>: <severity> [<event_description>] <obj_name>: JVM is terminating. Shutting down <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{severity} [%{event_description}] %{obj_name}: JVM is terminating. Shutting down %{fld7}" }
				id => "message-system"
				add_field => {
				"ec_subject" => "OS"
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"action" => "Shutting down"
					"[event][id]" => "system"
					"[rsa][message][id1]" => "system"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE system:01
		# line in RSA: <event_type>: <severity> [<event_description>] <obj_name>: Jenkins configured to output log messages to syslog server <daddr>:<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{severity} [%{event_description}] %{obj_name}: Jenkins configured to output log messages to syslog server %{daddr}:%{dport}" }
				id => "message-system:01"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
					"[event][id]" => "system:01"
					"[rsa][message][id1]" => "system:01"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE system:02
		# line in RSA: <event_type>: <severity> [<event_description>] <obj_name>: Started SSHD at port <dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{severity} [%{event_description}] %{obj_name}: Started SSHD at port %{dport}" }
				id => "message-system:02"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"hostname" => "%{hhostname}"
				"action" => "Started SSHD"
					"[event][id]" => "system:02"
					"[rsa][message][id1]" => "system:02"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE system:03
		# line in RSA: <event_type>: <severity> [<event_description>] <obj_name>: Completed initialization
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{severity} [%{event_description}] %{obj_name}: Completed initialization" }
				id => "message-system:03"
				add_field => {
				"hostname" => "%{hhostname}"
				"action" => "Completed initialization"
					"[event][id]" => "system:03"
					"[rsa][message][id1]" => "system:03"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE system:04
		# line in RSA: <event_type>: <severity> [<event_description>] <obj_name>: Attempting to reconnect <node>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{severity} [%{event_description}] %{obj_name}: Attempting to reconnect %{node}" }
				id => "message-system:04"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Request"
				"ec_theme" => "Communication"
				"hostname" => "%{hhostname}"
				"action" => "Attempting to reconnect"
					"[event][id]" => "system:04"
					"[rsa][message][id1]" => "system:04"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE system:05
		# line in RSA: <event_type>: <severity> [<event_description>] <obj_name>: Jenkins is fully up and running
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{severity} [%{event_description}] %{obj_name}: Jenkins is fully up and running" }
				id => "message-system:05"
				add_field => {
				"ec_subject" => "OS"
				"ec_activity" => "Start"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"action" => "Jenkins is fully up and running"
					"[event][id]" => "system:05"
					"[rsa][message][id1]" => "system:05"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE system:06
		# line in RSA: <event_type>: <severity> [<event_description>] <fld5>: <obj_name>#<version> main build action completed: <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{severity} [%{event_description}] %{fld5}: %{obj_name}#%{version} main build action completed: %{disposition}" }
				id => "message-system:06"
				add_field => {
				"hostname" => "%{hhostname}"
				"action" => "main build action completed"
					"[event][id]" => "system:06"
					"[rsa][message][id1]" => "system:06"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE system:07
		# line in RSA: <event_type>: <severity> [<event_description>] <obj_name>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{severity} [%{event_description}] %{obj_name}: %{info}" }
				id => "message-system:07"
				add_field => {
				"hostname" => "%{hhostname}"
					"[event][id]" => "system:07"
					"[rsa][message][id1]" => "system:07"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE system:08
		# line in RSA: <event_type>: <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{fld3}" }
				id => "message-system:08"
				add_field => {
				"hostname" => "%{hhostname}"
					"[event][id]" => "system:08"
					"[rsa][message][id1]" => "system:08"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "audit" {
		# MESSAGE audit
		# line in RSA: <event_type>: /login by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: /login by %{username}" }
				id => "message-audit"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"hostname" => "%{hhostname}"
				"action" => "login"
					"[event][id]" => "audit"
					"[rsa][message][id1]" => "audit"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:01
		# line in RSA: <event_type>: <info>/configure by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{info}/configure by %{username}" }
				id => "message-audit:01"
				add_field => {
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"action" => "configure"
					"[event][id]" => "audit:01"
					"[rsa][message][id1]" => "audit:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:02
		# line in RSA: <event_type>: <info>/createItem by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{info}/createItem by %{username}" }
				id => "message-audit:02"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"action" => "createItem"
					"[event][id]" => "audit:02"
					"[rsa][message][id1]" => "audit:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:03
		# line in RSA: <event_type>: <info>/configSubmit by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{info}/configSubmit by %{username}" }
				id => "message-audit:03"
				add_field => {
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"action" => "configSubmit"
					"[event][id]" => "audit:03"
					"[rsa][message][id1]" => "audit:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:04
		# line in RSA: <event_type>: <info>/doDelete by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{info}/doDelete by %{username}" }
				id => "message-audit:04"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"action" => "doDelete"
					"[event][id]" => "audit:04"
					"[rsa][message][id1]" => "audit:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:09
		# line in RSA: <event_type>: <info> Started by user <username>, Started by upstream project "<process_src>" build number {<jobnum> on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition> | <jobnum>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+Started[\s]+by[\s]+user[\s]+(?<username>[^,]*),[\s]+Started[\s]+by[\s]+upstream[\s]+project[\s]+\"(?<process_src>[^\"]*)\"[\s]+build[\s]+number[\s]+((?<jobnum>[^\s]*)[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*(?<jobnum>.*))$" }
				id => "message-audit:09"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by user,Started by upstream project"
					"[event][id]" => "audit:09"
					"[rsa][message][id1]" => "audit:09"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:18
		# line in RSA: <event_type>: <info> Started by upstream project "<process_src>" build number <jobnum>,{Started by user <username> on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition> | Started by user <username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+Started[\s]+by[\s]+upstream[\s]+project[\s]+\"(?<process_src>[^\"]*)\"[\s]+build[\s]+number[\s]+(?<jobnum>[^,]*),(Started[\s]+by[\s]+user[\s]+(?<username>[^\s]*)[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*Started[\s]+by[\s]+user[\s]+(?<username>.*))$" }
				id => "message-audit:18"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by upstream project,Started by user"
					"[event][id]" => "audit:18"
					"[rsa][message][id1]" => "audit:18"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:19
		# line in RSA: <event_type>: <info> Started by user <username>, Restarted from build #<jobnum>, stage Trigger Prod <group> Regression Jobs
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{info} Started by user %{username}, Restarted from build #%{jobnum}, stage Trigger Prod %{group} Regression Jobs" }
				id => "message-audit:19"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by user,Restarted from build,Trigger Prod Group Regression Jobs"
					"[event][id]" => "audit:19"
					"[rsa][message][id1]" => "audit:19"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:10
		# line in RSA: <event_type>: <info> Started by remote host <dhost>, Started by user {<username>, Rebuilds build #<jobnum>,<fld3> | <username>} on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+Started[\s]+by[\s]+remote[\s]+host[\s]+(?<dhost>[^,]*),[\s]+Started[\s]+by[\s]+user[\s]+((?<username>[^,]*),[\s]+Rebuilds[\s]+build[\s]+#(?<jobnum>[^,]*),(?<fld3>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*))[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>.*)$" }
				id => "message-audit:10"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by remote host,Started by user"
					"[event][id]" => "audit:10"
					"[rsa][message][id1]" => "audit:10"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:11
		# line in RSA: <event_type>: <info> Started by remote host <dhost>, Started by user {<username>, Rebuilds build #<jobnum>,<fld3> | <username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+Started[\s]+by[\s]+remote[\s]+host[\s]+(?<dhost>[^,]*),[\s]+Started[\s]+by[\s]+user[\s]+((?<username>[^,]*),[\s]+Rebuilds[\s]+build[\s]+#(?<jobnum>[^,]*),(?<fld3>[^\s]*)[\s]+|[\s]*(?<username>.*))$" }
				id => "message-audit:11"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by remote host,Started by user"
					"[event][id]" => "audit:11"
					"[rsa][message][id1]" => "audit:11"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:05
		# line in RSA: <event_type>: <info> Started by user {<username>, Rebuilds build #<jobnum>,<fld3> | <username>} on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+Started[\s]+by[\s]+user[\s]+((?<username>[^,]*),[\s]+Rebuilds[\s]+build[\s]+#(?<jobnum>[^,]*),(?<fld3>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*))[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>.*)$" }
				id => "message-audit:05"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by user"
					"[event][id]" => "audit:05"
					"[rsa][message][id1]" => "audit:05"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:12
		# line in RSA: <event_type>: <info> Started by user {<username>, Rebuilds build #<jobnum>,<fld3> | <username>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+Started[\s]+by[\s]+user[\s]+((?<username>[^,]*),[\s]+Rebuilds[\s]+build[\s]+#(?<jobnum>[^,]*),(?<fld3>[^\s]*)[\s]+|[\s]*(?<username>.*))$" }
				id => "message-audit:12"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by user"
					"[event][id]" => "audit:12"
					"[rsa][message][id1]" => "audit:12"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:13
		# line in RSA: <event_type>: <info> Started by upstream project "<process_src>" build number{<jobnum> on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition> | <jobnum>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+Started[\s]+by[\s]+upstream[\s]+project[\s]+\"(?<process_src>[^\"]*)\"[\s]+build[\s]+number((?<jobnum>[^\s]*)[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*(?<jobnum>.*))$" }
				id => "message-audit:13"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by upstream project"
					"[event][id]" => "audit:13"
					"[rsa][message][id1]" => "audit:13"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:14
		# line in RSA: <event_type>: <info> {Started by timer on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition> | Started by timer}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+(Started[\s]+by[\s]+timer[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*Started[\s]+by[\s]+timer)$" }
				id => "message-audit:14"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by timer"
					"[event][id]" => "audit:14"
					"[rsa][message][id1]" => "audit:14"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:15
		# line in RSA: <event_type>: <info> {Started by an SCM change on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition> | Started by an SCM change}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+(Started[\s]+by[\s]+an[\s]+SCM[\s]+change[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*Started[\s]+by[\s]+an[\s]+SCM[\s]+change)$" }
				id => "message-audit:15"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by an SCM change"
					"[event][id]" => "audit:15"
					"[rsa][message][id1]" => "audit:15"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:16
		# line in RSA: <event_type>: <info> Started by remote host {<dhost> on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition> | <dhost>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+Started[\s]+by[\s]+remote[\s]+host[\s]+((?<dhost>[^\s]*)[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*(?<dhost>.*))$" }
				id => "message-audit:16"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "Started by remote host"
					"[event][id]" => "audit:16"
					"[rsa][message][id1]" => "audit:16"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:17
		# line in RSA: <event_type>: <info> [<event_description>] The execution script returns the expected exit code {(<result>) on node <node> started at <event_time_string> completed in <duration_string> completed: <disposition> | (<result>)}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^:]*):[\s]+(?<info>[^\s]*)[\s]+\[(?<event_description>[^\]]*)\][\s]+The[\s]+execution[\s]+script[\s]+returns[\s]+the[\s]+expected[\s]+exit[\s]+code[\s]+(\((?<result>[^\)]*)\)[\s]+on[\s]+node[\s]+(?<node>[^\s]*)[\s]+started[\s]+at[\s]+(?<event_time_string>[^\s]*)[\s]+completed[\s]+in[\s]+(?<duration_string>[^\s]*)[\s]+completed:[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*\((?<result>[^\)]*)\))$" }
				id => "message-audit:17"
				add_field => {
				"hostname" => "%{hhostname}"
				"trigger_desc" => "The execution script returns the expected exit code"
					"[event][id]" => "audit:17"
					"[rsa][message][id1]" => "audit:17"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:06
		# line in RSA: <event_type>: <info>/stop by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{info}/stop by %{username}" }
				id => "message-audit:06"
				add_field => {
				"ec_activity" => "Stop"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"action" => "stop"
					"[event][id]" => "audit:06"
					"[rsa][message][id1]" => "audit:06"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:07
		# line in RSA: <event_type>: <info>/doCreateItem by <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{info}/doCreateItem by %{username}" }
				id => "message-audit:07"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"hostname" => "%{hhostname}"
				"action" => "doCreateItem"
					"[event][id]" => "audit:07"
					"[rsa][message][id1]" => "audit:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
		# MESSAGE audit:08
		# line in RSA: <event_type>: <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type}: %{fld3}" }
				id => "message-audit:08"
				add_field => {
				"hostname" => "%{hhostname}"
					"[event][id]" => "audit:08"
					"[rsa][message][id1]" => "audit:08"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-jenkinsmsg.json"
#			template_name => "jenkins_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
