# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "blackberryes"
			"[observer][name]" => "RIM Blackberry Enterprise Server"
			"[observer][type]" => "Messaging"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %RIMBES-<hlevel>: "<hfld1>","<hfld2>","<hfld3>","<hfld4>","<hfld5>","<hfld6>","<hfld7>","<hfld8>","<hfld9>","<hfld10>","<hfld11>","<hfld12>","<messageid>",<!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%RIMBES\-(?<hlevel>[^:]*):[\s]+\"(?<message>(?<hfld1>[^\"]*)\",\"(?<hfld2>[^\"]*)\",\"(?<hfld3>[^\"]*)\",\"(?<hfld4>[^\"]*)\",\"(?<hfld5>[^\"]*)\",\"(?<hfld6>[^\"]*)\",\"(?<hfld7>[^\"]*)\",\"(?<hfld8>[^\"]*)\",\"(?<hfld9>[^\"]*)\",\"(?<hfld10>[^\"]*)\",\"(?<hfld11>[^\"]*)\",\"(?<hfld12>[^\"]*)\",\"(?<messageid>[^\"]*)\",(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %RIMBES-<hlevel>: "<hfld1>","<hfld2>","<hfld3>","<hfld4>","<hfld5>","<hfld6>","<hfld7>","<hfld8>","<hfld9>","<messageid>",<!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%RIMBES\-(?<hlevel>[^:]*):[\s]+\"(?<message>(?<hfld1>[^\"]*)\",\"(?<hfld2>[^\"]*)\",\"(?<hfld3>[^\"]*)\",\"(?<hfld4>[^\"]*)\",\"(?<hfld5>[^\"]*)\",\"(?<hfld6>[^\"]*)\",\"(?<hfld7>[^\"]*)\",\"(?<hfld8>[^\"]*)\",\"(?<hfld9>[^\"]*)\",\"(?<messageid>[^\"]*)\",(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %RIMBES-<hlevel>: "<hfld1>","<msgIdPart1> - <msgIdPart2> <msgIdPart3>,<msgIdPart4>", <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%RIMBES\-(?<hlevel>[^:]*):[\s]+\"(?<message>(?<hfld1>[^\"]*)\",\"(?<msgIdPart1>[^\s]*)[\s]+\-[\s]+(?<msgIdPart2>[^\s]*)[\s]+(?<msgIdPart3>[^,]*),(?<msgIdPart4>[^\"]*)\",[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{msgIdPart1}-%{msgIdPart2}_%{msgIdPart3}-%{msgIdPart4}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %RIMBES-<hlevel>: "<hfld1>","<msgIdPart1> - <msgIdPart2>", <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%RIMBES\-(?<hlevel>[^:]*):[\s]+\"(?<message>(?<hfld1>[^\"]*)\",\"(?<msgIdPart1>[^\s]*)[\s]+\-[\s]+(?<msgIdPart2>[^\"]*)\",[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{msgIdPart1}-%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %RIMBES-<hlevel>: "<hfld1>","<messageid>",<!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%RIMBES\-(?<hlevel>[^:]*):[\s]+\"(?<message>(?<hfld1>[^\"]*)\",\"(?<messageid>[^\"]*)\",(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-blackberryesmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <username>.<fld1>","<hardware_id>","<user_address>","<direction>","<to>","<cc>","<bcc>","<from>","<subject>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Encrypting","<action>","<fld8>"
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{username}.%{fld1}\",\"%{hardware_id}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{cc}\",\"%{bcc}\",\"%{from}\",\"%{subject}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Encrypting\",\"%{action}\",\"%{fld8}\"" }
			id => "msgParserId0"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Tx_Sending" {
		# MESSAGE Tx_Sending:PIN_MSG
		# line in RSA: <username>.<fld1>","<hardware_id>","<user_address>","<direction>","<to>","<cc>","<bcc>","<from>","<subject>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Sending","<action>","<fld8>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{hardware_id}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{cc}\",\"%{bcc}\",\"%{from}\",\"%{subject}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Sending\",\"%{action}\",\"%{fld8}\"" }
				id => "message-Tx_Sending:PIN_MSG"
				add_field => {
					"[event][id]" => "Tx_Sending:PIN_MSG"
					"[rsa][message][id1]" => "Tx_Sending:PIN_MSG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
		# MESSAGE Tx_Sending:SMS_MSG
		# line in RSA: <username>.<fld1>","<user_address>","<direction>","<to>","<from>","<fld10>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Sending","<action>","<fld7>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{from}\",\"%{fld10}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Sending\",\"%{action}\",\"%{fld7}\"" }
				id => "message-Tx_Sending:SMS_MSG"
				add_field => {
					"[event][id]" => "Tx_Sending:SMS_MSG"
					"[rsa][message][id1]" => "Tx_Sending:SMS_MSG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Tx_Pending" {
		# MESSAGE Tx_Pending:PIN_MSG
		# line in RSA: <username>.<fld1>","<hardware_id>","<user_address>","<direction>","<to>","<cc>","<bcc>","<from>","<subject>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Pending","<action>","<fld8>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{hardware_id}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{cc}\",\"%{bcc}\",\"%{from}\",\"%{subject}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Pending\",\"%{action}\",\"%{fld8}\"" }
				id => "message-Tx_Pending:PIN_MSG"
				add_field => {
					"[event][id]" => "Tx_Pending:PIN_MSG"
					"[rsa][message][id1]" => "Tx_Pending:PIN_MSG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
		# MESSAGE Tx_Pending:SMS_MSG
		# line in RSA: <username>.<fld1>","<user_address>","<direction>","<to>","<from>","<fld10>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Pending","<action>","<fld7>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{from}\",\"%{fld10}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Pending\",\"%{action}\",\"%{fld7}\"" }
				id => "message-Tx_Pending:SMS_MSG"
				add_field => {
					"[event][id]" => "Tx_Pending:SMS_MSG"
					"[rsa][message][id1]" => "Tx_Pending:SMS_MSG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Tx_Sent" {
		# MESSAGE Tx_Sent:PIN_MSG
		# line in RSA: <username>.<fld1>","<hardware_id>","<user_address>","<direction>","<to>","<cc>","<bcc>","<from>","<subject>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Sent","<action>","<fld8>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{hardware_id}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{cc}\",\"%{bcc}\",\"%{from}\",\"%{subject}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Sent\",\"%{action}\",\"%{fld8}\"" }
				id => "message-Tx_Sent:PIN_MSG"
				add_field => {
					"[event][id]" => "Tx_Sent:PIN_MSG"
					"[rsa][message][id1]" => "Tx_Sent:PIN_MSG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
		# MESSAGE Tx_Sent:SMS_MSG
		# line in RSA: <username>.<fld1>","<user_address>","<direction>","<to>","<from>","<fld10>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Sent","<action>","<fld7>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{from}\",\"%{fld10}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Sent\",\"%{action}\",\"%{fld7}\"" }
				id => "message-Tx_Sent:SMS_MSG"
				add_field => {
					"[event][id]" => "Tx_Sent:SMS_MSG"
					"[rsa][message][id1]" => "Tx_Sent:SMS_MSG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA: <username>.<fld1>","<hardware_id>","<user_address>","<direction>","<to>","<cc>","<bcc>","<from>","<subject>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Delivered","<action>","<fld8>"
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{username}.%{fld1}\",\"%{hardware_id}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{cc}\",\"%{bcc}\",\"%{from}\",\"%{subject}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Delivered\",\"%{action}\",\"%{fld8}\"" }
			id => "msgParserId4"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Tx_Error" {
		# MESSAGE Tx_Error:PIN_MSG
		# line in RSA: <username>.<fld1>","<hardware_id>","<user_address>","<direction>","<to>","<cc>","<bcc>","<from>","<subject>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Error","<action>","<fld8>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{hardware_id}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{cc}\",\"%{bcc}\",\"%{from}\",\"%{subject}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Error\",\"%{action}\",\"%{fld8}\"" }
				id => "message-Tx_Error:PIN_MSG"
				add_field => {
					"[event][id]" => "Tx_Error:PIN_MSG"
					"[rsa][message][id1]" => "Tx_Error:PIN_MSG"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
		# MESSAGE Tx_Error:SMS_MSG
		# line in RSA: <username>.<fld1>","<user_address>","<direction>","<to>","<from>","<fld8>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Tx_Error","<action>","<fld7>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{from}\",\"%{fld8}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Tx_Error\",\"%{action}\",\"%{fld7}\"" }
				id => "message-Tx_Error:SMS_MSG"
				add_field => {
					"[event][id]" => "Tx_Error:SMS_MSG"
					"[rsa][message][id1]" => "Tx_Error:SMS_MSG"
					"[event][categoryid]" => "1603000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Rx_Received" {
		# MESSAGE Rx_Received:PIN_MSG
		# line in RSA: <username>.<fld1>","<hardware_id>","<user_address>","<direction>","<to>","<cc>","<bcc>","<from>","<subject>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Rx_Received","<action>","<fld8>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{hardware_id}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{cc}\",\"%{bcc}\",\"%{from}\",\"%{subject}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Rx_Received\",\"%{action}\",\"%{fld8}\"" }
				id => "message-Rx_Received:PIN_MSG"
				add_field => {
					"[event][id]" => "Rx_Received:PIN_MSG"
					"[rsa][message][id1]" => "Rx_Received:PIN_MSG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
		# MESSAGE Rx_Received:SMS_MSG
		# line in RSA: <username>.<fld1>","<user_address>","<direction>","<to>","<from>","<fld10>","<message_body>","<fld3> <fld4>","<fld5> <fld6>","Rx_Received","<action>","<fld8>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{username}.%{fld1}\",\"%{user_address}\",\"%{direction}\",\"%{to}\",\"%{from}\",\"%{fld10}\",\"%{message_body}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"Rx_Received\",\"%{action}\",\"%{fld8}\"" }
				id => "message-Rx_Received:SMS_MSG"
				add_field => {
					"[event][id]" => "Rx_Received:SMS_MSG"
					"[rsa][message][id1]" => "Rx_Received:SMS_MSG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: <username>.<fld1>","Outgoing","<fld2>","<phone_number>","<fld3> <fld4>","<fld5> <fld6>","<duration_string>","<fld7>","<action>","<fld8>","<fld9>"
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{username}.%{fld1}\",\"Outgoing\",\"%{fld2}\",\"%{phone_number}\",\"%{fld3} %{fld4}\",\"%{fld5} %{fld6}\",\"%{duration_string}\",\"%{fld7}\",\"%{action}\",\"%{fld8}\",\"%{fld9}\"" }
			id => "msgParserId12"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: <username>.<fld1>","Incoming - Completed","<fld2>","<phone_number>","<fld3>  <fld4>","<fld5>  <fld6>","<duration_string>","<fld7>","<action>","<fld8>","<fld9>"
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{username}.%{fld1}\",\"Incoming - Completed\",\"%{fld2}\",\"%{phone_number}\",\"%{fld3}  %{fld4}\",\"%{fld5}  %{fld6}\",\"%{duration_string}\",\"%{fld7}\",\"%{action}\",\"%{fld8}\",\"%{fld9}\"" }
			id => "msgParserId13"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA: <username>.<fld1>","Incoming - Missed Call, Unopened","<fld2>","<phone_number>","<fld3>  <fld4>","<fld5>  <fld6>","<duration_string>","<fld7>","<action>","<fld8>","<fld9>"
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{username}.%{fld1}\",\"Incoming - Missed Call, Unopened\",\"%{fld2}\",\"%{phone_number}\",\"%{fld3}  %{fld4}\",\"%{fld5}  %{fld6}\",\"%{duration_string}\",\"%{fld7}\",\"%{action}\",\"%{fld8}\",\"%{fld9}\"" }
			id => "msgParserId14"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA: <username>.<fld1>","Incoming - Missed Call, Opened","<fld2>","<phone_number>","<fld3>  <fld4>","<fld5>  <fld6>","<duration_string>","<fld7>","<action>","<fld8>","<fld9>"
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{username}.%{fld1}\",\"Incoming - Missed Call, Opened\",\"%{fld2}\",\"%{phone_number}\",\"%{fld3}  %{fld4}\",\"%{fld5}  %{fld6}\",\"%{duration_string}\",\"%{fld7}\",\"%{action}\",\"%{fld8}\",\"%{fld9}\"" }
			id => "msgParserId15"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-blackberryesmsg.json"
#			template_name => "blackberryes_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
