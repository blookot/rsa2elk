# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "solaris"
			"[observer][name]" => "UNIX Solaris"
			"[observer][type]" => "Unix"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 1110
	# line in RSA: <hmonth> <hday> <htime> /sys_apps_01/telalert/config/Mastercard/HA/<msgIdPart1>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+/sys_apps_01/telalert/config/Mastercard/HA/(?<message>(?<msgIdPart1>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-1110"
			add_field => {
				"[rsa][header][id]" => "1110"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1111
	# line in RSA: <hmonth> <hday> <htime> /usr/local/ASAM/bin/PlatformServices/PlatformReceiver/scripts/<msgIdPart1>[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+/usr/local/ASAM/bin/PlatformServices/PlatformReceiver/scripts/(?<message>(?<msgIdPart1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-1111"
			add_field => {
				"[rsa][header][id]" => "1111"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1112
	# line in RSA: <hmonth> <hday> <htime> [SUN.tivoli_Monitor,oracle_group,<msgIdPart1>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+\[SUN\.tivoli_Monitor,oracle_group,(?<message>(?<msgIdPart1>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-1112"
			add_field => {
				"[rsa][header][id]" => "1112"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1113
	# line in RSA: <hmonth> <hday> <htime> /ranger/RangerRoot/sbin/<msgIdPart1>[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+/ranger/RangerRoot/sbin/(?<message>(?<msgIdPart1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-1113"
			add_field => {
				"[rsa][header][id]" => "1113"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <hmonth> <hday> <htime> <hhostip> <msgIdPart1>[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostip>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0052
	# line in RSA: <hmonth> <hday> <htime> <hfld2> <msgIdPart1> <hfld1>[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+(?<hfld1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0052"
			add_field => {
				"[rsa][header][id]" => "0052"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1122
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Alert: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Alert:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-1122"
			add_field => {
				"[rsa][header][id]" => "1122"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hday> <htime> <hhostip> <msgIdPart1>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostip>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0034
	# line in RSA: <hmonth> <hday> <htime> <hhostip> <msgIdPart1>(<hfld1>): [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostip>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\(]*)\((?<hfld1>[^\)]*)\):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0034"
			add_field => {
				"[rsa][header][id]" => "0034"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0035
	# line in RSA: <hmonth> <hday> <htime> <hhostip> <msgIdPart1>:vxconfigd: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostip>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^:]*):vxconfigd:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0035"
			add_field => {
				"[rsa][header][id]" => "0035"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0039
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>::<hfld1>(): [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^:]*)::(?<hfld1>[^\(]*)\(\):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0039"
			add_field => {
				"[rsa][header][id]" => "0039"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>[<hpid>]: <hfld1>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+(?<hfld1>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 4444
	# line in RSA: <hmonth> <hday> <htime> /export/sbprov/sbroker/sbea/<msgIdPart1>/<hfld1>[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+/export/sbprov/sbroker/sbea/(?<message>(?<msgIdPart1>[^/]*)/(?<hfld1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-4444"
			add_field => {
				"[rsa][header][id]" => "4444"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 4445
	# line in RSA: <hmonth> <hday> <htime> /export/sbprov/sbroker/sbea/<msgIdPart1>/<hfld1>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+/export/sbprov/sbroker/sbea/(?<message>(?<msgIdPart1>[^/]*)/(?<hfld1>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-4445"
			add_field => {
				"[rsa][header][id]" => "4445"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 4446
	# line in RSA: <hmonth> <hday> <htime> { Oracle GoldenGate Command Interpreter for | Oracle GoldenGate Capture for | GoldenGate Command Interpreter for | GoldenGate Capture for | GoldenGate Manager for | GoldenGate Delivery for | GoldenGate Table Definition Generator for | GoldenGate } <msgIdPart1>[<data>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+([\s]*Oracle[\s]+GoldenGate[\s]+Command[\s]+Interpreter[\s]+for[\s]+|[\s]*Oracle[\s]+GoldenGate[\s]+Capture[\s]+for[\s]+|[\s]*GoldenGate[\s]+Command[\s]+Interpreter[\s]+for[\s]+|[\s]*GoldenGate[\s]+Capture[\s]+for[\s]+|[\s]*GoldenGate[\s]+Manager[\s]+for[\s]+|[\s]*GoldenGate[\s]+Delivery[\s]+for[\s]+|[\s]*GoldenGate[\s]+Table[\s]+Definition[\s]+Generator[\s]+for[\s]+|[\s]*GoldenGate[\s]+)[\s]+(?<message>(?<msgIdPart1>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-4446"
			add_field => {
				"[rsa][header][id]" => "4446"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0051
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> <hfld1>[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+(?<hfld1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0051"
			add_field => {
				"[rsa][header][id]" => "0051"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0050
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>,<hfld1>(<hfld2>): [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^,]*),(?<hfld1>[^\(]*)\((?<hfld2>[^\)]*)\):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0050"
			add_field => {
				"[rsa][header][id]" => "0050"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0033
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>(<hfld1>): [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\(]*)\((?<hfld1>[^\)]*)\):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0033"
			add_field => {
				"[rsa][header][id]" => "0033"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Agent[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Agent\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Java(TM) Web Console[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Java\(TM\)[\s]+Web[\s]+Console\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Proxy[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Proxy\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Repository[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Repository\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Analytics Server[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Analytics[\s]+Server\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Logging Service[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Logging[\s]+Service\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> SystemEDGE[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+SystemEDGE\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Transport[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Transport\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1212
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> - <hfld1> [<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+\-[\s]+(?<hfld1>[^\s]*)[\s]+\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-1212"
			add_field => {
				"[rsa][header][id]" => "1212"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0053
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> <hfld1>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+(?<hfld1>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0053"
			add_field => {
				"[rsa][header][id]" => "0053"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> Tank Reader: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+Tank[\s]+Reader:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>:vxconfigd: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^:]*):vxconfigd:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> PPP: <hfld1>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+PPP:[\s]+(?<hfld1>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1616
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1> logging: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\s]*)[\s]+logging:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-1616"
			add_field => {
				"[rsa][header][id]" => "1616"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0054
	# line in RSA: <hmonth> <hday> <htime> <hhostip> <msgIdPart1>,UltraSPARC<hfld2>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostip>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^,]*),UltraSPARC(?<hfld2>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0054"
			add_field => {
				"[rsa][header][id]" => "0054"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>,UltraSPARC<hfld2>: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^,]*),UltraSPARC(?<hfld2>[^:]*):[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0017"
			add_field => {
				"[rsa][header][id]" => "0017"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0031
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>(<hfld1>)[<hpid>]: [ID <hid> <msgIdPart2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\(]*)\((?<hfld1>[^\)]*)\)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<msgIdPart2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0031"
			add_field => {
				"[rsa][header][id]" => "0031"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0032
	# line in RSA: <hmonth> <hday> <htime> <hfld1>: [ID 702911 <hfld2>.info] <msgIdPart1> <hfld3> has <msgIdPart2> <hfld4> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hfld1>[^:]*):[\s]+\[ID[\s]+702911[\s]+(?<hfld2>[^\.]*)\.info\][\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+has[\s]+(?<msgIdPart2>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0032"
			add_field => {
				"[rsa][header][id]" => "0032"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: <month> <day> <time> [<connection_id>]: [ID <id> <facilityname>.<severity>] <messageid> <!payload:connection_id>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\[(?<message>(?<connection_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<facilityname>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 3333
	# line in RSA: <month> <day> <time> : [ID <hfld1> <hfld2>.<hfld3>] <messageid>: <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+:[\s]+\[ID[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\.]*)\.(?<hfld3>[^\]]*)\][\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-3333"
			add_field => {
				"[rsa][header][id]" => "3333"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 3334
	# line in RSA: <month> <day> <time> : [ID <hfld1> <hfld2>.<hfld3>] <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+:[\s]+\[ID[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\.]*)\.(?<hfld3>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-3334"
			add_field => {
				"[rsa][header][id]" => "3334"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: <month> <day> <time> <messageid>[<connection_id>]: <space> [ID <id> <facilityname>.<severity>] <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<connection_id>[^\]]*)\]:[\s]+(?<space>[^\s]*)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<facilityname>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: <month> <day> <time> <messageid>: <space> [ID <id> <facilityname>.<severity>] <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<space>[^\s]*)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<facilityname>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: <month> <day> <time> <messageid>[<connection_id>]: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\[]*)\[(?<connection_id>[^\]]*)\]:[\s]+(?<payload>.*))$" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0023
	# line in RSA: <month> <day> <time> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0023"
			add_field => {
				"[rsa][header][id]" => "0023"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0024
	# line in RSA: <month> <day> <time> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0024"
			add_field => {
				"[rsa][header][id]" => "0024"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 4447
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>[<hpid>]: [ID <hid> <hfld1>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<hfld1>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-4447"
			add_field => {
				"[rsa][header][id]" => "4447"
				"[rsa][message][id2]" => "%{msgIdPart1}_local"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 4448
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>_<hfld1>[<hpid>]: [ID <hid> <hfld2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^_]*)_(?<hfld1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<hfld2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-4448"
			add_field => {
				"[rsa][header][id]" => "4448"
				"[rsa][message][id2]" => "%{msgIdPart1}_local"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 4449
	# line in RSA: <hmonth> <hday> <htime> <msgIdPart1>.<hfld1>[<hpid>]: [ID <hid> <hfld2>.<hseverity>] <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^\.]*)\.(?<hfld1>[^\[]*)\[(?<hpid>[^\]]*)\]:[\s]+\[ID[\s]+(?<hid>[^\s]*)[\s]+(?<hfld2>[^\.]*)\.(?<hseverity>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-4449"
			add_field => {
				"[rsa][header][id]" => "4449"
				"[rsa][message][id2]" => "%{msgIdPart1}_local"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9998
	# line in RSA: <hmonth> <hday> <htime> <hostname> <agent>[<process_id>]: [ID <id> <hfld2>.<severity>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hostname} %{agent}[%{process_id}]: [ID %{id} %{hfld2}.%{severity}] %{message}" }
			id => "header-9998"
			add_field => {
				"[rsa][header][id]" => "9998"
				"[rsa][message][id2]" => "SOLARIS_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: <hmonth> <hday> <htime> <agent>[<process_id>]: [ID <id> <hfld2>.<severity>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{agent}[%{process_id}]: [ID %{id} %{hfld2}.%{severity}] %{message}" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "SOLARIS_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_solarismsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	if [logstash][msgparser][id] == "msgParserId0" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId0"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>: <filename>, <info>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}: %{filename}, %{info}" }
			id => "msgParserId1"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/opt/qip/usr/bin/dhcpd_user" {
		# MESSAGE 002307
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] No DHCP lease available to offer from subnet <hostip>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+No[\s]+DHCP[\s]+lease[\s]+available[\s]+to[\s]+offer[\s]+from[\s]+subnet[\s]+(?<hostip>.*)$" }
				id => "message-002307"
				add_field => {
				"event_description" => "No DHCP lease available to offer from subnet"
					"[event][id]" => "002307"
					"[rsa][message][id1]" => "002307"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000362
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] DHCP_RenewLease: Host=<hostname> IP=<hostip> MAC=<macaddr> Domain=<fqdn>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+DHCP_RenewLease:[\s]+Host=(?<hostname>[^\s]*)[\s]+IP=(?<hostip>[^\s]*)[\s]+MAC=(?<macaddr>[^\s]*)[\s]+Domain=(?<fqdn>.*)$" }
				id => "message-000362"
				add_field => {
					"[event][id]" => "000362"
					"[rsa][message][id1]" => "000362"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] {DHCP_RenewLease|DHCP Release|DHCP_GrantLease}: Host=<hostname> IP=<hostip> MAC=<macaddr> Domain=<fqdn>
	else if [logstash][msgparser][id] == "msgParserId3" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(DHCP_RenewLease|DHCP[\s]+Release|DHCP_GrantLease):[\s]+Host=(?<hostname>[^\s]*)[\s]+IP=(?<hostip>[^\s]*)[\s]+MAC=(?<macaddr>[^\s]*)[\s]+Domain=(?<fqdn>.*)$" }
			id => "msgParserId3"
			add_field => {
				"event_description" => "DHCP_RenewLease"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } <username>: TTY=<interface>; <space> PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action> 
	else if [logstash][msgparser][id] == "msgParserId4" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+(?<username>[^:]*):[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
			id => "msgParserId4"
			add_field => {
				"event_description" => "sudo by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId5"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA:    <agent>, <interface>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{agent}, %{interface}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId6"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId7" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId7"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "error in subscriberprocessor"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] info Authentication successful.
	else if [logstash][msgparser][id] == "msgParserId8" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+info[\s]+Authentication[\s]+successful\.$" }
			id => "msgParserId8"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId9
	# line in RSA:   <agent>: [ID <id> auth.<severity>] <username> : TTY=<interface> ; PWD=<directory> ; USER=<c_username> ; COMMAND=<action> 
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} auth.%{severity}] %{username} : TTY=%{interface} ; PWD=%{directory} ; USER=%{c_username} ; COMMAND=%{action}" }
			id => "msgParserId9"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] ROOT login by <username> (<user_fullname> (<saddr>) 
	else if [logstash][msgparser][id] == "msgParserId10" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ROOT[\s]+login[\s]+by[\s]+(?<username>[^\s]*)[\s]+\((?<user_fullname>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+$" }
			id => "msgParserId10"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "ROOT login by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/local/bin/sudo_auth" {
		# MESSAGE 001105
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <username> : OK;TTY=<terminal>;PWD=<directory>;RUNAS=<c_username>;COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{username} : OK;TTY=%{terminal};PWD=%{directory};RUNAS=%{c_username};COMMAND=%{action}" }
				id => "message-001105"
				add_field => {
				"event_description" => "successful sudo"
					"[event][id]" => "001105"
					"[rsa][message][id1]" => "001105"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002491
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <username> : TTY=<terminal>; PWD=<directory>; USER=<c_username>; COMMAND=<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{username} : TTY=%{terminal}; PWD=%{directory}; USER=%{c_username}; COMMAND=%{action}" }
				id => "message-002491"
				add_field => {
				"event_description" => "successful sudo"
					"[event][id]" => "002491"
					"[rsa][message][id1]" => "002491"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId13"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "/usr/lib/snmp/snmpdx_daemon" {
		# MESSAGE 000003
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <action> failed for a pdu received from <shost>   
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{action} failed for a pdu received from %{shost}" }
				id => "message-000003"
				add_field => {
				"event_computer" => "%{hhostip}"
				"result" => "open failure"
					"[event][id]" => "000003"
					"[rsa][message][id1]" => "000003"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000004
		# line in RSA:     <agent>: [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} daemon.%{severity}] %{event_description}" }
				id => "message-000004"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000004"
					"[rsa][message][id1]" => "000004"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId16"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] ACEAGENT: { <event_description> - - <info> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId17" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ACEAGENT:[\s]+([\s]*(?<event_description>[^\s]*)[\s]+\-[\s]+\-[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId17"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: <obj_name> gateway appears to be already running (pid = <uid>)
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: %{obj_name} gateway appears to be already running (pid = %{uid})" }
			id => "msgParserId18"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gateway appears to be already running"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> 
	else if [logstash][msgparser][id] == "msgParserId19" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+$" }
			id => "msgParserId19"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process> Event <event_type> was successful with a status of <resultcode>
	else if [logstash][msgparser][id] == "msgParserId20" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^\s]*)[\s]+Event[\s]+(?<event_type>[^\s]*)[\s]+was[\s]+successful[\s]+with[\s]+a[\s]+status[\s]+of[\s]+(?<resultcode>.*)$" }
			id => "msgParserId20"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Event successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<info>'
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{info}'" }
			id => "msgParserId21"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "acctdusg_user" {
		# MESSAGE 001123
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
				id => "message-001123"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
					"[event][id]" => "001123"
					"[rsa][message][id1]" => "001123"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002338
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002338"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "002338"
					"[rsa][message][id1]" => "002338"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ACESERVER_user" {
		# MESSAGE 000005
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Passcode accepted { ,<info> | <space> } (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+Passcode[\s]+accepted[\s]+([\s]*,(?<info>[^\s]*)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+\(Login:'(?<username>[^']*)';[\s]+User[\s]+Name:'(?<user_fullname>[^']*)';[\s]+Token:(?<sessionid>[^;]*);[\s]+Group:(?<group>[^;]*);[\s]+Site:(?<url>[^;]*);[\s]+Agent[\s]+Host:(?<shost>[^;]*);[\s]+Server:(?<dhost>[^\)]*)\)[\s]+$" }
				id => "message-000005"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Passcode accepted"
					"[event][id]" => "000005"
					"[rsa][message][id1]" => "000005"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000006
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Passcode accepted { ,<info> | <space> } login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+Passcode[\s]+accepted[\s]+([\s]*,(?<info>[^\s]*)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+login:<(?<username>[^>]*)>,[\s]+user[\s]+name:<(?<user_fullname>[^>]*)>,[\s]+token:<(?<sessionid>[^>]*)>,[\s]+Client:<(?<shost>[^>]*)>,[\s]+Server:<(?<dhost>[^>]*)>,[\s]+(?<fld4>.*)$" }
				id => "message-000006"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Passcode accepted"
					"[event][id]" => "000006"
					"[rsa][message][id1]" => "000006"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000007
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : PIN created by user (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : PIN created by user (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000007"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Pin created by user"
					"[event][id]" => "000007"
					"[rsa][message][id1]" => "000007"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000008
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : PIN created by user, login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : PIN created by user, login:<%{username}>, user name:<%{user_fullname}>, token:<%{sessionid}>, Client:<%{shost}>, Server:<%{dhost}>, %{fld4}" }
				id => "message-000008"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Pin created by user"
					"[event][id]" => "000008"
					"[rsa][message][id1]" => "000008"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000009
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : ACCESS DENIED, <result> (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : ACCESS DENIED, %{result} (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000009"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "ACCESS DENIED"
					"[event][id]" => "000009"
					"[rsa][message][id1]" => "000009"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000010
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : ACCESS DENIED, <result> login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : ACCESS DENIED, %{result} login:<%{username}>, user name:<%{user_fullname}>, token:<%{sessionid}>, Client:<%{shost}>, Server:<%{dhost}>, %{fld4}" }
				id => "message-000010"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "ACCESS DENIED"
					"[event][id]" => "000010"
					"[rsa][message][id1]" => "000010"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000011
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : COLLISION, <result> (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : COLLISION, %{result} (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000011"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "COLLISION"
					"[event][id]" => "000011"
					"[rsa][message][id1]" => "000011"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000012
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : PASSCODE REUSE ATTACK { detected, | detected } (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+PASSCODE[\s]+REUSE[\s]+ATTACK[\s]+([\s]*detected,[\s]+|[\s]*detected[\s]+)[\s]+\(Login:'(?<username>[^']*)';[\s]+User[\s]+Name:'(?<user_fullname>[^']*)';[\s]+Token:(?<sessionid>[^;]*);[\s]+Group:(?<group>[^;]*);[\s]+Site:(?<url>[^;]*);[\s]+Agent[\s]+Host:(?<shost>[^;]*);[\s]+Server:(?<dhost>[^\)]*)\)[\s]+$" }
				id => "message-000012"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "PASSCODE REUSE ATTACK detected"
					"[event][id]" => "000012"
					"[rsa][message][id1]" => "000012"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000013
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : PASSCODE REUSE ATTACK { detected, | detected } login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+PASSCODE[\s]+REUSE[\s]+ATTACK[\s]+([\s]*detected,[\s]+|[\s]*detected[\s]+)[\s]+login:<(?<username>[^>]*)>,[\s]+user[\s]+name:<(?<user_fullname>[^>]*)>,[\s]+token:<(?<sessionid>[^>]*)>,[\s]+Client:<(?<shost>[^>]*)>,[\s]+Server:<(?<dhost>[^>]*)>,[\s]+(?<fld4>.*)$" }
				id => "message-000013"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "PASSCODE REUSE ATTACK detected"
					"[event][id]" => "000013"
					"[rsa][message][id1]" => "000013"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000014
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : User not on agent host (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : User not on agent host (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000014"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "User not on agent host"
					"[event][id]" => "000014"
					"[rsa][message][id1]" => "000014"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000015
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : User not on agent host, login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : User not on agent host, login:<%{username}>, user name:<%{user_fullname}>, token:<%{sessionid}>, Client:<%{shost}>, Server:<%{dhost}>, %{fld4}" }
				id => "message-000015"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "User not on agent host"
					"[event][id]" => "000015"
					"[rsa][message][id1]" => "000015"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000016
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : <action> (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : %{action} (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000016"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000016"
					"[rsa][message][id1]" => "000016"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000017
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : <action>, login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : %{action}, login:<%{username}>, user name:<%{user_fullname}>, token:<%{sessionid}>, Client:<%{shost}>, Server:<%{dhost}>, %{fld4}" }
				id => "message-000017"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000017"
					"[rsa][message][id1]" => "000017"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000018
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : <action>. <info>.  <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : %{action}. %{info}.  %{result}" }
				id => "message-000018"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000018"
					"[rsa][message][id1]" => "000018"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000019
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : <action> (<info>). 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : %{action} (%{info})." }
				id => "message-000019"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000019"
					"[rsa][message][id1]" => "000019"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000020
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : <action> { from: | to: } <shost> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+(?<action>[^\s]*)[\s]+([\s]*from:[\s]+|[\s]*to:[\s]+)[\s]+(?<shost>[^\s]*)[\s]+$" }
				id => "message-000020"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection established"
					"[event][id]" => "000020"
					"[rsa][message][id1]" => "000020"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000021
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> OFFLINE AUTHENTICATION : <action>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} OFFLINE AUTHENTICATION : %{action}." }
				id => "message-000021"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000021"
					"[rsa][message][id1]" => "000021"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000022
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : Lock manager { client | server } { accepted connection from: | established connection to: } <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+LOCK[\s]+MANAGER[\s]+:[\s]+Lock[\s]+manager[\s]+([\s]*client[\s]+|[\s]*server[\s]+)[\s]+([\s]*accepted[\s]+connection[\s]+from:[\s]+|[\s]*established[\s]+connection[\s]+to:[\s]+)[\s]+(?<shost>.*)$" }
				id => "message-000022"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection established"
					"[event][id]" => "000022"
					"[rsa][message][id1]" => "000022"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000023
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : Lock manager server breaking connection with: <dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} LOCK MANAGER : Lock manager server breaking connection with: %{dhost}" }
				id => "message-000023"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection terminated"
					"[event][id]" => "000023"
					"[rsa][message][id1]" => "000023"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000024
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : Lock manager { client | server } closed connection to: <dhost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+LOCK[\s]+MANAGER[\s]+:[\s]+Lock[\s]+manager[\s]+([\s]*client[\s]+|[\s]*server[\s]+)[\s]+closed[\s]+connection[\s]+to:[\s]+(?<dhost>.*)$" }
				id => "message-000024"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection terminated"
					"[event][id]" => "000024"
					"[rsa][message][id1]" => "000024"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000025
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : An unknown or uninitialized lock manager (<saddr>) attempted to establish a connection
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} LOCK MANAGER : An unknown or uninitialized lock manager (%{saddr}) attempted to establish a connection" }
				id => "message-000025"
				add_field => {
				"event_description" => "unknown lock manager attempted to establish a connection"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000025"
					"[rsa][message][id1]" => "000025"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000026
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : <action>. Listening on port: <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} LOCK MANAGER : %{action}. Listening on port: %{network_port}" }
				id => "message-000026"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000026"
					"[rsa][message][id1]" => "000026"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000027
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : <action> (<hostip>) <info> [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : %{action} (%{hostip}) %{info} [%{filename}]" }
				id => "message-000027"
				add_field => {
					"[event][id]" => "000027"
					"[rsa][message][id1]" => "000027"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000028
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : %{action}." }
				id => "message-000028"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000028"
					"[rsa][message][id1]" => "000028"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000029
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESERVER <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESERVER %{action}." }
				id => "message-000029"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000029"
					"[rsa][message][id1]" => "000029"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000030
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> SYSTEM ERROR <action># = <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} SYSTEM ERROR %{action}# = %{info}" }
				id => "message-000030"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000030"
					"[rsa][message][id1]" => "000030"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001034
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] (<fld1>) LICENSE : <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\((?<fld1>[^\)]*)\)[\s]+LICENSE[\s]+:[\s]+(?<action>.*)$" }
				id => "message-001034"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001034"
					"[rsa][message][id1]" => "001034"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ACESERVER6.1_user" {
		# MESSAGE 000055
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> { ACESERVER : | ACESYNCHD : } SQL Message: <info>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+([\s]*ACESERVER[\s]+:[\s]+|[\s]*ACESYNCHD[\s]+:[\s]+)[\s]+SQL[\s]+Message:[\s]+(?<info>[^\.]*)\.$" }
				id => "message-000055"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "SQL Message"
					"[event][id]" => "000055"
					"[rsa][message][id1]" => "000055"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000048
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Cannot lock token: { Unable to lock token <sessionid>: Error: <info> | <result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+Cannot[\s]+lock[\s]+token:[\s]+([\s]*Unable[\s]+to[\s]+lock[\s]+token[\s]+(?<sessionid>[^:]*):[\s]+Error:[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<result>[^\s]*)[\s]+)$" }
				id => "message-000048"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Cannot lock token"
					"[event][id]" => "000048"
					"[rsa][message][id1]" => "000048"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000050
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : { Primary | Replica } Finished Reconciliation Pass  (<dhost>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+([\s]*Primary[\s]+|[\s]*Replica[\s]+)[\s]+Finished[\s]+Reconciliation[\s]+Pass[\s]+\((?<dhost>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+\[(?<filename>[^\]]*)\]$" }
				id => "message-000050"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Primary/Replica Finished Reconciliation Pass"
					"[event][id]" => "000050"
					"[rsa][message][id1]" => "000050"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000049
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Unable to transfer tokens from Replica  (<shost>)  <event_description> [<filename>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Unable to transfer tokens from Replica  (%{shost})  %{event_description} [%{filename}]" }
				id => "message-000049"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to transfer tokens from Replica"
					"[event][id]" => "000049"
					"[rsa][message][id1]" => "000049"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000051
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : { Primary | Replica } Breaking Connection  (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+([\s]*Primary[\s]+|[\s]*Replica[\s]+)[\s]+Breaking[\s]+Connection[\s]+\((?<hostip>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+\[(?<filename>[^\]]*)\]$" }
				id => "message-000051"
				add_field => {
				"event_description" => "Primary/Replica Breaking Connection"
					"[event][id]" => "000051"
					"[rsa][message][id1]" => "000051"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000052
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Primary { has connected to replica  Port <network_port> | Has Connected To Replica }  (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+Primary[\s]+([\s]*has[\s]+connected[\s]+to[\s]+replica[\s]+Port[\s]+(?<network_port>[^\s]*)[\s]+|[\s]*Has[\s]+Connected[\s]+To[\s]+Replica[\s]+)[\s]+\((?<hostip>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+\[(?<filename>[^\]]*)\]$" }
				id => "message-000052"
				add_field => {
				"event_description" => "Primary Has Connected To Replica"
					"[event][id]" => "000052"
					"[rsa][message][id1]" => "000052"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000053
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : { Primary | Replica } Shut Down Connection  (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+([\s]*Primary[\s]+|[\s]*Replica[\s]+)[\s]+Shut[\s]+Down[\s]+Connection[\s]+\((?<hostip>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+\[(?<filename>[^\]]*)\]$" }
				id => "message-000053"
				add_field => {
				"event_description" => "Primary/Replica Shut Down Connection "
					"[event][id]" => "000053"
					"[rsa][message][id1]" => "000053"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000054
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Cannot send token delta. <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Cannot send token delta. %{info}." }
				id => "message-000054"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Cannot send token delta"
					"[event][id]" => "000054"
					"[rsa][message][id1]" => "000054"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000056
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Database Inconsistency:  <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Database Inconsistency:  %{info}." }
				id => "message-000056"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Database Inconsistency"
					"[event][id]" => "000056"
					"[rsa][message][id1]" => "000056"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000057
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Error Processing Modified Token Records On { Primary | Replica } (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+Error[\s]+Processing[\s]+Modified[\s]+Token[\s]+Records[\s]+On[\s]+([\s]*Primary[\s]+|[\s]*Replica[\s]+)[\s]+\((?<hostip>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+\[(?<filename>[^\]]*)\]$" }
				id => "message-000057"
				add_field => {
				"event_description" => "Error Processing Modified Token Records On Primary/Replica"
					"[event][id]" => "000057"
					"[rsa][message][id1]" => "000057"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000058
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Error Creating Record <space> (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Error Creating Record %{space} (%{hostip})  %{event_description} [%{filename}]" }
				id => "message-000058"
				add_field => {
				"event_description" => "Error Creating Record "
					"[event][id]" => "000058"
					"[rsa][message][id1]" => "000058"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000059
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : { Primary | Replica } successfully bound to port <network_port> (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+([\s]*Primary[\s]+|[\s]*Replica[\s]+)[\s]+successfully[\s]+bound[\s]+to[\s]+port[\s]+(?<network_port>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+\[(?<filename>[^\]]*)\]$" }
				id => "message-000059"
				add_field => {
				"event_description" => "Replica successfully bound to port"
					"[event][id]" => "000059"
					"[rsa][message][id1]" => "000059"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001518
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Replica Correcting Clock by <info> (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Replica Correcting Clock by %{info} (%{hostip})  %{event_description} [%{filename}]" }
				id => "message-001518"
				add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Time"
				"ec_activity" => "Modify"
				"event_computer" => "%{hhostip}"
				"event_description" => "Replica correcting clock"
					"[event][id]" => "001518"
					"[rsa][message][id1]" => "001518"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000060
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Replica Finish 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Replica Finish" }
				id => "message-000060"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Replica Finish"
					"[event][id]" => "000060"
					"[rsa][message][id1]" => "000060"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000061
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Cannot Save SchedJob On Replica <network_port> (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Cannot Save SchedJob On Replica %{network_port} (%{hostip})  %{event_description} [%{filename}]" }
				id => "message-000061"
				add_field => {
				"event_description" => "Cannot Save SchedJob On Replica"
					"[event][id]" => "000061"
					"[rsa][message][id1]" => "000061"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000062
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Acesyncd { Primary | Replica } Started  (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+Acesyncd[\s]+([\s]*Primary[\s]+|[\s]*Replica[\s]+)[\s]+Started[\s]+\((?<hostip>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+\[(?<filename>[^\]]*)\]$" }
				id => "message-000062"
				add_field => {
				"event_description" => "Acesyncd Primary/Replica Started"
					"[event][id]" => "000062"
					"[rsa][message][id1]" => "000062"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000063
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Unable to transfer log entries from Replica  (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Unable to transfer log entries from Replica  (%{hostip})  %{event_description} [%{filename}]" }
				id => "message-000063"
				add_field => {
				"event_description" => "Unable to transfer log entries from Replica"
					"[event][id]" => "000063"
					"[rsa][message][id1]" => "000063"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000064
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Error Responding To Token Request <space> (<hostip>)  <event_description> [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Error Responding To Token Request %{space} (%{hostip})  %{event_description} [%{filename}]" }
				id => "message-000064"
				add_field => {
				"event_description" => "Error Responding To Token Request"
					"[event][id]" => "000064"
					"[rsa][message][id1]" => "000064"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002010
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Replica Already Exists On Replica  <group_object> (<hostip>)  CrossRealm <result>. [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Replica Already Exists On Replica  %{group_object} (%{hostip})  CrossRealm %{result}. [%{filename}]" }
				id => "message-002010"
				add_field => {
				"event_description" => "Replica Already Exists On Replica"
					"[event][id]" => "002010"
					"[rsa][message][id1]" => "002010"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002072
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Replica Expected Update for { User. | Replica. } <trigger_desc>. OK. <group_object> (<hostip>)  CrossRealm <result>. [<filename>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+ACESYNCHD[\s]+:[\s]+Replica[\s]+Expected[\s]+Update[\s]+for[\s]+([\s]*User\.[\s]+|[\s]*Replica\.[\s]+)[\s]+(?<trigger_desc>[^\.]*)\.[\s]+OK\.[\s]+(?<group_object>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)[\s]+CrossRealm[\s]+(?<result>[^\.]*)\.[\s]+\[(?<filename>[^\]]*)\]$" }
				id => "message-002072"
				add_field => {
				"event_description" => "Replica Expected Update for User or Replica"
					"[event][id]" => "002072"
					"[rsa][message][id1]" => "002072"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002427
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Cannot Update(Create) User On Replica <group_object> (<hostip>)  Progress Run-Time Error <resultcode>. [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Cannot Update(Create) User On Replica %{group_object} (%{hostip})  Progress Run-Time Error %{resultcode}. [%{filename}]" }
				id => "message-002427"
				add_field => {
				"event_description" => "Cannot Update(Create) User On Replica"
					"[event][id]" => "002427"
					"[rsa][message][id1]" => "002427"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002432
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Trigger: TRIGERROR: <application> Dependent SDGroupMember record exists. (<hostip>)  CrossRealm <result>. [<info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Trigger: TRIGERROR: %{application} Dependent SDGroupMember record exists. (%{hostip})  CrossRealm %{result}. [%{info}]" }
				id => "message-002432"
				add_field => {
				"event_description" => "TRIGERROR SDGroupMember record exists"
					"[event][id]" => "002432"
					"[rsa][message][id1]" => "002432"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002433
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : User Already Exists On Replica <group_object> (<hostip>)  CrossRealm <result>. [<info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : User Already Exists On Replica %{group_object} (%{hostip})  CrossRealm %{result}. [%{info}]" }
				id => "message-002433"
				add_field => {
				"event_description" => "User Already Exists On Replica"
					"[event][id]" => "002433"
					"[rsa][message][id1]" => "002433"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002073
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Cannot Exclusive Lock <group_object> (<hostip>)  Progress Run-Time Error <resultcode>. [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Cannot Exclusive Lock %{group_object} (%{hostip})  Progress Run-Time Error %{resultcode}. [%{filename}]" }
				id => "message-002073"
				add_field => {
				"event_description" => "Cannot Exclusive Lock"
					"[event][id]" => "002073"
					"[rsa][message][id1]" => "002073"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002074
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> ACESYNCHD : Error Reading Packet <space> (<hostip>)  <result>. [<filename>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} ACESYNCHD : Error Reading Packet %{space} (%{hostip})  %{result}. [%{filename}]" }
				id => "message-002074"
				add_field => {
				"event_description" => "Error Reading Packet"
					"[event][id]" => "002074"
					"[rsa][message][id1]" => "002074"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002424
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Remote SDUser record was created on Primary, <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : Remote SDUser record was created on Primary, %{result}." }
				id => "message-002424"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Remote SDUser record was created on Primary"
					"[event][id]" => "002424"
					"[rsa][message][id1]" => "002424"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002425
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : <disposition>. Updating Local user record. <fld2> (<hostip>)  CrossRealm <result>. [<filename>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : %{disposition}. Updating Local user record. %{fld2} (%{hostip})  CrossRealm %{result}. [%{filename}]." }
				id => "message-002425"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Updating Local user record"
					"[event][id]" => "002425"
					"[rsa][message][id1]" => "002425"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002426
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : { Enabled | Disabled } on Replica more recently then { Primary, | primary, } <result>. <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+([\s]*Enabled[\s]+|[\s]*Disabled[\s]+)[\s]+on[\s]+Replica[\s]+more[\s]+recently[\s]+then[\s]+([\s]*Primary,[\s]+|[\s]*primary,[\s]+)[\s]+(?<result>[^\.]*)\.[\s]+(?<info>.*)$" }
				id => "message-002426"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Enabled/Disabled on Replica more recently then Primary"
					"[event][id]" => "002426"
					"[rsa][message][id1]" => "002426"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000031
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Passcode accepted { ,<info> | <space> } (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+Passcode[\s]+accepted[\s]+([\s]*,(?<info>[^\s]*)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)[\s]+\(Login:'(?<username>[^']*)';[\s]+User[\s]+Name:'(?<user_fullname>[^']*)';[\s]+Token:(?<sessionid>[^;]*);[\s]+Group:(?<group>[^;]*);[\s]+Site:(?<url>[^;]*);[\s]+Agent[\s]+Host:(?<shost>[^;]*);[\s]+Server:(?<dhost>[^\)]*)\)[\s]+$" }
				id => "message-000031"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Passcode accepted"
					"[event][id]" => "000031"
					"[rsa][message][id1]" => "000031"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000032
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Passcode accepted login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : Passcode accepted login:<%{username}>, user name:<%{user_fullname}>, token:<%{sessionid}>, Client:<%{shost}>, Server:<%{dhost}>, %{fld4}" }
				id => "message-000032"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Passcode accepted"
					"[event][id]" => "000032"
					"[rsa][message][id1]" => "000032"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000033
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : PIN created by { user, | user } (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+PIN[\s]+created[\s]+by[\s]+([\s]*user,[\s]+|[\s]*user[\s]+)[\s]+\(Login:'(?<username>[^']*)';[\s]+User[\s]+Name:'(?<user_fullname>[^']*)';[\s]+Token:(?<sessionid>[^;]*);[\s]+Group:(?<group>[^;]*);[\s]+Site:(?<url>[^;]*);[\s]+Agent[\s]+Host:(?<shost>[^;]*);[\s]+Server:(?<dhost>[^\)]*)\)[\s]+$" }
				id => "message-000033"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Pin created by user"
					"[event][id]" => "000033"
					"[rsa][message][id1]" => "000033"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000034
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : PIN created by { user, | user } login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+PIN[\s]+created[\s]+by[\s]+([\s]*user,[\s]+|[\s]*user[\s]+)[\s]+login:<(?<username>[^>]*)>,[\s]+user[\s]+name:<(?<user_fullname>[^>]*)>,[\s]+token:<(?<sessionid>[^>]*)>,[\s]+Client:<(?<shost>[^>]*)>,[\s]+Server:<(?<dhost>[^>]*)>,[\s]+(?<fld4>.*)$" }
				id => "message-000034"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "pin created by user"
					"[event][id]" => "000034"
					"[rsa][message][id1]" => "000034"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000035
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : ACCESS DENIED, <result> (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : ACCESS DENIED, %{result} (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000035"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "ACCESS DENIED"
					"[event][id]" => "000035"
					"[rsa][message][id1]" => "000035"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000036
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Token disabled, <result> (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : Token disabled, %{result} (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000036"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Token disabled"
					"[event][id]" => "000036"
					"[rsa][message][id1]" => "000036"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000037
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : COLLISION, <result> (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : COLLISION, %{result} (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000037"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "COLLISION"
					"[event][id]" => "000037"
					"[rsa][message][id1]" => "000037"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000038
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : PASSCODE REUSE ATTACK { detected, | detected } (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+PASSCODE[\s]+REUSE[\s]+ATTACK[\s]+([\s]*detected,[\s]+|[\s]*detected[\s]+)[\s]+\(Login:'(?<username>[^']*)';[\s]+User[\s]+Name:'(?<user_fullname>[^']*)';[\s]+Token:(?<sessionid>[^;]*);[\s]+Group:(?<group>[^;]*);[\s]+Site:(?<url>[^;]*);[\s]+Agent[\s]+Host:(?<shost>[^;]*);[\s]+Server:(?<dhost>[^\)]*)\)[\s]+$" }
				id => "message-000038"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "PASSCODE REUSE ATTACK detected"
					"[event][id]" => "000038"
					"[rsa][message][id1]" => "000038"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000039
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : PASSCODE REUSE ATTACK { detected, | detected } login:<<<username>>, user name:<<<user_fullname>>, token:<<<sessionid>>, Client:<<<shost>>, Server:<<<dhost>>, <fld4>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+AUTHENTICATION[\s]+:[\s]+PASSCODE[\s]+REUSE[\s]+ATTACK[\s]+([\s]*detected,[\s]+|[\s]*detected[\s]+)[\s]+login:<(?<username>[^>]*)>,[\s]+user[\s]+name:<(?<user_fullname>[^>]*)>,[\s]+token:<(?<sessionid>[^>]*)>,[\s]+Client:<(?<shost>[^>]*)>,[\s]+Server:<(?<dhost>[^>]*)>,[\s]+(?<fld4>.*)$" }
				id => "message-000039"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "PASSCODE REUSE ATTACK detected"
					"[event][id]" => "000039"
					"[rsa][message][id1]" => "000039"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000040
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : User not on agent host (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : User not on agent host (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000040"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "User not on agent host"
					"[event][id]" => "000040"
					"[rsa][message][id1]" => "000040"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000041
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : New PIN received (Login:'<username>'; User Name:'<user_fullname>'; Token:<sessionid>; Group:<group>; Site:<url>; Agent Host:<shost>; Server:<dhost>)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : New PIN received (Login:'%{username}'; User Name:'%{user_fullname}'; Token:%{sessionid}; Group:%{group}; Site:%{url}; Agent Host:%{shost}; Server:%{dhost})" }
				id => "message-000041"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Receive"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "New PIN received"
					"[event][id]" => "000041"
					"[rsa][message][id1]" => "000041"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001143
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Most recent successful authentication occurred on a Replica Server. <info>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : Most recent successful authentication occurred on a Replica Server. %{info}." }
				id => "message-001143"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Most recent successful authentication occurred on a Replica Server"
					"[event][id]" => "001143"
					"[rsa][message][id1]" => "001143"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001145
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Failed authentication attempts occurred on separate Servers. <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : Failed authentication attempts occurred on separate Servers. %{info}." }
				id => "message-001145"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Failed authentication attempts occurred on separate Servers"
					"[event][id]" => "001145"
					"[rsa][message][id1]" => "001145"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001148
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Admin Server (<username>) and remote administrative client (Host: <shost>) have different patch version 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : Admin Server (%{username}) and remote administrative client (Host: %{shost}) have different patch version" }
				id => "message-001148"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Admin Server and remote administrative client have different patch version"
					"[event][id]" => "001148"
					"[rsa][message][id1]" => "001148"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001153
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : Most recent PIN setting was set on a Replica Server. <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : Most recent PIN setting was set on a Replica Server. %{info}." }
				id => "message-001153"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Most recent PIN setting was set on a Replica Server"
					"[event][id]" => "001153"
					"[rsa][message][id1]" => "001153"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000042
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> AUTHENTICATION : <action> (<info>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} AUTHENTICATION : %{action} (%{info})." }
				id => "message-000042"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000042"
					"[rsa][message][id1]" => "000042"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001147
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] (<fld1>) LICENSE : <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\((?<fld1>[^\)]*)\)[\s]+LICENSE[\s]+:[\s]+(?<action>.*)$" }
				id => "message-001147"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001147"
					"[rsa][message][id1]" => "001147"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000045
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : Lock manager { client | server } { accepted connection from: | established connection to: } <shost> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+LOCK[\s]+MANAGER[\s]+:[\s]+Lock[\s]+manager[\s]+([\s]*client[\s]+|[\s]*server[\s]+)[\s]+([\s]*accepted[\s]+connection[\s]+from:[\s]+|[\s]*established[\s]+connection[\s]+to:[\s]+)[\s]+(?<shost>[^\s]*)[\s]+$" }
				id => "message-000045"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection established"
					"[event][id]" => "000045"
					"[rsa][message][id1]" => "000045"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000046
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : Lock manager { client | server } closed connection to: <dhost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+LOCK[\s]+MANAGER[\s]+:[\s]+Lock[\s]+manager[\s]+([\s]*client[\s]+|[\s]*server[\s]+)[\s]+closed[\s]+connection[\s]+to:[\s]+(?<dhost>.*)$" }
				id => "message-000046"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection terminated"
					"[event][id]" => "000046"
					"[rsa][message][id1]" => "000046"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000047
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : <action> { with: | from: | to: } <shost> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+LOCK[\s]+MANAGER[\s]+:[\s]+(?<action>[^\s]*)[\s]+([\s]*with:[\s]+|[\s]*from:[\s]+|[\s]*to:[\s]+)[\s]+(?<shost>[^\s]*)[\s]+$" }
				id => "message-000047"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000047"
					"[rsa][message][id1]" => "000047"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001486
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> LOCK MANAGER : An unknown or uninitialized lock manager (<shost>) attempted to establish a connection 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} LOCK MANAGER : An unknown or uninitialized lock manager (%{shost}) attempted to establish a connection" }
				id => "message-001486"
				add_field => {
				"event_description" => "unknown lock manager attempted to establish a connection"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001486"
					"[rsa][message][id1]" => "001486"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000043
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] <fld1> OFFLINE AUTHENTICATION : <info> - Connection from <saddr> closed: Remote close 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} OFFLINE AUTHENTICATION : %{info} - Connection from %{saddr} closed: Remote close" }
				id => "message-000043"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection closed"
					"[event][id]" => "000043"
					"[rsa][message][id1]" => "000043"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000044
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1> OFFLINE AUTHENTICATION : <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1} OFFLINE AUTHENTICATION : %{action}." }
				id => "message-000044"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000044"
					"[rsa][message][id1]" => "000044"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "acsd_daemon" {
		# MESSAGE 000065
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] ACS(<fld1>) <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] ACS(%{fld1}) %{event_description}" }
				id => "message-000065"
				add_field => {
				"event_description" => "acsd daemon activity"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000065"
					"[rsa][message][id1]" => "000065"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000066
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Host name is <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Host name is %{hostname}" }
				id => "message-000066"
				add_field => {
				"event_description" => "acsd daemon activity"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000066"
					"[rsa][message][id1]" => "000066"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001989
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] starting acsd
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] starting acsd" }
				id => "message-001989"
				add_field => {
				"event_description" => "starting acsd"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001989"
					"[rsa][message][id1]" => "001989"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "adcheck_auth" {
		# MESSAGE 002494
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <process> Unable to load property file: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} %{process} Unable to load property file: %{filename}" }
				id => "message-002494"
				add_field => {
				"event_description" => "Unable to load property file"
					"[event][id]" => "002494"
					"[rsa][message][id1]" => "002494"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002493
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <process> Change Root of Data directory to <directory>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} %{process} Change Root of Data directory to %{directory}." }
				id => "message-002493"
				add_field => {
				"event_description" => "process changed Root of Data directory"
					"[event][id]" => "002493"
					"[rsa][message][id1]" => "002493"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId100
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>: <filename>
	else if [logstash][msgparser][id] == "msgParserId100" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^:]*):[\s]+(?<filename>.*)$" }
			id => "msgParserId100"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adclient_auth" {
		# MESSAGE 002509
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Lost connection to <dhost> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Lost connection to %{dhost} %{result}" }
				id => "message-002509"
				add_field => {
				"event_description" => "Lost connection to host"
					"[event][id]" => "002509"
					"[rsa][message][id1]" => "002509"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002510
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Reconnected to <dhost> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Reconnected to %{dhost} %{result}" }
				id => "message-002510"
				add_field => {
				"event_description" => "Reconnected to host"
					"[event][id]" => "002510"
					"[rsa][message][id1]" => "002510"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002508
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> User '<username>' { authenticated <result> | is authorized }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<category>[^\s]*)[\s]+<(?<service>[^>]*)>[\s]+(?<process>[^\s]*)[\s]+User[\s]+'(?<username>[^']*)'[\s]+([\s]*authenticated[\s]+(?<result>[^\s]*)[\s]+|[\s]*is[\s]+authorized[\s]+)$" }
				id => "message-002508"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "User authorized or authenticated"
					"[event][id]" => "002508"
					"[rsa][message][id1]" => "002508"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002507
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Can not get KDC for the domain '<domain>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Can not get KDC for the domain '%{domain}'" }
				id => "message-002507"
				add_field => {
				"event_description" => "Can not get KDC for domain"
					"[event][id]" => "002507"
					"[rsa][message][id1]" => "002507"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002506
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Could not open database <filename> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Could not open database %{filename} %{result}" }
				id => "message-002506"
				add_field => {
				"event_description" => "Could not open database"
					"[event][id]" => "002506"
					"[rsa][message][id1]" => "002506"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002505
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Failed to extend object for <dn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Failed to extend object for %{dn}" }
				id => "message-002505"
				add_field => {
				"event_description" => "Failed to extend object for user"
					"[event][id]" => "002505"
					"[rsa][message][id1]" => "002505"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002504
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Starting <application>. lrpc pipe='<sinterface>', lrpc2 pipe='<dinterface>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Starting %{application}. lrpc pipe='%{sinterface}', lrpc2 pipe='%{dinterface}'" }
				id => "message-002504"
				add_field => {
				"event_description" => "Starting client"
					"[event][id]" => "002504"
					"[rsa][message][id1]" => "002504"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002503
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Unable to load role assignment '<dn>' due to parse error: <result>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Unable to load role assignment '%{dn}' due to parse error: %{result}: %{info}" }
				id => "message-002503"
				add_field => {
				"event_description" => "Unable to load role assignment"
					"[event][id]" => "002503"
					"[rsa][message][id1]" => "002503"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002502
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> LDAP search <dn>:<info> threw unexpected exception: ldap search, no such object : <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} LDAP search %{dn}:%{info} threw unexpected exception: ldap search, no such object : %{result}" }
				id => "message-002502"
				add_field => {
				"event_description" => "LDAP search threw unexpected exception"
					"[event][id]" => "002502"
					"[rsa][message][id1]" => "002502"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002501
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Found multiple entries for <group>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Found multiple entries for %{group}, %{result}" }
				id => "message-002501"
				add_field => {
				"event_description" => "Found multiple entries for group"
					"[event][id]" => "002501"
					"[rsa][message][id1]" => "002501"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002500
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Cannot load policy for <username>: <info>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Cannot load policy for %{username}: %{info}: %{result}" }
				id => "message-002500"
				add_field => {
				"event_description" => "Cannot load policy"
					"[event][id]" => "002500"
					"[rsa][message][id1]" => "002500"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002499
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> <child_process> got exception '<info>' -- <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} %{child_process} got exception '%{info}' -- %{result}" }
				id => "message-002499"
				add_field => {
				"event_description" => "got exception"
					"[event][id]" => "002499"
					"[rsa][message][id1]" => "002499"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002498
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> computer password change failed: resetPassword: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} computer password change failed: resetPassword: %{result}" }
				id => "message-002498"
				add_field => {
				"event_description" => "computer password change failed"
					"[event][id]" => "002498"
					"[rsa][message][id1]" => "002498"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002497
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Can't use default machine password. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Can't use default machine password. %{info}" }
				id => "message-002497"
				add_field => {
				"event_description" => "Can't use default machine password"
					"[event][id]" => "002497"
					"[rsa][message][id1]" => "002497"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002496
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> Scheduled password change
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} Scheduled password change" }
				id => "message-002496"
				add_field => {
				"event_description" => "Scheduled password change"
					"[event][id]" => "002496"
					"[rsa][message][id1]" => "002496"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002495
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <<<service>> <process> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} <%{service}> %{process} %{event_description}" }
				id => "message-002495"
				add_field => {
					"[event][id]" => "002495"
					"[rsa][message][id1]" => "002495"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "adclient_user" {
		# MESSAGE 000067
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] WARN <fld1> Cannot load policy for <username>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] WARN %{fld1} Cannot load policy for %{username}: %{result}" }
				id => "message-000067"
				add_field => {
				"event_description" => "Cannot load policy"
					"[event][id]" => "000067"
					"[rsa][message][id1]" => "000067"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000068
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] WARN  <<<fld1>> <action> <result> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] WARN  <%{fld1}> %{action} %{result} %{info}" }
				id => "message-000068"
				add_field => {
					"[event][id]" => "000068"
					"[rsa][message][id1]" => "000068"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000069
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] INFO <space> <<main>  <service> <result>. <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] INFO %{space} <main>  %{service} %{result}. %{info}" }
				id => "message-000069"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Disconnecting"
					"[event][id]" => "000069"
					"[rsa][message][id1]" => "000069"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001000
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001000"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001000"
					"[rsa][message][id1]" => "001000"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId121
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] :<event_description>
	else if [logstash][msgparser][id] == "msgParserId121" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] :%{event_description}" }
			id => "msgParserId121"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId122
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] :<event_description>
	else if [logstash][msgparser][id] == "msgParserId122" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] :%{event_description}" }
			id => "msgParserId122"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId123
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <process> process authentication request failed: <service>: <result>
	else if [logstash][msgparser][id] == "msgParserId123" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} %{process} process authentication request failed: %{service}: %{result}" }
			id => "msgParserId123"
			add_field => {
				"event_description" => "process authentication request failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adjoin_auth" {
		# MESSAGE 002515
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <process> No pre-existing zone or schema info. <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{category} %{process} No pre-existing zone or schema info. %{result}." }
				id => "message-002515"
				add_field => {
				"event_description" => "No pre-existing zone or schema info"
					"[event][id]" => "002515"
					"[rsa][message][id1]" => "002515"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002516
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <category> <process> { Version: <version> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<category>[^\s]*)[\s]+(?<process>[^\s]*)[\s]+([\s]*Version:[\s]+(?<version>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002516"
				add_field => {
					"[event][id]" => "002516"
					"[rsa][message][id1]" => "002516"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId126
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: <obj_name> gateway appears to be already running (pid = <uid>)
	else if [logstash][msgparser][id] == "msgParserId126" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: %{obj_name} gateway appears to be already running (pid = %{uid})" }
			id => "msgParserId126"
			add_field => {
				"event_description" => "gateway appears to be already running"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId127
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>: <filename> errno = <resultcode>, <result>
	else if [logstash][msgparser][id] == "msgParserId127" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^:]*):[\s]+(?<filename>[^\s]*)[\s]+errno[\s]+=[\s]+(?<resultcode>[^,]*),[\s]+(?<result>.*)$" }
			id => "msgParserId127"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId128
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>: "<filename>" -> "<result>"
	else if [logstash][msgparser][id] == "msgParserId128" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^:]*):[\s]+\"(?<filename>[^\"]*)\"[\s]+\->[\s]+\"(?<result>[^\"]*)\"$" }
			id => "msgParserId128"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Alert_daemon" {
		# MESSAGE 002390
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <action>| <event_state>: <username>: Open Session : object = "<obj_type>" : value = "<obj_name>" : <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{action}| %{event_state}: %{username}: Open Session : object = \"%{obj_type}\" : value = \"%{obj_name}\" : %{result}" }
				id => "message-002390"
				add_field => {
				"event_description" => "Open session"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002390"
					"[rsa][message][id1]" => "002390"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002391
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <action>| <event_state>: <username>: Close Session : { object = "<obj_type>" : value = "<obj_name>" : | session ID = <sessionid> : } <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^\|]*)\|[\s]+(?<event_state>[^:]*):[\s]+(?<username>[^:]*):[\s]+Close[\s]+Session[\s]+:[\s]+([\s]*object[\s]+=[\s]+\"(?<obj_type>[^\"]*)\"[\s]+:[\s]+value[\s]+=[\s]+\"(?<obj_name>[^\"]*)\"[\s]+:[\s]+|[\s]*session[\s]+ID[\s]+=[\s]+(?<sessionid>[^\s]*)[\s]+:[\s]+)[\s]+(?<result>.*)$" }
				id => "message-002391"
				add_field => {
				"event_description" => "Close session"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002391"
					"[rsa][message][id1]" => "002391"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002392
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <action>|<event_state>: <username>: Activate Session : authentication type = <authmethod> : privilege level = <privilege> : initial outbound sequence number = <fld1> : challenge string = <info> : <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{action}|%{event_state}: %{username}: Activate Session : authentication type = %{authmethod} : privilege level = %{privilege} : initial outbound sequence number = %{fld1} : challenge string = %{info} : %{result}" }
				id => "message-002392"
				add_field => {
				"event_description" => "Activate session"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002392"
					"[rsa][message][id1]" => "002392"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002393
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <action>|<event_state>: <username>: Set Session Privilege Level: privilege level = <privilege> : <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{action}|%{event_state}: %{username}: Set Session Privilege Level: privilege level = %{privilege} : %{result}" }
				id => "message-002393"
				add_field => {
				"event_description" => "Set Session Privilege Level"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002393"
					"[rsa][message][id1]" => "002393"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId133
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>: { dberr: <resultcode> <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId133" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^:]*):[\s]+([\s]*dberr:[\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId133"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId134
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] MSGHDLR errno: <resultcode>, msg: <event_description>
	else if [logstash][msgparser][id] == "msgParserId134" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+MSGHDLR[\s]+errno:[\s]+(?<resultcode>[^,]*),[\s]+msg:[\s]+(?<event_description>.*)$" }
			id => "msgParserId134"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Message handler error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId135
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>' 
	else if [logstash][msgparser][id] == "msgParserId135" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
			id => "msgParserId135"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId136
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>
	else if [logstash][msgparser][id] == "msgParserId136" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>.*)$" }
			id => "msgParserId136"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId137
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] archive of life cycle tables <result>
	else if [logstash][msgparser][id] == "msgParserId137" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+archive[\s]+of[\s]+life[\s]+cycle[\s]+tables[\s]+(?<result>.*)$" }
			id => "msgParserId137"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId120
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId120" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId120"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId138
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>]  <event_description>
	else if [logstash][msgparser][id] == "msgParserId138" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId138"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "arserverd_user" {
		# MESSAGE 000070
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld1>: User is currently connected from another machine (<terminal>) : Client already connected - username:<username>, client-type:<fld3>, existing-IP:<change_old>, new-IP:<change_new> - <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld1}: User is currently connected from another machine (%{terminal}) : Client already connected - username:%{username}, client-type:%{fld3}, existing-IP:%{change_old}, new-IP:%{change_new} - %{info}" }
				id => "message-000070"
				add_field => {
				"event_computer" => "%{hhostip}"
				"result" => "Client already connected"
				"event_description" => "User is currently connected from another machine"
					"[event][id]" => "000070"
					"[rsa][message][id1]" => "000070"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001003
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description> (<fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description} (%{fld1})" }
				id => "message-001003"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001003"
					"[rsa][message][id1]" => "001003"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "asamrcvr_daemon" {
		# MESSAGE 001642
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <username>'s password has been reset
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{username}'s password has been reset" }
				id => "message-001642"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user password reset"
					"[event][id]" => "001642"
					"[rsa][message][id1]" => "001642"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001643
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001643"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001643"
					"[rsa][message][id1]" => "001643"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId142
	# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId142" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: %{event_description}" }
			id => "msgParserId142"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId23" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId23"
			add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId143
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <process>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId143" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<process>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId143"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId144
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
	else if [logstash][msgparser][id] == "msgParserId144" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
			id => "msgParserId144"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId145
	# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Status: <fld1> Mesg: Service search descriptor for service '<fld2>' contains filter, which can not be used for service '<info>'
	else if [logstash][msgparser][id] == "msgParserId145" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Status: %{fld1} Mesg: Service search descriptor for service '%{fld2}' contains filter, which can not be used for service '%{info}'" }
			id => "msgParserId145"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Invalid filter for service"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId146
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <saddr>
	else if [logstash][msgparser][id] == "msgParserId146" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<saddr>.*)$" }
			id => "msgParserId146"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "successful connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "automountd_daemon" {
		# MESSAGE 000071
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] parse_entry: <action>: map=<username> key=<protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] parse_entry: %{action}: map=%{username} key=%{protocol}" }
				id => "message-000071"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000071"
					"[rsa][message][id1]" => "000071"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000072
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000072"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000072"
					"[rsa][message][id1]" => "000072"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId149
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> user.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId149" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+user\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId149"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId150
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> [<fqdn>:<saddr>]
	else if [logstash][msgparser][id] == "msgParserId150" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+\[(?<fqdn>[^:]*):(?<saddr>[^\]]*)\]$" }
			id => "msgParserId150"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId151
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Tempdir <directory> already existed.<event_description>
	else if [logstash][msgparser][id] == "msgParserId151" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Tempdir[\s]+(?<directory>[^\s]*)[\s]+already[\s]+existed\.(?<event_description>.*)$" }
			id => "msgParserId151"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Tempdir already exists"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bbroker_local3" {
		# MESSAGE 001522
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001522"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001522"
					"[rsa][message][id1]" => "001522"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001523
		# line in RSA:  <agent> : [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} : [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001523"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001523"
					"[rsa][message][id1]" => "001523"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId154
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <terminal>, (<fqdn>), PWD: | PWD: } <info>, CMD: "<event_description> { " | <space> }
	else if [logstash][msgparser][id] == "msgParserId154" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<info>[^,]*),[\s]+CMD:[\s]+\"(?<event_description>[^\s]*)[\s]+([\s]*\"[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
			id => "msgParserId154"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId155
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <saddr>
	else if [logstash][msgparser][id] == "msgParserId155" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<saddr>.*)$" }
			id => "msgParserId155"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "biusage_local3" {
		# MESSAGE 001341
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001341"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001341"
					"[rsa][message][id1]" => "001341"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001342
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001342"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001342"
					"[rsa][message][id1]" => "001342"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId157
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <terminal>, (<fqdn>), PWD: | PWD: } <info>, CMD: "<event_description>"
	else if [logstash][msgparser][id] == "msgParserId157" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<info>[^,]*),[\s]+CMD:[\s]+\"(?<event_description>[^\"]*)\"$" }
			id => "msgParserId157"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "boe_cmsd_user" {
		# MESSAGE 000074
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] The password for user <username> (<fld1>) has expired 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] The password for user %{username} (%{fld1}) has expired" }
				id => "message-000074"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "password expired"
					"[event][id]" => "000074"
					"[rsa][message][id1]" => "000074"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000075
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> (<fld1>) failed to change password. Reason: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} (%{fld1}) failed to change password. Reason: %{result}" }
				id => "message-000075"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "change password"
					"[event][id]" => "000075"
					"[rsa][message][id1]" => "000075"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000076
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> (<fld1>) tried to change password 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} (%{fld1}) tried to change password" }
				id => "message-000076"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"event_computer" => "%{hhostip}"
				"event_description" => "change password"
					"[event][id]" => "000076"
					"[rsa][message][id1]" => "000076"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000077
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info>. Reason: <action>. Reason <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{info}. Reason: %{action}. Reason %{result}" }
				id => "message-000077"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Database access error"
					"[event][id]" => "000077"
					"[rsa][message][id1]" => "000077"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000078
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] The connection to the audit database has been broken, <info>. <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] The connection to the audit database has been broken, %{info}. %{result}" }
				id => "message-000078"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Database connection broken"
					"[event][id]" => "000078"
					"[rsa][message][id1]" => "000078"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000079
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Unable to contact server <dhost> to change its enabled status. <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Unable to contact server %{dhost} to change its enabled status. %{info}." }
				id => "message-000079"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to contact server"
					"[event][id]" => "000079"
					"[rsa][message][id1]" => "000079"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000080
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> user.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+user\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000080"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "user"
					"[event][id]" => "000080"
					"[rsa][message][id1]" => "000080"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "boks_sshd_auth" {
		# MESSAGE 000081
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Authentication refused: <info>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Authentication refused: %{info}: %{result}" }
				id => "message-000081"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication refused"
					"[event][id]" => "000081"
					"[rsa][message][id1]" => "000081"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000994
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Did not receive { identification | ident } string from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Did[\s]+not[\s]+receive[\s]+([\s]*identification[\s]+|[\s]*ident[\s]+)[\s]+string[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-000994"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "no identification string"
				"event_description" => "connection error"
					"[event][id]" => "000994"
					"[rsa][message][id1]" => "000994"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000979
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Received disconnect from <saddr>: <sport>: <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Received disconnect from %{saddr}: %{sport}: %{result}." }
				id => "message-000979"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Received disconnect"
					"[event][id]" => "000979"
					"[rsa][message][id1]" => "000979"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000973
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { Illegal | Invalid } user <username> from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Illegal[\s]+|[\s]*Invalid[\s]+)[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-000973"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "invalid user"
					"[event][id]" => "000973"
					"[rsa][message][id1]" => "000973"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000971
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed keyboard-{ interactive/boksauth | interactive/pam | interactive } for { illegal user <username> | <username> } from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Failed[\s]+keyboard\-([\s]*interactive/boksauth[\s]+|[\s]*interactive/pam[\s]+|[\s]*interactive[\s]+)[\s]+for[\s]+([\s]*illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000971"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "failed keyboard-interactive"
				"event_description" => "connection failure"
					"[event][id]" => "000971"
					"[rsa][message][id1]" => "000971"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000970
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted keyboard-{ interactive/boksauth | interactive/pam | interactive } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Accepted[\s]+keyboard\-([\s]*interactive/boksauth[\s]+|[\s]*interactive/pam[\s]+|[\s]*interactive[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000970"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user password accepted"
					"[event][id]" => "000970"
					"[rsa][message][id1]" => "000970"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001024
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] error: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+error:[\s]+(?<event_description>.*)$" }
				id => "message-001024"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "error"
					"[event][id]" => "001024"
					"[rsa][message][id1]" => "001024"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000878
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000878"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000878"
					"[rsa][message][id1]" => "000878"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "bonobo-activation-server_user" {
		# MESSAGE 001512
		# line in RSA:    <agent> (<username>): [ID <id> <event_source>.<severity>] invalid character '<fld1>' in iid '<info>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} (%{username}): [ID %{id} %{event_source}.%{severity}] invalid character '%{fld1}' in iid '%{info}'" }
				id => "message-001512"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "invalid character in iid"
					"[event][id]" => "001512"
					"[rsa][message][id1]" => "001512"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001392
		# line in RSA:     <agent>(<hostname>): [ID <id> <event_source>.<severity>] <process>:BrokenNoType: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{hostname}): [ID %{id} %{event_source}.%{severity}] %{process}:BrokenNoType: %{info}" }
				id => "message-001392"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "BrokenNoType"
					"[event][id]" => "001392"
					"[rsa][message][id1]" => "001392"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "bpbkar_user" {
		# MESSAGE 002376
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-002376"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "002376"
					"[rsa][message][id1]" => "002376"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002377
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
				id => "message-002377"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
					"[event][id]" => "002377"
					"[rsa][message][id1]" => "002377"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002340
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002340"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "002340"
					"[rsa][message][id1]" => "002340"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId172
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect from <fqdn>
	else if [logstash][msgparser][id] == "msgParserId172" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect from %{fqdn}" }
			id => "msgParserId172"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bpcd_daemon" {
		# MESSAGE 002349
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: <result>: gethostbyname(<shost>) failed 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+(?<result>[^:]*):[\s]+gethostbyname\((?<shost>[^\)]*)\)[\s]+failed[\s]+$" }
				id => "message-002349"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gethostbyname failed"
					"[event][id]" => "002349"
					"[rsa][message][id1]" => "002349"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002287
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] refused connect from <shost> (<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+refused[\s]+connect[\s]+from[\s]+(?<shost>[^\s]*)[\s]+\((?<result>[^\)]*)\)$" }
				id => "message-002287"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "002287"
					"[rsa][message][id1]" => "002287"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001029
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <fqdn>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<fqdn>.*)$" }
				id => "message-001029"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
					"[event][id]" => "001029"
					"[rsa][message][id1]" => "001029"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId176
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <shost> 
	else if [logstash][msgparser][id] == "msgParserId176" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<shost>[^\s]*)[\s]+$" }
			id => "msgParserId176"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bpcd_user" {
		# MESSAGE 000895
		# line in RSA:      { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Status: <fld1> Mesg: Session error <result>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Status:[\s]+(?<fld1>[^\s]*)[\s]+Mesg:[\s]+Session[\s]+error[\s]+(?<result>[^\.]*)\.$" }
				id => "message-000895"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "session error"
					"[event][id]" => "000895"
					"[rsa][message][id1]" => "000895"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002104
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-002104"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "002104"
					"[rsa][message][id1]" => "002104"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000893
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-000893"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000893"
					"[rsa][message][id1]" => "000893"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "bpjava-msvc_auth" {
		# MESSAGE 002264
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] pam_vas: Authentication <<succeeded> for <<<info>> user: <<<username>> account: <<<fqdn>> service: <<<service>> reason: <result> Access Control Identifier({NT Name | UPN }):<<<user_address>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+pam_vas:[\s]+Authentication[\s]+<succeeded>[\s]+for[\s]+<(?<info>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<fqdn>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+(?<result>[^\s]*)[\s]+Access[\s]+Control[\s]+Identifier\((NT[\s]+Name[\s]+|[\s]*UPN[\s]+)\):<(?<user_address>[^>]*)>$" }
				id => "message-002264"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Authentication succeeded for user"
					"[event][id]" => "002264"
					"[rsa][message][id1]" => "002264"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002265
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] pam_vas: Authentication <<failed> for <<<info>> user: <<<username>> account: <<<fqdn>> service: <<<service>> reason: <<<result>> Access Control Identifier({NT Name | UPN}):<<<user_address>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+pam_vas:[\s]+Authentication[\s]+<failed>[\s]+for[\s]+<(?<info>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<fqdn>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+<(?<result>[^>]*)>[\s]+Access[\s]+Control[\s]+Identifier\((NT[\s]+Name[\s]+|[\s]*UPN)\):<(?<user_address>[^>]*)>$" }
				id => "message-002265"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Authentication failed for user"
					"[event][id]" => "002265"
					"[rsa][message][id1]" => "002265"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId181
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { pam_dial_auth: <result>, <info>. | pam_unix_auth: <info> }
	else if [logstash][msgparser][id] == "msgParserId181" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*pam_dial_auth:[\s]+(?<result>[^,]*),[\s]+(?<info>[^\.]*)\.[\s]+|[\s]*pam_unix_auth:[\s]+(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId181"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authorization failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId175
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <fqdn>
	else if [logstash][msgparser][id] == "msgParserId175" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<fqdn>.*)$" }
			id => "msgParserId175"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bsd-gw_lpr" {
		# MESSAGE 000083
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <result>: Connection reset by peer
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{result}: Connection reset by peer" }
				id => "message-000083"
				add_field => {
				"event_description" => "Connection reset by peer"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000083"
					"[rsa][message][id1]" => "000083"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000084
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000084"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000084"
					"[rsa][message][id1]" => "000084"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId183
	# line in RSA:  <id> <event_source>.<severity>] <event_description>, <result>..
	else if [logstash][msgparser][id] == "msgParserId183" {
		dissect {
			mapping => { "message" => "%{id} %{event_source}.%{severity}] %{event_description}, %{result}.." }
			id => "msgParserId183"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId184
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Couldn't connect to host <hostname>
	else if [logstash][msgparser][id] == "msgParserId184" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Couldn't connect to host %{hostname}" }
			id => "msgParserId184"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cfservd_daemon" {
		# MESSAGE 000092
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>]  Denying repeated connection from ::<fld1>:<saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}]  Denying repeated connection from ::%{fld1}:%{saddr}" }
				id => "message-000092"
				add_field => {
				"event_description" => "Repeated denied connections"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000092"
					"[rsa][message][id1]" => "000092"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001346
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001346"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001346"
					"[rsa][message][id1]" => "001346"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId186
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>: OS check-access_99_I OK, can login to <shost> (<info>)
	else if [logstash][msgparser][id] == "msgParserId186" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^:]*):[\s]+OS[\s]+check\-access_99_I[\s]+OK,[\s]+can[\s]+login[\s]+to[\s]+(?<shost>[^\s]*)[\s]+\((?<info>[^\)]*)\)$" }
			id => "msgParserId186"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "OS check-access_99_I OK - can log in"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId187
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId187" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId187"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId188
	# line in RSA:    <id> <event_source>.<severity>] <agent>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId188" {
		dissect {
			mapping => { "message" => "%{id} %{event_source}.%{severity}] %{agent}: %{event_description}" }
			id => "msgParserId188"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId189
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <application> Event <obj_name> was successful with a status of <resultcode>
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{application} Event %{obj_name} was successful with a status of %{resultcode}" }
			id => "msgParserId189"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Event successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId190
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] WARNING: Command Not Supported
	else if [logstash][msgparser][id] == "msgParserId190" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] WARNING: Command Not Supported" }
			id => "msgParserId190"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Command Not Supported"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId191
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId191" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId191"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId192
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <interface>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId192" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<interface>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId192"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId193
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId193" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId193"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId194
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId194" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId194"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "generic activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cron_auth" {
		# MESSAGE 000094
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_login_limit(acct): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_login_limit(acct): %{result}" }
				id => "message-000094"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "pam_login_limit"
					"[event][id]" => "000094"
					"[rsa][message][id1]" => "000094"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000096
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_unix_cred: user=<username>, rhost=<dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_unix_cred: user=%{username}, rhost=%{dhost}" }
				id => "message-000096"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "pam_unix_cred"
					"[event][id]" => "000096"
					"[rsa][message][id1]" => "000096"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000101
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-000101"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000101"
					"[rsa][message][id1]" => "000101"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cron_user" {
		# MESSAGE 000095
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] open_module: <info>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] open_module: %{info}: %{result}" }
				id => "message-000095"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "open module"
					"[event][id]" => "000095"
					"[rsa][message][id1]" => "000095"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000958
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] roles <protocol>, service = <info> user = <username> ruser = <c_username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] roles %{protocol}, service = %{info} user = %{username} ruser = %{c_username}" }
				id => "message-000958"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000958"
					"[rsa][message][id1]" => "000958"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000097
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] WARN  pam Account management for user '<username>': <result>. <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] WARN  pam Account management for user '%{username}': %{result}. %{action}." }
				id => "message-000097"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000097"
					"[rsa][message][id1]" => "000097"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000098
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] user2netname: (<info>): <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] user2netname: (%{info}): %{action}" }
				id => "message-000098"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000098"
					"[rsa][message][id1]" => "000098"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000099
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_dhkeys: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_dhkeys: %{action}" }
				id => "message-000099"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000099"
					"[rsa][message][id1]" => "000099"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000100
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] yp_all - <action>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] yp_all - %{action}: %{info}" }
				id => "message-000100"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000100"
					"[rsa][message][id1]" => "000100"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001006
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001006"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001006"
					"[rsa][message][id1]" => "001006"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001129
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
				id => "message-001129"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
					"[event][id]" => "001129"
					"[rsa][message][id1]" => "001129"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001482
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] load_modules: can not open module <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] load_modules: can not open module %{info}" }
				id => "message-001482"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "can not open module"
					"[event][id]" => "001482"
					"[rsa][message][id1]" => "001482"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001475
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: %{result}" }
				id => "message-001475"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "cron error"
					"[event][id]" => "001475"
					"[rsa][message][id1]" => "001475"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId206
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId206" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId206"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId207
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application>: cannot open error file: <filename> [<result>]
	else if [logstash][msgparser][id] == "msgParserId207" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):[\s]+cannot[\s]+open[\s]+error[\s]+file:[\s]+(?<filename>[^\s]*)[\s]+\[(?<result>[^\]]*)\]$" }
			id => "msgParserId207"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "file open error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cvs_daemon" {
		# MESSAGE 000102
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] login refused for <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] login refused for %{info}" }
				id => "message-000102"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login refused"
					"[event][id]" => "000102"
					"[rsa][message][id1]" => "000102"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000103
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] login failure (for <info>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] login failure (for %{info})" }
				id => "message-000103"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
					"[event][id]" => "000103"
					"[rsa][message][id1]" => "000103"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000104
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000104"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000104"
					"[rsa][message][id1]" => "000104"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cvsd_daemon" {
		# MESSAGE 001480
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connection from <saddr> <sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connection from %{saddr} %{sport}" }
				id => "message-001480"
				add_field => {
				"ec_subject" => "NetworkComm"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "001480"
					"[rsa][message][id1]" => "001480"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001481
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001481"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "001481"
					"[rsa][message][id1]" => "001481"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dovecot_mail" {
		# MESSAGE 000105
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Logins with login process UID <fld5> (<username>) not permitted (<info>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Logins with login process UID %{fld5} (%{username}) not permitted (%{info})." }
				id => "message-000105"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login not permitted"
					"[event][id]" => "000105"
					"[rsa][message][id1]" => "000105"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000106
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000106"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000106"
					"[rsa][message][id1]" => "000106"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId213
	# line in RSA:    <agent>::<interface>(): [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId213" {
		dissect {
			mapping => { "message" => "%{agent}::%{interface}(): [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId213"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId214
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Memory Intermittent Single bit Error from SLOT#<dclass_counter1> (<info>)
	else if [logstash][msgparser][id] == "msgParserId214" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Memory[\s]+Intermittent[\s]+Single[\s]+bit[\s]+Error[\s]+from[\s]+SLOT#(?<dclass_counter1>[^\s]*)[\s]+\((?<info>[^\)]*)\)$" }
			id => "msgParserId214"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Memory Intermittent Single bit Error from SLOT"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId215
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> kern.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId215" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+kern\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId215"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "fsck_user" {
		# MESSAGE 001743
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001743"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001743"
					"[rsa][message][id1]" => "001743"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002058
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-002058"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002058"
					"[rsa][message][id1]" => "002058"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ftp-gw_daemon" {
		# MESSAGE 002232
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] permit host=<shost>/<saddr>  <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+permit[\s]+host=(?<shost>[^/]*)/(?<saddr>[^\s]*)[\s]+(?<action>.*)$" }
				id => "message-002232"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002232"
					"[rsa][message][id1]" => "002232"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002233
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] exit host=<shost>/<saddr>   <info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+exit[\s]+host=(?<shost>[^/]*)/(?<saddr>[^\s]*)[\s]+(?<info>[^\s]*)[\s]+$" }
				id => "message-002233"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "exit host stats"
					"[event][id]" => "002233"
					"[rsa][message][id1]" => "002233"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002234
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <saddr> host address lookup failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<saddr>[^\s]*)[\s]+host[\s]+address[\s]+lookup[\s]+failed$" }
				id => "message-002234"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "host address lookup failed"
					"[event][id]" => "002234"
					"[rsa][message][id1]" => "002234"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002345
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <action>: <result> | <action> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<action>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
				id => "message-002345"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002345"
					"[rsa][message][id1]" => "002345"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ftpd_daemon" {
		# MESSAGE 000107
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] FTPD: connection from <shost> at <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] FTPD: connection from %{shost} at %{fld1}" }
				id => "message-000107"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "000107"
					"[rsa][message][id1]" => "000107"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000108
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld1> User <username> logged in. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld1} User %{username} logged in." }
				id => "message-000108"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "000108"
					"[rsa][message][id1]" => "000108"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000109
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <username> (bogus) LOGIN FAILED [from <shost>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{username} (bogus) LOGIN FAILED [from %{shost}]" }
				id => "message-000109"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "login failed"
				"event_description" => "login"
					"[event][id]" => "000109"
					"[rsa][message][id1]" => "000109"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000110
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] failed login from <shost> [<saddr>], <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] failed login from %{shost} [%{saddr}], %{username}" }
				id => "message-000110"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "failed login"
					"[event][id]" => "000110"
					"[rsa][message][id1]" => "000110"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000111
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] failed login from <shost> [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] failed login from %{shost} [%{saddr}]" }
				id => "message-000111"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "failed login"
					"[event][id]" => "000111"
					"[rsa][message][id1]" => "000111"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000112
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] FTP LOGIN REFUSED (<result>) FROM <shost> [<saddr>], <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] FTP LOGIN REFUSED (%{result}) FROM %{shost} [%{saddr}], %{username}" }
				id => "message-000112"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "ftpd login refused"
					"[event][id]" => "000112"
					"[rsa][message][id1]" => "000112"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000113
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] FTP LOGIN REFUSED from <shost> [<saddr>], USER = <username>, RC = <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] FTP LOGIN REFUSED from %{shost} [%{saddr}], USER = %{username}, RC = %{info}" }
				id => "message-000113"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "FTP LOGIN REFUSED"
					"[event][id]" => "000113"
					"[rsa][message][id1]" => "000113"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000114
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] repeated login failures from <shost> [<saddr>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] repeated login failures from %{shost} [%{saddr}]" }
				id => "message-000114"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "repeated login failures"
					"[event][id]" => "000114"
					"[rsa][message][id1]" => "000114"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000115
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> timed out after <fld1> seconds at <fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} timed out after %{fld1} seconds at %{fld2}" }
				id => "message-000115"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "session timeout"
				"event_computer" => "%{hhostip}"
				"result" => "timeout"
					"[event][id]" => "000115"
					"[rsa][message][id1]" => "000115"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000116
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { Binary | ASCII } data connection for <filename> (<saddr>,<sport>) { (<bytes> bytes). | . } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Binary[\s]+|[\s]*ASCII[\s]+)[\s]+data[\s]+connection[\s]+for[\s]+(?<filename>[^\s]*)[\s]+\((?<saddr>[^,]*),(?<sport>[^\)]*)\)[\s]+([\s]*\((?<bytes>[^\s]*)[\s]+bytes\)\.[\s]+|[\s]*\.[\s]+)[\s]+$" }
				id => "message-000116"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "open ftp connection"
					"[event][id]" => "000116"
					"[rsa][message][id1]" => "000116"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000117
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] lost connection to <shost> [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] lost connection to %{shost} [%{saddr}]" }
				id => "message-000117"
				add_field => {
				"event_description" => "lost connection"
					"[event][id]" => "000117"
					"[rsa][message][id1]" => "000117"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000118
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connection from <shost>[<saddr>] <space> <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connection from %{shost}[%{saddr}] %{space} %{event_time_string}" }
				id => "message-000118"
				add_field => {
				"event_description" => "open ftp connection"
					"[event][id]" => "000118"
					"[rsa][message][id1]" => "000118"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000119
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] getpeername (<protocol>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] getpeername (%{protocol}): %{result}" }
				id => "message-000119"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "getpeername failure"
					"[event][id]" => "000119"
					"[rsa][message][id1]" => "000119"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000841
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] User <username> unknown.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+User[\s]+(?<username>[^\s]*)[\s]+unknown\.$" }
				id => "message-000841"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "failed login"
				"result" => "user unknown"
					"[event][id]" => "000841"
					"[rsa][message][id1]" => "000841"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000842
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1> Password required for <username>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+Password[\s]+required[\s]+for[\s]+(?<username>[^\.]*)\.$" }
				id => "message-000842"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "failed login"
				"result" => "password required"
					"[event][id]" => "000842"
					"[rsa][message][id1]" => "000842"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000843
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.debug] command: <action> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.debug\][\s]+command:[\s]+(?<action>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-000843"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
				"severity" => "debug"
					"[event][id]" => "000843"
					"[rsa][message][id1]" => "000843"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000844
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <c_username> FTP LOGIN FROM <shost> [<saddr>], <username> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<c_username>[^\s]*)[\s]+FTP[\s]+LOGIN[\s]+FROM[\s]+(?<shost>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\],[\s]+(?<username>[^\s]*)[\s]+$" }
				id => "message-000844"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "FTP LOGIN"
					"[event][id]" => "000844"
					"[rsa][message][id1]" => "000844"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000120
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.debug] <<--- <fld> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.debug\][\s]+<\-\-\-[\s]+(?<fld>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-000120"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
				"severity" => "debug"
					"[event][id]" => "000120"
					"[rsa][message][id1]" => "000120"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000854
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] FTP session closed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+FTP[\s]+session[\s]+closed$" }
				id => "message-000854"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000854"
					"[rsa][message][id1]" => "000854"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ftp-proxy_daemon" {
		# MESSAGE 001047
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] TECH-ERR <interface>: can't connect <daddr> for <saddr> (errno=<resultcode> [<result>])
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+TECH\-ERR[\s]+(?<interface>[^:]*):[\s]+can't[\s]+connect[\s]+(?<daddr>[^\s]*)[\s]+for[\s]+(?<saddr>[^\s]*)[\s]+\(errno=(?<resultcode>[^\s]*)[\s]+\[(?<result>[^\]]*)\]\)$" }
				id => "message-001047"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "can't connect"
					"[event][id]" => "001047"
					"[rsa][message][id1]" => "001047"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001172
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] TECH-ERR can't get num of bytes: Cli-Data 7=<saddr> (errno=<fld2> [<result>])
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+TECH\-ERR[\s]+can't[\s]+get[\s]+num[\s]+of[\s]+bytes:[\s]+Cli\-Data[\s]+7=(?<saddr>[^\s]*)[\s]+\(errno=(?<fld2>[^\s]*)[\s]+\[(?<result>[^\]]*)\]\)$" }
				id => "message-001172"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "can't get bytes"
					"[event][id]" => "001172"
					"[rsa][message][id1]" => "001172"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001451
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] TECH-ERR <action>: <interface>=<saddr> (errno=<resultcode> [<result>])
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+TECH\-ERR[\s]+(?<action>[^:]*):[\s]+(?<interface>[^=]*)=(?<saddr>[^\s]*)[\s]+\(errno=(?<resultcode>[^\s]*)[\s]+\[(?<result>[^\]]*)\]\)$" }
				id => "message-001451"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001451"
					"[rsa][message][id1]" => "001451"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001162
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] TECH-INF '<action>' { sent for | for } <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+TECH\-INF[\s]+'(?<action>[^']*)'[\s]+([\s]*sent[\s]+for[\s]+|[\s]*for[\s]+)[\s]+(?<saddr>.*)$" }
				id => "message-001162"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "001162"
					"[rsa][message][id1]" => "001162"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001171
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] TECH-FTL ftp-proxy (<fld3>): socket_flag: <fld1> (errno=<resultcode> [<result>])
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+TECH\-FTL[\s]+ftp\-proxy[\s]+\((?<fld3>[^\)]*)\):[\s]+socket_flag:[\s]+(?<fld1>[^\s]*)[\s]+\(errno=(?<resultcode>[^\s]*)[\s]+\[(?<result>[^\]]*)\]\)$" }
				id => "message-001171"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001171"
					"[rsa][message][id1]" => "001171"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001163
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] USER-INF '<action>' from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+USER\-INF[\s]+'(?<action>[^']*)'[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-001163"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001163"
					"[rsa][message][id1]" => "001163"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001164
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] USER-INF reading data for '<saddr>' from cfg-file
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+USER\-INF[\s]+reading[\s]+data[\s]+for[\s]+'(?<saddr>[^']*)'[\s]+from[\s]+cfg\-file$" }
				id => "message-001164"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "reading data"
					"[event][id]" => "001164"
					"[rsa][message][id1]" => "001164"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001165
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] USER-INF Transfer for <saddr> completed: <action> { read <rbytes>/<fld1> byte/sec | sent <sbytes>/<fld1> byte/sec }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+USER\-INF[\s]+Transfer[\s]+for[\s]+(?<saddr>[^\s]*)[\s]+completed:[\s]+(?<action>[^\s]*)[\s]+([\s]*read[\s]+(?<rbytes>[^/]*)/(?<fld1>[^\s]*)[\s]+byte/sec[\s]+|[\s]*sent[\s]+(?<sbytes>[^/]*)/(?<fld1>[^\s]*)[\s]+byte/sec[\s]+)$" }
				id => "message-001165"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "transfer complete"
					"[event][id]" => "001165"
					"[rsa][message][id1]" => "001165"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001166
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] USER-INF closing connect from <saddr> after <duration> secs - read <rbytes>/<fld1>, sent <sbytes>/<fld12> byte/sec
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+USER\-INF[\s]+closing[\s]+connect[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+after[\s]+(?<duration>[^\s]*)[\s]+secs[\s]+\-[\s]+read[\s]+(?<rbytes>[^/]*)/(?<fld1>[^,]*),[\s]+sent[\s]+(?<sbytes>[^/]*)/(?<fld12>[^\s]*)[\s]+byte/sec$" }
				id => "message-001166"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "closing connection"
					"[event][id]" => "001166"
					"[rsa][message][id1]" => "001166"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001167
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] USER-INF connect from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+USER\-INF[\s]+connect[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-001167"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "user connect"
					"[event][id]" => "001167"
					"[rsa][message][id1]" => "001167"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001168
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] USER-INF PASV set to <saddr>:<sport> for <fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+USER\-INF[\s]+PASV[\s]+set[\s]+to[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+for[\s]+(?<fld1>.*)$" }
				id => "message-001168"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "PASV set"
					"[event][id]" => "001168"
					"[rsa][message][id1]" => "001168"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001169
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] USER-INF '<username>' dest<daddr> from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+USER\-INF[\s]+'(?<username>[^']*)'[\s]+dest(?<daddr>[^\s]*)[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-001169"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "USER INF"
					"[event][id]" => "001169"
					"[rsa][message][id1]" => "001169"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001170
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] USER-WRN unknown '<username>' from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+USER\-WRN[\s]+unknown[\s]+'(?<username>[^']*)'[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-001170"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "user unknown"
					"[event][id]" => "001170"
					"[rsa][message][id1]" => "001170"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId252
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] SUND1: Cannot send some files; <result>
	else if [logstash][msgparser][id] == "msgParserId252" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+SUND1:[\s]+Cannot[\s]+send[\s]+some[\s]+files;[\s]+(?<result>.*)$" }
			id => "msgParserId252"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Cannot send some files"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId253
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] tid= <fld1>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId253" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] tid= %{fld1}: %{event_description}" }
			id => "msgParserId253"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "idmuser_local3" {
		# MESSAGE 001612
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001612"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001612"
					"[rsa][message][id1]" => "001612"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001613
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001613"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001613"
					"[rsa][message][id1]" => "001613"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId254
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <terminal>, (<saddr>), PWD: | PWD: } <directory>, CMD: "<info>"
	else if [logstash][msgparser][id] == "msgParserId254" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<saddr>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<directory>[^,]*),[\s]+CMD:[\s]+\"(?<info>[^\"]*)\"$" }
			id => "msgParserId254"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId255
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Login failed user=<username> { auth=<c_username> host=<shost> | host=<shost>[<saddr>] }
	else if [logstash][msgparser][id] == "msgParserId255" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Login[\s]+failed[\s]+user=(?<username>[^\s]*)[\s]+([\s]*auth=(?<c_username>[^\s]*)[\s]+host=(?<shost>[^\s]*)[\s]+|[\s]*host=(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\][\s]+)$" }
			id => "msgParserId255"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "login failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId256
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> user=<username> host=<fqdn> [<saddr>]
	else if [logstash][msgparser][id] == "msgParserId256" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+host=(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]$" }
			id => "msgParserId256"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId257
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>]  ERROR [<result>]: <info>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId257" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ERROR[\s]+\[(?<result>[^\]]*)\]:[\s]+(?<info>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId257"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId258
	# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>]  ERROR [<interface>]: Failed to load message directory <directory> Q:<info>
	else if [logstash][msgparser][id] == "msgParserId258" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}]  ERROR [%{interface}]: Failed to load message directory %{directory} Q:%{info}" }
			id => "msgParserId258"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Failed to load message directory for Q"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId259
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>]  ERROR <event_description>
	else if [logstash][msgparser][id] == "msgParserId259" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ERROR[\s]+(?<event_description>.*)$" }
			id => "msgParserId259"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId260
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] refused connect from <saddr> 
	else if [logstash][msgparser][id] == "msgParserId260" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] refused connect from %{saddr}" }
			id => "msgParserId260"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "in.ftpd_daemon" {
		# MESSAGE 000129
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connection from { <shost>[<saddr>] | <shost> } <space> <event_time_string>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connection[\s]+from[\s]+([\s]*(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\][\s]+|[\s]*(?<shost>[^\s]*)[\s]+)[\s]+(?<space>[^\s]*)[\s]+(?<event_time_string>.*)$" }
				id => "message-000129"
				add_field => {
					"[event][id]" => "000129"
					"[rsa][message][id1]" => "000129"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002490
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> timed out after <dclass_counter1> seconds <space> <event_time_string> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} timed out after %{dclass_counter1} seconds %{space} %{event_time_string}" }
				id => "message-002490"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "ftpd timeout"
				"result" => "timeout"
					"[event][id]" => "002490"
					"[rsa][message][id1]" => "002490"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000122
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] pam_authenticate: error Permission denied 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+pam_authenticate:[\s]+error[\s]+Permission[\s]+denied[\s]+$" }
				id => "message-000122"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Permission denied"
					"[event][id]" => "000122"
					"[rsa][message][id1]" => "000122"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000123
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Transfer aborted. Data connection closed. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Transfer[\s]+aborted\.[\s]+Data[\s]+connection[\s]+closed\.[\s]+$" }
				id => "message-000123"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "ftpd data connection closed"
				"result" => "Transfer aborted"
					"[event][id]" => "000123"
					"[rsa][message][id1]" => "000123"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000124
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Can't build data connection: Connection refused.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Can't build data connection: Connection refused." }
				id => "message-000124"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "ftpd data connection refused"
				"result" => "Can't build data connection"
					"[event][id]" => "000124"
					"[rsa][message][id1]" => "000124"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000125
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Timeout (<result>): <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Timeout (%{result}): %{info}" }
				id => "message-000125"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"event_description" => "session timeout"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000125"
					"[rsa][message][id1]" => "000125"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000126
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Password Expired. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Password Expired." }
				id => "message-000126"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Password Expired"
					"[event][id]" => "000126"
					"[rsa][message][id1]" => "000126"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000127
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] getpeername: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] getpeername: %{result}" }
				id => "message-000127"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "getpeername failure"
					"[event][id]" => "000127"
					"[rsa][message][id1]" => "000127"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000128
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <username> login ok,  <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{username} login ok,  %{protocol}" }
				id => "message-000128"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "login succeeded"
					"[event][id]" => "000128"
					"[rsa][message][id1]" => "000128"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000131
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] lost connection
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] lost connection" }
				id => "message-000131"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "ftpd lost connection"
					"[event][id]" => "000131"
					"[rsa][message][id1]" => "000131"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000845
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] User <username> unknown.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+User[\s]+(?<username>[^\s]*)[\s]+unknown\.$" }
				id => "message-000845"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "failed login"
				"result" => "user unknown"
				"event_source" => "daemon"
					"[event][id]" => "000845"
					"[rsa][message][id1]" => "000845"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000846
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <fld1> Password required for <username>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^\s]*)[\s]+Password[\s]+required[\s]+for[\s]+(?<username>[^\.]*)\.$" }
				id => "message-000846"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "failed login"
				"result" => "password required"
				"event_source" => "daemon"
					"[event][id]" => "000846"
					"[rsa][message][id1]" => "000846"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000847
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] command: USER <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+command:[\s]+USER[\s]+(?<username>.*)$" }
				id => "message-000847"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000847"
					"[rsa][message][id1]" => "000847"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000855
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] command: <action> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+command:[\s]+(?<action>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-000855"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000855"
					"[rsa][message][id1]" => "000855"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000848
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld1> User <username> logged in. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld1} User %{username} logged in." }
				id => "message-000848"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "000848"
					"[rsa][message][id1]" => "000848"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000132
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000132"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000132"
					"[rsa][message][id1]" => "000132"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "in.ftpd_auth" {
		# MESSAGE 000130
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_unix_auth: user <username> not found  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_unix_auth: user %{username} not found" }
				id => "message-000130"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
				"result" => "username not found"
					"[event][id]" => "000130"
					"[rsa][message][id1]" => "000130"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001428
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001428"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001428"
					"[rsa][message][id1]" => "001428"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "in.ftpd_mail" {
		# MESSAGE 000133
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: host name/address mismatch: <shost> != <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+host[\s]+name/address[\s]+mismatch:[\s]+(?<shost>[^\s]*)[\s]+!=[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-000133"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "host name/address mismatch"
					"[event][id]" => "000133"
					"[rsa][message][id1]" => "000133"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001191
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<shost>.*)$" }
				id => "message-001191"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
					"[event][id]" => "001191"
					"[rsa][message][id1]" => "001191"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "in.ftpd_user" {
		# MESSAGE 000134
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] INFO <space> pam authentication for user '<username>': succeeded 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+INFO[\s]+(?<space>[^\s]*)[\s]+pam[\s]+authentication[\s]+for[\s]+user[\s]+'(?<username>[^']*)':[\s]+succeeded[\s]+$" }
				id => "message-000134"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "pam_authenticate succeeded"
					"[event][id]" => "000134"
					"[rsa][message][id1]" => "000134"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001011
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <protocol>  <interface> process authentication request failed: <info>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<protocol>[^\s]*)[\s]+(?<interface>[^\s]*)[\s]+process[\s]+authentication[\s]+request[\s]+failed:[\s]+(?<info>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-001011"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "process authentication request failed"
					"[event][id]" => "001011"
					"[rsa][message][id1]" => "001011"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId280
	# line in RSA:  <agent>[<process_id>]: connect from <shost>
	else if [logstash][msgparser][id] == "msgParserId280" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: connect from %{shost}" }
			id => "msgParserId280"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "in.rexecd_daemon" {
		# MESSAGE 001109
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] refused { connection | connect } from <shost> (<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+refused[\s]+([\s]*connection[\s]+|[\s]*connect[\s]+)[\s]+from[\s]+(?<shost>[^\s]*)[\s]+\((?<result>[^\)]*)\)$" }
				id => "message-001109"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "001109"
					"[rsa][message][id1]" => "001109"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001450
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+(?<result>.*)$" }
				id => "message-001450"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "warning"
					"[event][id]" => "001450"
					"[rsa][message][id1]" => "001450"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001108
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { connection | connect } from <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*connection[\s]+|[\s]*connect[\s]+)[\s]+from[\s]+(?<shost>.*)$" }
				id => "message-001108"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "001108"
					"[rsa][message][id1]" => "001108"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId284
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] INFO  pam Denying user '<username>' access to next module 
	else if [logstash][msgparser][id] == "msgParserId284" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+INFO[\s]+pam[\s]+Denying[\s]+user[\s]+'(?<username>[^']*)'[\s]+access[\s]+to[\s]+next[\s]+module[\s]+$" }
			id => "msgParserId284"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "Permission denied"
				"event_description" => "pam Denying user access"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId285
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect from <shost> 
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect from %{shost}" }
			id => "msgParserId285"
			add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "in.rlogind_daemon" {
		# MESSAGE 000137
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] refused connect from <shost> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] refused connect from %{shost} (%{result})" }
				id => "message-000137"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "000137"
					"[rsa][message][id1]" => "000137"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001104
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { connection | connect } from <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*connection[\s]+|[\s]*connect[\s]+)[\s]+from[\s]+(?<shost>.*)$" }
				id => "message-001104"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "001104"
					"[rsa][message][id1]" => "001104"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId287
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { connection | connect } from <shost>
	else if [logstash][msgparser][id] == "msgParserId287" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*connection[\s]+|[\s]*connect[\s]+)[\s]+from[\s]+(?<shost>.*)$" }
			id => "msgParserId287"
			add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "in.stlisten_daemon" {
		# MESSAGE 001453
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<shost>.*)$" }
				id => "message-001453"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
					"[event][id]" => "001453"
					"[rsa][message][id1]" => "001453"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001499
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] refused connect from <shost> (<result>) 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+refused[\s]+connect[\s]+from[\s]+(?<shost>[^\s]*)[\s]+\((?<result>[^\)]*)\)[\s]+$" }
				id => "message-001499"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "001499"
					"[rsa][message][id1]" => "001499"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "in.telnetd_daemon" {
		# MESSAGE 002517
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] refused connect from <shost> (<result>) 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+refused[\s]+connect[\s]+from[\s]+(?<shost>[^\s]*)[\s]+\((?<result>[^\)]*)\)[\s]+$" }
				id => "message-002517"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "002517"
					"[rsa][message][id1]" => "002517"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002518
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: host name/address mismatch: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+host[\s]+name/address[\s]+mismatch:[\s]+(?<result>.*)$" }
				id => "message-002518"
				add_field => {
				"event_description" => "host name/address mismatch"
					"[event][id]" => "002518"
					"[rsa][message][id1]" => "002518"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002519
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: can't verify hostname: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+can't[\s]+verify[\s]+hostname:[\s]+(?<result>.*)$" }
				id => "message-002519"
				add_field => {
				"event_description" => "can't verify hostname"
					"[event][id]" => "002519"
					"[rsa][message][id1]" => "002519"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001136
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { connection | connect } from <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*connection[\s]+|[\s]*connect[\s]+)[\s]+from[\s]+(?<shost>.*)$" }
				id => "message-001136"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "001136"
					"[rsa][message][id1]" => "001136"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "in.telnetd_mail" {
		# MESSAGE 001501
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect from <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect from %{shost}" }
				id => "message-001501"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
					"[event][id]" => "001501"
					"[rsa][message][id1]" => "001501"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000138
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] refused connect from <shost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] refused connect from %{shost}" }
				id => "message-000138"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "000138"
					"[rsa][message][id1]" => "000138"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000139
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: %{event_description}" }
				id => "message-000139"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "i.telnetd warning"
					"[event][id]" => "000139"
					"[rsa][message][id1]" => "000139"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId295
	# line in RSA:    <agent>[<process_id>]: { connection | connect } from <saddr> 
	else if [logstash][msgparser][id] == "msgParserId295" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+([\s]*connection[\s]+|[\s]*connect[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
			id => "msgParserId295"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId296
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>]  <event_description>
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}]  %{event_description}" }
			id => "msgParserId296"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId297
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect from <saddr>
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect from %{saddr}" }
			id => "msgParserId297"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId298
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect from <shost> 
	else if [logstash][msgparser][id] == "msgParserId298" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect from %{shost}" }
			id => "msgParserId298"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId299
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { connection | connect } from <saddr>
	else if [logstash][msgparser][id] == "msgParserId299" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*connection[\s]+|[\s]*connect[\s]+)[\s]+from[\s]+(?<saddr>.*)$" }
			id => "msgParserId299"
			add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId300
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: can't verify hostname:<hostname> failed
	else if [logstash][msgparser][id] == "msgParserId300" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+can't[\s]+verify[\s]+hostname:(?<hostname>[^\s]*)[\s]+failed$" }
			id => "msgParserId300"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId286
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] refused connect from <shost> (<result>)
	else if [logstash][msgparser][id] == "msgParserId286" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] refused connect from %{shost} (%{result})" }
			id => "msgParserId286"
			add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId301
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect from <shost>
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect from %{shost}" }
			id => "msgParserId301"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId302
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Cannot get Password entry for user { '<username>' | <username> }
	else if [logstash][msgparser][id] == "msgParserId302" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Cannot[\s]+get[\s]+Password[\s]+entry[\s]+for[\s]+user[\s]+([\s]*'(?<username>[^']*)'[\s]+|[\s]*(?<username>[^\s]*)[\s]+)$" }
			id => "msgParserId302"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Failed logon"
				"result" => "Cannot get Password entry for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "inetd_daemon" {
		# MESSAGE 000141
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: <result>: Connection reset by peer
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: %{result}: Connection reset by peer" }
				id => "message-000141"
				add_field => {
				"event_description" => "Connection reset by peer"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000141"
					"[rsa][message][id1]" => "000141"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000142
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <network_service>[<child_pid>] from <saddr> <sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{network_service}[%{child_pid}] from %{saddr} %{sport}" }
				id => "message-000142"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000142"
					"[rsa][message][id1]" => "000142"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000143
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000143"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000143"
					"[rsa][message][id1]" => "000143"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId305
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Valid message, user=<username>
	else if [logstash][msgparser][id] == "msgParserId305" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Valid[\s]+message,[\s]+user=(?<username>.*)$" }
			id => "msgParserId305"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId306
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Logout user=<username> host=<fqdn>[<saddr>]
	else if [logstash][msgparser][id] == "msgParserId306" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Logout[\s]+user=(?<username>[^\s]*)[\s]+host=(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\]$" }
			id => "msgParserId306"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logout"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId307
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Login failed user=<username> { auth=<c_username> host=<fqdn> | host=<fqdn>[<saddr>] }
	else if [logstash][msgparser][id] == "msgParserId307" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Login[\s]+failed[\s]+user=(?<username>[^\s]*)[\s]+([\s]*auth=(?<c_username>[^\s]*)[\s]+host=(?<fqdn>[^\s]*)[\s]+|[\s]*host=(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\][\s]+)$" }
			id => "msgParserId307"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ipop3d_local4" {
		# MESSAGE 001733
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Login user=<username> host=<fqdn>[<saddr>] nmsgs=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Login[\s]+user=(?<username>[^\s]*)[\s]+host=(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\][\s]+nmsgs=(?<info>.*)$" }
				id => "message-001733"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Login"
					"[event][id]" => "001733"
					"[rsa][message][id1]" => "001733"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001734
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Logout user=<username> host=<fqdn>[<saddr>] nmsgs=<info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Logout[\s]+user=(?<username>[^\s]*)[\s]+host=(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\][\s]+nmsgs=(?<info>.*)$" }
				id => "message-001734"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logout"
					"[event][id]" => "001734"
					"[rsa][message][id1]" => "001734"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001735
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> user=<username> host=<fqdn> [<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+host=(?<fqdn>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]$" }
				id => "message-001735"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001735"
					"[rsa][message][id1]" => "001735"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId310
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Login failed user=<username> auth=<fld1> host=<fqdn>[<saddr>] 
	else if [logstash][msgparser][id] == "msgParserId310" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Login failed user=%{username} auth=%{fld1} host=%{fqdn}[%{saddr}]" }
			id => "msgParserId310"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ipopd_mail" {
		# MESSAGE 001729
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Logout user=<username> host=<fqdn>[<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Logout[\s]+user=(?<username>[^\s]*)[\s]+host=(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\]$" }
				id => "message-001729"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logout"
					"[event][id]" => "001729"
					"[rsa][message][id1]" => "001729"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001730
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> user=<username> host=<fqdn>[<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+user=(?<username>[^\s]*)[\s]+host=(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\]$" }
				id => "message-001730"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001730"
					"[rsa][message][id1]" => "001730"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId312
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: <fld1>
	else if [logstash][msgparser][id] == "msgParserId312" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+(?<fld1>.*)$" }
			id => "msgParserId312"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId313
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> errno:<resultcode> 
	else if [logstash][msgparser][id] == "msgParserId313" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+errno:(?<resultcode>[^\s]*)[\s]+$" }
			id => "msgParserId313"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId314
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Command[<info>] : <event_description>
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Command[%{info}] : %{event_description}" }
			id => "msgParserId314"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId315
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] > <username> <terminal> <hostname>  { <event_time_string> still logged in | <event_time_string> }
	else if [logstash][msgparser][id] == "msgParserId315" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+>[\s]+(?<username>[^\s]*)[\s]+(?<terminal>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+([\s]*(?<event_time_string>[^\s]*)[\s]+still[\s]+logged[\s]+in[\s]+|[\s]*(?<event_time_string>[^\s]*)[\s]+)$" }
			id => "msgParserId315"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "user still logged in"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "LAST10_auth" {
		# MESSAGE 000869
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] master begins <event_time_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] master begins %{event_time_string}" }
				id => "message-000869"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Master beginning"
					"[event][id]" => "000869"
					"[rsa][message][id1]" => "000869"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000849
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] > <username> <terminal> <hostname>  { <event_time_string> still logged in | <event_time_string> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+>[\s]+(?<username>[^\s]*)[\s]+(?<terminal>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+([\s]*(?<event_time_string>[^\s]*)[\s]+still[\s]+logged[\s]+in[\s]+|[\s]*(?<event_time_string>[^\s]*)[\s]+)$" }
				id => "message-000849"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "user logged in"
					"[event][id]" => "000849"
					"[rsa][message][id1]" => "000849"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000870
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <username> <terminal> <hostname> { <event_time_string> still logged in | <event_time_string> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^\s]*)[\s]+(?<terminal>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+([\s]*(?<event_time_string>[^\s]*)[\s]+still[\s]+logged[\s]+in[\s]+|[\s]*(?<event_time_string>[^\s]*)[\s]+)$" }
				id => "message-000870"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "user still logged in"
					"[event][id]" => "000870"
					"[rsa][message][id1]" => "000870"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId319
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] agent <service> registered
	else if [logstash][msgparser][id] == "msgParserId319" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] agent %{service} registered" }
			id => "msgParserId319"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "agent registered"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "limdaemon_user" {
		# MESSAGE 000145
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] login by <username> (pid=<process_id>, <fld1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] login by %{username} (pid=%{process_id}, %{fld1})" }
				id => "message-000145"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "000145"
					"[rsa][message][id1]" => "000145"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000146
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] login by <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] login by %{username}" }
				id => "message-000146"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "000146"
					"[rsa][message][id1]" => "000146"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000147
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logout by <username> (pid=<process_id>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logout by %{username} (pid=%{process_id})" }
				id => "message-000147"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logout"
					"[event][id]" => "000147"
					"[rsa][message][id1]" => "000147"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000148
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] logout by <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logout by %{username}" }
				id => "message-000148"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logout"
					"[event][id]" => "000148"
					"[rsa][message][id1]" => "000148"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000149
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] update user <username>, sgroup = <group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] update user %{username}, sgroup = %{group}" }
				id => "message-000149"
				add_field => {
				"ec_theme" => "Configuration"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "update user"
					"[event][id]" => "000149"
					"[rsa][message][id1]" => "000149"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000151
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000151"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000151"
					"[rsa][message][id1]" => "000151"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId325
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] Message from pid <id1>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId325" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Message from pid %{id1}, %{event_description}" }
			id => "msgParserId325"
			add_field => {
				"event_description" => "limdaemon message"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId326
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId326" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId326"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId327
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <daddr> ( from <saddr>)
	else if [logstash][msgparser][id] == "msgParserId327" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{daddr} ( from %{saddr})" }
			id => "msgParserId327"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId328
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <network_port>, (<interface>), PWD: | PWD: } <directory>, CMD: "<info>"
	else if [logstash][msgparser][id] == "msgParserId328" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<network_port>[^,]*),[\s]+\((?<interface>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<directory>[^,]*),[\s]+CMD:[\s]+\"(?<info>[^\"]*)\"$" }
			id => "msgParserId328"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "login_auth" {
		# MESSAGE 000152
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] REPEATED LOGIN FAILURES ON <terminal> FROM <node>, <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] REPEATED LOGIN FAILURES ON %{terminal} FROM %{node}, %{username}" }
				id => "message-000152"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "REPEATED LOGIN FAILURES"
					"[event][id]" => "000152"
					"[rsa][message][id1]" => "000152"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000153
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] REPEATED LOGIN FAILURES ON <terminal>, <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] REPEATED LOGIN FAILURES ON %{terminal}, %{username}" }
				id => "message-000153"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "REPEATED LOGIN FAILURES"
					"[event][id]" => "000153"
					"[rsa][message][id1]" => "000153"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000154
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] REPEATED LOGIN FAILURES ON <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] REPEATED LOGIN FAILURES ON %{terminal}" }
				id => "message-000154"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "REPEATED LOGIN FAILURES"
					"[event][id]" => "000154"
					"[rsa][message][id1]" => "000154"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001986
		# line in RSA:  { <agent>[<data>]: | <agent>: } [ID <id> <facilityname>.<severity>] Login failure on <terminal> from <node>,<username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<facilityname>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Login[\s]+failure[\s]+on[\s]+(?<terminal>[^\s]*)[\s]+from[\s]+(?<node>[^,]*),(?<username>.*)$" }
				id => "message-001986"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
					"[event][id]" => "001986"
					"[rsa][message][id1]" => "001986"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000156
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Login failure on <terminal> from <node>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Login[\s]+failure[\s]+on[\s]+(?<terminal>[^\s]*)[\s]+from[\s]+(?<node>.*)$" }
				id => "message-000156"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
					"[event][id]" => "000156"
					"[rsa][message][id1]" => "000156"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000157
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Login failure on <terminal> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Login[\s]+failure[\s]+on[\s]+(?<terminal>[^\s]*)[\s]+$" }
				id => "message-000157"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
					"[event][id]" => "000157"
					"[rsa][message][id1]" => "000157"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000158
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] pam_unix_auth: user <username> not found  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] pam_unix_auth: user %{username} not found" }
				id => "message-000158"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
				"result" => "username not found"
					"[event][id]" => "000158"
					"[rsa][message][id1]" => "000158"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000159
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] login account failure: Permission denied
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] login account failure: Permission denied" }
				id => "message-000159"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
				"result" => "Permission denied"
					"[event][id]" => "000159"
					"[rsa][message][id1]" => "000159"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000160
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] change password failure: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] change password failure: %{result}" }
				id => "message-000160"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "change password failure"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000160"
					"[rsa][message][id1]" => "000160"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000161
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] pam_authenticate: error No account present for user 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] pam_authenticate: error No account present for user" }
				id => "message-000161"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "no account for user"
				"event_description" => "pam_authenticate"
					"[event][id]" => "000161"
					"[rsa][message][id1]" => "000161"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000162
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Unknown publickey nameservice '<info>' 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Unknown[\s]+publickey[\s]+nameservice[\s]+'(?<info>[^']*)'[\s]+$" }
				id => "message-000162"
				add_field => {
				"event_description" => "unknown publickey"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000162"
					"[rsa][message][id1]" => "000162"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000163
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <username> LOGIN <terminal> FROM <node>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{username} LOGIN %{terminal} FROM %{node}" }
				id => "message-000163"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user login"
					"[event][id]" => "000163"
					"[rsa][message][id1]" => "000163"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000164
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <username> LOGIN <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{username} LOGIN %{terminal}" }
				id => "message-000164"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "000164"
					"[rsa][message][id1]" => "000164"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000165
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-000165"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000165"
					"[rsa][message][id1]" => "000165"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId342
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] User:<username> Time:<fld1> Connection: <info> tty: <interface> 
	else if [logstash][msgparser][id] == "msgParserId342" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] User:%{username} Time:%{fld1} Connection: %{info} tty: %{interface}" }
			id => "msgParserId342"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "login_user" {
		# MESSAGE 000155
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Login failure on <terminal> { from <node>, <username> | from <node> | ,<username> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Login[\s]+failure[\s]+on[\s]+(?<terminal>[^\s]*)[\s]+([\s]*from[\s]+(?<node>[^,]*),[\s]+(?<username>[^\s]*)[\s]+|[\s]*from[\s]+(?<node>[^\s]*)[\s]+|[\s]*,(?<username>[^\s]*)[\s]+)$" }
				id => "message-000155"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Login failure"
					"[event][id]" => "000155"
					"[rsa][message][id1]" => "000155"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000918
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-000918"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000918"
					"[rsa][message][id1]" => "000918"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "login" {
		# MESSAGE 000166
		# line in RSA:  <agent>: <process>: error Authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: %{process}: error Authentication failed" }
				id => "message-000166"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication failure"
					"[event][id]" => "000166"
					"[rsa][message][id1]" => "000166"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000167
		# line in RSA:  <agent>: ROOT LOGIN <terminal> FROM <shost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ROOT LOGIN %{terminal} FROM %{shost}" }
				id => "message-000167"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful root login"
					"[event][id]" => "000167"
					"[rsa][message][id1]" => "000167"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000168
		# line in RSA:   <agent>: ROOT LOGIN <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: ROOT LOGIN %{terminal}" }
				id => "message-000168"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful root login"
				"username" => "root"
					"[event][id]" => "000168"
					"[rsa][message][id1]" => "000168"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000169
		# line in RSA:  <agent>[<process_id>]: login from <saddr> as <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: login from %{saddr} as %{username}" }
				id => "message-000169"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful user login"
					"[event][id]" => "000169"
					"[rsa][message][id1]" => "000169"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "loginlog_auth" {
		# MESSAGE 001661
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Login: <username>(<id1>) <terminal> <saddr> <fld1>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Login: %{username}(%{id1}) %{terminal} %{saddr} %{fld1}" }
				id => "message-001661"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful user login"
					"[event][id]" => "001661"
					"[rsa][message][id1]" => "001661"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001662
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] Logout: <username>(<process_id>) <terminal> <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Logout: %{username}(%{process_id}) %{terminal} %{fld1}" }
				id => "message-001662"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logout"
					"[event][id]" => "001662"
					"[rsa][message][id1]" => "001662"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001904
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Caught SIGHUP, restarting...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Caught SIGHUP, restarting..." }
				id => "message-001904"
				add_field => {
					"[event][id]" => "001904"
					"[rsa][message][id1]" => "001904"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "logins_user" {
		# MESSAGE 001127
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
				id => "message-001127"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
					"[event][id]" => "001127"
					"[rsa][message][id1]" => "001127"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001978
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: { <action>: <result> | <action> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<action>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
				id => "message-001978"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001978"
					"[rsa][message][id1]" => "001978"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId352
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] User:<username> Time:<protocol> Connection: <info> tty: <interface> 
	else if [logstash][msgparser][id] == "msgParserId352" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] User:%{username} Time:%{protocol} Connection: %{info} tty: %{interface}" }
			id => "msgParserId352"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logout"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId353
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { [logtime] <event_description> | <action>. ERROR <resultcode> }
	else if [logstash][msgparser][id] == "msgParserId353" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*\[logtime\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<action>[^\.]*)\.[\s]+ERROR[\s]+(?<resultcode>[^\s]*)[\s]+)$" }
			id => "msgParserId353"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ls_user" {
		# MESSAGE 002471
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application>: cannot open error file: <filename> [<result>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):[\s]+cannot[\s]+open[\s]+error[\s]+file:[\s]+(?<filename>[^\s]*)[\s]+\[(?<result>[^\]]*)\]$" }
				id => "message-002471"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "file open error"
					"[event][id]" => "002471"
					"[rsa][message][id1]" => "002471"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001740
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001740"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001740"
					"[rsa][message][id1]" => "001740"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001776
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: <event_description> (<hostip>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)$" }
				id => "message-001776"
				add_field => {
					"[event][id]" => "001776"
					"[rsa][message][id1]" => "001776"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId354
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <event_description>: <result> (<info>)
	else if [logstash][msgparser][id] == "msgParserId354" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}: %{result} (%{info})" }
			id => "msgParserId354"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId355
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] { [<application>] <event_description>. <result>. | <event_description>(): <info> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId355" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*\[(?<application>[^\]]*)\][\s]+(?<event_description>[^\.]*)\.[\s]+(?<result>[^\.]*)\.[\s]+|[\s]*(?<event_description>[^\(]*)\(\):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId355"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lsassd_daemon" {
		# MESSAGE 002482
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld1>:Failed to find user, group, or domain by sid (sid = '<sid>', searched host = '<hostname>') -> error = <resultcode>, symbol = <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld1}:Failed to find user, group, or domain by sid (sid = '%{sid}', searched host = '%{hostname}') -> error = %{resultcode}, symbol = %{result}" }
				id => "message-002482"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Failed to find user, group, or domain by sid"
					"[event][id]" => "002482"
					"[rsa][message][id1]" => "002482"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002486
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld1>:Failed to authenticate user (name = '<username>') -> error = <resultcode>, symbol = <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld1}:Failed to authenticate user (name = '%{username}') -> error = %{resultcode}, symbol = %{result}" }
				id => "message-002486"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Failed to authenticate user"
					"[event][id]" => "002486"
					"[rsa][message][id1]" => "002486"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId358
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] ACEAGENT: <event_description>
	else if [logstash][msgparser][id] == "msgParserId358" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ACEAGENT:[\s]+(?<event_description>.*)$" }
			id => "msgParserId358"
			add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "ACEAGENT"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId359
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> - <result>
	else if [logstash][msgparser][id] == "msgParserId359" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+\-[\s]+(?<result>.*)$" }
			id => "msgParserId359"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mcm2.tcplink_local4" {
		# MESSAGE 002260
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :CRIT <space> : <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:CRIT[\s]+(?<space>[^\s]*)[\s]+:[\s]+(?<result>.*)$" }
				id => "message-002260"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002260"
					"[rsa][message][id1]" => "002260"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002261
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :ERR { :Error <resultcode>: <result> | :<result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:ERR[\s]+([\s]*:Error[\s]+(?<resultcode>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*:(?<result>[^\s]*)[\s]+)$" }
				id => "message-002261"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002261"
					"[rsa][message][id1]" => "002261"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId362
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> 
	else if [logstash][msgparser][id] == "msgParserId362" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+$" }
			id => "msgParserId362"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId363
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] :<event_description>
	else if [logstash][msgparser][id] == "msgParserId363" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] :%{event_description}" }
			id => "msgParserId363"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId364
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] INFO: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId364" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+INFO:[\s]+(?<event_description>[^\s]*)[\s]+$" }
			id => "msgParserId364"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId365
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] INFO: The file <filename> has been processed
	else if [logstash][msgparser][id] == "msgParserId365" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+INFO:[\s]+The[\s]+file[\s]+(?<filename>[^\s]*)[\s]+has[\s]+been[\s]+processed$" }
			id => "msgParserId365"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "file processed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "MWayFTPServer_daemon" {
		# MESSAGE 002378
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] warn: <process_id>: FTP Client Connection Rejected: <result>: [<saddr>] Error: <disposition>: error:<fld1>:<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] warn: %{process_id}: FTP Client Connection Rejected: %{result}: [%{saddr}] Error: %{disposition}: error:%{fld1}:%{info}" }
				id => "message-002378"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "FTP Client Connection Rejected"
					"[event][id]" => "002378"
					"[rsa][message][id1]" => "002378"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002359
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] warn: <process_id>: FTP Client Connection Rejected: <result>: [<saddr>] Error: <disposition>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] warn: %{process_id}: FTP Client Connection Rejected: %{result}: [%{saddr}] Error: %{disposition}" }
				id => "message-002359"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "FTP Client Connection Rejected"
					"[event][id]" => "002359"
					"[rsa][message][id1]" => "002359"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002328
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] fail: <process_id>: FTP Client Connection Rejected: <resultcode>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] fail: %{process_id}: FTP Client Connection Rejected: %{resultcode}, %{result}" }
				id => "message-002328"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "FTP Client Connection Rejected"
					"[event][id]" => "002328"
					"[rsa][message][id1]" => "002328"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId369
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] warn: <process_id>: Inbound Messages Receipt Failure, <result>
	else if [logstash][msgparser][id] == "msgParserId369" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] warn: %{process_id}: Inbound Messages Receipt Failure, %{result}" }
			id => "msgParserId369"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Inbound Messages Receipt Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId370
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] warn: <process_id>: Agent authentication failure: AUTH-FAIL(au) <result>: <info>
	else if [logstash][msgparser][id] == "msgParserId370" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] warn: %{process_id}: Agent authentication failure: AUTH-FAIL(au) %{result}: %{info}" }
			id => "msgParserId370"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Agent authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mwaysftp-server_daemon" {
		# MESSAGE 002228
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] error: <service> (<info>): Error <resultcode> - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] error: %{service} (%{info}): Error %{resultcode} - %{result}" }
				id => "message-002228"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "error"
					"[event][id]" => "002228"
					"[rsa][message][id1]" => "002228"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002360
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] error: { Unable to connect to Messageway | Failed to connect to Messageway at <saddr>:<sport> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+error:[\s]+([\s]*Unable[\s]+to[\s]+connect[\s]+to[\s]+Messageway[\s]+|[\s]*Failed[\s]+to[\s]+connect[\s]+to[\s]+Messageway[\s]+at[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+)$" }
				id => "message-002360"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to connect to Messageway"
					"[event][id]" => "002360"
					"[rsa][message][id1]" => "002360"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002361
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-002361"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002361"
					"[rsa][message][id1]" => "002361"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mwaysshd_daemon" {
		# MESSAGE 002213
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Connection from <saddr> port <sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Connection from %{saddr} port %{sport}" }
				id => "message-002213"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connected"
					"[event][id]" => "002213"
					"[rsa][message][id1]" => "002213"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002214
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { Connection closed by | Closing connection to } <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Connection[\s]+closed[\s]+by[\s]+|[\s]*Closing[\s]+connection[\s]+to[\s]+)[\s]+(?<saddr>.*)$" }
				id => "message-002214"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection closed"
					"[event][id]" => "002214"
					"[rsa][message][id1]" => "002214"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002215
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Postponed publickey for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Postponed publickey for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-002215"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "user public key Postponed"
					"[event][id]" => "002215"
					"[rsa][message][id1]" => "002215"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002211
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed none for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Failed none for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-002211"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"result" => "illegal or invalid user"
				"event_description" => "authentication refused"
					"[event][id]" => "002211"
					"[rsa][message][id1]" => "002211"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002209
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed password for <username> from <saddr> port <sport> <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Failed password for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-002209"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "failed password"
				"event_description" => "login failure"
					"[event][id]" => "002209"
					"[rsa][message][id1]" => "002209"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002217
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <result>: Connection reset by peer
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{result}: Connection reset by peer" }
				id => "message-002217"
				add_field => {
				"event_description" => "Connection reset by peer"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002217"
					"[rsa][message][id1]" => "002217"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002218
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Disconnecting: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Disconnecting: %{result}" }
				id => "message-002218"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "Disconnecting"
					"[event][id]" => "002218"
					"[rsa][message][id1]" => "002218"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002207
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Did not receive { identification | ident } string from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Did[\s]+not[\s]+receive[\s]+([\s]*identification[\s]+|[\s]*ident[\s]+)[\s]+string[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-002207"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"result" => "no identification string"
				"event_description" => "connection error"
					"[event][id]" => "002207"
					"[rsa][message][id1]" => "002207"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002204
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted { password | publickey } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Accepted[\s]+([\s]*password[\s]+|[\s]*publickey[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-002204"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user public key or password accepted"
					"[event][id]" => "002204"
					"[rsa][message][id1]" => "002204"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002212
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] WARNING: <filename> does not exist, <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+WARNING:[\s]+(?<filename>[^\s]*)[\s]+does[\s]+not[\s]+exist,[\s]+(?<result>.*)$" }
				id => "message-002212"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "filename does not exist"
					"[event][id]" => "002212"
					"[rsa][message][id1]" => "002212"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002216
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Found matching <encryption_type>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Found matching %{encryption_type}: %{fld1}" }
				id => "message-002216"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Foung matching encryption"
					"[event][id]" => "002216"
					"[rsa][message][id1]" => "002216"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002203
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Received disconnect from <saddr>: <fld1>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Received[\s]+disconnect[\s]+from[\s]+(?<saddr>[^:]*):[\s]+(?<fld1>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-002203"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Received disconnect"
					"[event][id]" => "002203"
					"[rsa][message][id1]" => "002203"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002206
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] error: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+error:[\s]+(?<result>.*)$" }
				id => "message-002206"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "error"
					"[event][id]" => "002206"
					"[rsa][message][id1]" => "002206"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002221
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-002221"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "generic activity"
					"[event][id]" => "002221"
					"[rsa][message][id1]" => "002221"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nagios_user" {
		# MESSAGE 002296
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Warning: Return code of <resultcode> for check of service '<webpage>' on host '<hostname>' was out of bounds
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Warning: Return code of %{resultcode} for check of service '%{webpage}' on host '%{hostname}' was out of bounds" }
				id => "message-002296"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Return code for check of service was out of bounds"
					"[event][id]" => "002296"
					"[rsa][message][id1]" => "002296"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001068
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application>: <hostname>; <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):[\s]+(?<hostname>[^;]*);[\s]+(?<info>.*)$" }
				id => "message-001068"
				add_field => {
					"[event][id]" => "001068"
					"[rsa][message][id1]" => "001068"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002297
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-002297"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002297"
					"[rsa][message][id1]" => "002297"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "named-xfer_daemon" {
		# MESSAGE 000172
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect(<saddr>) for zone <info> failed: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect(%{saddr}) for zone %{info} failed: %{result}" }
				id => "message-000172"
				add_field => {
				"event_description" => "connection failure"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000172"
					"[rsa][message][id1]" => "000172"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000173
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description> transfer refused from [<saddr>], zone <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description} transfer refused from [%{saddr}], zone %{info}" }
				id => "message-000173"
				add_field => {
				"event_description" => "transfer refused"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000173"
					"[rsa][message][id1]" => "000173"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000174
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] premature EOF, fetching "<info>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] premature EOF, fetching \"%{info}\"" }
				id => "message-000174"
				add_field => {
				"event_description" => "premature EOF fetching"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000174"
					"[rsa][message][id1]" => "000174"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000175
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] send AXFR query <fld1> to <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+send[\s]+AXFR[\s]+query[\s]+(?<fld1>[^\s]*)[\s]+to[\s]+(?<saddr>.*)$" }
				id => "message-000175"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000175"
					"[rsa][message][id1]" => "000175"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId392
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info>. Err: <event_description>
	else if [logstash][msgparser][id] == "msgParserId392" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{info}. Err: %{event_description}" }
			id => "msgParserId392"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId393
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action> nbvault daemon
	else if [logstash][msgparser][id] == "msgParserId393" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^\s]*)[\s]+nbvault[\s]+daemon$" }
			id => "msgParserId393"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Startin or Shutting down nbvault daemon"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "NcFTPd_daemon" {
		# MESSAGE 000176
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Too many login failures from <saddr> usernames used were: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Too many login failures from %{saddr} usernames used were: %{info}" }
				id => "message-000176"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Too many login failures"
					"[event][id]" => "000176"
					"[rsa][message][id1]" => "000176"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000177
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Someone from <saddr> tried to login as "<username>" user 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Someone from %{saddr} tried to login as \"%{username}\" user" }
				id => "message-000177"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Someone tried to login as root"
					"[event][id]" => "000177"
					"[rsa][message][id1]" => "000177"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId396
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] {NOTICE: | WARNING: } <application>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId396" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(NOTICE:[\s]+|[\s]*WARNING:[\s]+)[\s]+(?<application>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId396"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId397
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { PROVIDER RUNNER ERROR: | ERROR: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId397" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*PROVIDER[\s]+RUNNER[\s]+ERROR:[\s]+|[\s]*ERROR:[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId397"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ndsd_daemon" {
		# MESSAGE 002453
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application>: <process>: could not connect to slpd: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):[\s]+(?<process>[^:]*):[\s]+could[\s]+not[\s]+connect[\s]+to[\s]+slpd:[\s]+(?<result>.*)$" }
				id => "message-002453"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not connect to slpd"
					"[event][id]" => "002453"
					"[rsa][message][id1]" => "002453"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002454
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application>: <process>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):[\s]+(?<process>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-002454"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002454"
					"[rsa][message][id1]" => "002454"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "net-dtspcd_daemon" {
		# MESSAGE 001994
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] refused connect from <saddr>(<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+refused[\s]+connect[\s]+from[\s]+(?<saddr>[^\(]*)\((?<result>[^\)]*)\)$" }
				id => "message-001994"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "001994"
					"[rsa][message][id1]" => "001994"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001995
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-001995"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "successful connection"
					"[event][id]" => "001995"
					"[rsa][message][id1]" => "001995"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId402
	# line in RSA:  <agent>: <device>: [ID <id> <event_source>.<severity>] <info>
	else if [logstash][msgparser][id] == "msgParserId402" {
		dissect {
			mapping => { "message" => "%{agent}: %{device}: [ID %{id} %{event_source}.%{severity}] %{info}" }
			id => "msgParserId402"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "netcustom printer info"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "netpoint_daemon" {
		# MESSAGE 001954
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Socket read error during initial handshake
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Socket read error during initial handshake" }
				id => "message-001954"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Socket read error during initial handshake"
					"[event][id]" => "001954"
					"[rsa][message][id1]" => "001954"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002301
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] SSL handshake failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] SSL handshake failed" }
				id => "message-002301"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "SSL handshake failed"
					"[event][id]" => "002301"
					"[rsa][message][id1]" => "002301"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId405
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] NOTICE: <interface>: <info> 
	else if [logstash][msgparser][id] == "msgParserId405" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+NOTICE:[\s]+(?<interface>[^:]*):[\s]+(?<info>[^\s]*)[\s]+$" }
			id => "msgParserId405"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId406
	# line in RSA:      { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: <result>: Connection reset disconnecting.
	else if [logstash][msgparser][id] == "msgParserId406" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+(?<result>[^:]*):[\s]+Connection[\s]+reset[\s]+disconnecting\.$" }
			id => "msgParserId406"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection reset disconnecting"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "nidsvmgrd_daemon" {
		# MESSAGE 000179
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] DHCP server <saddr> disconnected from the server manager
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] DHCP server %{saddr} disconnected from the server manager" }
				id => "message-000179"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disconnected from server"
					"[event][id]" => "000179"
					"[rsa][message][id1]" => "000179"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000180
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] DHCP server <saddr> connected to the server manager
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] DHCP server %{saddr} connected to the server manager" }
				id => "message-000180"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connected to server manager"
					"[event][id]" => "000180"
					"[rsa][message][id1]" => "000180"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000181
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <username> server connected 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{username} server connected" }
				id => "message-000181"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "server connected"
					"[event][id]" => "000181"
					"[rsa][message][id1]" => "000181"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000182
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000182"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000182"
					"[rsa][message][id1]" => "000182"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId410
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] { <process>: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId410" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+([\s]*(?<process>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId410"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "nmo_auth" {
		# MESSAGE 001845
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Excessive (<dclass_counter1>) login failures for <username>: locking account
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Excessive[\s]+\((?<dclass_counter1>[^\)]*)\)[\s]+login[\s]+failures[\s]+for[\s]+(?<username>[^:]*):[\s]+locking[\s]+account$" }
				id => "message-001845"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "locking account"
				"event_description" => "Excessive login failures"
					"[event][id]" => "001845"
					"[rsa][message][id1]" => "001845"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001839
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] pam_login_limit(auth): <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+pam_login_limit\(auth\):[\s]+(?<info>.*)$" }
				id => "message-001839"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "pam_login_limit"
					"[event][id]" => "001839"
					"[rsa][message][id1]" => "001839"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId413
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Session error <info>.
	else if [logstash][msgparser][id] == "msgParserId413" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+Session[\s]+error[\s]+(?<info>[^\.]*)\.$" }
			id => "msgParserId413"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Session error"
				"process" => "libsldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId414
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>, EvEvt_wto failed for CA console <obj_name> - <result>
	else if [logstash][msgparser][id] == "msgParserId414" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}, EvEvt_wto failed for CA console %{obj_name} - %{result}" }
			id => "msgParserId414"
			add_field => {
				"event_description" => "EvEvt_wto failed for CA console"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId415
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId415" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+$" }
			id => "msgParserId415"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId416
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId416" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId416"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ogfs_kern" {
		# MESSAGE 002243
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] NOTICE: <application> <service>: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+NOTICE:[\s]+(?<application>[^\s]*)[\s]+(?<service>[^:]*):[\s]+(?<info>.*)$" }
				id => "message-002243"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "ogfs notice"
					"[event][id]" => "002243"
					"[rsa][message][id1]" => "002243"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002272
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <service>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<service>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-002272"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "ogfs activity"
					"[event][id]" => "002272"
					"[rsa][message][id1]" => "002272"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId419
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: <filename>, <version>, <info>
	else if [logstash][msgparser][id] == "msgParserId419" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: %{filename}, %{version}, %{info}" }
			id => "msgParserId419"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "possible incompatible libraries"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Opsware_user" {
		# MESSAGE 002227
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] ERROR: while writing to { '<filename>': | <filename>: }  [Errno <resultcode>] <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ERROR:[\s]+while[\s]+writing[\s]+to[\s]+([\s]*'(?<filename>[^']*)':[\s]+|[\s]*(?<filename>[^:]*):[\s]+)[\s]+\[Errno[\s]+(?<resultcode>[^\]]*)\][\s]+(?<result>.*)$" }
				id => "message-002227"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "error wile writing to file"
					"[event][id]" => "002227"
					"[rsa][message][id1]" => "002227"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002316
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] WARNING: <event_description> for { '<filename>' | <filename> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+WARNING:[\s]+(?<event_description>[^\s]*)[\s]+for[\s]+([\s]*'(?<filename>[^']*)'[\s]+|[\s]*(?<filename>[^\s]*)[\s]+)$" }
				id => "message-002316"
				add_field => {
					"[event][id]" => "002316"
					"[rsa][message][id1]" => "002316"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "opswsshd_auth" {
		# MESSAGE 002342
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: INFO <username> <result>, failed to authenticate for an <protocol> login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: INFO %{username} %{result}, failed to authenticate for an %{protocol} login" }
				id => "message-002342"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "user authentication failed"
					"[event][id]" => "002342"
					"[rsa][message][id1]" => "002342"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002343
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: INFO <username> failed to authenticate for an <protocol>login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: INFO %{username} failed to authenticate for an %{protocol}login" }
				id => "message-002343"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "user authenticated failed"
					"[event][id]" => "002343"
					"[rsa][message][id1]" => "002343"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002208
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Did not receive { identification | ident } string from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Did[\s]+not[\s]+receive[\s]+([\s]*identification[\s]+|[\s]*ident[\s]+)[\s]+string[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-002208"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"result" => "no identification string"
				"event_description" => "connection error"
					"[event][id]" => "002208"
					"[rsa][message][id1]" => "002208"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002248
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: Couldn't stat <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: Couldn't stat %{filename}: %{result}" }
				id => "message-002248"
				add_field => {
				"event_description" => "Couldn't stat file"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002248"
					"[rsa][message][id1]" => "002248"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002251
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>]  <service>: ERROR  failed to get password from <username>@<user_address>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}]  %{service}: ERROR  failed to get password from %{username}@%{user_address}" }
				id => "message-002251"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "failed to get password from user"
					"[event][id]" => "002251"
					"[rsa][message][id1]" => "002251"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002249
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: <filename> is not a file or directory
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: %{filename} is not a file or directory" }
				id => "message-002249"
				add_field => {
				"event_description" => "filename is not a file or directory"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002249"
					"[rsa][message][id1]" => "002249"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002250
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>]  <service>: INFO { Logout <username>'s | Logout } <protocol> session { (<result>) | <space> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<service>[^:]*):[\s]+INFO[\s]+([\s]*Logout[\s]+(?<username>[^']*)'s[\s]+|[\s]*Logout[\s]+)[\s]+(?<protocol>[^\s]*)[\s]+session[\s]+([\s]*\((?<result>[^\)]*)\)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
				id => "message-002250"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logout"
					"[event][id]" => "002250"
					"[rsa][message][id1]" => "002250"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002245
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted { password | publickey } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Accepted[\s]+([\s]*password[\s]+|[\s]*publickey[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-002245"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user public key or password accepted"
					"[event][id]" => "002245"
					"[rsa][message][id1]" => "002245"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002247
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted keyboard-{ interactive/pam | interactive } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Accepted[\s]+keyboard\-([\s]*interactive/pam[\s]+|[\s]*interactive[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-002247"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user password accepted"
					"[event][id]" => "002247"
					"[rsa][message][id1]" => "002247"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002246
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: INFO <username> authenticated for an <protocol> login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: INFO %{username} authenticated for an %{protocol} login" }
				id => "message-002246"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user authenticated for login"
					"[event][id]" => "002246"
					"[rsa][message][id1]" => "002246"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002244
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: INFO  <username> authenticated for a <protocol> client tunnel
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: INFO  %{username} authenticated for a %{protocol} client tunnel" }
				id => "message-002244"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User authenticated for client tunnel"
					"[event][id]" => "002244"
					"[rsa][message][id1]" => "002244"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002252
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] error: <service>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] error: %{service}: %{result}" }
				id => "message-002252"
				add_field => {
				"event_description" => "error"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002252"
					"[rsa][message][id1]" => "002252"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId380
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted { password | publickey } for <username> from <saddr> port <sport> <protocol> 
	else if [logstash][msgparser][id] == "msgParserId380" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Accepted[\s]+([\s]*password[\s]+|[\s]*publickey[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
			id => "msgParserId380"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user public key or password accepted"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "orasd1_local2" {
		# MESSAGE 002387
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Oracle Audit: Trigger logon <uid> Unix-User: <username> TTY: <terminal> Session: <sessionid> Program: <application> Server: <shost> File: <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Oracle Audit: Trigger logon %{uid} Unix-User: %{username} TTY: %{terminal} Session: %{sessionid} Program: %{application} Server: %{shost} File: %{filename}" }
				id => "message-002387"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Oracle Audit Trigger logon"
					"[event][id]" => "002387"
					"[rsa][message][id1]" => "002387"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002388
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Oracle Audit: Trigger logoff <uid> Server: <shost> Session: <sessionid> File: <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Oracle Audit: Trigger logoff %{uid} Server: %{shost} Session: %{sessionid} File: %{filename}" }
				id => "message-002388"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Oracle Audit Trigger logoff"
					"[event][id]" => "002388"
					"[rsa][message][id1]" => "002388"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002389
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Oracle Audit: Trigger <filename> mailed to <to> <user_fullname>@<user_address> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Oracle Audit: Trigger %{filename} mailed to %{to} %{user_fullname}@%{user_address}" }
				id => "message-002389"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Oracle Audit Trigger file mailed"
					"[event][id]" => "002389"
					"[rsa][message][id1]" => "002389"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "oserv94_daemon" {
		# MESSAGE 000183
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] idm_login failed -- <result> <fld1> to <fld2> -- <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] idm_login failed -- %{result} %{fld1} to %{fld2} -- %{info}" }
				id => "message-000183"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "cannot match IP addr"
				"event_description" => "login failed"
					"[event][id]" => "000183"
					"[rsa][message][id1]" => "000183"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002013
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <uid>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<uid>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-002013"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002013"
					"[rsa][message][id1]" => "002013"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "p47adm_local3" {
		# MESSAGE 001244
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001244"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001244"
					"[rsa][message][id1]" => "001244"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001289
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001289"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001289"
					"[rsa][message][id1]" => "001289"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId437
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] user <username> succeeded netgroup test
	else if [logstash][msgparser][id] == "msgParserId437" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+user[\s]+(?<username>[^\s]*)[\s]+succeeded[\s]+netgroup[\s]+test$" }
			id => "msgParserId437"
			add_field => {
				"event_description" => "user succeeded netgroup test"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId438
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] user unknown
	else if [logstash][msgparser][id] == "msgParserId438" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+user[\s]+unknown$" }
			id => "msgParserId438"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "user unknown"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pam_tally_auth" {
		# MESSAGE 002236
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_tally: <service>; no such user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_tally: %{service}; no such user %{username}" }
				id => "message-002236"
				add_field => {
				"event_description" => "no such user"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002236"
					"[rsa][message][id1]" => "002236"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002237
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Error opening <filename> for update
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Error opening %{filename} for update" }
				id => "message-002237"
				add_field => {
				"event_description" => "error opening file for update"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002237"
					"[rsa][message][id1]" => "002237"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002238
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] user <username> (<fld1>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] user %{username} (%{fld1}) %{info}" }
				id => "message-002238"
				add_field => {
				"event_description" => "tally info"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002238"
					"[rsa][message][id1]" => "002238"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002337
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fseek failed <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fseek failed %{filename}" }
				id => "message-002337"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "fseek failed"
					"[event][id]" => "002337"
					"[rsa][message][id1]" => "002337"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId443
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] i<event_description> (retval = <fld1>, user = <username>)
	else if [logstash][msgparser][id] == "msgParserId443" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+i(?<event_description>[^\s]*)[\s]+\(retval[\s]+=[\s]+(?<fld1>[^,]*),[\s]+user[\s]+=[\s]+(?<username>[^\)]*)\)$" }
			id => "msgParserId443"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId444
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1>
	else if [logstash][msgparser][id] == "msgParserId444" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>.*)$" }
			id => "msgParserId444"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "passwd_auth" {
		# MESSAGE 001371
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { Password aging | Password } changed on <fld1> for <fld2> by <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Password[\s]+aging[\s]+|[\s]*Password[\s]+)[\s]+changed[\s]+on[\s]+(?<fld1>[^\s]*)[\s]+for[\s]+(?<fld2>[^\s]*)[\s]+by[\s]+(?<username>.*)$" }
				id => "message-001371"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Password changed"
					"[event][id]" => "001371"
					"[rsa][message][id1]" => "001371"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002355
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Remembering new password for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Remembering new password for %{username}" }
				id => "message-002355"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Remembering new password for user"
					"[event][id]" => "002355"
					"[rsa][message][id1]" => "002355"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000186
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <protocol>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{protocol}: %{result}" }
				id => "message-000186"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000186"
					"[rsa][message][id1]" => "000186"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "passwd_user" {
		# MESSAGE 000184
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <protocol>: <result> { ; | : }<info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<protocol>[^:]*):[\s]+(?<result>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)(?<info>[^\s]*)[\s]+$" }
				id => "message-000184"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "password error"
					"[event][id]" => "000184"
					"[rsa][message][id1]" => "000184"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000185
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <protocol>: error <resultcode> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{protocol}: error %{resultcode}" }
				id => "message-000185"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "password error"
					"[event][id]" => "000185"
					"[rsa][message][id1]" => "000185"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001030
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001030"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001030"
					"[rsa][message][id1]" => "001030"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId450
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] accepted <username> from <shost> to <dhost> 
	else if [logstash][msgparser][id] == "msgParserId450" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] accepted %{username} from %{shost} to %{dhost}" }
			id => "msgParserId450"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pbmasterd3.5.4-01_auth" {
		# MESSAGE 001374
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] accepted <username> from <shost> to <dhost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] accepted %{username} from %{shost} to %{dhost}" }
				id => "message-001374"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001374"
					"[rsa][message][id1]" => "001374"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001375
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] rejected <username> from <shost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] rejected %{username} from %{shost}" }
				id => "message-001375"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001375"
					"[rsa][message][id1]" => "001375"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001376
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001376"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001376"
					"[rsa][message][id1]" => "001376"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pbrun3.5.8-sp1-02_auth" {
		# MESSAGE 001379
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] Request rejected by <username> on <shost> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Request rejected by %{username} on %{shost} %{info}" }
				id => "message-001379"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Request rejected"
					"[event][id]" => "001379"
					"[rsa][message][id1]" => "001379"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001380
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001380"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001380"
					"[rsa][message][id1]" => "001380"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId454
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId454" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{process}: %{event_description}" }
			id => "msgParserId454"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId455
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] NOTICE:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId455" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] NOTICE:  %{event_description}" }
			id => "msgParserId455"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId456
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] NOTICE: pcn: possible RX frame corruption
	else if [logstash][msgparser][id] == "msgParserId456" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] NOTICE: pcn: possible RX frame corruption" }
			id => "msgParserId456"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "possible RX frame corruption"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pedagent_auth" {
		# MESSAGE 001494
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Successful attempt for user '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Successful attempt for user '%{username}'" }
				id => "message-001494"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "001494"
					"[rsa][message][id1]" => "001494"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001498
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Over limit attempt for user '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Over limit attempt for user '%{username}'" }
				id => "message-001498"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login attempt limit exceeded"
					"[event][id]" => "001498"
					"[rsa][message][id1]" => "001498"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "perl_user" {
		# MESSAGE 001762
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Session error <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Session error %{result}." }
				id => "message-001762"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Session error"
				"process" => "libsldap"
					"[event][id]" => "001762"
					"[rsa][message][id1]" => "001762"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001857
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001857"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001857"
					"[rsa][message][id1]" => "001857"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId460
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] disconnecting <saddr> unknown user (<event_description>)
	else if [logstash][msgparser][id] == "msgParserId460" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] disconnecting %{saddr} unknown user (%{event_description})" }
			id => "msgParserId460"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId461
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Rolling extended accounting file <filename>
	else if [logstash][msgparser][id] == "msgParserId461" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Rolling[\s]+extended[\s]+accounting[\s]+file[\s]+(?<filename>.*)$" }
			id => "msgParserId461"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Rolling extended accounting file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId462
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Enforcing stricter permissions on "<service>"
	else if [logstash][msgparser][id] == "msgParserId462" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Enforcing stricter permissions on \"%{service}\"" }
			id => "msgParserId462"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Enforcing stricter permissions on service"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId463
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: Service search descriptor for service '<service>' contains filter, which can not be used for service '<info>'
	else if [logstash][msgparser][id] == "msgParserId463" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Status: %{resultcode} Mesg: Service search descriptor for service '%{service}' contains filter, which can not be used for service '%{info}'" }
			id => "msgParserId463"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Invalid filter for service"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "proftpd_daemon" {
		# MESSAGE 002351
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <hostname> (<shost>[<saddr>]) - FTP session opened
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<hostname>[^\s]*)[\s]+\((?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]\)[\s]+\-[\s]+FTP[\s]+session[\s]+opened$" }
				id => "message-002351"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "FTP session opened"
					"[event][id]" => "002351"
					"[rsa][message][id1]" => "002351"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002352
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <hostname> (<shost>[<saddr>]) - FTP session closed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<hostname>[^\s]*)[\s]+\((?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]\)[\s]+\-[\s]+FTP[\s]+session[\s]+closed$" }
				id => "message-002352"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "FTP session closed"
					"[event][id]" => "002352"
					"[rsa][message][id1]" => "002352"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "prstat_user" {
		# MESSAGE 001822
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001822"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001822"
					"[rsa][message][id1]" => "001822"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001858
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001858"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001858"
					"[rsa][message][id1]" => "001858"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ps_user" {
		# MESSAGE 002229
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
				id => "message-002229"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
					"[event][id]" => "002229"
					"[rsa][message][id1]" => "002229"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001666
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: Unable to load configuration '<info>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Status: %{resultcode} Mesg: Unable to load configuration '%{info}'" }
				id => "message-001666"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
					"[event][id]" => "001666"
					"[rsa][message][id1]" => "001666"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001741
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: { <action>: <info> | <action> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<action>[^:]*):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
				id => "message-001741"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001741"
					"[rsa][message][id1]" => "001741"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId468
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: Adding connection (<saddr>)
	else if [logstash][msgparser][id] == "msgParserId468" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+Adding[\s]+connection[\s]+\((?<saddr>[^\)]*)\)$" }
			id => "msgParserId468"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "pvcs_daemon" {
		# MESSAGE 002356
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Changing password for <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Changing password for %{username}" }
				id => "message-002356"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Changing password for user"
					"[event][id]" => "002356"
					"[rsa][message][id1]" => "002356"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002357
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Password change attempt for <username> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Password change attempt for %{username} %{result}" }
				id => "message-002357"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Password change attempt for user"
					"[event][id]" => "002357"
					"[rsa][message][id1]" => "002357"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002358
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> did not want to change their password 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} did not want to change their password" }
				id => "message-002358"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "User did not want to change their password"
					"[event][id]" => "002358"
					"[rsa][message][id1]" => "002358"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "pyseekd_daemon" {
		# MESSAGE 001159
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <fld1>: <result>.Restart to <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+(?<result>[^\.]*)\.Restart[\s]+to[\s]+(?<action>.*)$" }
				id => "message-001159"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "001159"
					"[rsa][message][id1]" => "001159"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001160
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <fld1>: restarted <version> to <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+restarted[\s]+(?<version>[^\s]*)[\s]+to[\s]+(?<action>.*)$" }
				id => "message-001160"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "001160"
					"[rsa][message][id1]" => "001160"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001161
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <fld1>: restarting to <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+restarting[\s]+to[\s]+(?<action>.*)$" }
				id => "message-001161"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "001161"
					"[rsa][message][id1]" => "001161"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001158
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <fld1>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-001158"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "001158"
					"[rsa][message][id1]" => "001158"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "plug-gw_daemon" {
		# MESSAGE 000187
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] disconnect host=<username>/<saddr> destination=<dhost>/<dport> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] disconnect host=%{username}/%{saddr} destination=%{dhost}/%{dport} %{info}" }
				id => "message-000187"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disconnect"
					"[event][id]" => "000187"
					"[rsa][message][id1]" => "000187"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000188
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect host=<username>/<saddr> destination=<dhost>/<dport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect host=%{username}/%{saddr} destination=%{dhost}/%{dport}" }
				id => "message-000188"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "host connect"
					"[event][id]" => "000188"
					"[rsa][message][id1]" => "000188"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId478
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] uptmd: <disposition>: <application>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId478" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+uptmd:[\s]+(?<disposition>[^:]*):[\s]+(?<application>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId478"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId479
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { SUNWcacaort launcher : <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId479" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*SUNWcacaort[\s]+launcher[\s]+:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId479"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId480
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process> Event <event_type> was successful with a status of <resultcode>
	else if [logstash][msgparser][id] == "msgParserId480" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^\s]*)[\s]+Event[\s]+(?<event_type>[^\s]*)[\s]+was[\s]+successful[\s]+with[\s]+a[\s]+status[\s]+of[\s]+(?<resultcode>.*)$" }
			id => "msgParserId480"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId481
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description> 
	else if [logstash][msgparser][id] == "msgParserId481" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId481"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId482
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Could not write to log file. <result> 
	else if [logstash][msgparser][id] == "msgParserId482" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Could[\s]+not[\s]+write[\s]+to[\s]+log[\s]+file\.[\s]+(?<result>[^\s]*)[\s]+$" }
			id => "msgParserId482"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Could not write to log file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId483
	# line in RSA:      { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: <result>: <info>. Timed out.
	else if [logstash][msgparser][id] == "msgParserId483" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+(?<result>[^:]*):[\s]+(?<info>[^\.]*)\.[\s]+Timed[\s]+out\.$" }
			id => "msgParserId483"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Ldap error - timeout"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dbaudit_daemon" {
		# MESSAGE 002020
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] could not open <filename> for dba log rotation- <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+could[\s]+not[\s]+open[\s]+(?<filename>[^\s]*)[\s]+for[\s]+dba[\s]+log[\s]+rotation\-[\s]+(?<result>.*)$" }
				id => "message-002020"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not open file"
					"[event][id]" => "002020"
					"[rsa][message][id1]" => "002020"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002021
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] HOST: <hostname> SID: <id1> DATE: <version> USER: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+HOST:[\s]+(?<hostname>[^\s]*)[\s]+SID:[\s]+(?<id1>[^\s]*)[\s]+DATE:[\s]+(?<version>[^\s]*)[\s]+USER:[\s]+(?<event_description>.*)$" }
				id => "message-002021"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Oracle dbaudit event"
					"[event][id]" => "002021"
					"[rsa][message][id1]" => "002021"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId486
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] dbi: DataServer message <resultcode>, <result>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId486" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+dbi:[\s]+DataServer[\s]+message[\s]+(?<resultcode>[^,]*),[\s]+(?<result>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId486"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "DataServer message"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dhcpd_daemon" {
		# MESSAGE 002314
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] DHCPACK to <hostip> (<macaddr>) via <interface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] DHCPACK to %{hostip} (%{macaddr}) via %{interface}" }
				id => "message-002314"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "DHCPACK to IP"
					"[event][id]" => "002314"
					"[rsa][message][id1]" => "002314"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002082
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] DHCPRELEASE of <saddr> from <macaddr> via <interface> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] DHCPRELEASE of %{saddr} from %{macaddr} via %{interface} (%{result})" }
				id => "message-002082"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "DHCPREALEASE of host from mac"
					"[event][id]" => "002082"
					"[rsa][message][id1]" => "002082"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002075
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>]  <action> { for <saddr> from | from }{ <macaddr> via <interface>: <result> | <hostip> via <interface>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^\s]*)[\s]+([\s]*for[\s]+(?<saddr>[^\s]*)[\s]+from[\s]+|[\s]*from[\s]+)([\s]*(?<macaddr>[^\s]*)[\s]+via[\s]+(?<interface>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<hostip>[^\s]*)[\s]+via[\s]+(?<interface>.*))$" }
				id => "message-002075"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "DHCP function from mac or IP"
					"[event][id]" => "002075"
					"[rsa][message][id1]" => "002075"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId490
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] :<event_description>
	else if [logstash][msgparser][id] == "msgParserId490" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] :%{event_description}" }
			id => "msgParserId490"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_subject" => "User"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId491
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] digest: <info>: <action> 
	else if [logstash][msgparser][id] == "msgParserId491" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] digest: %{info}: %{action}" }
			id => "msgParserId491"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId492
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] su root failed for <username> on <terminal> 
	else if [logstash][msgparser][id] == "msgParserId492" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] su root failed for %{username} on %{terminal}" }
			id => "msgParserId492"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "su to root failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId493
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { Connection <info> completed | Closing connection <info> }
	else if [logstash][msgparser][id] == "msgParserId493" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Connection[\s]+(?<info>[^\s]*)[\s]+completed[\s]+|[\s]*Closing[\s]+connection[\s]+(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId493"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection(s) closed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "qip-logind_user" {
		# MESSAGE 000190
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Closing Connection to <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Closing Connection to %{hostip}" }
				id => "message-000190"
				add_field => {
				"event_description" => "Connection closed"
					"[event][id]" => "000190"
					"[rsa][message][id1]" => "000190"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000191
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Established Connection to <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Established Connection to %{hostip}" }
				id => "message-000191"
				add_field => {
				"event_description" => "Established Connection"
					"[event][id]" => "000191"
					"[rsa][message][id1]" => "000191"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000943
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-000943"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000943"
					"[rsa][message][id1]" => "000943"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "qip-msgd_user" {
		# MESSAGE 000192
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Connection <hostip> completed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Connection %{hostip} completed" }
				id => "message-000192"
				add_field => {
				"event_description" => "Connection completed"
					"[event][id]" => "000192"
					"[rsa][message][id1]" => "000192"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000193
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Closing Connection to <service> at <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Closing Connection to %{service} at %{hostip}" }
				id => "message-000193"
				add_field => {
				"event_description" => "Connection closed"
					"[event][id]" => "000193"
					"[rsa][message][id1]" => "000193"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000194
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Established Connection to <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Established Connection to %{hostip}" }
				id => "message-000194"
				add_field => {
				"event_description" => "Established Connection"
					"[event][id]" => "000194"
					"[rsa][message][id1]" => "000194"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000195
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Can not connect to <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Can not connect to %{service}" }
				id => "message-000195"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection failure"
					"[event][id]" => "000195"
					"[rsa][message][id1]" => "000195"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002254
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Communication problems with <hostid>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Communication problems with %{hostid}: %{result}" }
				id => "message-002254"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Communication problems"
					"[event][id]" => "002254"
					"[rsa][message][id1]" => "002254"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000196
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> user.<severity>] Connection to <service> - <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+user\.(?<severity>[^\]]*)\][\s]+Connection[\s]+to[\s]+(?<service>[^\s]*)[\s]+\-[\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-000196"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "user"
					"[event][id]" => "000196"
					"[rsa][message][id1]" => "000196"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002255
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Corrupt Message Received
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Corrupt Message Received" }
				id => "message-002255"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Corrupt Message Received"
					"[event][id]" => "002255"
					"[rsa][message][id1]" => "002255"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId502
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <action>
	else if [logstash][msgparser][id] == "msgParserId502" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{action}" }
			id => "msgParserId502"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "qipd_user" {
		# MESSAGE 000197
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Closing connection <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Closing connection %{info}" }
				id => "message-000197"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection(s)  closed"
					"[event][id]" => "000197"
					"[rsa][message][id1]" => "000197"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000198
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> user.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+user\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000198"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "user"
					"[event][id]" => "000198"
					"[rsa][message][id1]" => "000198"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "qpopper_local0" {
		# MESSAGE 001176
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Stats: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Stats: %{event_description}" }
				id => "message-001176"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Stats"
					"[event][id]" => "001176"
					"[rsa][message][id1]" => "001176"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001804
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] bounce at <fqdn> (<saddr>): <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] bounce at %{fqdn} (%{saddr}): %{event_description}" }
				id => "message-001804"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001804"
					"[rsa][message][id1]" => "001804"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "qpopper_mail" {
		# MESSAGE 001074
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] (<version>) Servicing request from <fqdn> at <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] (%{version}) Servicing request from %{fqdn} at %{saddr}" }
				id => "message-001074"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001074"
					"[rsa][message][id1]" => "001074"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002528
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { (null) | <username> } at <shost>(<saddr>): -ERR <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*\(null\)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+at[\s]+(?<shost>[^\(]*)\((?<saddr>[^\)]*)\):[\s]+\-ERR[\s]+(?<result>.*)$" }
				id => "message-002528"
				add_field => {
				"event_description" => "ERROR"
					"[event][id]" => "002528"
					"[rsa][message][id1]" => "002528"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002527
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] I/O error flushing output to { client  at <shost>[<saddr>]: | client <c_username> <fld1> <shost>[<saddr>]:  } <result> (<resultcode>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+I/O[\s]+error[\s]+flushing[\s]+output[\s]+to[\s]+([\s]*client[\s]+at[\s]+(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]:[\s]+|[\s]*client[\s]+(?<c_username>[^\s]*)[\s]+(?<fld1>[^\s]*)[\s]+(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]:[\s]+)[\s]+(?<result>[^\s]*)[\s]+\((?<resultcode>[^\)]*)\)$" }
				id => "message-002527"
				add_field => {
				"event_description" => "I/O error flushing output to client"
					"[event][id]" => "002527"
					"[rsa][message][id1]" => "002527"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId509
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: <event_description> (<saddr>)
	else if [logstash][msgparser][id] == "msgParserId509" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)$" }
			id => "msgParserId509"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId510
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] rebooted by <username>  
	else if [logstash][msgparser][id] == "msgParserId510" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] rebooted by %{username}" }
			id => "msgParserId510"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "reboot by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "red_gateway_user" {
		# MESSAGE 000872
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <interface> Unable to connect to <hostname> for request: <info> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{interface} Unable to connect to %{hostname} for request: %{info} (%{result})" }
				id => "message-000872"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to connect request"
					"[event][id]" => "000872"
					"[rsa][message][id1]" => "000872"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000873
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connect error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connect error: %{result}" }
				id => "message-000873"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connect error"
					"[event][id]" => "000873"
					"[rsa][message][id1]" => "000873"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000874
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <result>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{result}: %{info}" }
				id => "message-000874"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "general error"
					"[event][id]" => "000874"
					"[rsa][message][id1]" => "000874"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId514
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <action> ***** <result> *****
	else if [logstash][msgparser][id] == "msgParserId514" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{action} ***** %{result} *****" }
			id => "msgParserId514"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId515
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <service>: Upload of <filename> was successful. <info>
	else if [logstash][msgparser][id] == "msgParserId515" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<service>[^:]*):[\s]+Upload[\s]+of[\s]+(?<filename>[^\s]*)[\s]+was[\s]+successful\.[\s]+(?<info>.*)$" }
			id => "msgParserId515"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Upload of file was successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ReportAgent_user" {
		# MESSAGE 002306
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] ERROR: Failed to send a message to the Message Queue, rv = <resultcode>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ERROR:[\s]+Failed[\s]+to[\s]+send[\s]+a[\s]+message[\s]+to[\s]+the[\s]+Message[\s]+Queue,[\s]+rv[\s]+=[\s]+(?<resultcode>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-002306"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Failed to send a message to the Message Queue"
					"[event][id]" => "002306"
					"[rsa][message][id1]" => "002306"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001946
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] ERROR: Failed to connect to the Distribution Server <info> : Server not connected 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ERROR:[\s]+Failed[\s]+to[\s]+connect[\s]+to[\s]+the[\s]+Distribution[\s]+Server[\s]+(?<info>[^\s]*)[\s]+:[\s]+Server[\s]+not[\s]+connected[\s]+$" }
				id => "message-001946"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001946"
					"[rsa][message][id1]" => "001946"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001947
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Successfully connected to the Distribution Server <info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Successfully[\s]+connected[\s]+to[\s]+the[\s]+Distribution[\s]+Server[\s]+(?<info>[^\s]*)[\s]+$" }
				id => "message-001947"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001947"
					"[rsa][message][id1]" => "001947"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId152
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
	else if [logstash][msgparser][id] == "msgParserId152" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
			id => "msgParserId152"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId156
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
			id => "msgParserId156"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "retluser_local3" {
		# MESSAGE 001246
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001246"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001246"
					"[rsa][message][id1]" => "001246"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001529
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001529"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001529"
					"[rsa][message][id1]" => "001529"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId518
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] RGM: <event_description>
	else if [logstash][msgparser][id] == "msgParserId518" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] RGM: %{event_description}" }
			id => "msgParserId518"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId519
	# line in RSA:    <agent> - <info> [<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId519" {
		dissect {
			mapping => { "message" => "%{agent} - %{info} [%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId519"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rlog_user" {
		# MESSAGE 002335
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <application> Event <obj_name> was successful with a status of <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{application} Event %{obj_name} was successful with a status of %{resultcode}" }
				id => "message-002335"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Event successful"
					"[event][id]" => "002335"
					"[rsa][message][id1]" => "002335"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002375
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-002375"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002375"
					"[rsa][message][id1]" => "002375"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "rlogind_daemon" {
		# MESSAGE 000200
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] setsockopt (<info>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] setsockopt (%{info}): %{result}" }
				id => "message-000200"
				add_field => {
				"event_description" => "setsockopt"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000200"
					"[rsa][message][id1]" => "000200"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000201
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connection from <fqdn>(<saddr>) - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connection from %{fqdn}(%{saddr}) - %{result}" }
				id => "message-000201"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "bad login"
					"[event][id]" => "000201"
					"[rsa][message][id1]" => "000201"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000202
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000202"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000202"
					"[rsa][message][id1]" => "000202"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId523
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <action>
	else if [logstash][msgparser][id] == "msgParserId523" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{action}" }
			id => "msgParserId523"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId524
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] nres_gethostbyaddr: <shost> != <saddr>. 
	else if [logstash][msgparser][id] == "msgParserId524" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+nres_gethostbyaddr:[\s]+(?<shost>[^\s]*)[\s]+!=[\s]+(?<saddr>[^\.]*)\.[\s]+$" }
			id => "msgParserId524"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId525
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>
	else if [logstash][msgparser][id] == "msgParserId525" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>.*)$" }
			id => "msgParserId525"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId526
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] refused connect from <saddr> to <info>
	else if [logstash][msgparser][id] == "msgParserId526" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] refused connect from %{saddr} to %{info}" }
			id => "msgParserId526"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId210
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId210" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId210"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId527
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_unix_cred: project.max-shm-memory resource control assignment failed for project "<group>"
	else if [logstash][msgparser][id] == "msgParserId527" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_unix_cred: project.max-shm-memory resource control assignment failed for project \"%{group}\"" }
			id => "msgParserId527"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "project.max-shm-memory resource control assignment failed for project"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rsh_daemon" {
		# MESSAGE 000205
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] pam_authenticate: error Authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] pam_authenticate: error Authentication failed" }
				id => "message-000205"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication failure"
					"[event][id]" => "000205"
					"[rsa][message][id1]" => "000205"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000206
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connection from <fqdn> (<saddr>) - <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connection[\s]+from[\s]+(?<fqdn>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+\-[\s]+(?<result>.*)$" }
				id => "message-000206"
				add_field => {
				"event_description" => "failed connection"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000206"
					"[rsa][message][id1]" => "000206"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000207
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] setsockopt (<info>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] setsockopt (%{info}): %{result}" }
				id => "message-000207"
				add_field => {
				"event_description" => "setsockopt"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000207"
					"[rsa][message][id1]" => "000207"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000208
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info>: Connection refused
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{info}: Connection refused" }
				id => "message-000208"
				add_field => {
				"event_description" => "connection refused"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000208"
					"[rsa][message][id1]" => "000208"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000209
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{action}" }
				id => "message-000209"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000209"
					"[rsa][message][id1]" => "000209"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId531
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Could not initialize <application>. See cryptoadm(1M). <result>. Error: <info>.
	else if [logstash][msgparser][id] == "msgParserId531" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Could[\s]+not[\s]+initialize[\s]+(?<application>[^\.]*)\.[\s]+See[\s]+cryptoadm\(1M\)\.[\s]+(?<result>[^\.]*)\.[\s]+Error:[\s]+(?<info>[^\.]*)\.$" }
			id => "msgParserId531"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Could not initialize application"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId532
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId532" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId532"
			add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId533
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <protocol> cannot open one of the Tivoli Storage Manager logs or a related file: <filename> errno = <resultcode>, Error <result>
	else if [logstash][msgparser][id] == "msgParserId533" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{protocol} cannot open one of the Tivoli Storage Manager logs or a related file: %{filename} errno = %{resultcode}, Error %{result}" }
			id => "msgParserId533"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "cannot open Tivoli logs"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SC_daemon" {
		# MESSAGE 000595
		# line in RSA:  <agent> [ID <id> <event_source>.<severity>] SC unretrieved msg <event_time_string> [<action>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent} [ID %{id} %{event_source}.%{severity}] SC unretrieved msg %{event_time_string} [%{action}]" }
				id => "message-000595"
				add_field => {
				"event_description" => "SC unretrieved msg"
					"[event][id]" => "000595"
					"[rsa][message][id1]" => "000595"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000998
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-000998"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000998"
					"[rsa][message][id1]" => "000998"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId535
	# line in RSA:    <agent>[<process_id>]: <info> [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId535" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: %{info} [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId535"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "scfland_user" {
		# MESSAGE 000210
		# line in RSA:    <agent>: [ID <id> <event_source>.debug] <fld1>: [<info>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.debug] %{fld1}: [%{info}]: %{event_description}" }
				id => "message-000210"
				add_field => {
				"severity" => "debug"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000210"
					"[rsa][message][id1]" => "000210"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000211
		# line in RSA:    <agent>: [ID <id> <event_source>.debug] <info>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.debug] %{info}: %{event_description}" }
				id => "message-000211"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000211"
					"[rsa][message][id1]" => "000211"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "scponly_auth" {
		# MESSAGE 002341
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] chrooted binary in place, <action>()
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+chrooted[\s]+binary[\s]+in[\s]+place,[\s]+(?<action>[^\(]*)\(\)$" }
				id => "message-002341"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "chrooted binary in place"
					"[event][id]" => "002341"
					"[rsa][message][id1]" => "002341"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001677
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] running: <process> (username:<username>(<network_port>), IP/port: <info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] running: %{process} (username:%{username}(%{network_port}), IP/port: %{info})" }
				id => "message-001677"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "running sftp-server"
					"[event][id]" => "001677"
					"[rsa][message][id1]" => "001677"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001938
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] failed: <interface> (username:<username>(<port>), IP/port: <info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] failed: %{interface} (username:%{username}(%{port}), IP/port: %{info})" }
				id => "message-001938"
				add_field => {
				"event_description" => "failed sftp-server"
					"[event][id]" => "001938"
					"[rsa][message][id1]" => "001938"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId539
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <application> Event <obj_name> was successful with a status of <resultcode> 
	else if [logstash][msgparser][id] == "msgParserId539" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{application} Event %{obj_name} was successful with a status of %{resultcode}" }
			id => "msgParserId539"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Event successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId540
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] server address: <hostip>
	else if [logstash][msgparser][id] == "msgParserId540" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] server address: %{hostip}" }
			id => "msgParserId540"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "seagent_auth" {
		# MESSAGE 002309
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] pam_vas: Authentication <<failed> for <<<info>> user: <<<username>> account: <<<fqdn>> service: <<<service>> reason: <<<result>> Access Control Identifier(UPN):<<<user_address>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+pam_vas:[\s]+Authentication[\s]+<failed>[\s]+for[\s]+<(?<info>[^>]*)>[\s]+user:[\s]+<(?<username>[^>]*)>[\s]+account:[\s]+<(?<fqdn>[^>]*)>[\s]+service:[\s]+<(?<service>[^>]*)>[\s]+reason:[\s]+<(?<result>[^>]*)>[\s]+Access[\s]+Control[\s]+Identifier\(UPN\):<(?<user_address>[^>]*)>$" }
				id => "message-002309"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Authentication failed for user"
					"[event][id]" => "002309"
					"[rsa][message][id1]" => "002309"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002310
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_vas: Authentication <<succeeded> for <<<info>> user: <<<username>> account: <<<fqdn>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_vas: Authentication <succeeded> for <%{info}> user: <%{username}> account: <%{fqdn}> service: <%{service}> reason: <%{result}>" }
				id => "message-002310"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "002310"
					"[rsa][message][id1]" => "002310"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001950
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Authentication failed for user: <username> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Authentication[\s]+failed[\s]+for[\s]+user:[\s]+(?<username>[^\s]*)[\s]+$" }
				id => "message-001950"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Authentication failed for user"
					"[event][id]" => "001950"
					"[rsa][message][id1]" => "001950"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001951
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] pam_unix_auth: user <username> not found 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+pam_unix_auth:[\s]+user[\s]+(?<username>[^\s]*)[\s]+not[\s]+found[\s]+$" }
				id => "message-001951"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication failure"
				"result" => "user not found"
					"[event][id]" => "001951"
					"[rsa][message][id1]" => "001951"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId545
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] open_logfile: Error opening [<filename>] <info>
	else if [logstash][msgparser][id] == "msgParserId545" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] open_logfile: Error opening [%{filename}] %{info}" }
			id => "msgParserId545"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sendmail_mail" {
		# MESSAGE 002538
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1>: from=<<<from>>, size=<bytes>, class=<fld45>, nrcpts=<fld46>, msgid=<<<id1>>, proto=<protocol>, daemon=<fld3>, relay=<shost> [<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+from=<(?<from>[^>]*)>,[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld45>[^,]*),[\s]+nrcpts=(?<fld46>[^,]*),[\s]+msgid=<(?<id1>[^>]*)>,[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<fld3>[^,]*),[\s]+relay=(?<shost>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]$" }
				id => "message-002538"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "002538"
					"[rsa][message][id1]" => "002538"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002537
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1>: from=<<<from>>, size=<bytes>, class=<fld45>, nrcpts=<fld46>, proto=<protocol>, daemon=<fld2>, relay=<shost> [<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+from=<(?<from>[^>]*)>,[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld45>[^,]*),[\s]+nrcpts=(?<fld46>[^,]*),[\s]+proto=(?<protocol>[^,]*),[\s]+daemon=(?<fld2>[^,]*),[\s]+relay=(?<shost>[^\s]*)[\s]+\[(?<saddr>[^\]]*)\]$" }
				id => "message-002537"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "002537"
					"[rsa][message][id1]" => "002537"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002533
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1>: from=<from>, size=<bytes>, class=<fld45>, nrcpts=<fld46>, msgid=<<<id1>>, relay=<shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld45>[^,]*),[\s]+nrcpts=(?<fld46>[^,]*),[\s]+msgid=<(?<id1>[^>]*)>,[\s]+relay=(?<shost>.*)$" }
				id => "message-002533"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "002533"
					"[rsa][message][id1]" => "002533"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002534
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1>: {to=<<<to>>, ctladdr=<<<id1>><fld37>|to=<to>, ctladdr=<id1><fld38>}, delay=<fld36>, xdelay=<fld35>, mailer=<fld34>, pri=<fld33>, relay=<fld44>, dsn=<fld45>, stat=<info>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 002535
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1>: {to=<to>, ctladdr=<id1><fld37>, delay=<fld36>, xdelay=<fld35>, mailer=<fld34>, pri=<fld33>, relay=<fld44>|to=<to>, delay=<fld36>, mailer=<fld44>, pri=<fld43>}, dsn=<fld45>, stat=<info>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 000832
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] {<fld1>: forward <directory>: <info>|My unqualified host name (<hostname>) unknown; sleeping for retry|unable to qualify my own domain name (<domain>) -- using short name|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+((?<fld1>[^:]*):[\s]+forward[\s]+(?<directory>[^:]*):[\s]+(?<info>.*)|My[\s]+unqualified[\s]+host[\s]+name[\s]+\((?<hostname>[^\)]*)\)[\s]+unknown;[\s]+sleeping[\s]+for[\s]+retry|unable[\s]+to[\s]+qualify[\s]+my[\s]+own[\s]+domain[\s]+name[\s]+\((?<domain>[^\)]*)\)[\s]+\-\-[\s]+using[\s]+short[\s]+name|(?<event_description>.*))$" }
				id => "message-000832"
				add_field => {
					"[event][id]" => "000832"
					"[rsa][message][id1]" => "000832"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sendmail_user" {
		# MESSAGE 002536
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1>: from=<from>, size=<bytes>, class=<fld45>, nrcpts=<fld46>, msgid=<fld2>, relay=<shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+from=(?<from>[^,]*),[\s]+size=(?<bytes>[^,]*),[\s]+class=(?<fld45>[^,]*),[\s]+nrcpts=(?<fld46>[^,]*),[\s]+msgid=(?<fld2>[^,]*),[\s]+relay=(?<shost>.*)$" }
				id => "message-002536"
				add_field => {
				"ec_subject" => "EmailAddress"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
					"[event][id]" => "002536"
					"[rsa][message][id1]" => "002536"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000545
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000545"
				add_field => {
					"[event][id]" => "000545"
					"[rsa][message][id1]" => "000545"
					"[event][categoryid]" => "1207000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId554
	# line in RSA:  <process_id>]: [ID <id> <event_source>.<severity>] Server <hostip> wasnt heard from for <duration> sec, <result>
	else if [logstash][msgparser][id] == "msgParserId554" {
		dissect {
			mapping => { "message" => "%{process_id}]: [ID %{id} %{event_source}.%{severity}] Server %{hostip} wasnt heard from for %{duration} sec, %{result}" }
			id => "msgParserId554"
			add_field => {
				"event_description" => "Server not respondingt"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sesu_auth" {
		# MESSAGE 002476
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] FAILED password attempt for user <username> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] FAILED password attempt for user %{username} on %{terminal}" }
				id => "message-002476"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"hostname" => "%{hhost}"
				"event_description" => "authentication failure"
				"action" => "failed password attempt for user"
					"[event][id]" => "002476"
					"[rsa][message][id1]" => "002476"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002477
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <username> to root on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{username} to root on %{terminal}" }
				id => "message-002477"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{hhost}"
				"event_description" => "successful login by user as root"
					"[event][id]" => "002477"
					"[rsa][message][id1]" => "002477"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sesudo_auth" {
		# MESSAGE 001996
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] ipremote: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ipremote:[\s]+(?<event_description>.*)$" }
				id => "message-001996"
				add_field => {
				"event_computer" => "%{hhostip}"
				"application" => "ipremote"
					"[event][id]" => "001996"
					"[rsa][message][id1]" => "001996"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001997
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Command '<username>', (<info>), <space> performed by <c_username>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Command[\s]+'(?<username>[^']*)',[\s]+\((?<info>[^\)]*)\),[\s]+(?<space>[^\s]*)[\s]+performed[\s]+by[\s]+(?<c_username>[^\.]*)\.$" }
				id => "message-001997"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "successful su"
					"[event][id]" => "001997"
					"[rsa][message][id1]" => "001997"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001998
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process> function ended with errors.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^\s]*)[\s]+function[\s]+ended[\s]+with[\s]+errors\.$" }
				id => "message-001998"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "function ended with errors"
					"[event][id]" => "001998"
					"[rsa][message][id1]" => "001998"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "settlea_user" {
		# MESSAGE 002347
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <process> Event <event_type> was successful with a status of <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{process} Event %{event_type} was successful with a status of %{resultcode}" }
				id => "message-002347"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Event successful"
					"[event][id]" => "002347"
					"[rsa][message][id1]" => "002347"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002348
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-002348"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002348"
					"[rsa][message][id1]" => "002348"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId559
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] removing <info> (<result>)
	else if [logstash][msgparser][id] == "msgParserId559" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] removing %{info} (%{result})" }
			id => "msgParserId559"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "removing mount"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId560
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Cannot stat file '<filename>' (errno=<resultcode>)
	else if [logstash][msgparser][id] == "msgParserId560" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Cannot stat file '%{filename}' (errno=%{resultcode})" }
			id => "msgParserId560"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Cannot stat file"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sunsuppo_local3" {
		# MESSAGE 001263
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <daddr> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{daddr} ( from %{saddr})" }
				id => "message-001263"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001263"
					"[rsa][message][id1]" => "001263"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001298
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <daddr> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{daddr} (Connected from %{saddr})" }
				id => "message-001298"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001298"
					"[rsa][message][id1]" => "001298"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SEAGENT_auth" {
		# MESSAGE 000214
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connection from <saddr>:<sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connection from %{saddr}:%{sport}" }
				id => "message-000214"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "000214"
					"[rsa][message][id1]" => "000214"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000215
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000215"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000215"
					"[rsa][message][id1]" => "000215"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId564
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] { reboot | halt | shutdown } by <username>  
	else if [logstash][msgparser][id] == "msgParserId564" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*reboot[\s]+|[\s]*halt[\s]+|[\s]*shutdown[\s]+)[\s]+by[\s]+(?<username>[^\s]*)[\s]+$" }
			id => "msgParserId564"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "shutdown by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd_auth" {
		# MESSAGE 000217
		# line in RSA:   { <agent>[<process_id>] | <agent> }: [ID <id> <event_source>.<severity>] pam_login_limit(acct): Successful attempt for user '<username>' 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\][\s]+|[\s]*(?<agent>[^\s]*)[\s]+):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+pam_login_limit\(acct\):[\s]+Successful[\s]+attempt[\s]+for[\s]+user[\s]+'(?<username>[^']*)'[\s]+$" }
				id => "message-000217"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "000217"
					"[rsa][message][id1]" => "000217"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000218
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] roles pam_sm_authenticate, service = <service> user = <username> ruser = <c_username> rhost = <dhost> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+roles[\s]+pam_sm_authenticate,[\s]+service[\s]+=[\s]+(?<service>[^\s]*)[\s]+user[\s]+=[\s]+(?<username>[^\s]*)[\s]+ruser[\s]+=[\s]+(?<c_username>[^\s]*)[\s]+rhost[\s]+=[\s]+(?<dhost>[^\s]*)[\s]+$" }
				id => "message-000218"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user authenticated"
					"[event][id]" => "000218"
					"[rsa][message][id1]" => "000218"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000219
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted { rsa | password } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Accepted[\s]+([\s]*rsa[\s]+|[\s]*password[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000219"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user password accepted"
					"[event][id]" => "000219"
					"[rsa][message][id1]" => "000219"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000220
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted keyboard-{ interactive/boksauth | interactive/pam | interactive } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Accepted[\s]+keyboard\-([\s]*interactive/boksauth[\s]+|[\s]*interactive/pam[\s]+|[\s]*interactive[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000220"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"result" => "accepted keyboard-interactive"
				"event_description" => "user password accepted"
					"[event][id]" => "000220"
					"[rsa][message][id1]" => "000220"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000221
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted publickey for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Accepted publickey for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-000221"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user public key accepted"
					"[event][id]" => "000221"
					"[rsa][message][id1]" => "000221"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000222
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Connection from <saddr> port <sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Connection from %{saddr} port %{sport}" }
				id => "message-000222"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connected"
					"[event][id]" => "000222"
					"[rsa][message][id1]" => "000222"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002379
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: opening connection; tty: <terminal>; pid: <child_pid>; ppid: <parent_pid>; service: <service>; remote_host: <dhost>; user: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: opening connection; tty: %{terminal}; pid: %{child_pid}; ppid: %{parent_pid}; service: %{service}; remote_host: %{dhost}; user: %{username}" }
				id => "message-002379"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "opening Connection"
					"[event][id]" => "002379"
					"[rsa][message][id1]" => "002379"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000224
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: Timeout before authentication for <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: Timeout before authentication for %{saddr}" }
				id => "message-000224"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "timeout before authentication"
				"event_description" => "authentication failure"
					"[event][id]" => "000224"
					"[rsa][message][id1]" => "000224"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000225
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: Failed to change password for <username>, <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: Failed to change password for %{username}, %{result}" }
				id => "message-000225"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "failed to change password"
					"[event][id]" => "000225"
					"[rsa][message][id1]" => "000225"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000226
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: Password change for <username> failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: Password change for %{username} failed" }
				id => "message-000226"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "failed to change password"
					"[event][id]" => "000226"
					"[rsa][message][id1]" => "000226"
					"[event][categoryid]" => "1402040101"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000227
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: <action> (unable to change with privsep)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: %{action} (unable to change with privsep)" }
				id => "message-000227"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "unable to change password"
					"[event][id]" => "000227"
					"[rsa][message][id1]" => "000227"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000228
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: Read from socket failed: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: Read from socket failed: %{result}" }
				id => "message-000228"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "read socket failure"
					"[event][id]" => "000228"
					"[rsa][message][id1]" => "000228"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000229
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: Cannot bind any address 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: Cannot bind any address" }
				id => "message-000229"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Cannot bind any address"
					"[event][id]" => "000229"
					"[rsa][message][id1]" => "000229"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000230
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: Write failed: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: Write failed: %{result}" }
				id => "message-000230"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Write failure"
					"[event][id]" => "000230"
					"[rsa][message][id1]" => "000230"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000231
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: xmalloc: <result> (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: xmalloc: %{result} (%{info})" }
				id => "message-000231"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "xmallocfalure"
					"[event][id]" => "000231"
					"[rsa][message][id1]" => "000231"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000232
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: Auditing of login failed: <result> (<info>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: Auditing of login failed: %{result} (%{info})" }
				id => "message-000232"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Auditing of login failed"
					"[event][id]" => "000232"
					"[rsa][message][id1]" => "000232"
					"[event][categoryid]" => "1612010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000233
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: monitor_read: <result> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: monitor_read: %{result} %{info}" }
				id => "message-000233"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "monitor_read"
					"[event][id]" => "000233"
					"[rsa][message][id1]" => "000233"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000234
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: mm_request_send: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: mm_request_send: %{info}" }
				id => "message-000234"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "mm_request_send"
					"[event][id]" => "000234"
					"[rsa][message][id1]" => "000234"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000235
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] fatal: cipher_init: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] fatal: cipher_init: %{result}" }
				id => "message-000235"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "cipher_init failure"
					"[event][id]" => "000235"
					"[rsa][message][id1]" => "000235"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000236
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] error: PAM: Authentication failed for <username> from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] error: PAM: Authentication failed for %{username} from %{saddr}" }
				id => "message-000236"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "PAM error"
				"event_description" => "authentication failure"
					"[event][id]" => "000236"
					"[rsa][message][id1]" => "000236"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000237
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> not allowed because <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} not allowed because %{result}" }
				id => "message-000237"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "user not allowed"
					"[event][id]" => "000237"
					"[rsa][message][id1]" => "000237"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000238
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed keyboard-{ interactive/boksauth | interactive/pam | interactive } for { illegal user <username> | <username> } from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Failed[\s]+keyboard\-([\s]*interactive/boksauth[\s]+|[\s]*interactive/pam[\s]+|[\s]*interactive[\s]+)[\s]+for[\s]+([\s]*illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000238"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "failed keyboard-interactive"
				"event_description" => "login failure"
					"[event][id]" => "000238"
					"[rsa][message][id1]" => "000238"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000239
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed rsa for <username> from <saddr> port <sport> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Failed rsa for %{username} from %{saddr} port %{sport}" }
				id => "message-000239"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "failed rsa"
				"event_description" => "login failure"
					"[event][id]" => "000239"
					"[rsa][message][id1]" => "000239"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000240
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed gssapi-with-mic for <<<username>> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Failed gssapi-with-mic for <%{username}> from %{saddr} port %{sport} %{protocol}" }
				id => "message-000240"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "failed gssapi-with-mic"
				"event_description" => "login failure"
					"[event][id]" => "000240"
					"[rsa][message][id1]" => "000240"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000241
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Postponed { keyboard-interactive/pam | keyboard-interactive } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Postponed[\s]+([\s]*keyboard\-interactive/pam[\s]+|[\s]*keyboard\-interactive[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000241"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "postponed keyboard-interactive"
				"event_description" => "login failure"
					"[event][id]" => "000241"
					"[rsa][message][id1]" => "000241"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000242
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Postponed publickey for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Postponed publickey for %{username} from %{saddr} port %{sport} %{protocol}" }
				id => "message-000242"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "user public key Postponed"
					"[event][id]" => "000242"
					"[rsa][message][id1]" => "000242"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000244
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed none for { illegal user <username> | invalid user <username> } from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Failed[\s]+none[\s]+for[\s]+([\s]*illegal[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*invalid[\s]+user[\s]+(?<username>[^\s]*)[\s]+)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000244"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"result" => "illegal or invalid user"
				"event_description" => "authentication refused"
					"[event][id]" => "000244"
					"[rsa][message][id1]" => "000244"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000243
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed none for { << <username>> | <username>} from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Failed[\s]+none[\s]+for[\s]+([\s]*<[\s]+(?<username>[^>]*)>[\s]+|[\s]*(?<username>[^\s]*))[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000243"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication refused"
					"[event][id]" => "000243"
					"[rsa][message][id1]" => "000243"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000245
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Failed { password | publickey } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Failed[\s]+([\s]*password[\s]+|[\s]*publickey[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-000245"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "failed password or publickey"
				"event_description" => "login failure"
					"[event][id]" => "000245"
					"[rsa][message][id1]" => "000245"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000246
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Authentication refused: <result> for { directory | file } <filename> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Authentication[\s]+refused:[\s]+(?<result>[^\s]*)[\s]+for[\s]+([\s]*directory[\s]+|[\s]*file[\s]+)[\s]+(?<filename>[^\s]*)[\s]+$" }
				id => "message-000246"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication refused"
					"[event][id]" => "000246"
					"[rsa][message][id1]" => "000246"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000247
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] RSA authentication refused for <username>: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] RSA authentication refused for %{username}: %{result}" }
				id => "message-000247"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication refused"
					"[event][id]" => "000247"
					"[rsa][message][id1]" => "000247"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000248
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { Illegal | Invalid } user <username> from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Illegal[\s]+|[\s]*Invalid[\s]+)[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-000248"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "invalid user"
					"[event][id]" => "000248"
					"[rsa][message][id1]" => "000248"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000249
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] input_userauth_request: illegal user <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] input_userauth_request: illegal user %{username}" }
				id => "message-000249"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "illegal user"
				"event_description" => "user authentication request"
					"[event][id]" => "000249"
					"[rsa][message][id1]" => "000249"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000250
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Received disconnect: <info>: Unable to authenticate
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Received disconnect: %{info}: Unable to authenticate" }
				id => "message-000250"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Received disconnect"
				"result" => "Unable to authenticate"
					"[event][id]" => "000250"
					"[rsa][message][id1]" => "000250"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000251
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Received { disconnect from <saddr> | disconnect }: <info>: Done with connection 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Received[\s]+([\s]*disconnect[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+|[\s]*disconnect[\s]+):[\s]+(?<info>[^:]*):[\s]+Done[\s]+with[\s]+connection[\s]+$" }
				id => "message-000251"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disconnect received"
				"result" => "Done with connection"
					"[event][id]" => "000251"
					"[rsa][message][id1]" => "000251"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000252
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Did not receive { identification | ident } string from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Did[\s]+not[\s]+receive[\s]+([\s]*identification[\s]+|[\s]*ident[\s]+)[\s]+string[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-000252"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"result" => "no identification string"
				"event_description" => "connection error"
					"[event][id]" => "000252"
					"[rsa][message][id1]" => "000252"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000253
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Could not write ident string to <daddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Could not write ident string to %{daddr}" }
				id => "message-000253"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "no identification string"
				"event_description" => "connection error"
					"[event][id]" => "000253"
					"[rsa][message][id1]" => "000253"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000254
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Could not reverse map address <saddr>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Could not reverse map address %{saddr}." }
				id => "message-000254"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"result" => "map address failure"
				"event_description" => "connection failure"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000254"
					"[rsa][message][id1]" => "000254"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000256
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { wtmp_write | lastlog_perform_login }: problem writing <filename>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*wtmp_write[\s]+|[\s]*lastlog_perform_login[\s]+):[\s]+problem[\s]+writing[\s]+(?<filename>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-000256"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000256"
					"[rsa][message][id1]" => "000256"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000257
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info>: open failed: connect failed: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{info}: open failed: connect failed: %{result}" }
				id => "message-000257"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "open/connect failure"
					"[event][id]" => "000257"
					"[rsa][message][id1]" => "000257"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000258
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] lastlog_openseek: <filename> is not a file or directory!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] lastlog_openseek: %{filename} is not a file or directory!" }
				id => "message-000258"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "lastlog_openseek"
					"[event][id]" => "000258"
					"[rsa][message][id1]" => "000258"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000259
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> password has expired (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} password has expired (%{result})" }
				id => "message-000259"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "password expired"
					"[event][id]" => "000259"
					"[rsa][message][id1]" => "000259"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000260
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Disconnecting: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Disconnecting: %{result}" }
				id => "message-000260"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "Disconnecting"
					"[event][id]" => "000260"
					"[rsa][message][id1]" => "000260"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000261
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Disabling protocol version <info>. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Disabling protocol version %{info}. %{result}" }
				id => "message-000261"
				add_field => {
				"event_description" => "Disabling protocol version"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000261"
					"[rsa][message][id1]" => "000261"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000262
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] reverse mapping checking getaddrinfo for <fqdn> failed - <result>!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] reverse mapping checking getaddrinfo for %{fqdn} failed - %{result}!" }
				id => "message-000262"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "reverse mapping checking getaddrinfo failed"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000262"
					"[rsa][message][id1]" => "000262"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000263
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Keyboard-interactive (PAM) userauth failed[<info>] while { authenticating | authorizing }: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Keyboard\-interactive[\s]+\(PAM\)[\s]+userauth[\s]+failed\[(?<info>[^\]]*)\][\s]+while[\s]+([\s]*authenticating[\s]+|[\s]*authorizing[\s]+):[\s]+(?<action>.*)$" }
				id => "message-000263"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "userauth failure while authorizing"
					"[event][id]" => "000263"
					"[rsa][message][id1]" => "000263"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000264
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <username> LOGIN REFUSED FROM <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{username} LOGIN REFUSED FROM %{saddr}" }
				id => "message-000264"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "LOGIN REFUSED"
					"[event][id]" => "000264"
					"[rsa][message][id1]" => "000264"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000265
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] lastlog_get_entry: Error reading from <filename>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] lastlog_get_entry: Error reading from %{filename}: %{result}" }
				id => "message-000265"
				add_field => {
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Error reading from file"
					"[event][id]" => "000265"
					"[rsa][message][id1]" => "000265"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000266
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Keyboard-interactive (PAM) userauth failed[<info>] while changing authentication tokens (password): <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Keyboard-interactive (PAM) userauth failed[%{info}] while changing authentication tokens (password): %{action}" }
				id => "message-000266"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "Keyboard-interactive (PAM) userauth"
					"[event][id]" => "000266"
					"[rsa][message][id1]" => "000266"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000267
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] PAM pam_chauthtok failed[<info>]: Authentication token manipulation error
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] PAM pam_chauthtok failed[%{info}]: Authentication token manipulation error" }
				id => "message-000267"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "PAM pam_chauthtok failed"
				"result" => "Authentication token manipulation error"
					"[event][id]" => "000267"
					"[rsa][message][id1]" => "000267"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000269
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] userauth_pubkey: unsupported public key algorithm: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] userauth_pubkey: unsupported public key algorithm: %{info}" }
				id => "message-000269"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "unsupported public key algorithm"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000269"
					"[rsa][message][id1]" => "000269"
					"[event][categoryid]" => "1613030100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000270
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Authentication tried for <username> with correct key but not from a permitted host (host=<hostname>, ip=<saddr>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Authentication tried for %{username} with correct key but not from a permitted host (host=%{hostname}, ip=%{saddr})." }
				id => "message-000270"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication failure"
				"result" => "correct key but not from a permitted host"
					"[event][id]" => "000270"
					"[rsa][message][id1]" => "000270"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000271
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Received {disconnect from <saddr> | disconnect }: <info>: Disconnect requested by Windows <protocol> Client. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Received[\s]+(disconnect[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+|[\s]*disconnect[\s]+):[\s]+(?<info>[^:]*):[\s]+Disconnect[\s]+requested[\s]+by[\s]+Windows[\s]+(?<protocol>[^\s]*)[\s]+Client\.[\s]+$" }
				id => "message-000271"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Received disconnect"
				"result" => "Disconnect requested by Windows Client"
					"[event][id]" => "000271"
					"[rsa][message][id1]" => "000271"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000272
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Key exchange failed in remote: 'Key exchange failed.'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Key exchange failed in remote: 'Key exchange failed.'" }
				id => "message-000272"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Key exchange failure"
				"result" => "Key exchange failed in remote"
					"[event][id]" => "000272"
					"[rsa][message][id1]" => "000272"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000273
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Bad protocol version identification '<info>' from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Bad protocol version identification '%{info}' from %{saddr}" }
				id => "message-000273"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Bad protocol version identification"
					"[event][id]" => "000273"
					"[rsa][message][id1]" => "000273"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000275
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] PAM rejected by account configuration[<fld1>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] PAM rejected by account configuration[%{fld1}]: %{info}" }
				id => "message-000275"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "PAM rejected by account configuration"
					"[event][id]" => "000275"
					"[rsa][message][id1]" => "000275"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000276
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_setcred: error <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_setcred: error %{info}" }
				id => "message-000276"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "pam_setcred error"
					"[event][id]" => "000276"
					"[rsa][message][id1]" => "000276"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000277
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Protocol major versions differ for <hostip>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Protocol major versions differ for %{hostip}: %{info}" }
				id => "message-000277"
				add_field => {
				"event_description" => "Protocol major versions differ"
					"[event][id]" => "000277"
					"[rsa][message][id1]" => "000277"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000857
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Server listening on { :: | <hostip>} port <network_port>. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Server[\s]+listening[\s]+on[\s]+([\s]*::[\s]+|[\s]*(?<hostip>[^\s]*))[\s]+port[\s]+(?<network_port>[^\.]*)\.[\s]+$" }
				id => "message-000857"
				add_field => {
				"event_description" => "Server listening on port"
					"[event][id]" => "000857"
					"[rsa][message][id1]" => "000857"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000858
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Kerberos mechanism library initialization error: Can't open/find Kerberos <filename> configuration file. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Kerberos mechanism library initialization error: Can't open/find Kerberos %{filename} configuration file." }
				id => "message-000858"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Kerberos mechanism library initialization error"
					"[event][id]" => "000858"
					"[rsa][message][id1]" => "000858"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000859
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Received signal <info>; terminating.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Received signal %{info}; terminating." }
				id => "message-000859"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "terminating"
				"result" => "Received signal"
					"[event][id]" => "000859"
					"[rsa][message][id1]" => "000859"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000860
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Received disconnect from <saddr>: <sport>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Received disconnect from %{saddr}: %{sport}: %{info}" }
				id => "message-000860"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disconnect"
					"[event][id]" => "000860"
					"[rsa][message][id1]" => "000860"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000861
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Read error from remote host <interface>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Read error from remote host %{interface}: %{result}" }
				id => "message-000861"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disconnect"
					"[event][id]" => "000861"
					"[rsa][message][id1]" => "000861"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000856
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { Connection closed by | Closing connection to } <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Connection[\s]+closed[\s]+by[\s]+|[\s]*Closing[\s]+connection[\s]+to[\s]+)[\s]+(?<saddr>.*)$" }
				id => "message-000856"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection closed"
					"[event][id]" => "000856"
					"[rsa][message][id1]" => "000856"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002380
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: closing connection; tty: <terminal>; pid: <child_pid>; ppid: <parent_pid>; service: <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: closing connection; tty: %{terminal}; pid: %{child_pid}; ppid: %{parent_pid}; service: %{service}" }
				id => "message-002380"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "closing Connection"
					"[event][id]" => "002380"
					"[rsa][message][id1]" => "002380"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001981
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Found matching <encryption_type>: <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Found matching %{encryption_type}: %{fld1}" }
				id => "message-001981"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Found matching encryption"
					"[event][id]" => "001981"
					"[rsa][message][id1]" => "001981"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000278
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info> { ; | : } <action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+(?<action>[^\s]*)[\s]+$" }
				id => "message-000278"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000278"
					"[rsa][message][id1]" => "000278"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001949
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connection from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connection[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-001949"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001949"
					"[rsa][message][id1]" => "001949"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001959
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] PAM password accepted for user <username>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+PAM[\s]+password[\s]+accepted[\s]+for[\s]+user[\s]+(?<username>.*)$" }
				id => "message-001959"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "password accepted for usert"
					"[event][id]" => "001959"
					"[rsa][message][id1]" => "001959"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001960
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Password authentication for user <username> accepted.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Password[\s]+authentication[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+accepted\.$" }
				id => "message-001960"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "password accepted for usert"
					"[event][id]" => "001960"
					"[rsa][message][id1]" => "001960"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001961
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] User <username>, coming from <saddr>, authenticated.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+User[\s]+(?<username>[^,]*),[\s]+coming[\s]+from[\s]+(?<saddr>[^,]*),[\s]+authenticated\.$" }
				id => "message-001961"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user authenticated"
					"[event][id]" => "001961"
					"[rsa][message][id1]" => "001961"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001962
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Public key <filename> used.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Public[\s]+key[\s]+(?<filename>[^\s]*)[\s]+used\.$" }
				id => "message-001962"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "public key used"
					"[event][id]" => "001962"
					"[rsa][message][id1]" => "001962"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001963
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Public key { authentication for user <username> | <filename> } accepted.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Public[\s]+key[\s]+([\s]*authentication[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+|[\s]*(?<filename>[^\s]*)[\s]+)[\s]+accepted\.$" }
				id => "message-001963"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "public key accepted"
					"[event][id]" => "001963"
					"[rsa][message][id1]" => "001963"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001964
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Password authentication for user <username> failed (from <saddr> port <sport>).
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Password[\s]+authentication[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+failed[\s]+\(from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\)]*)\)\.$" }
				id => "message-001964"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Password authentication failed for user"
					"[event][id]" => "001964"
					"[rsa][message][id1]" => "001964"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001965
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] PAM transaction resulted in error.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+PAM[\s]+transaction[\s]+resulted[\s]+in[\s]+error\.$" }
				id => "message-001965"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "transaction resulted in error"
					"[event][id]" => "001965"
					"[rsa][message][id1]" => "001965"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001966
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] password authentication failed. Login to account <username> not allowed or account non-existent.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+password[\s]+authentication[\s]+failed\.[\s]+Login[\s]+to[\s]+account[\s]+(?<username>[^\s]*)[\s]+not[\s]+allowed[\s]+or[\s]+account[\s]+non\-existent\.$" }
				id => "message-001966"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "password accepted for usert"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001966"
					"[rsa][message][id1]" => "001966"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001967
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] LoginGraceTime exceeded.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+LoginGraceTime[\s]+exceeded\.$" }
				id => "message-001967"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "LoginGraceTime exceeded"
					"[event][id]" => "001967"
					"[rsa][message][id1]" => "001967"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001968
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] User <username> forced to change password.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+User[\s]+(?<username>[^\s]*)[\s]+forced[\s]+to[\s]+change[\s]+password\.$" }
				id => "message-001968"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001968"
					"[rsa][message][id1]" => "001968"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001969
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] subsystem request for <protocol>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+subsystem[\s]+request[\s]+for[\s]+(?<protocol>.*)$" }
				id => "message-001969"
				add_field => {
				"ec_theme" => "Authentication"
				"event_computer" => "%{hhostip}"
				"event_description" => "subsystem request"
					"[event][id]" => "001969"
					"[rsa][message][id1]" => "001969"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001970
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] publickey authentication failed. Login to account <username> not allowed or account non-existent.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+publickey[\s]+authentication[\s]+failed\.[\s]+Login[\s]+to[\s]+account[\s]+(?<username>[^\s]*)[\s]+not[\s]+allowed[\s]+or[\s]+account[\s]+non\-existent\.$" }
				id => "message-001970"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "publickey authentication failed"
					"[event][id]" => "001970"
					"[rsa][message][id1]" => "001970"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001971
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Remote TCP/IP forwarding request received from host <saddr>, by authenticated user <username>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Remote[\s]+TCP/IP[\s]+forwarding[\s]+request[\s]+received[\s]+from[\s]+host[\s]+(?<saddr>[^,]*),[\s]+by[\s]+authenticated[\s]+user[\s]+(?<username>[^\.]*)\.$" }
				id => "message-001971"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001971"
					"[rsa][message][id1]" => "001971"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001972
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Port <network_port> set up for remote forwarding.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Port[\s]+(?<network_port>[^\s]*)[\s]+set[\s]+up[\s]+for[\s]+remote[\s]+forwarding\.$" }
				id => "message-001972"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001972"
					"[rsa][message][id1]" => "001972"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001973
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <privilege> login denied for user <username>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<privilege>[^\s]*)[\s]+login[\s]+denied[\s]+for[\s]+user[\s]+(?<username>[^\.]*)\.$" }
				id => "message-001973"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001973"
					"[rsa][message][id1]" => "001973"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001974
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Listener created on port <network_port>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Listener[\s]+created[\s]+on[\s]+port[\s]+(?<network_port>[^\.]*)\.$" }
				id => "message-001974"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001974"
					"[rsa][message][id1]" => "001974"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001975
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Daemon is running.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Daemon[\s]+is[\s]+running\.$" }
				id => "message-001975"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001975"
					"[rsa][message][id1]" => "001975"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000280
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Logout by <username> (<fld1> <terminal> <event_time_string> (<saddr>))
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Logout[\s]+by[\s]+(?<username>[^\s]*)[\s]+\((?<fld1>[^\s]*)[\s]+(?<terminal>[^\s]*)[\s]+(?<event_time_string>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)\)$" }
				id => "message-000280"
				add_field => {
				"event_computer" => "%{hhostip}"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Logged off"
					"[event][id]" => "000280"
					"[rsa][message][id1]" => "000280"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 000279
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>.*)$" }
				id => "message-000279"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000279"
					"[rsa][message][id1]" => "000279"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd_local3" {
		# MESSAGE 000268
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] error: Could not get shadow information for <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] error: Could not get shadow information for %{username}" }
				id => "message-000268"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"result" => "Could not get shadow information"
				"event_description" => "authentication failure"
					"[event][id]" => "000268"
					"[rsa][message][id1]" => "000268"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001652
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Accepted { rsa | password } for <username> from <saddr> port <sport> <protocol> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Accepted[\s]+([\s]*rsa[\s]+|[\s]*password[\s]+)[\s]+for[\s]+(?<username>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+port[\s]+(?<sport>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+$" }
				id => "message-001652"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user password accepted"
					"[event][id]" => "001652"
					"[rsa][message][id1]" => "001652"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001653
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info> { ; | : } <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+([\s]*;[\s]+|[\s]*:[\s]+)[\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-001653"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001653"
					"[rsa][message][id1]" => "001653"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001654
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001654"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001654"
					"[rsa][message][id1]" => "001654"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId649
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <resultcode> Auth_methods_available, Auth methods: <info>, Session-Id: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId649" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{resultcode} Auth_methods_available, Auth methods: %{info}, Session-Id: %{sessionid}" }
			id => "msgParserId649"
			add_field => {
				"event_description" => "Auth methods available"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId650
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>, Local username: <username>
	else if [logstash][msgparser][id] == "msgParserId650" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^,]*),[\s]+Local[\s]+username:[\s]+(?<username>.*)$" }
			id => "msgParserId650"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-mgmt-router_daemon" {
		# MESSAGE 001436
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Failed to connect to <daddr>:<dport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Failed[\s]+to[\s]+connect[\s]+to[\s]+(?<daddr>[^:]*):(?<dport>.*)$" }
				id => "message-001436"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection failure"
					"[event][id]" => "001436"
					"[rsa][message][id1]" => "001436"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001437
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Connected to management system via <fqdn>:<network_port>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Connected[\s]+to[\s]+management[\s]+system[\s]+via[\s]+(?<fqdn>[^:]*):(?<network_port>.*)$" }
				id => "message-001437"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connected to management system"
					"[event][id]" => "001437"
					"[rsa][message][id1]" => "001437"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001438
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001438"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001438"
					"[rsa][message][id1]" => "001438"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId653
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Excessive (<dclass_counter1>) login failures for <username>: <result>.
	else if [logstash][msgparser][id] == "msgParserId653" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Excessive (%{dclass_counter1}) login failures for %{username}: %{result}." }
			id => "msgParserId653"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "excessive login failures for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-server-g3_auth" {
		# MESSAGE 002404
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <resultcode> <event_description>, Username: <username>, { Auth methods: | Auth method: } <authmethod>, Src IP: <saddr>, Src Port: <sport>, Ver: <version> (<protocol>), Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+([\s]*Auth[\s]+methods:[\s]+|[\s]*Auth[\s]+method:[\s]+)[\s]+(?<authmethod>[^,]*),[\s]+Src[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+Src[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+Ver:[\s]+(?<version>[^\s]*)[\s]+\((?<protocol>[^\)]*)\),[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-002404"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002404"
					"[rsa][message][id1]" => "002404"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001439
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <resultcode> <event_description>, Username: <username>, { Auth methods: | Auth method: } <authmethod>, Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+([\s]*Auth[\s]+methods:[\s]+|[\s]*Auth[\s]+method:[\s]+)[\s]+(?<authmethod>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-001439"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001439"
					"[rsa][message][id1]" => "001439"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002421
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <resultcode> <event_description>, Username: <username>, Algorithm: <authmethod>, "<result> `<obj_name>'.", Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{resultcode} %{event_description}, Username: %{username}, Algorithm: %{authmethod}, \"%{result} `%{obj_name}'.\", Session-Id: %{sessionid}" }
				id => "message-002421"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002421"
					"[rsa][message][id1]" => "002421"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002405
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <resultcode> <event_description>, Username: <username>, Algorithm: <authmethod>, { "<result> (<obj_name>) in the user's authorization file (<filename>)", | "<result>", } Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Algorithm:[\s]+(?<authmethod>[^,]*),[\s]+([\s]*\"(?<result>[^\s]*)[\s]+\((?<obj_name>[^\)]*)\)[\s]+in[\s]+the[\s]+user's[\s]+authorization[\s]+file[\s]+\((?<filename>[^\)]*)\)\",[\s]+|[\s]*\"(?<result>[^\"]*)\",[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-002405"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002405"
					"[rsa][message][id1]" => "002405"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ssh-server-g3_daemon" {
		# MESSAGE 001440
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <info>, Policy name: <policyname>, Src: <shost>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, Ver: <version> <protocol> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{info}, Policy name: %{policyname}, Src: %{shost}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, Ver: %{version} %{protocol}" }
				id => "message-001440"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001440"
					"[rsa][message][id1]" => "001440"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002381
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Error: <result>, { Src IP: <saddr>, Dst IFace: <dinterface>, | Dst IFace: <dinterface>, } Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, { "<info>" | Ver: <version> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Error:[\s]+(?<result>[^,]*),[\s]+([\s]*Src[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+Dst[\s]+IFace:[\s]+(?<dinterface>[^,]*),[\s]+|[\s]*Dst[\s]+IFace:[\s]+(?<dinterface>[^,]*),[\s]+)[\s]+Dst[\s]+IP:[\s]+(?<daddr>[^,]*),[\s]+Src[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+Dst[\s]+Port:[\s]+(?<dport>[^,]*),[\s]+([\s]*\"(?<info>[^\"]*)\"[\s]+|[\s]*Ver:[\s]+(?<version>[^\s]*)[\s]+)$" }
				id => "message-002381"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002381"
					"[rsa][message][id1]" => "002381"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002406
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Username: <username>, { Src: <shost>, Src IP: <saddr>, | Src IP: <saddr>, } Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, Ver: <version> { (<protocol>), Session-Id: | , Session-Id: } <sessionid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+([\s]*Src:[\s]+(?<shost>[^,]*),[\s]+Src[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+|[\s]*Src[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+)[\s]+Dst[\s]+IFace:[\s]+(?<dinterface>[^,]*),[\s]+Dst[\s]+IP:[\s]+(?<daddr>[^,]*),[\s]+Src[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+Dst[\s]+Port:[\s]+(?<dport>[^,]*),[\s]+Ver:[\s]+(?<version>[^\s]*)[\s]+([\s]*\((?<protocol>[^\)]*)\),[\s]+Session\-Id:[\s]+|[\s]*,[\s]+Session\-Id:[\s]+)[\s]+(?<sessionid>[^\s]*)[\s]+$" }
				id => "message-002406"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002406"
					"[rsa][message][id1]" => "002406"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002407
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, { Src: <shost> Src IP: <saddr>, | Src IP: <saddr>, } Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, Ver: { <version> (<protocol>), | <version>, } Session-Id: <sessionid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+([\s]*Src:[\s]+(?<shost>[^\s]*)[\s]+Src[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+|[\s]*Src[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+)[\s]+Dst[\s]+IFace:[\s]+(?<dinterface>[^,]*),[\s]+Dst[\s]+IP:[\s]+(?<daddr>[^,]*),[\s]+Src[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+Dst[\s]+Port:[\s]+(?<dport>[^,]*),[\s]+Ver:[\s]+([\s]*(?<version>[^\s]*)[\s]+\((?<protocol>[^\)]*)\),[\s]+|[\s]*(?<version>[^,]*),[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>[^\s]*)[\s]+$" }
				id => "message-002407"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002407"
					"[rsa][message][id1]" => "002407"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002408
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, "<info>, Username: <username>, Session-Id: <sessionid>, Status: SUCCESS, File: "<filename>", Duration: <dclass_counter1> sec, Data: <bytes> bytes, Speed: <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{resultcode} %{event_description}, \"%{info}, Username: %{username}, Session-Id: %{sessionid}, Status: SUCCESS, File: \"%{filename}\", Duration: %{dclass_counter1} sec, Data: %{bytes} bytes, Speed: %{fld12}" }
				id => "message-002408"
				add_field => {
				"event_computer" => "%{hhostip}"
				"result" => "SUCCESS"
					"[event][id]" => "002408"
					"[rsa][message][id1]" => "002408"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002409
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, "<info>, { "<application> <disposition>", Username: | "<application>", Username: } <username>, Session-Id: { <sessionid>, "<action>", "<filename>" | <sessionid> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+\"(?<info>[^,]*),[\s]+([\s]*\"(?<application>[^\s]*)[\s]+(?<disposition>[^\"]*)\",[\s]+Username:[\s]+|[\s]*\"(?<application>[^\"]*)\",[\s]+Username:[\s]+)[\s]+(?<username>[^,]*),[\s]+Session\-Id:[\s]+([\s]*(?<sessionid>[^,]*),[\s]+\"(?<action>[^\"]*)\",[\s]+\"(?<filename>[^\"]*)\"[\s]+|[\s]*(?<sessionid>[^\s]*)[\s]+)$" }
				id => "message-002409"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002409"
					"[rsa][message][id1]" => "002409"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002410
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Username: <username>, Policy name: <policyname>, Session-Id: <sessionid> { , "<info>" | <space> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Policy[\s]+name:[\s]+(?<policyname>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>[^\s]*)[\s]+([\s]*,[\s]+\"(?<info>[^\"]*)\"[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
				id => "message-002410"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002410"
					"[rsa][message][id1]" => "002410"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002412
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Username: <username>, Success, { Command: <action>, Sub ID: <uid>, | Sub ID: <uid>, } Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Success,[\s]+([\s]*Command:[\s]+(?<action>[^,]*),[\s]+Sub[\s]+ID:[\s]+(?<uid>[^,]*),[\s]+|[\s]*Sub[\s]+ID:[\s]+(?<uid>[^,]*),[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-002412"
				add_field => {
				"event_computer" => "%{hhostip}"
				"result" => "Success"
					"[event][id]" => "002412"
					"[rsa][message][id1]" => "002412"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002413
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Username: <username>, { Command: <action>, Sub ID: <uid>, | Sub ID: <uid>, } Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+([\s]*Command:[\s]+(?<action>[^,]*),[\s]+Sub[\s]+ID:[\s]+(?<uid>[^,]*),[\s]+|[\s]*Sub[\s]+ID:[\s]+(?<uid>[^,]*),[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-002413"
				add_field => {
				"event_computer" => "%{hhostip}"
				"result" => "Success"
					"[event][id]" => "002413"
					"[rsa][message][id1]" => "002413"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002414
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Username: <username>, Session-Id: <sessionid>, Channel Id: <groupid>, Packet count: <packets>, { Packet size: <dclass_counter1>, Packet size: <dclass_counter2> | Packet size: <dclass_counter1> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>[^,]*),[\s]+Channel[\s]+Id:[\s]+(?<groupid>[^,]*),[\s]+Packet[\s]+count:[\s]+(?<packets>[^,]*),[\s]+([\s]*Packet[\s]+size:[\s]+(?<dclass_counter1>[^,]*),[\s]+Packet[\s]+size:[\s]+(?<dclass_counter2>[^\s]*)[\s]+|[\s]*Packet[\s]+size:[\s]+(?<dclass_counter1>[^\s]*)[\s]+)$" }
				id => "message-002414"
				add_field => {
				"event_computer" => "%{hhostip}"
				"result" => "Success"
					"[event][id]" => "002414"
					"[rsa][message][id1]" => "002414"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002415
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, "<info>, Directory name: <directory>, File handle: <id1>, "<result>", Session-Id: <sessionid>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{resultcode} %{event_description}, \"%{info}, Directory name: %{directory}, File handle: %{id1}, \"%{result}\", Session-Id: %{sessionid}\"" }
				id => "message-002415"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002415"
					"[rsa][message][id1]" => "002415"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002416
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, "<info>, File name: <filename>, Path: <directory>, "<result>", Session-Id: <sessionid>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{resultcode} %{event_description}, \"%{info}, File name: %{filename}, Path: %{directory}, \"%{result}\", Session-Id: %{sessionid}\"" }
				id => "message-002416"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002416"
					"[rsa][message][id1]" => "002416"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002382
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, { "<info>, Negotiated version: <version>, Session-Id: <sessionid>" | "<info>, Username: <username>, Session-Id: <sessionid>" | "<info>, Session-Id: <sessionid>" | "<info>", Session-Id: <sessionid> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+([\s]*\"(?<info>[^,]*),[\s]+Negotiated[\s]+version:[\s]+(?<version>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>[^\"]*)\"[\s]+|[\s]*\"(?<info>[^,]*),[\s]+Username:[\s]+(?<username>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>[^\"]*)\"[\s]+|[\s]*\"(?<info>[^,]*),[\s]+Session\-Id:[\s]+(?<sessionid>[^\"]*)\"[\s]+|[\s]*\"(?<info>[^\"]*)\",[\s]+Session\-Id:[\s]+(?<sessionid>[^\s]*)[\s]+)[\s]+$" }
				id => "message-002382"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002382"
					"[rsa][message][id1]" => "002382"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002417
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, { Username: <username>, File name: <filename>, | Username: <username>, } Session-Id: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+([\s]*Username:[\s]+(?<username>[^,]*),[\s]+File[\s]+name:[\s]+(?<filename>[^,]*),[\s]+|[\s]*Username:[\s]+(?<username>[^,]*),[\s]+)[\s]+Session\-Id:[\s]+(?<sessionid>.*)$" }
				id => "message-002417"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002417"
					"[rsa][message][id1]" => "002417"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002418
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Username: <username>, Reason: <result>, Src IP: <saddr>, Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, "<info>", Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{resultcode} %{event_description}, Username: %{username}, Reason: %{result}, Src IP: %{saddr}, Dst IFace: %{dinterface}, Dst IP: %{daddr}, Src Port: %{sport}, Dst Port: %{dport}, \"%{info}\", Session-Id: %{sessionid}" }
				id => "message-002418"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002418"
					"[rsa][message][id1]" => "002418"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002411
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Username: <username>, "<info>", Session-Id: <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{resultcode} %{event_description}, Username: %{username}, \"%{info}\", Session-Id: %{sessionid}" }
				id => "message-002411"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002411"
					"[rsa][message][id1]" => "002411"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002419
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Reason: <result>, { Src: <shost>, Src IP: <saddr>, | Src IP: <saddr>, } Dst IFace: <dinterface>, Dst IP: <daddr>, Src Port: <sport>, Dst Port: <dport>, "<info>", Session-Id: <sessionid> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<resultcode>[^\s]*)[\s]+(?<event_description>[^,]*),[\s]+Reason:[\s]+(?<result>[^,]*),[\s]+([\s]*Src:[\s]+(?<shost>[^,]*),[\s]+Src[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+|[\s]*Src[\s]+IP:[\s]+(?<saddr>[^,]*),[\s]+)[\s]+Dst[\s]+IFace:[\s]+(?<dinterface>[^,]*),[\s]+Dst[\s]+IP:[\s]+(?<daddr>[^,]*),[\s]+Src[\s]+Port:[\s]+(?<sport>[^,]*),[\s]+Dst[\s]+Port:[\s]+(?<dport>[^,]*),[\s]+\"(?<info>[^\"]*)\",[\s]+Session\-Id:[\s]+(?<sessionid>[^\s]*)[\s]+$" }
				id => "message-002419"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002419"
					"[rsa][message][id1]" => "002419"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002420
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <resultcode> <event_description>, Session-Id: <sessionid>, Protocol-session-Id: <id1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{resultcode} %{event_description}, Session-Id: %{sessionid}, Protocol-session-Id: %{id1}" }
				id => "message-002420"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002420"
					"[rsa][message][id1]" => "002420"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd2_auth" {
		# MESSAGE 001457
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Public key  <info> used. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Public key  %{info} used." }
				id => "message-001457"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Public key used"
					"[event][id]" => "001457"
					"[rsa][message][id1]" => "001457"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002080
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] audit Authentication: successful, Account: <username>, Public key fingerprint: <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] audit Authentication: successful, Account: %{username}, Public key fingerprint: %{fld1}" }
				id => "message-002080"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful authentication"
					"[event][id]" => "002080"
					"[rsa][message][id1]" => "002080"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000281
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { Password | Public key } authentication for user <username> accepted. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Password[\s]+|[\s]*Public[\s]+key[\s]+)[\s]+authentication[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+accepted\.[\s]+$" }
				id => "message-000281"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful authentication"
					"[event][id]" => "000281"
					"[rsa][message][id1]" => "000281"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000282
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username>'s local password accepted.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username}'s local password accepted." }
				id => "message-000282"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user local password accepted"
					"[event][id]" => "000282"
					"[rsa][message][id1]" => "000282"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000283
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> { (uid <uid>), | , }  coming from <saddr>, authenticated. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+User[\s]+(?<username>[^\s]*)[\s]+([\s]*\(uid[\s]+(?<uid>[^\)]*)\),[\s]+|[\s]*,[\s]+)[\s]+coming[\s]+from[\s]+(?<saddr>[^,]*),[\s]+authenticated\.[\s]+$" }
				id => "message-000283"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user authenticated"
					"[event][id]" => "000283"
					"[rsa][message][id1]" => "000283"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000284
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: can't get client address: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: can't get client address: %{result}" }
				id => "message-000284"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "can't get client address"
					"[event][id]" => "000284"
					"[rsa][message][id1]" => "000284"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000285
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Now running on <username> privileges.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Now running on %{username} privileges." }
				id => "message-000285"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000285"
					"[rsa][message][id1]" => "000285"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002076
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connection from "<saddr>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connection from \"%{saddr}\"" }
				id => "message-002076"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "002076"
					"[rsa][message][id1]" => "002076"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002077
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] PAM password accepted for user <username>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] PAM password accepted for user %{username}." }
				id => "message-002077"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "PAM password accepted"
					"[event][id]" => "002077"
					"[rsa][message][id1]" => "002077"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002078
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connection lost: '<result>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connection lost: '%{result}'" }
				id => "message-002078"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection lost"
					"[event][id]" => "002078"
					"[rsa][message][id1]" => "002078"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002079
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Local disconnected: <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Local disconnected: %{result}." }
				id => "message-002079"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Local disconnected"
					"[event][id]" => "002079"
					"[rsa][message][id1]" => "002079"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002081
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] WARNING: DNS lookup failed for "<hostip>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] WARNING: DNS lookup failed for \"%{hostip}\"" }
				id => "message-002081"
				add_field => {
				"event_description" => "DNS lookup failed for ip"
					"[event][id]" => "002081"
					"[rsa][message][id1]" => "002081"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002083
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Remote host disconnected: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Remote host disconnected: %{result}" }
				id => "message-002083"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Remote host disconnected"
					"[event][id]" => "002083"
					"[rsa][message][id1]" => "002083"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002084
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] authentication cancelled by user: '<result>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] authentication cancelled by user: '%{result}'" }
				id => "message-002084"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication cancelled by user"
					"[event][id]" => "002084"
					"[rsa][message][id1]" => "002084"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002085
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] password authentication failed. Login to account <username> not allowed or account non-existent
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] password authentication failed. Login to account %{username} not allowed or account non-existent" }
				id => "message-002085"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "password authentication failed"
				"result" => "Login to user account not allowed or account non-existent"
					"[event][id]" => "002085"
					"[rsa][message][id1]" => "002085"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002086
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Password authentication for user <username> failed (from <saddr> port <sport>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Password authentication for user %{username} failed (from %{saddr} port %{sport})" }
				id => "message-002086"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Password authentication for user failed"
					"[event][id]" => "002086"
					"[rsa][message][id1]" => "002086"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002087
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <application>: <result>. (err_num: <resultcode>, err_msg:<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{application}: %{result}. (err_num: %{resultcode}, err_msg:%{action})" }
				id => "message-002087"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002087"
					"[rsa][message][id1]" => "002087"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002088
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> forced to change password
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} forced to change password" }
				id => "message-002088"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User forced to change password"
					"[event][id]" => "002088"
					"[rsa][message][id1]" => "002088"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002089
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { FATAL ERROR: Forced | Forced } command `<param>' exited uncleanly, <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*FATAL[\s]+ERROR:[\s]+Forced[\s]+|[\s]*Forced[\s]+)[\s]+command[\s]+`(?<param>[^']*)'[\s]+exited[\s]+uncleanly,[\s]+(?<result>.*)$" }
				id => "message-002089"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Forced command exited uncleanly"
					"[event][id]" => "002089"
					"[rsa][message][id1]" => "002089"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002090
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Key exchange failed in remote: '<result>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Key exchange failed in remote: '%{result}'" }
				id => "message-002090"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Key exchange failed in remote"
					"[event][id]" => "002090"
					"[rsa][message][id1]" => "002090"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002091
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] disconnected by application in remote: '<result>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] disconnected by application in remote: '%{result}'" }
				id => "message-002091"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disconnected by application in remote"
					"[event][id]" => "002091"
					"[rsa][message][id1]" => "002091"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002092
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-002092"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "002092"
					"[rsa][message][id1]" => "002092"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002093
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Setstat file `<filename>' (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Setstat file `%{filename}' (%{result})" }
				id => "message-002093"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Setstat file"
					"[event][id]" => "002093"
					"[rsa][message][id1]" => "002093"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002094
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Certificate authentication for user <username> rejected, reason: <result>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Certificate authentication for user %{username} rejected, reason: %{result}." }
				id => "message-002094"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Certificate authentication for user  rejected"
					"[event][id]" => "002094"
					"[rsa][message][id1]" => "002094"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002095
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] publickey authentication failed. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] publickey authentication failed. %{result}" }
				id => "message-002095"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "publickey authentication failed"
					"[event][id]" => "002095"
					"[rsa][message][id1]" => "002095"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002096
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] WARNING: <application>: The client requested authentication method `<authmethod>', that is not allowed for user `<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] WARNING: %{application}: The client requested authentication method `%{authmethod}', that is not allowed for user `%{username}'" }
				id => "message-002096"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "client requested authentication method that is not allowed for user"
					"[event][id]" => "002096"
					"[rsa][message][id1]" => "002096"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002097
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-002097"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002097"
					"[rsa][message][id1]" => "002097"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sshd2_user" {
		# MESSAGE 001455
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info>: { 'Connection closed.' | Connection closed }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^:]*):[\s]+([\s]*'Connection[\s]+closed\.'[\s]+|[\s]*Connection[\s]+closed[\s]+)$" }
				id => "message-001455"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection closed"
					"[event][id]" => "001455"
					"[rsa][message][id1]" => "001455"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001456
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] connection from "<saddr>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] connection from \"%{saddr}\"" }
				id => "message-001456"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful login"
					"[event][id]" => "001456"
					"[rsa][message][id1]" => "001456"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001458
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { Password | Public key } authentication for user <username> accepted 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Password[\s]+|[\s]*Public[\s]+key[\s]+)[\s]+authentication[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+accepted[\s]+$" }
				id => "message-001458"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful authentication"
					"[event][id]" => "001458"
					"[rsa][message][id1]" => "001458"
					"[event][categoryid]" => "1302010200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001459
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username>'s local password accepted 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username}'s local password accepted" }
				id => "message-001459"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "successful authentication"
					"[event][id]" => "001459"
					"[rsa][message][id1]" => "001459"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001460
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> { (uid <uid>), | , }  coming from <shost>, authenticated. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+User[\s]+(?<username>[^\s]*)[\s]+([\s]*\(uid[\s]+(?<uid>[^\)]*)\),[\s]+|[\s]*,[\s]+)[\s]+coming[\s]+from[\s]+(?<shost>[^,]*),[\s]+authenticated\.[\s]+$" }
				id => "message-001460"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user authenticated"
					"[event][id]" => "001460"
					"[rsa][message][id1]" => "001460"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001461
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Now running on <username>'s privileges
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Now running on %{username}'s privileges" }
				id => "message-001461"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Running on new users privileges"
					"[event][id]" => "001461"
					"[rsa][message][id1]" => "001461"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001462
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { Idle timeout | LoginGraceTime } exceeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Idle[\s]+timeout[\s]+|[\s]*LoginGraceTime[\s]+)[\s]+exceeded$" }
				id => "message-001462"
				add_field => {
				"ec_theme" => "Authentication"
				"event_description" => "session timeout"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001462"
					"[rsa][message][id1]" => "001462"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001463
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Wrong password given for user '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Wrong password given for user '%{username}'" }
				id => "message-001463"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Wrong password given for user"
					"[event][id]" => "001463"
					"[rsa][message][id1]" => "001463"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001464
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] WARNING: DNS lookup failed for "<hostip>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] WARNING: DNS lookup failed for \"%{hostip}\"" }
				id => "message-001464"
				add_field => {
				"event_description" => "DNS lookup failed for ip"
					"[event][id]" => "001464"
					"[rsa][message][id1]" => "001464"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001465
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Remote host disconnected: <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Remote host disconnected: %{result}." }
				id => "message-001465"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Remote host disconnected"
					"[event][id]" => "001465"
					"[rsa][message][id1]" => "001465"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001466
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] disconnected by application in remote: '<result>.'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] disconnected by application in remote: '%{result}.'" }
				id => "message-001466"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disconnected by application in remote"
					"[event][id]" => "001466"
					"[rsa][message][id1]" => "001466"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001467
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> forced to change password.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] User %{username} forced to change password." }
				id => "message-001467"
				add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"event_computer" => "%{hhostip}"
				"event_description" => "User forced to change password."
					"[event][id]" => "001467"
					"[rsa][message][id1]" => "001467"
					"[event][categoryid]" => "1402040200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001468
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Client tried to set environment variable `<info>' to `<protocol>', <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Client tried to set environment variable `%{info}' to `%{protocol}', %{result}." }
				id => "message-001468"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Client tried to set forbidden environment variable"
					"[event][id]" => "001468"
					"[rsa][message][id1]" => "001468"
					"[event][categoryid]" => "1503010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001469
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] authentication cancelled by user: '<result>.'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] authentication cancelled by user: '%{result}.'" }
				id => "message-001469"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication cancelled by user"
					"[event][id]" => "001469"
					"[rsa][message][id1]" => "001469"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001470
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] password authentication failed. <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] password authentication failed. %{result}." }
				id => "message-001470"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "password authentication failed"
					"[event][id]" => "001470"
					"[rsa][message][id1]" => "001470"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001471
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <result>: 'Authentication failed'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{result}: 'Authentication failed'" }
				id => "message-001471"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "authentication failed"
					"[event][id]" => "001471"
					"[rsa][message][id1]" => "001471"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001472
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { WARNING: Forking | Forking } a server for a new connection failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*WARNING:[\s]+Forking[\s]+|[\s]*Forking[\s]+)[\s]+a[\s]+server[\s]+for[\s]+a[\s]+new[\s]+connection[\s]+failed$" }
				id => "message-001472"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Forking a server failed"
					"[event][id]" => "001472"
					"[rsa][message][id1]" => "001472"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001473
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] FATAL ERROR: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] FATAL ERROR: %{result}" }
				id => "message-001473"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Fatal Error"
					"[event][id]" => "001473"
					"[rsa][message][id1]" => "001473"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001474
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{action}" }
				id => "message-001474"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001474"
					"[rsa][message][id1]" => "001474"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "stunnel_daemon" {
		# MESSAGE 000290
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <interface> Connection closed: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{interface} Connection closed: %{info}" }
				id => "message-000290"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection closed"
					"[event][id]" => "000290"
					"[rsa][message][id1]" => "000290"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000291
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <interface>]: ldaps { accepted connection | connected remote server } from <saddr>:<sport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<interface>[^\]]*)\]:[\s]+ldaps[\s]+([\s]*accepted[\s]+connection[\s]+|[\s]*connected[\s]+remote[\s]+server[\s]+)[\s]+from[\s]+(?<saddr>[^:]*):(?<sport>.*)$" }
				id => "message-000291"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Established Connection"
					"[event][id]" => "000291"
					"[rsa][message][id1]" => "000291"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000292
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <interface>]: <action>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{interface}]: %{action}: %{info}" }
				id => "message-000292"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000292"
					"[rsa][message][id1]" => "000292"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "su_auth" {
		# MESSAGE 000293
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Excessive (<fld1>) login failures for <username>: <info>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Excessive (%{fld1}) login failures for %{username}: %{info}." }
				id => "message-000293"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Excessive login failures for user"
					"[event][id]" => "000293"
					"[rsa][message][id1]" => "000293"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000295
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] 'su <c_username>' succeeded for <username><space>on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] 'su %{c_username}' succeeded for %{username}%{space}on %{terminal}" }
				id => "message-000295"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su by user"
				"result" => "su succeeded"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000295"
					"[rsa][message][id1]" => "000295"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000296
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] 'su <c_username>' failed for <username> on <terminal>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+'su[\s]+(?<c_username>[^']*)'[\s]+failed[\s]+for[\s]+(?<username>[^\s]*)[\s]+on[\s]+(?<terminal>.*)$" }
				id => "message-000296"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "failed su by user"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000296"
					"[rsa][message][id1]" => "000296"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000298
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>: Successful attempt for user '<username>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^:]*):[\s]+Successful[\s]+attempt[\s]+for[\s]+user[\s]+'(?<username>[^']*)'$" }
				id => "message-000298"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su attempt by user"
				"result" => "su succeeded"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000298"
					"[rsa][message][id1]" => "000298"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000299
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-000299"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000299"
					"[rsa][message][id1]" => "000299"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001404
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] auditflags <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+auditflags[\s]+(?<action>.*)$" }
				id => "message-001404"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001404"
					"[rsa][message][id1]" => "001404"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "su_user" {
		# MESSAGE 000294
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] 'su <c_username>' succeeded for <username> on <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] 'su %{c_username}' succeeded for %{username} on %{terminal}" }
				id => "message-000294"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "successful su by user"
				"result" => "su succeeded"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000294"
					"[rsa][message][id1]" => "000294"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000297
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] 'su <c_username>' failed for <username> on <terminal>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+'su[\s]+(?<c_username>[^']*)'[\s]+failed[\s]+for[\s]+(?<username>[^\s]*)[\s]+on[\s]+(?<terminal>.*)$" }
				id => "message-000297"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_description" => "failed su by user"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000297"
					"[rsa][message][id1]" => "000297"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sudo_auth" {
		# MESSAGE 000303
		# line in RSA:  { <agent>[<fld1>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>:PTY=<interface>:PWD=<directory>:PID=<process_id>:USER=<c_username>:COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<fld1>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):PTY=(?<interface>[^:]*):PWD=(?<directory>[^:]*):PID=(?<process_id>[^:]*):USER=(?<c_username>[^:]*):COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-000303"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo"
					"[event][id]" => "000303"
					"[rsa][message][id1]" => "000303"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000308
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Excessive (<fld1>) login failures for <username>: <action>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Excessive[\s]+\((?<fld1>[^\)]*)\)[\s]+login[\s]+failures[\s]+for[\s]+(?<username>[^:]*):[\s]+(?<action>[^\.]*)\.$" }
				id => "message-000308"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_outcome" => "Success"
				"result" => "Excessive login failures"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000308"
					"[rsa][message][id1]" => "000308"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001924
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: <fld1> incorrect password attempts ; <space> TTY=<interface>; <space> PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<fld1>[^\s]*)[\s]+incorrect[\s]+password[\s]+attempts[\s]+;[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-001924"
				add_field => {
				"fhost" => "%{hhostip}"
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo by user"
				"result" => "incorrect password attempts"
					"[event][id]" => "001924"
					"[rsa][message][id1]" => "001924"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001988
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: command not allowed ; <space> TTY=<interface>; <space> PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+command[\s]+not[\s]+allowed[\s]+;[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-001988"
				add_field => {
				"fhost" => "%{hhostip}"
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo by user"
				"result" => "command not allowed"
					"[event][id]" => "001988"
					"[rsa][message][id1]" => "001988"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000316
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: pam_authenticate: <result>; <space> TTY=<interface>; <space> PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+pam_authenticate:[\s]+(?<result>[^;]*);[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-000316"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"fhost" => "%{hhostip}"
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo by user"
					"[event][id]" => "000316"
					"[rsa][message][id1]" => "000316"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000309
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: <result>; <space> TTY=<interface>; <space> PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<result>[^;]*);[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-000309"
				add_field => {
				"fhost" => "%{hhostip}"
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo by user"
					"[event][id]" => "000309"
					"[rsa][message][id1]" => "000309"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002293
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: <space> TTY=<interface>; <space> PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-002293"
				add_field => {
				"fhost" => "%{hhostip}"
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo by user"
					"[event][id]" => "002293"
					"[rsa][message][id1]" => "002293"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001102
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001102"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001102"
					"[rsa][message][id1]" => "001102"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sudo_local2" {
		# MESSAGE 001695
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username> : no passwd entry for <c_username>!
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^\s]*)[\s]+:[\s]+no[\s]+passwd[\s]+entry[\s]+for[\s]+(?<c_username>[^!]*)!$" }
				id => "message-001695"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "no password entry for user"
					"[event][id]" => "001695"
					"[rsa][message][id1]" => "001695"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000304
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: <result>; <space> TTY=<interface>; <space>  PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<result>[^;]*);[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>.*)$" }
				id => "message-000304"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo not authorized"
					"[event][id]" => "000304"
					"[rsa][message][id1]" => "000304"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001446
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: OK; <space> TTY=<interface>; <space>  PWD=<directory>; <space> RUNAS=<c_username>; <space> COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+OK;[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+RUNAS=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-001446"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo authorized"
					"[event][id]" => "001446"
					"[rsa][message][id1]" => "001446"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000305
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: <space> TTY=<interface>; <space> PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>[^\s]*)[\s]+$" }
				id => "message-000305"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo using root privileges"
					"[event][id]" => "000305"
					"[rsa][message][id1]" => "000305"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000306
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: <space> (command continued) <info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+\(command[\s]+continued\)[\s]+(?<info>[^\s]*)[\s]+$" }
				id => "message-000306"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo command continued"
					"[event][id]" => "000306"
					"[rsa][message][id1]" => "000306"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001115
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001115"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001115"
					"[rsa][message][id1]" => "001115"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId731
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <username>: <space> TTY=<interface>; <space>  PWD=<directory>; <space> USER=<c_username>; <space> COMMAND=<action>
	else if [logstash][msgparser][id] == "msgParserId731" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+TTY=(?<interface>[^;]*);[\s]+(?<space>[^\s]*)[\s]+PWD=(?<directory>[^;]*);[\s]+(?<space>[^\s]*)[\s]+USER=(?<c_username>[^;]*);[\s]+(?<space>[^\s]*)[\s]+COMMAND=(?<action>.*)$" }
			id => "msgParserId731"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo not authorized"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId736
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] WARN  pam Set Credentials for user '<username>': User is mapped to a non-existent Active Directory account. <info>. 
	else if [logstash][msgparser][id] == "msgParserId736" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+WARN[\s]+pam[\s]+Set[\s]+Credentials[\s]+for[\s]+user[\s]+'(?<username>[^']*)':[\s]+User[\s]+is[\s]+mapped[\s]+to[\s]+a[\s]+non\-existent[\s]+Active[\s]+Directory[\s]+account\.[\s]+(?<info>[^\.]*)\.[\s]+$" }
			id => "msgParserId736"
			add_field => {
				"event_description" => "User is mapped to a non-existent Active Directory account"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sudoedit_user" {
		# MESSAGE 001781
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001781"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001781"
					"[rsa][message][id1]" => "001781"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001782
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: openConnection: failed to initialize TLS security (<result>.)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: openConnection: failed to initialize TLS security (%{result}.)" }
				id => "message-001782"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "failed to initialize TLS security"
				"process" => "libsldap"
					"[event][id]" => "001782"
					"[rsa][message][id1]" => "001782"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001783
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
				id => "message-001783"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
					"[event][id]" => "001783"
					"[rsa][message][id1]" => "001783"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001784
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Session error <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Session error %{result}." }
				id => "message-001784"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Session error"
				"process" => "libsldap"
					"[event][id]" => "001784"
					"[rsa][message][id1]" => "001784"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId745
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] { starting | stopping } session for <username> <space> { <c_username>,<terminal> (<directory>) | <c_username> }
	else if [logstash][msgparser][id] == "msgParserId745" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*starting[\s]+|[\s]*stopping[\s]+)[\s]+session[\s]+for[\s]+(?<username>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+([\s]*(?<c_username>[^,]*),(?<terminal>[^\s]*)[\s]+\((?<directory>[^\)]*)\)[\s]+|[\s]*(?<c_username>[^\s]*)[\s]+)$" }
			id => "msgParserId745"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Starting/Stopping session"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId746
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] unable to dlopen <filename>: svn: fatal: <process>: open failed: <result>
	else if [logstash][msgparser][id] == "msgParserId746" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+unable[\s]+to[\s]+dlopen[\s]+(?<filename>[^:]*):[\s]+svn:[\s]+fatal:[\s]+(?<process>[^:]*):[\s]+open[\s]+failed:[\s]+(?<result>.*)$" }
			id => "msgParserId746"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to open file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId747
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <action> file <filename> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId747" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{action} file %{filename} - %{event_description}" }
			id => "msgParserId747"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId520
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId520" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId520"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId748
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Unauthorized access attempt on <shost> by <username> 
	else if [logstash][msgparser][id] == "msgParserId748" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Unauthorized[\s]+access[\s]+attempt[\s]+on[\s]+(?<shost>[^\s]*)[\s]+by[\s]+(?<username>[^\s]*)[\s]+$" }
			id => "msgParserId748"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "unauthorized access attempt"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId749
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] PWD: <directory>, CMD: <info>
	else if [logstash][msgparser][id] == "msgParserId749" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] PWD: %{directory}, CMD: %{info}" }
			id => "msgParserId749"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId750
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] SysTstMSG <profile> <directory> <filename> { Summary: <result>. | <result>. }
	else if [logstash][msgparser][id] == "msgParserId750" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+SysTstMSG[\s]+(?<profile>[^\s]*)[\s]+(?<directory>[^\s]*)[\s]+(?<filename>[^\s]*)[\s]+([\s]*Summary:[\s]+(?<result>[^\.]*)\.[\s]+|[\s]*(?<result>[^\.]*)\.[\s]+)$" }
			id => "msgParserId750"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "config comparison event"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sysadmin_local3" {
		# MESSAGE 001265
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001265"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001265"
					"[rsa][message][id1]" => "001265"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001299
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001299"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001299"
					"[rsa][message][id1]" => "001299"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId752
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] sysedge: install dir is <directory>
	else if [logstash][msgparser][id] == "msgParserId752" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+sysedge:[\s]+install[\s]+dir[\s]+is[\s]+(?<directory>.*)$" }
			id => "msgParserId752"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId753
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] sysedge: install dir is <directory>
	else if [logstash][msgparser][id] == "msgParserId753" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] sysedge: install dir is %{directory}" }
			id => "msgParserId753"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId754
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <interface> [SP WARNING]  <action> "<username>", <result> [<info>] 
	else if [logstash][msgparser][id] == "msgParserId754" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<interface>[^\s]*)[\s]+\[SP[\s]+WARNING\][\s]+(?<action>[^\s]*)[\s]+\"(?<username>[^\"]*)\",[\s]+(?<result>[^\s]*)[\s]+\[(?<info>[^\]]*)\][\s]+$" }
			id => "msgParserId754"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId755
	# line in RSA:    <agent>: <action>
	else if [logstash][msgparser][id] == "msgParserId755" {
		dissect {
			mapping => { "message" => "%{agent}: %{action}" }
			id => "msgParserId755"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sysmon_rc_gen.ksh_local3" {
		# MESSAGE 002102
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <param> This script does not understand fstype <obj_type>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<param>[^\s]*)[\s]+This[\s]+script[\s]+does[\s]+not[\s]+understand[\s]+fstype[\s]+(?<obj_type>.*)$" }
				id => "message-002102"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "script does not understand fstype"
					"[event][id]" => "002102"
					"[rsa][message][id1]" => "002102"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002103
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-002103"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002103"
					"[rsa][message][id1]" => "002103"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId757
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { authorization | login } query for '<username>' <terminal> from <saddr> accepted
	else if [logstash][msgparser][id] == "msgParserId757" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*authorization[\s]+|[\s]*login[\s]+)[\s]+query[\s]+for[\s]+'(?<username>[^']*)'[\s]+(?<terminal>[^\s]*)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+accepted$" }
			id => "msgParserId757"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "authorization/login accepted"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tallyman_local3" {
		# MESSAGE 001550
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001550"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001550"
					"[rsa][message][id1]" => "001550"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001551
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001551"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001551"
					"[rsa][message][id1]" => "001551"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId758
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <terminal>, (<fqdn>), PWD: | PWD: } <directory>, CMD: "<info>"
	else if [logstash][msgparser][id] == "msgParserId758" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<directory>[^,]*),[\s]+CMD:[\s]+\"(?<info>[^\"]*)\"$" }
			id => "msgParserId758"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tar_user" {
		# MESSAGE 001866
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001866"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001866"
					"[rsa][message][id1]" => "001866"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002109
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-002109"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "002109"
					"[rsa][message][id1]" => "002109"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId759
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] gethostbyaddr: <hostname> != <saddr>
	else if [logstash][msgparser][id] == "msgParserId759" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+gethostbyaddr:[\s]+(?<hostname>[^\s]*)[\s]+!=[\s]+(?<saddr>.*)$" }
			id => "msgParserId759"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gethostbyaddr - host address mismatch"
				"process" => "gethostbyaddr"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tcp_listener_daemon" {
		# MESSAGE 000318
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Connection received from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Connection received from %{saddr}" }
				id => "message-000318"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection recieved"
					"[event][id]" => "000318"
					"[rsa][message][id1]" => "000318"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000319
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000319"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000319"
					"[rsa][message][id1]" => "000319"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "tcs18273_local3" {
		# MESSAGE 001579
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001579"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001579"
					"[rsa][message][id1]" => "001579"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001580
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001580"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001580"
					"[rsa][message][id1]" => "001580"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "tcs23248_local3" {
		# MESSAGE 001559
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001559"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001559"
					"[rsa][message][id1]" => "001559"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001576
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001576"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001576"
					"[rsa][message][id1]" => "001576"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId761
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <terminal>, (<fqdn>), PWD: | PWD: } <directory>, CMD: "<info> { " | <space> }
	else if [logstash][msgparser][id] == "msgParserId761" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<directory>[^,]*),[\s]+CMD:[\s]+\"(?<info>[^\s]*)[\s]+([\s]*\"[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
			id => "msgParserId761"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId762
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] sneep:tdmusr <username> { waiting for <disposition> | error, <disposition> }
	else if [logstash][msgparser][id] == "msgParserId762" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+sneep:tdmusr[\s]+(?<username>[^\s]*)[\s]+([\s]*waiting[\s]+for[\s]+(?<disposition>[^\s]*)[\s]+|[\s]*error,[\s]+(?<disposition>[^\s]*)[\s]+)$" }
			id => "msgParserId762"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "tdmusr user waiting"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId763
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info>:<event_description> file <filename>
	else if [logstash][msgparser][id] == "msgParserId763" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{info}:%{event_description} file %{filename}" }
			id => "msgParserId763"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId764
	# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process> cannot open one of the Tivoli Storage Manager logs or a related file: <filename> errno = <resultcode>, Error <result>
	else if [logstash][msgparser][id] == "msgParserId764" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process} cannot open one of the Tivoli Storage Manager logs or a related file: %{filename} errno = %{resultcode}, Error %{result}" }
			id => "msgParserId764"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "cannot open Tivoli logs"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "teamevd_local3" {
		# MESSAGE 001267
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001267"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001267"
					"[rsa][message][id1]" => "001267"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001300
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001300"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001300"
					"[rsa][message][id1]" => "001300"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId765
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <terminal>, (<fqdn>), PWD: | , , PWD: | PWD: } <directory>, CMD: "<info>"
	else if [logstash][msgparser][id] == "msgParserId765" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*,[\s]+,[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<directory>[^,]*),[\s]+CMD:[\s]+\"(?<info>[^\"]*)\"$" }
			id => "msgParserId765"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "telnetd_daemon" {
		# MESSAGE 000320
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] setsockopt (<info>): <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] setsockopt (%{info}): %{result}" }
				id => "message-000320"
				add_field => {
				"event_description" => "setsockopt"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000320"
					"[rsa][message][id1]" => "000320"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000321
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { ttloop: | pam_unix_session: } <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*ttloop:[\s]+|[\s]*pam_unix_session:[\s]+)[\s]+(?<action>.*)$" }
				id => "message-000321"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000321"
					"[rsa][message][id1]" => "000321"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000322
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] dlsym failed pam_sm_close_session: error <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] dlsym failed pam_sm_close_session: error %{resultcode}" }
				id => "message-000322"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "dlsym failed"
					"[event][id]" => "000322"
					"[rsa][message][id1]" => "000322"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000967
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-000967"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000967"
					"[rsa][message][id1]" => "000967"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId768
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service> - connect() failed; message: <result>
	else if [logstash][msgparser][id] == "msgParserId768" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service} - connect() failed; message: %{result}" }
			id => "msgParserId768"
			add_field => {
				"event_description" => "connection error"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId769
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> - { <event_description>: <result> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId769" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\-[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId769"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId770
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Error: <result>
	else if [logstash][msgparser][id] == "msgParserId770" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Error:[\s]+(?<result>.*)$" }
			id => "msgParserId770"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "TI Error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "TI_daily_clean_local0" {
		# MESSAGE 001085
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <fld1>: Deleting TI file older than <fld2> days: <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld1>[^:]*):[\s]+Deleting[\s]+TI[\s]+file[\s]+older[\s]+than[\s]+(?<fld2>[^\s]*)[\s]+days:[\s]+(?<filename>.*)$" }
				id => "message-001085"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001085"
					"[rsa][message][id1]" => "001085"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002457
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^:]*):[\s]+(?<result>.*)$" }
				id => "message-002457"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "application activity"
					"[event][id]" => "002457"
					"[rsa][message][id1]" => "002457"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "tlsftpd_daemon" {
		# MESSAGE 000323
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] REPEATED FTP LOGIN FAILURES from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] REPEATED FTP LOGIN FAILURES from %{saddr}" }
				id => "message-000323"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "REPEATED FTP LOGIN FAILURES"
					"[event][id]" => "000323"
					"[rsa][message][id1]" => "000323"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000324
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> daemon.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+daemon\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000324"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "daemon"
					"[event][id]" => "000324"
					"[rsa][message][id1]" => "000324"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId773
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] yp_all - transport level create failure for domain <hostname> / <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId773" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+yp_all[\s]+\-[\s]+transport[\s]+level[\s]+create[\s]+failure[\s]+for[\s]+domain[\s]+(?<hostname>[^\s]*)[\s]+/[\s]+(?<process>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId773"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "transport level create failure for domain"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tman_local3" {
		# MESSAGE 001269
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001269"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001269"
					"[rsa][message][id1]" => "001269"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001301
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001301"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001301"
					"[rsa][message][id1]" => "001301"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId774
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] TMR-TEC Heartbeat <event_description>
	else if [logstash][msgparser][id] == "msgParserId774" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+TMR\-TEC[\s]+Heartbeat[\s]+(?<event_description>.*)$" }
			id => "msgParserId774"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "TMR-TEC Heartbeat"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tpr1.tcplink_local4" {
		# MESSAGE 002354
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :CRIT <space> : <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:CRIT[\s]+(?<space>[^\s]*)[\s]+:[\s]+(?<result>.*)$" }
				id => "message-002354"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002354"
					"[rsa][message][id1]" => "002354"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002353
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :ERR { :Error <resultcode>: <result> | :<result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:ERR[\s]+([\s]*:Error[\s]+(?<resultcode>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*:(?<result>[^\s]*)[\s]+)$" }
				id => "message-002353"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002353"
					"[rsa][message][id1]" => "002353"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vbill_local3" {
		# MESSAGE 001271
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001271"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001271"
					"[rsa][message][id1]" => "001271"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001302
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001302"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001302"
					"[rsa][message][id1]" => "001302"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId775
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] { <interface>, (<fqdn>), <event_description> | <event_description>}
	else if [logstash][msgparser][id] == "msgParserId775" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<interface>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>.*))$" }
			id => "msgParserId775"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vidhyar_local3" {
		# MESSAGE 002066
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <username>: <space> { ERROR | INFO | SERIOUS } <space> Error/Code: <fld1>; Message: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+([\s]*ERROR[\s]+|[\s]*INFO[\s]+|[\s]*SERIOUS[\s]+)[\s]+(?<space>[^\s]*)[\s]+Error/Code:[\s]+(?<fld1>[^;]*);[\s]+Message:[\s]+(?<event_description>.*)$" }
				id => "message-002066"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002066"
					"[rsa][message][id1]" => "002066"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002067
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <filename>: <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<filename>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-002067"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002067"
					"[rsa][message][id1]" => "002067"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vlb1.tcplink_local4" {
		# MESSAGE 002262
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :CRIT <space> : <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:CRIT[\s]+(?<space>[^\s]*)[\s]+:[\s]+(?<result>.*)$" }
				id => "message-002262"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002262"
					"[rsa][message][id1]" => "002262"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002263
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :ERR { :Error <resultcode>: <result> | :<result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:ERR[\s]+([\s]*:Error[\s]+(?<resultcode>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*:(?<result>[^\s]*)[\s]+)$" }
				id => "message-002263"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002263"
					"[rsa][message][id1]" => "002263"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vlb2.tcplink_local4" {
		# MESSAGE 002199
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :CRIT <space> : <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:CRIT[\s]+(?<space>[^\s]*)[\s]+:[\s]+(?<result>.*)$" }
				id => "message-002199"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002199"
					"[rsa][message][id1]" => "002199"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002200
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :ERR { :Error <resultcode>: <result> | :<result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:ERR[\s]+([\s]*:Error[\s]+(?<resultcode>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*:(?<result>[^\s]*)[\s]+)$" }
				id => "message-002200"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002200"
					"[rsa][message][id1]" => "002200"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vmievd_local3" {
		# MESSAGE 001273
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001273"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001273"
					"[rsa][message][id1]" => "001273"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001303
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001303"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001303"
					"[rsa][message][id1]" => "001303"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vmisms_local3" {
		# MESSAGE 001274
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001274"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001274"
					"[rsa][message][id1]" => "001274"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001305
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001305"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001305"
					"[rsa][message][id1]" => "001305"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId778
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <application>: link <event_state>
	else if [logstash][msgparser][id] == "msgParserId778" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{application}: link %{event_state}" }
			id => "msgParserId778"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "link status"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vnetd_daemon" {
		# MESSAGE 002288
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] refused connect from <shost> (<result>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+refused[\s]+connect[\s]+from[\s]+(?<shost>[^\s]*)[\s]+\((?<result>[^\)]*)\)$" }
				id => "message-002288"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "002288"
					"[rsa][message][id1]" => "002288"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000931
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<shost>.*)$" }
				id => "message-000931"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
					"[event][id]" => "000931"
					"[rsa][message][id1]" => "000931"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002362
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: can't verify hostname:<hostname> failed
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+can't[\s]+verify[\s]+hostname:(?<hostname>[^\s]*)[\s]+failed$" }
				id => "message-002362"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002362"
					"[rsa][message][id1]" => "002362"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vnetd_user" {
		# MESSAGE 000885
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: <event_description> (<hostip>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)$" }
				id => "message-000885"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000885"
					"[rsa][message][id1]" => "000885"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000889
		# line in RSA:      { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: Session error <result>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+Session[\s]+error[\s]+(?<result>[^\.]*)\.$" }
				id => "message-000889"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "vnetd - session error"
					"[event][id]" => "000889"
					"[rsa][message][id1]" => "000889"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002101
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-002101"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "002101"
					"[rsa][message][id1]" => "002101"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vpathdd_kern" {
		# MESSAGE 001573
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] WARNING: <action>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+WARNING:[\s]+(?<action>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-001573"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001573"
					"[rsa][message][id1]" => "001573"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001574
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { NOTICE: <interface>: <event_description> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*NOTICE:[\s]+(?<interface>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001574"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001574"
					"[rsa][message][id1]" => "001574"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vsftpd_daemon" {
		# MESSAGE 002130
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] [<shost>] OK UPLOAD: Client "<saddr>", "<filename>", <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\[(?<shost>[^\]]*)\][\s]+OK[\s]+UPLOAD:[\s]+Client[\s]+\"(?<saddr>[^\"]*)\",[\s]+\"(?<filename>[^\"]*)\",[\s]+(?<info>.*)$" }
				id => "message-002130"
				add_field => {
				"event_description" => "OK UPLOAD"
					"[event][id]" => "002130"
					"[rsa][message][id1]" => "002130"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002202
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] [<shost>] OK LOGIN: Client "<saddr>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\[(?<shost>[^\]]*)\][\s]+OK[\s]+LOGIN:[\s]+Client[\s]+\"(?<saddr>[^\"]*)\"$" }
				id => "message-002202"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "OK LOGIN"
					"[event][id]" => "002202"
					"[rsa][message][id1]" => "002202"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vxfs_kern" {
		# MESSAGE 000325
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] { WARNING | NOTICE }: msgcnt <fld1> vxfs: mesg <fld2>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*WARNING[\s]+|[\s]*NOTICE[\s]+):[\s]+msgcnt[\s]+(?<fld1>[^\s]*)[\s]+vxfs:[\s]+mesg[\s]+(?<fld2>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-000325"
				add_field => {
				"event_description" => "vxfs message from kernel"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000325"
					"[rsa][message][id1]" => "000325"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000326
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] { WARNING | NOTICE }: msgcnt <fld1> mesg <fld2>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*WARNING[\s]+|[\s]*NOTICE[\s]+):[\s]+msgcnt[\s]+(?<fld1>[^\s]*)[\s]+mesg[\s]+(?<fld2>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-000326"
				add_field => {
				"event_description" => "vxfs message from kernel"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000326"
					"[rsa][message][id1]" => "000326"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000327
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] vxfs msgcnt <network_port> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] vxfs msgcnt %{network_port} %{event_description}" }
				id => "message-000327"
				add_field => {
				"event_description" => "vxfs message from kernel"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000327"
					"[rsa][message][id1]" => "000327"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001028
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001028"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001028"
					"[rsa][message][id1]" => "001028"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "vxio_kern" {
		# MESSAGE 000328
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] NOTICE: Connected from node <saddr> to node <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] NOTICE: Connected from node %{saddr} to node %{daddr}" }
				id => "message-000328"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection"
					"[event][id]" => "000328"
					"[rsa][message][id1]" => "000328"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000329
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] WARNING: Node <saddr> disconnected from node <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] WARNING: Node %{saddr} disconnected from node %{daddr}" }
				id => "message-000329"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disconnected from node"
					"[event][id]" => "000329"
					"[rsa][message][id1]" => "000329"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000330
		# line in RSA:    <agent>: [ID <id> kern.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} kern.%{severity}] %{event_description}" }
				id => "message-000330"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "kern"
					"[event][id]" => "000330"
					"[rsa][message][id1]" => "000330"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "XPASDSYD_user" {
		# MESSAGE 000331
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Received disconnect from <saddr>: <fld1> Too many authentication failures for <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Received disconnect from %{saddr}: %{fld1} Too many authentication failures for %{username}" }
				id => "message-000331"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Received disconnect"
				"result" => "too many authentication failures for root"
					"[event][id]" => "000331"
					"[rsa][message][id1]" => "000331"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000332
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] Permission denied, please try again. <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Permission denied, please try again. %{fld1}" }
				id => "message-000332"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Permission denied"
					"[event][id]" => "000332"
					"[rsa][message][id1]" => "000332"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000333
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] You are attempting to access the private network of <username>. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] You are attempting to access the private network of %{username}. %{info}" }
				id => "message-000333"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "private network access attempt"
					"[event][id]" => "000333"
					"[rsa][message][id1]" => "000333"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000334
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] Unauthorized access is prohibited and will be prosecuted to the fullest extent <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Unauthorized access is prohibited and will be prosecuted to the fullest extent %{info}" }
				id => "message-000334"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "unauthorized access"
					"[event][id]" => "000334"
					"[rsa][message][id1]" => "000334"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000335
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{info}" }
				id => "message-000335"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000335"
					"[rsa][message][id1]" => "000335"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "XNBFFTPB_user" {
		# MESSAGE 000337
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <interface> User <username> logged in <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{interface} User %{username} logged in %{info}" }
				id => "message-000337"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "ftp user login"
					"[event][id]" => "000337"
					"[rsa][message][id1]" => "000337"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000338
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <interface> Password required for <username> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{interface} Password required for %{username} %{info}" }
				id => "message-000338"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Password required for user"
					"[event][id]" => "000338"
					"[rsa][message][id1]" => "000338"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000339
		# line in RSA:    <agent>: [ID <id> user.<severity>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} user.%{severity}] %{info}" }
				id => "message-000339"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "user"
					"[event][id]" => "000339"
					"[rsa][message][id1]" => "000339"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "XNBFFTPH_user" {
		# MESSAGE 000340
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <interface> User <username> logged in <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{interface} User %{username} logged in %{info}" }
				id => "message-000340"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "ftp user login"
					"[event][id]" => "000340"
					"[rsa][message][id1]" => "000340"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000341
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <interface> Password required for <username> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{interface} Password required for %{username} %{info}" }
				id => "message-000341"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Password required for user"
					"[event][id]" => "000341"
					"[rsa][message][id1]" => "000341"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000342
		# line in RSA:    <agent>: [ID <id> user.<severity>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} user.%{severity}] %{info}" }
				id => "message-000342"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "user"
					"[event][id]" => "000342"
					"[rsa][message][id1]" => "000342"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "XNBFFTPI_user" {
		# MESSAGE 000343
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>]  <fld1> User <username> logged in <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}]  %{fld1} User %{username} logged in %{info}" }
				id => "message-000343"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "ftp user login"
					"[event][id]" => "000343"
					"[rsa][message][id1]" => "000343"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000344
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <interface> Password required for <username> <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{interface} Password required for %{username} %{info}" }
				id => "message-000344"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Password required for user"
					"[event][id]" => "000344"
					"[rsa][message][id1]" => "000344"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000345
		# line in RSA:    <agent>: [ID <id> user.<severity>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} user.%{severity}] %{info}" }
				id => "message-000345"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_source" => "user"
					"[event][id]" => "000345"
					"[rsa][message][id1]" => "000345"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "XNBFTSMW_user" {
		# MESSAGE 000346
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <directory>: sudo: <space> not found  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{directory}: sudo: %{space} not found  %{info}" }
				id => "message-000346"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sudo not found"
					"[event][id]" => "000346"
					"[rsa][message][id1]" => "000346"
					"[event][categoryid]" => "1401050200"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000347
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{info}" }
				id => "message-000347"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000347"
					"[rsa][message][id1]" => "000347"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Wbem_daemon" {
		# MESSAGE 000600
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] A secure session was closed for user <username> from host <hostname> with session identifier <sessionid>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+A[\s]+secure[\s]+session[\s]+was[\s]+closed[\s]+for[\s]+user[\s]+(?<username>[^\s]*)[\s]+from[\s]+host[\s]+(?<hostname>[^\s]*)[\s]+with[\s]+session[\s]+identifier[\s]+(?<sessionid>[^\.]*)\.$" }
				id => "message-000600"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000600"
					"[rsa][message][id1]" => "000600"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002019
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>]  <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-002019"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002019"
					"[rsa][message][id1]" => "002019"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "wds_local3" {
		# MESSAGE 001609
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001609"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001609"
					"[rsa][message][id1]" => "001609"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001610
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001610"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001610"
					"[rsa][message][id1]" => "001610"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId803
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <user_agent> was successfully { unregistered | registered }
	else if [logstash][msgparser][id] == "msgParserId803" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<user_agent>[^\s]*)[\s]+was[\s]+successfully[\s]+([\s]*unregistered[\s]+|[\s]*registered[\s]+)$" }
			id => "msgParserId803"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "web console successfully registered/unregistered"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId804
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] failure (<resultcode>): logging initialization failed: <info>
	else if [logstash][msgparser][id] == "msgParserId804" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+failure[\s]+\((?<resultcode>[^\)]*)\):[\s]+logging[\s]+initialization[\s]+failed:[\s]+(?<info>.*)$" }
			id => "msgParserId804"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logging initialization failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId805
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application>: <action>.
	else if [logstash][msgparser][id] == "msgParserId805" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):[\s]+(?<action>[^\.]*)\.$" }
			id => "msgParserId805"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId806
	# line in RSA:    WebSphere Broker <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId806" {
		dissect {
			mapping => { "message" => "WebSphere Broker %{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId806"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "WebSphere Broker"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId807
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Remote Console to MIP <id1> started for <saddr>:<sinterface> <username>
	else if [logstash][msgparser][id] == "msgParserId807" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Remote[\s]+Console[\s]+to[\s]+MIP[\s]+(?<id1>[^\s]*)[\s]+started[\s]+for[\s]+(?<saddr>[^:]*):(?<sinterface>[^\s]*)[\s]+(?<username>.*)$" }
			id => "msgParserId807"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Remote Console to MIP started"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId808
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Unable to get passwd from shadow file for user <username> 
	else if [logstash][msgparser][id] == "msgParserId808" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Unable to get passwd from shadow file for user %{username}" }
			id => "msgParserId808"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to get passwd from shadow file for user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "WMQIv210_user" {
		# MESSAGE 001133
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Unable to connect to queue manager <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Unable[\s]+to[\s]+connect[\s]+to[\s]+queue[\s]+manager[\s]+(?<event_description>.*)$" }
				id => "message-001133"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to connect to queue manager"
					"[event][id]" => "001133"
					"[rsa][message][id1]" => "001133"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001134
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Node failed to open MQSeries queue <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Node[\s]+failed[\s]+to[\s]+open[\s]+MQSeries[\s]+queue[\s]+(?<event_description>.*)$" }
				id => "message-001134"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Node failed to open MQSeries queue"
					"[event][id]" => "001134"
					"[rsa][message][id1]" => "001134"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId812
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <action>: <info> | <action> }
	else if [logstash][msgparser][id] == "msgParserId812" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<action>[^:]*):[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
			id => "msgParserId812"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId813
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <event_description> 
	else if [logstash][msgparser][id] == "msgParserId813" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId813"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId814
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>]  <process>: <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId814" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+(?<event_description>[^:]*):[\s]+(?<result>.*)$" }
			id => "msgParserId814"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ccfe_user" {
		# MESSAGE 002225
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: Session error no available conn
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Status: %{resultcode} Mesg: Session error no available conn" }
				id => "message-002225"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Session error no available conn"
					"[event][id]" => "002225"
					"[rsa][message][id1]" => "002225"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002224
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: openConnection: simple bind failed - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Status: %{resultcode} Mesg: openConnection: simple bind failed - %{result}" }
				id => "message-002224"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "openConnection - simple bind failed"
					"[event][id]" => "002224"
					"[rsa][message][id1]" => "002224"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002226
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
				id => "message-002226"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
					"[event][id]" => "002226"
					"[rsa][message][id1]" => "002226"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId817
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process> <event_description> Failed, reason=<result>
	else if [logstash][msgparser][id] == "msgParserId817" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^\s]*)[\s]+(?<event_description>[^\s]*)[\s]+Failed,[\s]+reason=(?<result>.*)$" }
			id => "msgParserId817"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId818
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Error: <event_description>
	else if [logstash][msgparser][id] == "msgParserId818" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Error:[\s]+(?<event_description>.*)$" }
			id => "msgParserId818"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Sun Cluster error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId819
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <interface> Unable to connect to <portname> Port <network_port> on <shost> 
	else if [logstash][msgparser][id] == "msgParserId819" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{interface} Unable to connect to %{portname} Port %{network_port} on %{shost}" }
			id => "msgParserId819"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to connect"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId820
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <directory>: <result>, <action>
	else if [logstash][msgparser][id] == "msgParserId820" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{directory}: %{result}, %{action}" }
			id => "msgParserId820"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Oblix_daemon" {
		# MESSAGE 002308
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <info> { DB_RUNTIME | CONFIGDB | DB_CONFIGURATION | LDAP } TRACE <fld1> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+([\s]*DB_RUNTIME[\s]+|[\s]*CONFIGDB[\s]+|[\s]*DB_CONFIGURATION[\s]+|[\s]*LDAP[\s]+)[\s]+TRACE[\s]+(?<fld1>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-002308"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002308"
					"[rsa][message][id1]" => "002308"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001689
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <info> DB_RUNTIME WARNING <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{info} DB_RUNTIME WARNING %{event_description}" }
				id => "message-001689"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001689"
					"[rsa][message][id1]" => "001689"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Oblix_user" {
		# MESSAGE 001647
		# line in RSA:    <agent>: [ID <id> <event_source>.emerg] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.emerg] %{event_description}" }
				id => "message-001647"
				add_field => {
				"event_computer" => "%{hhostip}"
				"severity" => "emerg"
					"[event][id]" => "001647"
					"[rsa][message][id1]" => "001647"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001648
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001648"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001648"
					"[rsa][message][id1]" => "001648"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId824
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId824" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId824"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Oracle_user" {
		# MESSAGE 001671
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> { GGS ERROR | GGS WARNING | GGS INFO } <fld1> <action> { for Oracle, | for Oracle: | for Sybase, } <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+([\s]*GGS[\s]+ERROR[\s]+|[\s]*GGS[\s]+WARNING[\s]+|[\s]*GGS[\s]+INFO[\s]+)[\s]+(?<fld1>[^\s]*)[\s]+(?<action>[^\s]*)[\s]+([\s]*for[\s]+Oracle,[\s]+|[\s]*for[\s]+Oracle:[\s]+|[\s]*for[\s]+Sybase,[\s]+)[\s]+(?<event_description>.*)$" }
				id => "message-001671"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001671"
					"[rsa][message][id1]" => "001671"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002184
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info>: <event_description>{ , Database error <resultcode> (<result>) | . }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^:]*):[\s]+(?<event_description>[^\s\s]*)([\s]*,[\s]+Database[\s]+error[\s]+(?<resultcode>[^\s]*)[\s]+\((?<result>[^\)]*)\)[\s]+|[\s]*\.[\s]+)$" }
				id => "message-002184"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002184"
					"[rsa][message][id1]" => "002184"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId827
	# line in RSA:    <agent>:ERROR: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId827" {
		dissect {
			mapping => { "message" => "%{agent}:ERROR: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId827"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId828
	# line in RSA:    <agent>:INFO: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId828" {
		dissect {
			mapping => { "message" => "%{agent}:INFO: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId828"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SQLAnywhere_user" {
		# MESSAGE 000926
		# line in RSA:    <agent>(<shost>): [ID <id> <event_source>.<severity>] <action> of "<username>" (<interface>) at <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{shost}): [ID %{id} %{event_source}.%{severity}] %{action} of \"%{username}\" (%{interface}) at %{info}" }
				id => "message-000926"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000926"
					"[rsa][message][id1]" => "000926"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000927
		# line in RSA:     <agent>(<shost>): [ID <id> <event_source>.<severity>] <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{shost}): [ID %{id} %{event_source}.%{severity}] %{info}" }
				id => "message-000927"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "SQLAnywhere activity"
					"[event][id]" => "000927"
					"[rsa][message][id1]" => "000927"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "gconfd_user" {
		# MESSAGE 000909
		# line in RSA:     <agent>(<hostname>): [ID <id> <event_source>.<severity>] starting (<version>), pid <process_id> user '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{hostname}): [ID %{id} %{event_source}.%{severity}] starting (%{version}), pid %{process_id} user '%{username}'" }
				id => "message-000909"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "server starting"
					"[event][id]" => "000909"
					"[rsa][message][id1]" => "000909"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001393
		# line in RSA:     <agent>(<hostname>): [ID <id> <event_source>.<severity>] <result>, shutting down.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{hostname}): [ID %{id} %{event_source}.%{severity}] %{result}, shutting down." }
				id => "message-001393"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "server shutting down"
					"[event][id]" => "001393"
					"[rsa][message][id1]" => "001393"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000912
		# line in RSA:     <agent>(<hostname>): [ID <id> <event_source>.<severity>] [<interface>] <result> Failed: [<username>] <info>: PAPI Connection Failure.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{hostname}): [ID %{id} %{event_source}.%{severity}] [%{interface}] %{result} Failed: [%{username}] %{info}: PAPI Connection Failure." }
				id => "message-000912"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "PAPI Connection Failure"
					"[event][id]" => "000912"
					"[rsa][message][id1]" => "000912"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000910
		# line in RSA:     <agent>(<hostname>): [ID <id> <event_source>.<severity>] Resolved address "<filename>" <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{hostname}): [ID %{id} %{event_source}.%{severity}] Resolved address \"%{filename}\" %{info}" }
				id => "message-000910"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Resolved address"
					"[event][id]" => "000910"
					"[rsa][message][id1]" => "000910"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000915
		# line in RSA:    <agent>(<hostname>): [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}(%{hostname}): [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-000915"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000915"
					"[rsa][message][id1]" => "000915"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId837
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <username>(ADT_logout): <result>
	else if [logstash][msgparser][id] == "msgParserId837" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{username}(ADT_logout): %{result}" }
			id => "msgParserId837"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "user logout"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ggr2.tcplink_local4" {
		# MESSAGE 002256
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :CRIT <space> : <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:CRIT[\s]+(?<space>[^\s]*)[\s]+:[\s]+(?<result>.*)$" }
				id => "message-002256"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002256"
					"[rsa][message][id1]" => "002256"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002257
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :ERR { :Error <resultcode>: <result> | :<result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:ERR[\s]+([\s]*:Error[\s]+(?<resultcode>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*:(?<result>[^\s]*)[\s]+)$" }
				id => "message-002257"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002257"
					"[rsa][message][id1]" => "002257"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId838
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] [<application>] Error at <filename>. Error code [<result>] (<info>)
	else if [logstash][msgparser][id] == "msgParserId838" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] [%{application}] Error at %{filename}. Error code [%{result}] (%{info})" }
			id => "msgParserId838"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "application error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId839
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId839" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId839"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gsmvas_local3" {
		# MESSAGE 001640
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001640"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001640"
					"[rsa][message][id1]" => "001640"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001641
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001641"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001641"
					"[rsa][message][id1]" => "001641"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId840
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> : { Executing <action> | <action> }
	else if [logstash][msgparser][id] == "msgParserId840" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+User[\s]+(?<username>[^\s]*)[\s]+:[\s]+([\s]*Executing[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
			id => "msgParserId840"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "User executing command as admin"
				"action" => "/usr/local/bin/sudosh"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId841
	# line in RSA:    <agent> : [<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId841" {
		dissect {
			mapping => { "message" => "%{agent} : [%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId841"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "adm_local3" {
		# MESSAGE 001526
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001526"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001526"
					"[rsa][message][id1]" => "001526"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001527
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001527"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001527"
					"[rsa][message][id1]" => "001527"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId178
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId178" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId178"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId842
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] User <username> (<user_fullname>) { attempting log | logged } in as <c_username> from <terminal>
	else if [logstash][msgparser][id] == "msgParserId842" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+User[\s]+(?<username>[^\s]*)[\s]+\((?<user_fullname>[^\)]*)\)[\s]+([\s]*attempting[\s]+log[\s]+|[\s]*logged[\s]+)[\s]+in[\s]+as[\s]+(?<c_username>[^\s]*)[\s]+from[\s]+(?<terminal>.*)$" }
			id => "msgParserId842"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Unknown"
				"hostname" => "%{hhost}"
				"event_description" => "user login or attempting login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId843
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Invalid server (<hostip>:<network_port>) in <info>
	else if [logstash][msgparser][id] == "msgParserId843" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Invalid[\s]+server[\s]+\((?<hostip>[^:]*):(?<network_port>[^\)]*)\)[\s]+in[\s]+(?<info>.*)$" }
			id => "msgParserId843"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId844
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId844" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId844"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dtlogin_auth" {
		# MESSAGE 001398
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_vas: Authentication <<succeeded> for <<<info>> user: <<<username>> account: <<<fqdn>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_vas: Authentication <succeeded> for <%{info}> user: <%{username}> account: <%{fqdn}> service: <%{service}> reason: <%{result}>" }
				id => "message-001398"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "001398"
					"[rsa][message][id1]" => "001398"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002044
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Excessive (<dclass_counter1>) login failures for <username>: locking account
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Excessive (%{dclass_counter1}) login failures for %{username}: locking account" }
				id => "message-002044"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "locking user account"
				"result" => "Excessive login failures"
					"[event][id]" => "002044"
					"[rsa][message][id1]" => "002044"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId847
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: <result>
	else if [logstash][msgparser][id] == "msgParserId847" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: %{result}" }
			id => "msgParserId847"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Had_daemon" {
		# MESSAGE 001337
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] (<fld1>) VCS:<fld2>:Resource(<username>) - monitor procedure did not complete within the expected time.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\((?<fld1>[^\)]*)\)[\s]+VCS:(?<fld2>[^:]*):Resource\((?<username>[^\)]*)\)[\s]+\-[\s]+monitor[\s]+procedure[\s]+did[\s]+not[\s]+complete[\s]+within[\s]+the[\s]+expected[\s]+time\.$" }
				id => "message-001337"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "did not complete"
					"[event][id]" => "001337"
					"[rsa][message][id1]" => "001337"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001363
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] VCS ERROR <portname> { (<info>) <event_description> | [<info>] <event_description> | <event_description> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+VCS[\s]+ERROR[\s]+(?<portname>[^\s]*)[\s]+([\s]*\((?<info>[^\)]*)\)[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*\[(?<info>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)[\s]+$" }
				id => "message-001363"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "VCS ERROR"
					"[event][id]" => "001363"
					"[rsa][message][id1]" => "001363"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001097
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { VCS CRITICAL | VCS NOTICE | VCS INFO | VCS WARNING } <portname> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*VCS[\s]+CRITICAL[\s]+|[\s]*VCS[\s]+NOTICE[\s]+|[\s]*VCS[\s]+INFO[\s]+|[\s]*VCS[\s]+WARNING[\s]+)[\s]+(?<portname>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-001097"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "VCS NOTICE/CRITICAL/INFO"
					"[event][id]" => "001097"
					"[rsa][message][id1]" => "001097"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId851
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId851" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId851"
			add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "Time"
				"ec_activity" => "Modify"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId852
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] halted by <username> 
	else if [logstash][msgparser][id] == "msgParserId852" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+halted[\s]+by[\s]+(?<username>[^\s]*)[\s]+$" }
			id => "msgParserId852"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "system halted by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId853
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Excessive (<dclass_counter1>) login failures for <username>: locking account
	else if [logstash][msgparser][id] == "msgParserId853" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Excessive (%{dclass_counter1}) login failures for %{username}: locking account" }
			id => "msgParserId853"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "locking user account"
				"result" => "Excessive login failures"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId854
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] PAM authentication failed. Error (<resultcode>) [<result>]
	else if [logstash][msgparser][id] == "msgParserId854" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] PAM authentication failed. Error (%{resultcode}) [%{result}]" }
			id => "msgParserId854"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "PAM authentication failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "httpsd_local0" {
		# MESSAGE 002049
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] (INFORMATION) <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\(INFORMATION\)[\s]+(?<info>.*)$" }
				id => "message-002049"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002049"
					"[rsa][message][id1]" => "002049"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002050
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] (ERROR) <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\(ERROR\)[\s]+(?<result>.*)$" }
				id => "message-002050"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002050"
					"[rsa][message][id1]" => "002050"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId858
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { tid= <dclass_counter1>: | <process>: } <info>
	else if [logstash][msgparser][id] == "msgParserId858" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*tid=[\s]+(?<dclass_counter1>[^:]*):[\s]+|[\s]*(?<process>[^:]*):[\s]+)[\s]+(?<info>.*)$" }
			id => "msgParserId858"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "lsof_user" {
		# MESSAGE 001886
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001886"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001886"
					"[rsa][message][id1]" => "001886"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001890
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001890"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001890"
					"[rsa][message][id1]" => "001890"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId859
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>  in file: <filename>
	else if [logstash][msgparser][id] == "msgParserId859" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+in[\s]+file:[\s]+(?<filename>.*)$" }
			id => "msgParserId859"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId860
	# line in RSA:      { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process> failed on <interface> for plugin: <username>
	else if [logstash][msgparser][id] == "msgParserId860" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^\s]*)[\s]+failed[\s]+on[\s]+(?<interface>[^\s]*)[\s]+for[\s]+plugin:[\s]+(?<username>.*)$" }
			id => "msgParserId860"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "plugin load failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId861
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <event_description> running <filename>
	else if [logstash][msgparser][id] == "msgParserId861" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description} running %{filename}" }
			id => "msgParserId861"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "error running file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId862
	# line in RSA:      <agent>: [ID <id> <event_source>.<severity>] <process> failed to establish a connection to Oracle. <info>
	else if [logstash][msgparser][id] == "msgParserId862" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{process} failed to establish a connection to Oracle. %{info}" }
			id => "msgParserId862"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "failed to establish a connection to Oracle"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "oracle_local3" {
		# MESSAGE 001234
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001234"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001234"
					"[rsa][message][id1]" => "001234"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001286
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001286"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001286"
					"[rsa][message][id1]" => "001286"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId863
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <terminal>, (<fqdn>), PWD: | <terminal>, PWD:  | PWD: } <directory>, CMD: "<info>"
	else if [logstash][msgparser][id] == "msgParserId863" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*(?<terminal>[^,]*),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<directory>[^,]*),[\s]+CMD:[\s]+\"(?<info>[^\"]*)\"$" }
			id => "msgParserId863"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "oracle9_local3" {
		# MESSAGE 001232
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to { <terminal> ( from <fqdn>) | <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+logged[\s]+on[\s]+to[\s]+([\s]*(?<terminal>[^\s]*)[\s]+\([\s]+from[\s]+(?<fqdn>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-001232"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001232"
					"[rsa][message][id1]" => "001232"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001285
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off { from | to } <terminal> ({ Connected from | from } <saddr>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+logged[\s]+off[\s]+([\s]*from[\s]+|[\s]*to[\s]+)[\s]+(?<terminal>[^\s]*)[\s]+\(([\s]*Connected[\s]+from[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>[^\)]*)\)$" }
				id => "message-001285"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001285"
					"[rsa][message][id1]" => "001285"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "oracle10_local3" {
		# MESSAGE 001322
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001322"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001322"
					"[rsa][message][id1]" => "001322"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001323
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001323"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001323"
					"[rsa][message][id1]" => "001323"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "oraclesu_daemon" {
		# MESSAGE 002035
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Incoming user is a known user: <username>, Access Granted <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Incoming user is a known user: %{username}, Access Granted %{info}" }
				id => "message-002035"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Incoming user is known - Access Granted"
					"[event][id]" => "002035"
					"[rsa][message][id1]" => "002035"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002036
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] Oracle account accessed by: <username> <info> { Access approved by <c_username> |  CCF Number: <c_username> } Description: <group>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Oracle[\s]+account[\s]+accessed[\s]+by:[\s]+(?<username>[^\s]*)[\s]+(?<info>[^\s]*)[\s]+([\s]*Access[\s]+approved[\s]+by[\s]+(?<c_username>[^\s]*)[\s]+|[\s]*CCF[\s]+Number:[\s]+(?<c_username>[^\s]*)[\s]+)[\s]+Description:[\s]+(?<group>.*)$" }
				id => "message-002036"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Oracle account accessed - Access approved"
					"[event][id]" => "002036"
					"[rsa][message][id1]" => "002036"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "oraepos_local3" {
		# MESSAGE 001237
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001237"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001237"
					"[rsa][message][id1]" => "001237"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001287
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001287"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001287"
					"[rsa][message][id1]" => "001287"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "orap47_local3" {
		# MESSAGE 001239
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001239"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001239"
					"[rsa][message][id1]" => "001239"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001288
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001288"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001288"
					"[rsa][message][id1]" => "001288"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "orappm_local3" {
		# MESSAGE 001545
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001545"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001545"
					"[rsa][message][id1]" => "001545"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001546
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001546"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001546"
					"[rsa][message][id1]" => "001546"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "orpprodi_local3" {
		# MESSAGE 001537
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> { ( from <saddr>) | <space> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+logged[\s]+on[\s]+to[\s]+(?<terminal>[^\s]*)[\s]+([\s]*\([\s]+from[\s]+(?<saddr>[^\)]*)\)[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
				id => "message-001537"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001537"
					"[rsa][message][id1]" => "001537"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001538
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001538"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001538"
					"[rsa][message][id1]" => "001538"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId869
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <application>::<action>, external IPV6 endpoint failed.
	else if [logstash][msgparser][id] == "msgParserId869" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{application}::%{action}, external IPV6 endpoint failed." }
			id => "msgParserId869"
			add_field => {
				"event_description" => "external IPV6 endpoint failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "racgmain_user" {
		# MESSAGE 001742
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001742"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001742"
					"[rsa][message][id1]" => "001742"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001769
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Session error <result>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Session error %{result}." }
				id => "message-001769"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "session error"
				"process" => "libsldap"
					"[event][id]" => "001769"
					"[rsa][message][id1]" => "001769"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001770
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001770"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001770"
					"[rsa][message][id1]" => "001770"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId872
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: <event_description> ID: <id1>
	else if [logstash][msgparser][id] == "msgParserId872" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: %{event_description} ID: %{id1}" }
			id => "msgParserId872"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId873
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <hostname> startup for <shost>
	else if [logstash][msgparser][id] == "msgParserId873" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<hostname>[^\s]*)[\s]+startup[\s]+for[\s]+(?<shost>.*)$" }
			id => "msgParserId873"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "startup"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId874
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] user: <username> { reading | writing } file: <filename> (size: <dclass_counter1>)
	else if [logstash][msgparser][id] == "msgParserId874" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+user:[\s]+(?<username>[^\s]*)[\s]+([\s]*reading[\s]+|[\s]*writing[\s]+)[\s]+file:[\s]+(?<filename>[^\s]*)[\s]+\(size:[\s]+(?<dclass_counter1>[^\)]*)\)$" }
			id => "msgParserId874"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "user reading/writing file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId876
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> file: <filename> [<result>]
	else if [logstash][msgparser][id] == "msgParserId876" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+file:[\s]+(?<filename>[^\s]*)[\s]+\[(?<result>[^\]]*)\]$" }
			id => "msgParserId876"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId877
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] yp_all - transport level create failure for domain <hostname> / <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId877" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+yp_all[\s]+\-[\s]+transport[\s]+level[\s]+create[\s]+failure[\s]+for[\s]+domain[\s]+(?<hostname>[^\s]*)[\s]+/[\s]+(?<process>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId877"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "transport level create failure for domain"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId878
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <node> Admin error: Failed to { create | remove } snapshot <info> on filer { <saddr> volume <hostname> : | <hostname>: } <result>
	else if [logstash][msgparser][id] == "msgParserId878" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<node>[^\s]*)[\s]+Admin[\s]+error:[\s]+Failed[\s]+to[\s]+([\s]*create[\s]+|[\s]*remove[\s]+)[\s]+snapshot[\s]+(?<info>[^\s]*)[\s]+on[\s]+filer[\s]+([\s]*(?<saddr>[^\s]*)[\s]+volume[\s]+(?<hostname>[^\s]*)[\s]+:[\s]+|[\s]*(?<hostname>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
			id => "msgParserId878"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Admin error - Failed to create/remove snapshot on filer"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId701
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> 
	else if [logstash][msgparser][id] == "msgParserId701" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+$" }
			id => "msgParserId701"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId879
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info>: <action> 
	else if [logstash][msgparser][id] == "msgParserId879" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{info}: %{action}" }
			id => "msgParserId879"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId880
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action> (<username>): <info>
	else if [logstash][msgparser][id] == "msgParserId880" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^\s]*)[\s]+\((?<username>[^\)]*)\):[\s]+(?<info>.*)$" }
			id => "msgParserId880"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
			id => "msgParserId22"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId881
	# line in RSA:      { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: Session error <result>.
	else if [logstash][msgparser][id] == "msgParserId881" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+Session[\s]+error[\s]+(?<result>[^\.]*)\.$" }
			id => "msgParserId881"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "session error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId882
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { NOTICE: | WARNING: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId882" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*NOTICE:[\s]+|[\s]*WARNING:[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId882"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId883
	# line in RSA:  { <agent>[<data>]: | <agent>: } [ID <id> <facilityname>.<severity>] WARNING: <event_description>
	else if [logstash][msgparser][id] == "msgParserId883" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<data>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<facilityname>[^\.]*)\.(?<severity>[^\]]*)\][\s]+WARNING:[\s]+(?<event_description>.*)$" }
			id => "msgParserId883"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "uptmagnt_daemon" {
		# MESSAGE 002105
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <shost> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<shost>[^\s]*)[\s]+$" }
				id => "message-002105"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
					"[event][id]" => "002105"
					"[rsa][message][id1]" => "002105"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002317
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] refused connect from <shost> (<result>) 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+refused[\s]+connect[\s]+from[\s]+(?<shost>[^\s]*)[\s]+\((?<result>[^\)]*)\)[\s]+$" }
				id => "message-002317"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "refused connect"
					"[event][id]" => "002317"
					"[rsa][message][id1]" => "002317"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002318
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: <result>: gethostbyname(<shost>) failed 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+(?<result>[^:]*):[\s]+gethostbyname\((?<shost>[^\)]*)\)[\s]+failed[\s]+$" }
				id => "message-002318"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gethostbyname failed"
					"[event][id]" => "002318"
					"[rsa][message][id1]" => "002318"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId886
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] User <username> has logged in 
	else if [logstash][msgparser][id] == "msgParserId886" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] User %{username} has logged in" }
			id => "msgParserId886"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId887
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] MCW crypto message <info>
	else if [logstash][msgparser][id] == "msgParserId887" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] MCW crypto message %{info}" }
			id => "msgParserId887"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "MCW crypto message"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId888
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] vxglm INFO <event_description>
	else if [logstash][msgparser][id] == "msgParserId888" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] vxglm INFO %{event_description}" }
			id => "msgParserId888"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "vxglm info"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId889
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId889" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId889"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId890
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] VCS ERROR <event_description>
	else if [logstash][msgparser][id] == "msgParserId890" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] VCS ERROR %{event_description}" }
			id => "msgParserId890"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "VCS ERROR"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId891
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { CMM: <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId891" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*CMM:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId891"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId892
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] fatal: <result> 
	else if [logstash][msgparser][id] == "msgParserId892" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] fatal: %{result}" }
			id => "msgParserId892"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "fatal"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId893
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <interface>:  <event_description> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId893" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<interface>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId893"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId894
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process> <event_description>
	else if [logstash][msgparser][id] == "msgParserId894" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId894"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId895
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Connection from IP address: <saddr>
	else if [logstash][msgparser][id] == "msgParserId895" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Connection[\s]+from[\s]+IP[\s]+address:[\s]+(?<saddr>.*)$" }
			id => "msgParserId895"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId896
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] IP address not found: <hostip>
	else if [logstash][msgparser][id] == "msgParserId896" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+IP[\s]+address[\s]+not[\s]+found:[\s]+(?<hostip>.*)$" }
			id => "msgParserId896"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId897
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] { <application>: <action> | <action> }
	else if [logstash][msgparser][id] == "msgParserId897" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<application>[^:]*):[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
			id => "msgParserId897"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "application activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId898
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> : <event_description>
	else if [logstash][msgparser][id] == "msgParserId898" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+:[\s]+(?<event_description>.*)$" }
			id => "msgParserId898"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId899
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId899" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId899"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId900
	# line in RSA:    Corrupt label{;| -} <info>
	else if [logstash][msgparser][id] == "msgParserId900" {
		grok {
			match => { "message" => "^[\s]*Corrupt[\s]+label(;|[\s]*\-)[\s]+(?<info>.*)$" }
			id => "msgParserId900"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Corrupt label"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId901
	# line in RSA:    corrupt label - <info>
	else if [logstash][msgparser][id] == "msgParserId901" {
		dissect {
			mapping => { "message" => "corrupt label - %{info}" }
			id => "msgParserId901"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "corrupt label"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId902
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] sneep:root  <event_description>
	else if [logstash][msgparser][id] == "msgParserId902" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+sneep:root[\s]+(?<event_description>.*)$" }
			id => "msgParserId902"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ehd_clientd_local3" {
		# MESSAGE 002033
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] ncrx: DataServer message <resultcode>, <result>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ncrx:[\s]+DataServer[\s]+message[\s]+(?<resultcode>[^,]*),[\s]+(?<result>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-002033"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "DataServer message"
					"[event][id]" => "002033"
					"[rsa][message][id1]" => "002033"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002034
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] ncrx: DB-LIBRARY error[<resultcode>][<dclass_counter1>]: <result>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+ncrx:[\s]+DB\-LIBRARY[\s]+error\[(?<resultcode>[^\]]*)\]\[(?<dclass_counter1>[^\]]*)\]:[\s]+(?<result>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-002034"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "DB-LIBRARY error"
					"[event][id]" => "002034"
					"[rsa][message][id1]" => "002034"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId905
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Session error <result>.
	else if [logstash][msgparser][id] == "msgParserId905" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Session error %{result}." }
			id => "msgParserId905"
			add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
				"event_description" => "Session error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId906
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] { Error | Info }: <event_description>
	else if [logstash][msgparser][id] == "msgParserId906" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*Error[\s]+|[\s]*Info[\s]+):[\s]+(?<event_description>.*)$" }
			id => "msgParserId906"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId907
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] emcpAudit: Info: cmd=powermt: <action> (<event_description>)
	else if [logstash][msgparser][id] == "msgParserId907" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] emcpAudit: Info: cmd=powermt: %{action} (%{event_description})" }
			id => "msgParserId907"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId908
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] WARNING: <event_description>
	else if [logstash][msgparser][id] == "msgParserId908" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] WARNING: %{event_description}" }
			id => "msgParserId908"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId909
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] symmir : '<action>' for { device <interface> in file <filename> | device group <group> } - <event_description>
	else if [logstash][msgparser][id] == "msgParserId909" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+symmir[\s]+:[\s]+'(?<action>[^']*)'[\s]+for[\s]+([\s]*device[\s]+(?<interface>[^\s]*)[\s]+in[\s]+file[\s]+(?<filename>[^\s]*)[\s]+|[\s]*device[\s]+group[\s]+(?<group>[^\s]*)[\s]+)[\s]+\-[\s]+(?<event_description>.*)$" }
			id => "msgParserId909"
			add_field => {
				"event_computer" => "%{hhostip}"
				"result" => "action cannot proceed for device in current state"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId910
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] { keepAlive Heartbeat | Heartbeat } Syslog Message <info>
	else if [logstash][msgparser][id] == "msgParserId910" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*keepAlive[\s]+Heartbeat[\s]+|[\s]*Heartbeat[\s]+)[\s]+Syslog[\s]+Message[\s]+(?<info>.*)$" }
			id => "msgParserId910"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Heartbeat Syslog Message"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId911
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId911" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId911"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "jckgwy_user" {
		# MESSAGE 002181
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <version>: GenericException Message: <info> message: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<version>[^:]*):[\s]+GenericException[\s]+Message:[\s]+(?<info>[^\s]*)[\s]+message:[\s]+(?<result>.*)$" }
				id => "message-002181"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "GenericException Message"
					"[event][id]" => "002181"
					"[rsa][message][id1]" => "002181"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002182
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <version>: Executing with configuration file: <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<version>[^:]*):[\s]+Executing[\s]+with[\s]+configuration[\s]+file:[\s]+(?<filename>.*)$" }
				id => "message-002182"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Executing with configuration file"
					"[event][id]" => "002182"
					"[rsa][message][id1]" => "002182"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002183
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-002183"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002183"
					"[rsa][message][id1]" => "002183"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "java_auth" {
		# MESSAGE 001749
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Successful attempt for user '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Successful attempt for user '%{username}'" }
				id => "message-001749"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Successful logon"
					"[event][id]" => "001749"
					"[rsa][message][id1]" => "001749"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001750
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Cannot get Password entry for user '<username>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Cannot get Password entry for user '%{username}'" }
				id => "message-001750"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "login failure"
				"result" => "Cannot get Password entry for user"
					"[event][id]" => "001750"
					"[rsa][message][id1]" => "001750"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "jckgwy_watch_user" {
		# MESSAGE 002153
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: <obj_name> gateway appears to be already running (pid = <uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: %{obj_name} gateway appears to be already running (pid = %{uid})" }
				id => "message-002153"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gateway appears to be already running"
					"[event][id]" => "002153"
					"[rsa][message][id1]" => "002153"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002219
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: %{action}" }
				id => "message-002219"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002219"
					"[rsa][message][id1]" => "002219"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mnygwy_watch_user" {
		# MESSAGE 002156
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: <obj_name> gateway appears to be already running (pid = <uid>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: %{obj_name} gateway appears to be already running (pid = %{uid})" }
				id => "message-002156"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gateway appears to be already running"
					"[event][id]" => "002156"
					"[rsa][message][id1]" => "002156"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002322
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] start: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+start:[\s]+(?<event_description>.*)$" }
				id => "message-002322"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002322"
					"[rsa][message][id1]" => "002322"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId918
	# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] WARNING: <process>: <info>
	else if [logstash][msgparser][id] == "msgParserId918" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] WARNING: %{process}: %{info}" }
			id => "msgParserId918"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId919
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] lease declined for <hostip>
	else if [logstash][msgparser][id] == "msgParserId919" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+lease[\s]+declined[\s]+for[\s]+(?<hostip>.*)$" }
			id => "msgParserId919"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId920
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] connect from <shost>
	else if [logstash][msgparser][id] == "msgParserId920" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+connect[\s]+from[\s]+(?<shost>.*)$" }
			id => "msgParserId920"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId921
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Power mode: <event_state> (<result>)
	else if [logstash][msgparser][id] == "msgParserId921" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Power[\s]+mode:[\s]+(?<event_state>[^\s]*)[\s]+\((?<result>[^\)]*)\)$" }
			id => "msgParserId921"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Power mode state"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "PPMVMIPR_local3" {
		# MESSAGE 001622
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001622"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001622"
					"[rsa][message][id1]" => "001622"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001623
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001623"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001623"
					"[rsa][message][id1]" => "001623"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PPMVMIPRD_local3" {
		# MESSAGE 001625
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001625"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001625"
					"[rsa][message][id1]" => "001625"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001626
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001626"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001626"
					"[rsa][message][id1]" => "001626"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId922
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process> <event_description>
	else if [logstash][msgparser][id] == "msgParserId922" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId922"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Event successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId923
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId923" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId923"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId924
	# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: Service search descriptor for service '<fld1>' contains filter, which can not be used for service '<info>'
	else if [logstash][msgparser][id] == "msgParserId924" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: Status: %{resultcode} Mesg: Service search descriptor for service '%{fld1}' contains filter, which can not be used for service '%{info}'" }
			id => "msgParserId924"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Invalid filter for service"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "rsyncd_daemon" {
		# MESSAGE 001355
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] rsync allowed access on module <fld1> from <shost> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] rsync allowed access on module %{fld1} from %{shost} (%{saddr})" }
				id => "message-001355"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "rsync allowed access on module"
					"[event][id]" => "001355"
					"[rsa][message][id1]" => "001355"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001356
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] rsync on <fld1> from <shost> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] rsync on %{fld1} from %{shost} (%{saddr})" }
				id => "message-001356"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "rsync on module"
					"[event][id]" => "001356"
					"[rsa][message][id1]" => "001356"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001357
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] rsync error: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] rsync error: %{info}" }
				id => "message-001357"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "rsync error"
					"[event][id]" => "001357"
					"[rsa][message][id1]" => "001357"
					"[event][categoryid]" => "1803020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001358
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] rsync: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] rsync: %{info}" }
				id => "message-001358"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => " connection unexpectedly closed"
					"[event][id]" => "001358"
					"[rsa][message][id1]" => "001358"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001359
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001359"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001359"
					"[rsa][message][id1]" => "001359"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId929
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] rsync allowed access on module <fld1> from <shost> (<saddr>) 
	else if [logstash][msgparser][id] == "msgParserId929" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] rsync allowed access on module %{fld1} from %{shost} (%{saddr})" }
			id => "msgParserId929"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "serevu_auth" {
		# MESSAGE 001990
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] eTrustAC daemon <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] eTrustAC daemon %{event_description}" }
				id => "message-001990"
				add_field => {
				"event_description" => "eTrustAC daemon status"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001990"
					"[rsa][message][id1]" => "001990"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002448
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-002448"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002448"
					"[rsa][message][id1]" => "002448"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId933
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] error while receiving a pdu from <saddr>: <result>
	else if [logstash][msgparser][id] == "msgParserId933" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] error while receiving a pdu from %{saddr}: %{result}" }
			id => "msgParserId933"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "error while receiving a pdu"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId934
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] newLog: Cannot open <filename> for append.
	else if [logstash][msgparser][id] == "msgParserId934" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] newLog: Cannot open %{filename} for append." }
			id => "msgParserId934"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "stdgwy_user" {
		# MESSAGE 002323
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Info: Accepted connection from: <saddr> Port: <sport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Info:[\s]+Accepted[\s]+connection[\s]+from:[\s]+(?<saddr>[^\s]*)[\s]+Port:[\s]+(?<sport>.*)$" }
				id => "message-002323"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Accepted inbound connection"
					"[event][id]" => "002323"
					"[rsa][message][id1]" => "002323"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002324
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Error: <application>::<process> from <saddr>:<sport> failed; message: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Error:[\s]+(?<application>[^:]*)::(?<process>[^\s]*)[\s]+from[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+failed;[\s]+message:[\s]+(?<result>.*)$" }
				id => "message-002324"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Error - application process failed"
					"[event][id]" => "002324"
					"[rsa][message][id1]" => "002324"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "syseventd_daemon" {
		# MESSAGE 000664
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Unable to open daemon lock file <filename>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Unable[\s]+to[\s]+open[\s]+daemon[\s]+lock[\s]+file[\s]+(?<filename>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-000664"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000664"
					"[rsa][message][id1]" => "000664"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001991
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001991"
				add_field => {
				"event_description" => "sysevent daemon activity"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001991"
					"[rsa][message][id1]" => "001991"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId939
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <service> Memory allocation failure. <result>
	else if [logstash][msgparser][id] == "msgParserId939" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{service} Memory allocation failure. %{result}" }
			id => "msgParserId939"
			add_field => {
				"event_description" => "Memory allocation failure"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId940
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId940" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId940"
			add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId941
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] {login|logout}: <info>
	else if [logstash][msgparser][id] == "msgParserId941" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(login|logout):[\s]+(?<info>.*)$" }
			id => "msgParserId941"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId942
	# line in RSA:    <agent>:vxconfigd: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId942" {
		dissect {
			mapping => { "message" => "%{agent}:vxconfigd: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId942"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId855
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] (INFORMATION) <info>
	else if [logstash][msgparser][id] == "msgParserId855" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\(INFORMATION\)[\s]+(?<info>.*)$" }
			id => "msgParserId855"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId943
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] NOTICE: <interface>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId943" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+NOTICE:[\s]+(?<interface>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId943"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "applprod_local3" {
		# MESSAGE 001585
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001585"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001585"
					"[rsa][message][id1]" => "001585"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001586
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001586"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001586"
					"[rsa][message][id1]" => "001586"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId944
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] tpedaemon. { <action>. Code: <fld1>. Info: <event_description> | <action>. }
	else if [logstash][msgparser][id] == "msgParserId944" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tpedaemon\.[\s]+([\s]*(?<action>[^\.]*)\.[\s]+Code:[\s]+(?<fld1>[^\.]*)\.[\s]+Info:[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<action>[^\.]*)\.[\s]+)$" }
			id => "msgParserId944"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "appsrv_local3" {
		# MESSAGE 001587
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001587"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001587"
					"[rsa][message][id1]" => "001587"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001588
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001588"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001588"
					"[rsa][message][id1]" => "001588"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "arbor_local3" {
		# MESSAGE 001205
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001205"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001205"
					"[rsa][message][id1]" => "001205"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001276
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001276"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001276"
					"[rsa][message][id1]" => "001276"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId945
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Could not write to log file. <filename>
	else if [logstash][msgparser][id] == "msgParserId945" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Could[\s]+not[\s]+write[\s]+to[\s]+log[\s]+file\.[\s]+(?<filename>.*)$" }
			id => "msgParserId945"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Could not write to log file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId946
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { <info> - <event_description> | <info>::<event_description> }
	else if [logstash][msgparser][id] == "msgParserId946" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<info>[^\s]*)[\s]+\-[\s]+(?<event_description>[^\s]*)[\s]+|[\s]*(?<info>[^:]*)::(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId946"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "countermanager error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId947
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <info> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId947" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{info} - %{event_description}" }
			id => "msgParserId947"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "countermanager error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId948
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] File space exhausted
	else if [logstash][msgparser][id] == "msgParserId948" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] File space exhausted" }
			id => "msgParserId948"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "File space exhausted"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId949
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] DataCollector process is launched <info>
	else if [logstash][msgparser][id] == "msgParserId949" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+DataCollector[\s]+process[\s]+is[\s]+launched[\s]+(?<info>.*)$" }
			id => "msgParserId949"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "DataCollector process is launched"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ebrsapps_local3" {
		# MESSAGE 001217
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001217"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001217"
					"[rsa][message][id1]" => "001217"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001281
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001281"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001281"
					"[rsa][message][id1]" => "001281"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId950
	# line in RSA:    { <agent>[<process_id>]: [ID | <agent>: [ID } <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId950" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+|[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+)[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId950"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId951
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] WARNING: <interface>: <event_description>; reason: <info>
	else if [logstash][msgparser][id] == "msgParserId951" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+WARNING:[\s]+(?<interface>[^:]*):[\s]+(?<event_description>[^;]*);[\s]+reason:[\s]+(?<info>.*)$" }
			id => "msgParserId951"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId952
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] NOTICE: <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId952" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+NOTICE:[\s]+(?<process>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId952"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ipcs_user" {
		# MESSAGE 001838
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Session error <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Session error %{result}" }
				id => "message-001838"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Session error"
				"process" => "libsldap"
					"[event][id]" => "001838"
					"[rsa][message][id1]" => "001838"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001894
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: %{event_description}" }
				id => "message-001894"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001894"
					"[rsa][message][id1]" => "001894"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId955
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId955" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId955"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId956
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] NOTICE: [<network_port>]: <interface> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId956" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] NOTICE: [%{network_port}]: %{interface} - %{event_description}" }
			id => "msgParserId956"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "kshd_auth" {
		# MESSAGE 002269
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>: Connection refused
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^:]*):[\s]+Connection[\s]+refused$" }
				id => "message-002269"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection refused"
					"[event][id]" => "002269"
					"[rsa][message][id1]" => "002269"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002270
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>.*)$" }
				id => "message-002270"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002270"
					"[rsa][message][id1]" => "002270"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ksu" {
		# MESSAGE 002520
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] 'ksu <c_username>' authenticated <fqdn> for <username> on <terminal>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+'ksu[\s]+(?<c_username>[^']*)'[\s]+authenticated[\s]+(?<fqdn>[^\s]*)[\s]+for[\s]+(?<username>[^\s]*)[\s]+on[\s]+(?<terminal>.*)$" }
				id => "message-002520"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Permit"
				"ec_outcome" => "Success"
				"event_description" => "successful authentication by user"
				"result" => "authentication succeeded"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002520"
					"[rsa][message][id1]" => "002520"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002521
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Account <c_username>: authorization for {<fqdn> successful|<fqdn>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Account[\s]+(?<c_username>[^:]*):[\s]+authorization[\s]+for[\s]+((?<fqdn>[^\s]*)[\s]+successful|(?<fqdn>.*))$" }
				id => "message-002521"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Permit"
				"ec_outcome" => "Success"
				"event_description" => "successful authentication by user"
				"result" => "authentication succeeded"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002521"
					"[rsa][message][id1]" => "002521"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "mail_user" {
		# MESSAGE 001775
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: Adding connection (<hostip>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+Adding[\s]+connection[\s]+\((?<hostip>[^\)]*)\)$" }
				id => "message-001775"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001775"
					"[rsa][message][id1]" => "001775"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001885
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001885"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001885"
					"[rsa][message][id1]" => "001885"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001859
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001859"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001859"
					"[rsa][message][id1]" => "001859"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId961
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] WARNING: md: <service>: read error on <device>
	else if [logstash][msgparser][id] == "msgParserId961" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] WARNING: md: %{service}: read error on %{device}" }
			id => "msgParserId961"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "disk read error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId962
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application> (<fld1>) Plugin: <service>(): <event_description>
	else if [logstash][msgparser][id] == "msgParserId962" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^\s]*)[\s]+\((?<fld1>[^\)]*)\)[\s]+Plugin:[\s]+(?<service>[^\(]*)\(\):[\s]+(?<event_description>.*)$" }
			id => "msgParserId962"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId963
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId963" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId963"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "statistics"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId964
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <action> #<fld1>(<fld2>): <result>
	else if [logstash][msgparser][id] == "msgParserId964" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{action} #%{fld1}(%{fld2}): %{result}" }
			id => "msgParserId964"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "opcacta_user" {
		# MESSAGE 001818
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001818"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001818"
					"[rsa][message][id1]" => "001818"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001854
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001854"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001854"
					"[rsa][message][id1]" => "001854"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001892
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: could not remove <hostip> from servers list
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: could not remove %{hostip} from servers list" }
				id => "message-001892"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "could not remove host from servers list"
				"process" => "libsldap"
					"[event][id]" => "001892"
					"[rsa][message][id1]" => "001892"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "operator_local3" {
		# MESSAGE 002068
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <filename>: INFO Purge <result> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<filename>[^:]*):[\s]+INFO[\s]+Purge[\s]+(?<result>[^\s]*)[\s]+$" }
				id => "message-002068"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Purge action"
					"[event][id]" => "002068"
					"[rsa][message][id1]" => "002068"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002060
		# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] <username>: <space> { INFO | WARNING }  Error/Code: <fld1>; Message: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^:]*):[\s]+(?<space>[^\s]*)[\s]+([\s]*INFO[\s]+|[\s]*WARNING[\s]+)[\s]+Error/Code:[\s]+(?<fld1>[^;]*);[\s]+Message:[\s]+(?<event_description>.*)$" }
				id => "message-002060"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002060"
					"[rsa][message][id1]" => "002060"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId967
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] Syscall Monitor - <action>
	else if [logstash][msgparser][id] == "msgParserId967" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] Syscall Monitor - %{action}" }
			id => "msgParserId967"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Syscall Monitor Activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "siz2.tcplink_local4" {
		# MESSAGE 002258
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :CRIT <space> : <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:CRIT[\s]+(?<space>[^\s]*)[\s]+:[\s]+(?<result>.*)$" }
				id => "message-002258"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002258"
					"[rsa][message][id1]" => "002258"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002259
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] loopback: <process> :ERR { :Error <resultcode>: <result> | :<result> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+loopback:[\s]+(?<process>[^\s]*)[\s]+:ERR[\s]+([\s]*:Error[\s]+(?<resultcode>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*:(?<result>[^\s]*)[\s]+)$" }
				id => "message-002259"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "loopback"
					"[event][id]" => "002259"
					"[rsa][message][id1]" => "002259"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId968
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] { INFO: | OEM switch_ulog error: } <event_description>
	else if [logstash][msgparser][id] == "msgParserId968" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*INFO:[\s]+|[\s]*OEM[\s]+switch_ulog[\s]+error:[\s]+)[\s]+(?<event_description>.*)$" }
			id => "msgParserId968"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId969
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> - { <event_description>: <result> | <event_description> } 
	else if [logstash][msgparser][id] == "msgParserId969" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\-[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId969"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId970
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> - <event_description>: <result>
	else if [logstash][msgparser][id] == "msgParserId970" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\-[\s]+(?<event_description>[^:]*):[\s]+(?<result>.*)$" }
			id => "msgParserId970"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId971
	# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] <result>. zone: <info>. Exiting
	else if [logstash][msgparser][id] == "msgParserId971" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{result}. zone: %{info}. Exiting" }
			id => "msgParserId971"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "procesure exiting"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId973
	# line in RSA:  <agent>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId973" {
		dissect {
			mapping => { "message" => "%{agent}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId973"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId974
	# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] <event_description>. <result>
	else if [logstash][msgparser][id] == "msgParserId974" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}. %{result}" }
			id => "msgParserId974"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vx-clone-sync_daemon" {
		# MESSAGE 002187
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>.  Finished deport(s).
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\.]*)\.[\s]+Finished[\s]+deport\(s\)\.$" }
				id => "message-002187"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Finished deport(s)"
					"[event][id]" => "002187"
					"[rsa][message][id1]" => "002187"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002188
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-002188"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002188"
					"[rsa][message][id1]" => "002188"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId976
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> File <filename>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId976" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+File[\s]+(?<filename>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId976"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId977
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] pam_login_limit(auth): <info>
	else if [logstash][msgparser][id] == "msgParserId977" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+pam_login_limit\(auth\):[\s]+(?<info>.*)$" }
			id => "msgParserId977"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "pam_login_limit reached"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "vxsvc_user" {
		# MESSAGE 001751
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Session error <result>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Session error %{result}." }
				id => "message-001751"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Session error"
				"process" => "libsldap"
					"[event][id]" => "001751"
					"[rsa][message][id1]" => "001751"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001752
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001752"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001752"
					"[rsa][message][id1]" => "001752"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001753
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> File <filename>: <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+File[\s]+(?<filename>[^:]*):[\s]+(?<event_description>.*)$" }
				id => "message-001753"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001753"
					"[rsa][message][id1]" => "001753"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId979
	# line in RSA:    <agent> PPP: <interface>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId979" {
		dissect {
			mapping => { "message" => "%{agent} PPP: %{interface}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId979"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId980
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> PWD=<directory> [Command: <info>]
	else if [logstash][msgparser][id] == "msgParserId980" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+PWD=(?<directory>[^\s]*)[\s]+\[Command:[\s]+(?<info>[^\]]*)\]$" }
			id => "msgParserId980"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "epos_local3" {
		# MESSAGE 001222
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001222"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001222"
					"[rsa][message][id1]" => "001222"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001282
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001282"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001282"
					"[rsa][message][id1]" => "001282"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId517
	# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
	else if [logstash][msgparser][id] == "msgParserId517" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
			id => "msgParserId517"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId981
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <network_port>, (<interface>), PWD: | PWD: } <info>, CMD: "<event_description> { " | <space> }
	else if [logstash][msgparser][id] == "msgParserId981" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<network_port>[^,]*),[\s]+\((?<interface>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<info>[^,]*),[\s]+CMD:[\s]+\"(?<event_description>[^\s]*)[\s]+([\s]*\"[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
			id => "msgParserId981"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "eposprep_local3" {
		# MESSAGE 001566
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001566"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001566"
					"[rsa][message][id1]" => "001566"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001567
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001567"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001567"
					"[rsa][message][id1]" => "001567"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "eposprepaid_local3" {
		# MESSAGE 001569
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001569"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001569"
					"[rsa][message][id1]" => "001569"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001570
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001570"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001570"
					"[rsa][message][id1]" => "001570"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId982
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] PCIE-device: <info>
	else if [logstash][msgparser][id] == "msgParserId982" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+PCIE\-device:[\s]+(?<info>.*)$" }
			id => "msgParserId982"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "PCIE-device info"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId983
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId983" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+(?<event_description>.*)$" }
			id => "msgParserId983"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId984
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] statistics: <event_description>
	else if [logstash][msgparser][id] == "msgParserId984" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+statistics:[\s]+(?<event_description>.*)$" }
			id => "msgParserId984"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "statistics"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId985
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: sender non-delivery notification: <result>
	else if [logstash][msgparser][id] == "msgParserId985" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: sender non-delivery notification: %{result}" }
			id => "msgParserId985"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "sender non-delivery notification"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId986
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: { resent-message-id= | message-id= } <<<info>>
	else if [logstash][msgparser][id] == "msgParserId986" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<id1>[^:]*):[\s]+([\s]*resent\-message\-id=[\s]+|[\s]*message\-id=[\s]+)[\s]+<(?<info>[^>]*)>$" }
			id => "msgParserId986"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "mail cleanup - message"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/cleanup_mail" {
		# MESSAGE 001177
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: { resent-message-id= | message-id= } <<<info>>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<id1>[^:]*):[\s]+([\s]*resent\-message\-id=[\s]+|[\s]*message\-id=[\s]+)[\s]+<(?<info>[^>]*)>$" }
				id => "message-001177"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "mail cleanup - message"
					"[event][id]" => "001177"
					"[rsa][message][id1]" => "001177"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001188
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: warning: header Subject: Output from "<username>" command from localhost[<saddr>]; from=<<<shost>> to=<<<dhost>> proto=<protocol> helo=<<<info>> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: warning: header Subject: Output from \"%{username}\" command from localhost[%{saddr}]; from=<%{shost}> to=<%{dhost}> proto=%{protocol} helo=<%{info}>" }
				id => "message-001188"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001188"
					"[rsa][message][id1]" => "001188"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001196
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: warning: header Subject: Output from "<username>" command from local; from=<<<shost>> to=<<<dhost>> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: warning: header Subject: Output from \"%{username}\" command from local; from=<%{shost}> to=<%{dhost}>" }
				id => "message-001196"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001196"
					"[rsa][message][id1]" => "001196"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001506
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: <id1>: queue file size limit exceeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: %{id1}: queue file size limit exceeded" }
				id => "message-001506"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "queue file size limit exceeded"
					"[event][id]" => "001506"
					"[rsa][message][id1]" => "001506"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/local_mail" {
		# MESSAGE 001505
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: database <directory> is older than source file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: database %{directory} is older than source file %{filename}" }
				id => "message-001505"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "database older than source file"
					"[event][id]" => "001505"
					"[rsa][message][id1]" => "001505"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001703
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: <interface>: <result> - NIS lookups disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: %{interface}: %{result} - NIS lookups disabled" }
				id => "message-001703"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "NIS lookups disabled"
					"[event][id]" => "001703"
					"[rsa][message][id1]" => "001703"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001811
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: file <filename> is not a regular file
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: file %{filename} is not a regular file" }
				id => "message-001811"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "file is not a regular file"
					"[event][id]" => "001811"
					"[rsa][message][id1]" => "001811"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001075
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: to=<<<dhost>>, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: to=<%{dhost}>, %{event_description}" }
				id => "message-001075"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001075"
					"[rsa][message][id1]" => "001075"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId994
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: uid=<uid> from=<<<username>>
	else if [logstash][msgparser][id] == "msgParserId994" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: uid=%{uid} from=<%{username}>" }
			id => "msgParserId994"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/qmgr_local0" {
		# MESSAGE 002039
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : from=<shost>, size=<dclass_counter1> , nrcpt=<packets> (<action>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : from=%{shost}, size=%{dclass_counter1} , nrcpt=%{packets} (%{action})" }
				id => "message-002039"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002039"
					"[rsa][message][id1]" => "002039"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002022
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : %{action}" }
				id => "message-002022"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002022"
					"[rsa][message][id1]" => "002022"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/qmgr_local6" {
		# MESSAGE 001831
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : from=<shost>, size=<dclass_counter1> , nrcpt=<packets> (<action>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : from=%{shost}, size=%{dclass_counter1} , nrcpt=%{packets} (%{action})" }
				id => "message-001831"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001831"
					"[rsa][message][id1]" => "001831"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001834
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : removed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : removed" }
				id => "message-001834"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001834"
					"[rsa][message][id1]" => "001834"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/qmgr_mail" {
		# MESSAGE 002449
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: connect to transport private/retry: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+connect[\s]+to[\s]+transport[\s]+private/retry:[\s]+(?<result>.*)$" }
				id => "message-002449"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connect to transport private/retry"
					"[event][id]" => "002449"
					"[rsa][message][id1]" => "002449"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001178
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : from=<shost>, size=<dclass_counter1> , nrcpt=<packets> (<action>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : from=%{shost}, size=%{dclass_counter1} , nrcpt=%{packets} (%{action})" }
				id => "message-001178"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001178"
					"[rsa][message][id1]" => "001178"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002026
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: to=<dhost>, relay=<fld1>, delay=<dclass_counter1>, delays=<fld2>, dsn=<version>, status=<info> (<result>: connect to <fqdn>[<daddr>]<space>: Connection refused)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: to=%{dhost}, relay=%{fld1}, delay=%{dclass_counter1}, delays=%{fld2}, dsn=%{version}, status=%{info} (%{result}: connect to %{fqdn}[%{daddr}]%{space}: Connection refused)" }
				id => "message-002026"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "002026"
					"[rsa][message][id1]" => "002026"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002450
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: to=<<<dhost>>, relay=<fld1>, delay=<dclass_counter1>, delays=<fld2>, dsn=<version>, status=<info> (<result>: connect to <fqdn>[<daddr>]<space>: Connection timed out)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: to=<%{dhost}>, relay=%{fld1}, delay=%{dclass_counter1}, delays=%{fld2}, dsn=%{version}, status=%{info} (%{result}: connect to %{fqdn}[%{daddr}]%{space}: Connection timed out)" }
				id => "message-002450"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "Connection timed out"
					"[event][id]" => "002450"
					"[rsa][message][id1]" => "002450"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002451
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: to=<<<dhost>>, relay=<fld1>, delay=<dclass_counter1>, delays=<fld2>, dsn=<version>, status=<info> (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: to=<%{dhost}>, relay=%{fld1}, delay=%{dclass_counter1}, delays=%{fld2}, dsn=%{version}, status=%{info} (%{result})" }
				id => "message-002451"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "mail transport error"
					"[event][id]" => "002451"
					"[rsa][message][id1]" => "002451"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001702
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: to=<dhost>, relay=<fld1>, delay=<dclass_counter1>, status=<info> (connect to <fqdn>[<daddr>]: Connection refused)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1}: to=%{dhost}, relay=%{fld1}, delay=%{dclass_counter1}, status=%{info} (connect to %{fqdn}[%{daddr}]: Connection refused)" }
				id => "message-001702"
				add_field => {
				"ec_subject" => "Service"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_computer" => "%{hhostip}"
				"event_description" => "connection refused"
					"[event][id]" => "001702"
					"[rsa][message][id1]" => "001702"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001836
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1>: to=<dhost>, relay={ <fqdn>[<daddr>] | <daddr> }, delay=<dclass_counter1>, status=<info> (<action>: <event_description>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<id1>[^:]*):[\s]+to=(?<dhost>[^,]*),[\s]+relay=([\s]*(?<fqdn>[^\[]*)\[(?<daddr>[^\]]*)\][\s]+|[\s]*(?<daddr>[^\s]*)[\s]+),[\s]+delay=(?<dclass_counter1>[^,]*),[\s]+status=(?<info>[^\s]*)[\s]+\((?<action>[^:]*):[\s]+(?<event_description>[^\)]*)\)$" }
				id => "message-001836"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001836"
					"[rsa][message][id1]" => "001836"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001833
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <id1> : from=<<<shost>>, status=<info>, <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<id1>[^\s]*)[\s]+:[\s]+from=<(?<shost>[^>]*)>,[\s]+status=(?<info>[^,]*),[\s]+(?<action>.*)$" }
				id => "message-001833"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001833"
					"[rsa][message][id1]" => "001833"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001179
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : removed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : removed" }
				id => "message-001179"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "mail removed from queue"
					"[event][id]" => "001179"
					"[rsa][message][id1]" => "001179"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1006
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] fatal: <result>
	else if [logstash][msgparser][id] == "msgParserId1006" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+fatal:[\s]+(?<result>.*)$" }
			id => "msgParserId1006"
			add_field => {
				"event_description" => "fatal error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/smtp_local0" {
		# MESSAGE 002029
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] certificate verification failed for { <username>[<saddr>]:<fld1>: | <username>: } <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+certificate[\s]+verification[\s]+failed[\s]+for[\s]+([\s]*(?<username>[^\[]*)\[(?<saddr>[^\]]*)\]:(?<fld1>[^:]*):[\s]+|[\s]*(?<username>[^:]*):[\s]+)[\s]+(?<result>.*)$" }
				id => "message-002029"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "certificate verification failure"
					"[event][id]" => "002029"
					"[rsa][message][id1]" => "002029"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002030
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : to=<<<dhost>>, relay=<shost>[<saddr>]:<sport>, delay=<fld2>, delays=<fld1>, dsn=<version>, status=sent (<info>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : to=<%{dhost}>, relay=%{shost}[%{saddr}]:%{sport}, delay=%{fld2}, delays=%{fld1}, dsn=%{version}, status=sent (%{info})" }
				id => "message-002030"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "message sent"
					"[event][id]" => "002030"
					"[rsa][message][id1]" => "002030"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1009
	# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : to=<<<dhost>>, relay=<shost>[<saddr>], delay=<dclass_counter1>, status=sent (<info>) 
	else if [logstash][msgparser][id] == "msgParserId1009" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : to=<%{dhost}>, relay=%{shost}[%{saddr}], delay=%{dclass_counter1}, status=sent (%{info})" }
			id => "msgParserId1009"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "message sent"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/smtp_mail" {
		# MESSAGE 001180
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> : to=<<<dhost>>, relay=<shost>[<saddr>], delay=<dclass_counter1>, status=sent (<info>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} : to=<%{dhost}>, relay=%{shost}[%{saddr}], delay=%{dclass_counter1}, status=sent (%{info})" }
				id => "message-001180"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "message sent"
					"[event][id]" => "001180"
					"[rsa][message][id1]" => "001180"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001190
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001190"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001190"
					"[rsa][message][id1]" => "001190"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/smtpd_local6" {
		# MESSAGE 001824
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <id1>: client=<shost>[<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<id1>[^:]*):[\s]+client=(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]$" }
				id => "message-001824"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001824"
					"[rsa][message][id1]" => "001824"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001823
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { connect | disconnect } from <shost>[<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*connect[\s]+|[\s]*disconnect[\s]+)[\s]+from[\s]+(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]$" }
				id => "message-001823"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connect/disconnect"
					"[event][id]" => "001823"
					"[rsa][message][id1]" => "001823"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001874
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] lost connection after <result> from <shost>[<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+lost[\s]+connection[\s]+after[\s]+(?<result>[^\s]*)[\s]+from[\s]+(?<shost>[^\[]*)\[(?<saddr>[^\]]*)\]$" }
				id => "message-001874"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "lost connection"
					"[event][id]" => "001874"
					"[rsa][message][id1]" => "001874"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001875
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: reject: <result>... from <dhost>[<daddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+reject:[\s]+(?<result>[^\.]*)\.\.\.[\s]+from[\s]+(?<dhost>[^\[]*)\[(?<daddr>[^\]]*)\]$" }
				id => "message-001875"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "reject from host"
					"[event][id]" => "001875"
					"[rsa][message][id1]" => "001875"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001876
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: Illegal address syntax from <fhost>[<faddr>] in RCPT command { '<username>' | <username> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+Illegal[\s]+address[\s]+syntax[\s]+from[\s]+(?<fhost>[^\[]*)\[(?<faddr>[^\]]*)\][\s]+in[\s]+RCPT[\s]+command[\s]+([\s]*'(?<username>[^']*)'[\s]+|[\s]*(?<username>[^\s]*)[\s]+)$" }
				id => "message-001876"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Illegal address syntax from host in RCPT command"
					"[event][id]" => "001876"
					"[rsa][message][id1]" => "001876"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001877
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] NOQUEUE: reject: <rule> from <dhost>[<daddr>]: <protocol>: { <action>: <result>; <info> | <action>; <info> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+NOQUEUE:[\s]+reject:[\s]+(?<rule>[^\s]*)[\s]+from[\s]+(?<dhost>[^\[]*)\[(?<daddr>[^\]]*)\]:[\s]+(?<protocol>[^:]*):[\s]+([\s]*(?<action>[^:]*):[\s]+(?<result>[^;]*);[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<action>[^;]*);[\s]+(?<info>[^\s]*)[\s]+)$" }
				id => "message-001877"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "NOQUEUE reject"
					"[event][id]" => "001877"
					"[rsa][message][id1]" => "001877"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001878
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] NOQUEUE: reject: <rule> from <dhost>[<daddr>]: <result>; <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+NOQUEUE:[\s]+reject:[\s]+(?<rule>[^\s]*)[\s]+from[\s]+(?<dhost>[^\[]*)\[(?<daddr>[^\]]*)\]:[\s]+(?<result>[^;]*);[\s]+(?<info>.*)$" }
				id => "message-001878"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "NOQUEUE reject"
					"[event][id]" => "001878"
					"[rsa][message][id1]" => "001878"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "postfix/smtpd_mail" {
		# MESSAGE 001181
		# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] { connect | disconnect } from <fqdn>[<saddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*connect[\s]+|[\s]*disconnect[\s]+)[\s]+from[\s]+(?<fqdn>[^\[]*)\[(?<saddr>[^\]]*)\]$" }
				id => "message-001181"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "connect/disconnect"
					"[event][id]" => "001181"
					"[rsa][message][id1]" => "001181"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001182
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] lost connection after <result> from <fqdn>[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] lost connection after %{result} from %{fqdn}[%{saddr}]" }
				id => "message-001182"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "lost connection"
					"[event][id]" => "001182"
					"[rsa][message][id1]" => "001182"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001825
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: reject: <result>... from <dhost>[<daddr>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+reject:[\s]+(?<result>[^\.]*)\.\.\.[\s]+from[\s]+(?<dhost>[^\[]*)\[(?<daddr>[^\]]*)\]$" }
				id => "message-001825"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "reject from host"
					"[event][id]" => "001825"
					"[rsa][message][id1]" => "001825"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001826
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: Illegal address syntax from <fhost>[<faddr>] in { MAIL | RCPT } command { '<username>' | <username> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+Illegal[\s]+address[\s]+syntax[\s]+from[\s]+(?<fhost>[^\[]*)\[(?<faddr>[^\]]*)\][\s]+in[\s]+([\s]*MAIL[\s]+|[\s]*RCPT[\s]+)[\s]+command[\s]+([\s]*'(?<username>[^']*)'[\s]+|[\s]*(?<username>[^\s]*)[\s]+)$" }
				id => "message-001826"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Illegal address syntax from host in mail command"
					"[event][id]" => "001826"
					"[rsa][message][id1]" => "001826"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002447
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: non-SMTP command from unknown[<saddr>]: <action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+non\-SMTP[\s]+command[\s]+from[\s]+unknown\[(?<saddr>[^\]]*)\]:[\s]+(?<action>.*)$" }
				id => "message-002447"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "non-SMTP command from unknown"
					"[event][id]" => "002447"
					"[rsa][message][id1]" => "002447"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001184
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] NOQUEUE: reject: <rule> from <dhost>[<daddr>]: <protocol>: { <action>: <result>; <info> | <action>; <info> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+NOQUEUE:[\s]+reject:[\s]+(?<rule>[^\s]*)[\s]+from[\s]+(?<dhost>[^\[]*)\[(?<daddr>[^\]]*)\]:[\s]+(?<protocol>[^:]*):[\s]+([\s]*(?<action>[^:]*):[\s]+(?<result>[^;]*);[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<action>[^;]*);[\s]+(?<info>[^\s]*)[\s]+)$" }
				id => "message-001184"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "NOQUEUE reject"
					"[event][id]" => "001184"
					"[rsa][message][id1]" => "001184"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001843
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] NOQUEUE: reject: <rule> from <dhost>[<daddr>]: <result>; <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+NOQUEUE:[\s]+reject:[\s]+(?<rule>[^\s]*)[\s]+from[\s]+(?<dhost>[^\[]*)\[(?<daddr>[^\]]*)\]:[\s]+(?<result>[^;]*);[\s]+(?<info>.*)$" }
				id => "message-001843"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "NOQUEUE reject"
					"[event][id]" => "001843"
					"[rsa][message][id1]" => "001843"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001071
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] gethostbyaddr: <shost> != <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] gethostbyaddr: %{shost} != %{saddr}" }
				id => "message-001071"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gethostbyaddr - host address mismatch"
				"interface" => "gethostbyaddr"
					"[event][id]" => "001071"
					"[rsa][message][id1]" => "001071"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001828
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: lookup <username>, NIS domain <group>, map <info>: internal yp server or client error
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+lookup[\s]+(?<username>[^,]*),[\s]+NIS[\s]+domain[\s]+(?<group>[^,]*),[\s]+map[\s]+(?<info>[^:]*):[\s]+internal[\s]+yp[\s]+server[\s]+or[\s]+client[\s]+error$" }
				id => "message-001828"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "internal yp server or client error"
					"[event][id]" => "001828"
					"[rsa][message][id1]" => "001828"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002524
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: <application>: error reading <bytes> bytes from the network: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: %{application}: error reading %{bytes} bytes from the network: %{result}" }
				id => "message-002524"
				add_field => {
				"event_description" => "error reading bytes from the network"
					"[event][id]" => "002524"
					"[rsa][message][id1]" => "002524"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001827
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: <id1>: queue file size limit exceeded
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+(?<id1>[^:]*):[\s]+queue[\s]+file[\s]+size[\s]+limit[\s]+exceeded$" }
				id => "message-001827"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "queue file size limit exceeded"
					"[event][id]" => "001827"
					"[rsa][message][id1]" => "001827"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001072
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: <saddr>: hostname <shost> verification failed: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: %{saddr}: hostname %{shost} verification failed: %{result}" }
				id => "message-001072"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "hostname verification failure"
					"[event][id]" => "001072"
					"[rsa][message][id1]" => "001072"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001045
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] TLS connection established from <fqdn>[<saddr>]: <protocol>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] TLS connection established from %{fqdn}[%{saddr}]: %{protocol}" }
				id => "message-001045"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "TLS connection established"
					"[event][id]" => "001045"
					"[rsa][message][id1]" => "001045"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002526
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: TLS library problem:<resultcode>:error:<fld>:<application>:<action>:<result>:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: TLS library problem:%{resultcode}:error:%{fld}:%{application}:%{action}:%{result}:%{info}" }
				id => "message-002526"
				add_field => {
				"event_description" => "TLS library problem"
					"[event][id]" => "002526"
					"[rsa][message][id1]" => "002526"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001035
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] setting up TLS connection from <fqdn>[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] setting up TLS connection from %{fqdn}[%{saddr}]" }
				id => "message-001035"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "setting up TLS connection"
					"[event][id]" => "001035"
					"[rsa][message][id1]" => "001035"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001502
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <id1> client=<shost>[<saddr>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{id1} client=%{shost}[%{saddr}]" }
				id => "message-001502"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "client address"
					"[event][id]" => "001502"
					"[rsa][message][id1]" => "001502"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001503
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: database <directory> is older than source file <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: database %{directory} is older than source file %{filename}" }
				id => "message-001503"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "database older than source file"
					"[event][id]" => "001503"
					"[rsa][message][id1]" => "001503"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001504
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] timeout after <info> from <shost>[<saddr>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] timeout after %{info} from %{shost}[%{saddr}]" }
				id => "message-001504"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "timeout after smtp activity"
					"[event][id]" => "001504"
					"[rsa][message][id1]" => "001504"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001701
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: <hostip>: address not listed for hostname <shost> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: %{hostip}: address not listed for hostname %{shost}" }
				id => "message-001701"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "address not listed for hostname"
					"[event][id]" => "001701"
					"[rsa][message][id1]" => "001701"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002031
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] warning: restriction permit_naked_ip_address is deprecated. <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] warning: restriction permit_naked_ip_address is deprecated. %{info}" }
				id => "message-002031"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "restriction permit_naked_ip_address is deprecated"
					"[event][id]" => "002031"
					"[rsa][message][id1]" => "002031"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002523
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] too many errors after RCPT from <shost>[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] too many errors after RCPT from %{shost}[%{saddr}]" }
				id => "message-002523"
				add_field => {
				"event_description" => "too many errors after RCPT"
					"[event][id]" => "002523"
					"[rsa][message][id1]" => "002523"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002525
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] SSL_accept error from <shost>[<saddr>]: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] SSL_accept error from %{shost}[%{saddr}]: %{result}" }
				id => "message-002525"
				add_field => {
				"event_description" => "SSL_accept error from host"
					"[event][id]" => "002525"
					"[rsa][message][id1]" => "002525"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1035
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] warning: database <directory> is older than source file <filename>
	else if [logstash][msgparser][id] == "msgParserId1035" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+warning:[\s]+database[\s]+(?<directory>[^\s]*)[\s]+is[\s]+older[\s]+than[\s]+source[\s]+file[\s]+(?<filename>.*)$" }
			id => "msgParserId1035"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "database file older than source file"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "root_daemon" {
		# MESSAGE 001200
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <fld1>:root: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{fld1}:root: %{action}" }
				id => "message-001200"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001200"
					"[rsa][message][id1]" => "001200"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001290
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
				id => "message-001290"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001290"
					"[rsa][message][id1]" => "001290"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "root_local2" {
		# MESSAGE 001069
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] User <username> has logged in 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] User %{username} has logged in" }
				id => "message-001069"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user login"
					"[event][id]" => "001069"
					"[rsa][message][id1]" => "001069"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002384
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <action>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{action}: %{event_description}" }
				id => "message-002384"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "002384"
					"[rsa][message][id1]" => "002384"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "root_local3" {
		# MESSAGE 001248
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to { <terminal> ( from <saddr>) | <shost> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+logged[\s]+on[\s]+to[\s]+([\s]*(?<terminal>[^\s]*)[\s]+\([\s]+from[\s]+(?<saddr>[^\)]*)\)[\s]+|[\s]*(?<shost>[^\s]*)[\s]+)[\s]+$" }
				id => "message-001248"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001248"
					"[rsa][message][id1]" => "001248"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001291
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off { from | to } <terminal> ({ Connected from | from } <saddr>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+logged[\s]+off[\s]+([\s]*from[\s]+|[\s]*to[\s]+)[\s]+(?<terminal>[^\s]*)[\s]+\(([\s]*Connected[\s]+from[\s]+|[\s]*from[\s]+)[\s]+(?<saddr>[^\)]*)\)$" }
				id => "message-001291"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001291"
					"[rsa][message][id1]" => "001291"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002000
		# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <filename> has been modified
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{filename} has been modified" }
				id => "message-002000"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "config file modified"
					"[event][id]" => "002000"
					"[rsa][message][id1]" => "002000"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1041
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] { <terminal>, (<fqdn>), PWD: | PWD: } <directory>, CMD: "<info>"
	else if [logstash][msgparser][id] == "msgParserId1041" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<directory>[^,]*),[\s]+CMD:[\s]+\"(?<info>[^\"]*)\"$" }
			id => "msgParserId1041"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sftp-server_user" {
		# MESSAGE 001771
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: <event_description> (<hostip>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)$" }
				id => "message-001771"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001771"
					"[rsa][message][id1]" => "001771"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001862
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: { <event_description>: <result> | <event_description> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+libsldap:[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+([\s]*(?<event_description>[^:]*):[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
				id => "message-001862"
				add_field => {
				"event_computer" => "%{hhostip}"
				"process" => "libsldap"
					"[event][id]" => "001862"
					"[rsa][message][id1]" => "001862"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1042
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>]  <username> : TTY=<interface> ; PWD=<directory> ; USER=<c_username> ; COMMAND=<action>
	else if [logstash][msgparser][id] == "msgParserId1042" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<username>[^\s]*)[\s]+:[\s]+TTY=(?<interface>[^\s]*)[\s]+;[\s]+PWD=(?<directory>[^\s]*)[\s]+;[\s]+USER=(?<c_username>[^\s]*)[\s]+;[\s]+COMMAND=(?<action>.*)$" }
			id => "msgParserId1042"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1043
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <action> access by <username> - reason: <info>
	else if [logstash][msgparser][id] == "msgParserId1043" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<action>[^\s]*)[\s]+access[\s]+by[\s]+(?<username>[^\s]*)[\s]+\-[\s]+reason:[\s]+(?<info>.*)$" }
			id => "msgParserId1043"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "acces by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1044
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <event_description> (<filename>)
	else if [logstash][msgparser][id] == "msgParserId1044" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description} (%{filename})" }
			id => "msgParserId1044"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1045
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] WARNING: master instance closed
	else if [logstash][msgparser][id] == "msgParserId1045" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] WARNING: master instance closed" }
			id => "msgParserId1045"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "master instance closed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1046
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <application>: <action> | <action> }
	else if [logstash][msgparser][id] == "msgParserId1046" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<application>[^:]*):[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)$" }
			id => "msgParserId1046"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "application activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1047
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] # Reading policy file: <filename> # Current Policy: <policyname>
	else if [logstash][msgparser][id] == "msgParserId1047" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] # Reading policy file: %{filename} # Current Policy: %{policyname}" }
			id => "msgParserId1047"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Reading policy file"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1048
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] utpulld: <action>
	else if [logstash][msgparser][id] == "msgParserId1048" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+utpulld:[\s]+(?<action>.*)$" }
			id => "msgParserId1048"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "utpulld activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1049
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] utpushd: <action>
	else if [logstash][msgparser][id] == "msgParserId1049" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+utpushd:[\s]+(?<action>.*)$" }
			id => "msgParserId1049"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "utpulld activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1050
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application>: lost Device Manager connection
	else if [logstash][msgparser][id] == "msgParserId1050" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^:]*):[\s]+lost[\s]+Device[\s]+Manager[\s]+connection$" }
			id => "msgParserId1050"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "lost Device Manager connection"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1051
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> ERROR: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1051" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+ERROR:[\s]+(?<event_description>.*)$" }
			id => "msgParserId1051"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1052
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <info> ERROR: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1052" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{info} ERROR: %{event_description}" }
			id => "msgParserId1052"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1021
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] gethostbyaddr: <shost> != <saddr> 
	else if [logstash][msgparser][id] == "msgParserId1021" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] gethostbyaddr: %{shost} != %{saddr}" }
			id => "msgParserId1021"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gethostbyaddr - host address mismatch"
				"interface" => "gethostbyaddr"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1053
	# line in RSA:    <agent>: <interface>: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1053" {
		dissect {
			mapping => { "message" => "%{agent}: %{interface}: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId1053"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "netstat_user" {
		# MESSAGE 001193
		# line in RSA:      <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: <shost> != <saddr>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: %{shost} != %{saddr}" }
				id => "message-001193"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gethostbyaddr - host address mismatch"
				"interface" => "gethostbyaddr"
					"[event][id]" => "001193"
					"[rsa][message][id1]" => "001193"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001880
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: Unable to load configuration '<filename>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: Unable to load configuration '%{filename}'" }
				id => "message-001880"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Unable to load configuration"
				"process" => "libsldap"
					"[event][id]" => "001880"
					"[rsa][message][id1]" => "001880"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1055
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] MonitorFrameworks on cenmi1 Closing down - <result>
	else if [logstash][msgparser][id] == "msgParserId1055" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] MonitorFrameworks on cenmi1 Closing down - %{result}" }
			id => "msgParserId1055"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "MonitorFrameworks on cenmi1 Closing down"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "audit_audit" {
		# MESSAGE 001985
		# line in RSA: <agent>: [ID <id> <event_source>.<severity>] <event_type>(<fld1>) - write,creat,trunc <result> session <sessionid> by <username> as <user_role>:<group> from <terminal> obj <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_type}(%{fld1}) - write,creat,trunc %{result} session %{sessionid} by %{username} as %{user_role}:%{group} from %{terminal} obj %{filename}" }
				id => "message-001985"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"event_description" => "write,create,trunc"
					"[event][id]" => "001985"
					"[rsa][message][id1]" => "001985"
					"[event][categoryid]" => "1401010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001983
		# line in RSA: <agent>: [ID <id> <event_source>.<severity>] <event_type> - unlock <disposition> <result> session <sessionid> by <username> as <user_role>:<group> from <terminal> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_type} - unlock %{disposition} %{result} session %{sessionid} by %{username} as %{user_role}:%{group} from %{terminal}" }
				id => "message-001983"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "unlock"
					"[event][id]" => "001983"
					"[rsa][message][id1]" => "001983"
					"[event][categoryid]" => "1401060100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001984
		# line in RSA: <agent>: [ID <id> <event_source>.<severity>] <event_type>(<fld1>) <result> session <sessionid> by <username> as <user_role>:<group> from <terminal> obj <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_type}(%{fld1}) %{result} session %{sessionid} by %{username} as %{user_role}:%{group} from %{terminal} obj %{filename}" }
				id => "message-001984"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "001984"
					"[rsa][message][id1]" => "001984"
					"[event][categoryid]" => "1612000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001982
		# line in RSA: <agent>: [ID <id> <event_source>.<severity>] <event_type> <result> session <sessionid> by <username> as <user_role>:<group> from <terminal> text <fld1> text <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{event_type} %{result} session %{sessionid} by %{username} as %{user_role}:%{group} from %{terminal} text %{fld1} text %{info}" }
				id => "message-001982"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Start"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "001982"
					"[rsa][message][id1]" => "001982"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000838
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-000838"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000838"
					"[rsa][message][id1]" => "000838"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1061
	# line in RSA:    <agent>(<interface>)[<process_id>]: [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1061" {
		dissect {
			mapping => { "message" => "%{agent}(%{interface})[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId1061"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1062
	# line in RSA:    <agent>(): [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1062" {
		dissect {
			mapping => { "message" => "%{agent}(): [ID %{id} %{event_source}.%{severity}] %{event_description}" }
			id => "msgParserId1062"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1063
	# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> (host=<hostname>, service=<service>)
	else if [logstash][msgparser][id] == "msgParserId1063" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+\(host=(?<hostname>[^,]*),[\s]+service=(?<service>[^\)]*)\)$" }
			id => "msgParserId1063"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId780
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] tid= <fld1>: <event_description> (<hostip>)
	else if [logstash][msgparser][id] == "msgParserId780" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+tid=[\s]+(?<fld1>[^:]*):[\s]+(?<event_description>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)$" }
			id => "msgParserId780"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1064
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> (<hostname>)
	else if [logstash][msgparser][id] == "msgParserId1064" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+\((?<hostname>[^\)]*)\)$" }
			id => "msgParserId1064"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1065
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <service>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1065" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{service}: %{event_description}" }
			id => "msgParserId1065"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1066
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] [<process>] on computer [<terminal>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1066" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] [%{process}] on computer [%{terminal}] %{event_description}" }
			id => "msgParserId1066"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "bpcrm_local3" {
		# MESSAGE 001560
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001560"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001560"
					"[rsa][message][id1]" => "001560"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001561
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001561"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001561"
					"[rsa][message][id1]" => "001561"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1067
	# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] Declaration file<filename> does not exist
	else if [logstash][msgparser][id] == "msgParserId1067" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] Declaration file%{filename} does not exist" }
			id => "msgParserId1067"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "cogbatch_local3" {
		# MESSAGE 001210
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001210"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001210"
					"[rsa][message][id1]" => "001210"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001277
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001277"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001277"
					"[rsa][message][id1]" => "001277"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cognos_local3" {
		# MESSAGE 001318
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001318"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001318"
					"[rsa][message][id1]" => "001318"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001319
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001319"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001319"
					"[rsa][message][id1]" => "001319"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "cognos8_local3" {
		# MESSAGE 001594
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001594"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001594"
					"[rsa][message][id1]" => "001594"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001595
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001595"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001595"
					"[rsa][message][id1]" => "001595"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1068
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] ncrx: <info>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId1068" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] ncrx: %{info}, %{event_description}" }
			id => "msgParserId1068"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "crmpsg_local3" {
		# MESSAGE 001212
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001212"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001212"
					"[rsa][message][id1]" => "001212"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001278
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001278"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001278"
					"[rsa][message][id1]" => "001278"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "crmrep_local3" {
		# MESSAGE 001562
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001562"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001562"
					"[rsa][message][id1]" => "001562"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001563
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001563"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001563"
					"[rsa][message][id1]" => "001563"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "d47adm_local3" {
		# MESSAGE 001213
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001213"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001213"
					"[rsa][message][id1]" => "001213"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001279
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001279"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001279"
					"[rsa][message][id1]" => "001279"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dguser_local3" {
		# MESSAGE 001214
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001214"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001214"
					"[rsa][message][id1]" => "001214"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001280
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001280"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001280"
					"[rsa][message][id1]" => "001280"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1069
	# line in RSA:     <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: ddl_drive_open failed with error <info>:<<<result>>
	else if [logstash][msgparser][id] == "msgParserId1069" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: ddl_drive_open failed with error %{info}:<%{result}>" }
			id => "msgParserId1069"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "ddl_drive_open failed with error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "esd_user" {
		# MESSAGE 000900
		# line in RSA:      { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <process>: Status: <resultcode> Mesg: Session error <result>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<process>[^:]*):[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Mesg:[\s]+Session[\s]+error[\s]+(?<result>[^\.]*)\.$" }
				id => "message-000900"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "session error"
					"[event][id]" => "000900"
					"[rsa][message][id1]" => "000900"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001448
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001448"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001448"
					"[rsa][message][id1]" => "001448"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1070
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] { <application>: <action> | <action> } 
	else if [logstash][msgparser][id] == "msgParserId1070" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<application>[^:]*):[\s]+(?<action>[^\s]*)[\s]+|[\s]*(?<action>[^\s]*)[\s]+)[\s]+$" }
			id => "msgParserId1070"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "application activity"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1071
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] (?@<fld1>) [<info>] New connection from <saddr>
	else if [logstash][msgparser][id] == "msgParserId1071" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+\(\?@(?<fld1>[^\)]*)\)[\s]+\[(?<info>[^\]]*)\][\s]+New[\s]+connection[\s]+from[\s]+(?<saddr>.*)$" }
			id => "msgParserId1071"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1072
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: unable to open file <filename> <event_description>
	else if [logstash][msgparser][id] == "msgParserId1072" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: unable to open file %{filename} %{event_description}" }
			id => "msgParserId1072"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "guard_tap_user" {
		# MESSAGE 001010
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Server <hostip> wasnt heard from for <resultcode> sec, closing and re-openning <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Server[\s]+(?<hostip>[^\s]*)[\s]+wasnt[\s]+heard[\s]+from[\s]+for[\s]+(?<resultcode>[^\s]*)[\s]+sec,[\s]+closing[\s]+and[\s]+re\-openning[\s]+(?<event_description>.*)$" }
				id => "message-001010"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "closing and re-openning server"
				"result" => "Server wasnt heard from"
					"[event][id]" => "001010"
					"[rsa][message][id1]" => "001010"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001572
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <application> socket write:  <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<application>[^\s]*)[\s]+socket[\s]+write:[\s]+(?<result>.*)$" }
				id => "message-001572"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "socket write error"
					"[event][id]" => "001572"
					"[rsa][message][id1]" => "001572"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001130
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-001130"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001130"
					"[rsa][message][id1]" => "001130"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "httpd_local1" {
		# MESSAGE 001727
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] [<fld1>] [client <saddr>] <action>, referer: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] [%{fld1}] [client %{saddr}] %{action}, referer: %{info}" }
				id => "message-001727"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001727"
					"[rsa][message][id1]" => "001727"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001728
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] [<fld1>] [client <saddr>] <event_description>: <directory> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] [%{fld1}] [client %{saddr}] %{event_description}: %{directory}" }
				id => "message-001728"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001728"
					"[rsa][message][id1]" => "001728"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1077
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> (host=<hostname>, service=<service>)
	else if [logstash][msgparser][id] == "msgParserId1077" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+\(host=(?<hostname>[^,]*),[\s]+service=(?<service>[^\)]*)\)$" }
			id => "msgParserId1077"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "msbpuser_local3" {
		# MESSAGE 001225
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001225"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001225"
					"[rsa][message][id1]" => "001225"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001283
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001283"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001283"
					"[rsa][message][id1]" => "001283"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "msolvb20_local3" {
		# MESSAGE 001634
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001634"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001634"
					"[rsa][message][id1]" => "001634"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001635
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001635"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001635"
					"[rsa][message][id1]" => "001635"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "msolvm17_local3" {
		# MESSAGE 001603
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001603"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001603"
					"[rsa][message][id1]" => "001603"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001604
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001604"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001604"
					"[rsa][message][id1]" => "001604"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "msolvn11_local3" {
		# MESSAGE 001557
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001557"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001557"
					"[rsa][message][id1]" => "001557"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001558
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001558"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001558"
					"[rsa][message][id1]" => "001558"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "msolvn12_local3" {
		# MESSAGE 001555
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001555"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001555"
					"[rsa][message][id1]" => "001555"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001556
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001556"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001556"
					"[rsa][message][id1]" => "001556"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "msolvn13_local3" {
		# MESSAGE 001552
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001552"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001552"
					"[rsa][message][id1]" => "001552"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001553
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001553"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001553"
					"[rsa][message][id1]" => "001553"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "msolvn37_local3" {
		# MESSAGE 001628
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001628"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001628"
					"[rsa][message][id1]" => "001628"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001629
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001629"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001629"
					"[rsa][message][id1]" => "001629"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "msolvn41_local3" {
		# MESSAGE 001630
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001630"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001630"
					"[rsa][message][id1]" => "001630"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001631
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001631"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001631"
					"[rsa][message][id1]" => "001631"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nimsprod_local3" {
		# MESSAGE 001229
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001229"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001229"
					"[rsa][message][id1]" => "001229"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001601
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001601"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001601"
					"[rsa][message][id1]" => "001601"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "nimsrep_local3" {
		# MESSAGE 001519
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001519"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001519"
					"[rsa][message][id1]" => "001519"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001520
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001520"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001520"
					"[rsa][message][id1]" => "001520"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1078
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] { <terminal>, (<fqdn>), PWD: | PWD: } <directory>, CMD: "<info>"
	else if [logstash][msgparser][id] == "msgParserId1078" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<fqdn>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<directory>[^,]*),[\s]+CMD:[\s]+\"(?<info>[^\"]*)\"$" }
			id => "msgParserId1078"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "nscd_user" {
		# MESSAGE 001018
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: <info>: Timed out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: %{info}: Timed out" }
				id => "message-001018"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Time out"
				"process" => "libsldap"
					"[event][id]" => "001018"
					"[rsa][message][id1]" => "001018"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002383
		# line in RSA:   <agent>[<process_id>]: [ID <id> <event_source>.<severity>] libsldap: Status: <resultcode> Mesg: <info>: Error occurred during receiving results. <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] libsldap: Status: %{resultcode} Mesg: %{info}: Error occurred during receiving results. %{result}" }
				id => "message-002383"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "Error occurred during receiving results"
				"process" => "libsldap"
					"[event][id]" => "002383"
					"[rsa][message][id1]" => "002383"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001073
		# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: <shost> != <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: %{shost} != %{saddr}" }
				id => "message-001073"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "gethostbyaddr - host address mismatch"
				"interface" => "gethostbyaddr"
					"[event][id]" => "001073"
					"[rsa][message][id1]" => "001073"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "oemagent_local3" {
		# MESSAGE 001231
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001231"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001231"
					"[rsa][message][id1]" => "001231"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001284
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001284"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001284"
					"[rsa][message][id1]" => "001284"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa113549_local3" {
		# MESSAGE 001328
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001328"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001328"
					"[rsa][message][id1]" => "001328"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001329
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001329"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001329"
					"[rsa][message][id1]" => "001329"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa149358_local3" {
		# MESSAGE 001582
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001582"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001582"
					"[rsa][message][id1]" => "001582"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001583
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001583"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001583"
					"[rsa][message][id1]" => "001583"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa150770_local3" {
		# MESSAGE 001590
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001590"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001590"
					"[rsa][message][id1]" => "001590"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001591
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001591"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001591"
					"[rsa][message][id1]" => "001591"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa152062_local3" {
		# MESSAGE 001596
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001596"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001596"
					"[rsa][message][id1]" => "001596"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001597
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001597"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001597"
					"[rsa][message][id1]" => "001597"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa163048_local3" {
		# MESSAGE 001540
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001540"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001540"
					"[rsa][message][id1]" => "001540"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001541
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001541"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001541"
					"[rsa][message][id1]" => "001541"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa163781_local3" {
		# MESSAGE 001256
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001256"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001256"
					"[rsa][message][id1]" => "001256"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001316
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001316"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001316"
					"[rsa][message][id1]" => "001316"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa163783_local3" {
		# MESSAGE 001259
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001259"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001259"
					"[rsa][message][id1]" => "001259"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001307
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001307"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001307"
					"[rsa][message][id1]" => "001307"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1082
	# line in RSA:    <agent>: [ID <id> <event_source>.<severity>] <terminal>, (<fqdn>), PWD: <directory>, CMD: "<info>"
	else if [logstash][msgparser][id] == "msgParserId1082" {
		dissect {
			mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] %{terminal}, (%{fqdn}), PWD: %{directory}, CMD: \"%{info}\"" }
			id => "msgParserId1082"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sa164045_local3" {
		# MESSAGE 001255
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001255"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001255"
					"[rsa][message][id1]" => "001255"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001296
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001296"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001296"
					"[rsa][message][id1]" => "001296"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa165637_local3" {
		# MESSAGE 001310
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001310"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001310"
					"[rsa][message][id1]" => "001310"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001311
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001311"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001311"
					"[rsa][message][id1]" => "001311"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa167981_local3" {
		# MESSAGE 000933
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-000933"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "000933"
					"[rsa][message][id1]" => "000933"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000936
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-000936"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "000936"
					"[rsa][message][id1]" => "000936"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa209734_local3" {
		# MESSAGE 001254
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001254"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001254"
					"[rsa][message][id1]" => "001254"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001295
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001295"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001295"
					"[rsa][message][id1]" => "001295"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa209742_local3" {
		# MESSAGE 001251
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001251"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001251"
					"[rsa][message][id1]" => "001251"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001293
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001293"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001293"
					"[rsa][message][id1]" => "001293"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa209744_local3" {
		# MESSAGE 001334
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001334"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001334"
					"[rsa][message][id1]" => "001334"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001600
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001600"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001600"
					"[rsa][message][id1]" => "001600"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa209747_local3" {
		# MESSAGE 001250
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001250"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001250"
					"[rsa][message][id1]" => "001250"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001292
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001292"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001292"
					"[rsa][message][id1]" => "001292"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa209748_local3" {
		# MESSAGE 001598
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001598"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001598"
					"[rsa][message][id1]" => "001598"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001599
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001599"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001599"
					"[rsa][message][id1]" => "001599"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa209756_local3" {
		# MESSAGE 001257
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001257"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001257"
					"[rsa][message][id1]" => "001257"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001297
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001297"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001297"
					"[rsa][message][id1]" => "001297"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa223584_local3" {
		# MESSAGE 001312
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001312"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001312"
					"[rsa][message][id1]" => "001312"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001313
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001313"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001313"
					"[rsa][message][id1]" => "001313"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa236524_local3" {
		# MESSAGE 001408
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001408"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001408"
					"[rsa][message][id1]" => "001408"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001413
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001413"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001413"
					"[rsa][message][id1]" => "001413"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa245339_local3" {
		# MESSAGE 001253
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001253"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001253"
					"[rsa][message][id1]" => "001253"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001294
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001294"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001294"
					"[rsa][message][id1]" => "001294"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1083
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] { <terminal>, (<interface>), PWD: | PWD: } <info>, CMD: "<event_description> { " | <space> }
	else if [logstash][msgparser][id] == "msgParserId1083" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<terminal>[^,]*),[\s]+\((?<interface>[^\)]*)\),[\s]+PWD:[\s]+|[\s]*PWD:[\s]+)[\s]+(?<info>[^,]*),[\s]+CMD:[\s]+\"(?<event_description>[^\s]*)[\s]+([\s]*\"[\s]+|[\s]*(?<space>[^\s]*)[\s]+)$" }
			id => "msgParserId1083"
			add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "command execution"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "sa246157_local3" {
		# MESSAGE 001258
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001258"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001258"
					"[rsa][message][id1]" => "001258"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001306
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001306"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001306"
					"[rsa][message][id1]" => "001306"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa258665_local3" {
		# MESSAGE 001308
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001308"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001308"
					"[rsa][message][id1]" => "001308"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001309
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001309"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001309"
					"[rsa][message][id1]" => "001309"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa179228_local3" {
		# MESSAGE 001314
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001314"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001314"
					"[rsa][message][id1]" => "001314"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001315
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001315"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001315"
					"[rsa][message][id1]" => "001315"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa179272_local3" {
		# MESSAGE 001324
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001324"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001324"
					"[rsa][message][id1]" => "001324"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001325
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001325"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001325"
					"[rsa][message][id1]" => "001325"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa212887_local3" {
		# MESSAGE 001326
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001326"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001326"
					"[rsa][message][id1]" => "001326"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001327
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001327"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001327"
					"[rsa][message][id1]" => "001327"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa205984_local3" {
		# MESSAGE 001330
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001330"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001330"
					"[rsa][message][id1]" => "001330"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001331
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001331"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001331"
					"[rsa][message][id1]" => "001331"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa219851_local3" {
		# MESSAGE 000990
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-000990"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "000990"
					"[rsa][message][id1]" => "000990"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001044
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001044"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001044"
					"[rsa][message][id1]" => "001044"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa247098_local3" {
		# MESSAGE 001333
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001333"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001333"
					"[rsa][message][id1]" => "001333"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001419
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001419"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001419"
					"[rsa][message][id1]" => "001419"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa255307_local3" {
		# MESSAGE 001320
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001320"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001320"
					"[rsa][message][id1]" => "001320"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001321
		# line in RSA:     <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001321"
				add_field => {
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001321"
					"[rsa][message][id1]" => "001321"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "sa305159_local3" {
		# MESSAGE 001083
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001083"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001083"
					"[rsa][message][id1]" => "001083"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001107
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001107"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001107"
					"[rsa][message][id1]" => "001107"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1084
	# line in RSA:    <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>: cannot chroot to directory <directory>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId1084" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}: cannot chroot to directory %{directory}: %{event_description}" }
			id => "msgParserId1084"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tibprd_local3" {
		# MESSAGE 001543
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged on to <terminal> ( from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged on to %{terminal} ( from %{saddr})" }
				id => "message-001543"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged on"
					"[event][id]" => "001543"
					"[rsa][message][id1]" => "001543"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001544
		# line in RSA:  <agent>: [ID <id> <event_source>.<severity>] logged off from <terminal> (Connected from <saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}: [ID %{id} %{event_source}.%{severity}] logged off from %{terminal} (Connected from %{saddr})" }
				id => "message-001544"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "logged off"
					"[event][id]" => "001544"
					"[rsa][message][id1]" => "001544"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dxadmind_user" {
		# MESSAGE 001902
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] conn=<fld2> fd=<fld3> ACCEPT from IP=<saddr>:<sport> (<fld4>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+conn=(?<fld2>[^\s]*)[\s]+fd=(?<fld3>[^\s]*)[\s]+ACCEPT[\s]+from[\s]+IP=(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+\((?<fld4>[^\)]*)\)$" }
				id => "message-001902"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001902"
					"[rsa][message][id1]" => "001902"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001903
		# line in RSA:     { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] conn=<fld2> fd=<fld3> {closed (TLS negotiation failure)|closed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+conn=(?<fld2>[^\s]*)[\s]+fd=(?<fld3>[^\s]*)[\s]+(closed[\s]+\(TLS[\s]+negotiation[\s]+failure\)|closed)$" }
				id => "message-001903"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001903"
					"[rsa][message][id1]" => "001903"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001912
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] PSEARCH {MODIFY|ADD|DELETE} NOTIFICATION <info> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+PSEARCH[\s]+(MODIFY|ADD|DELETE)[\s]+NOTIFICATION[\s]+(?<info>[^\s]*)[\s]+$" }
				id => "message-001912"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001912"
					"[rsa][message][id1]" => "001912"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001935
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\s]*)[\s]+$" }
				id => "message-001935"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001935"
					"[rsa][message][id1]" => "001935"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "uvservd" {
		# MESSAGE 001925
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Received connection from <saddr>:<sport> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Received[\s]+connection[\s]+from[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+$" }
				id => "message-001925"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001925"
					"[rsa][message][id1]" => "001925"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001926
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Failed Handshake to host <saddr>:<sport>! 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Failed[\s]+Handshake[\s]+to[\s]+host[\s]+(?<saddr>[^:]*):(?<sport>[^!]*)![\s]+$" }
				id => "message-001926"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001926"
					"[rsa][message][id1]" => "001926"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 001927
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] SSL_connect failed, errcode = <resultcode> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+SSL_connect[\s]+failed,[\s]+errcode[\s]+=[\s]+(?<resultcode>[^\s]*)[\s]+$" }
				id => "message-001927"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "001927"
					"[rsa][message][id1]" => "001927"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1092
	# line in RSA:   <agent>: [ID <id> <event_source>.<severity>] { <fld1> Sending address[<fld2>]: <saddr>:<sport> | <event_description> }
	else if [logstash][msgparser][id] == "msgParserId1092" {
		grok {
			match => { "message" => "^[\s]*(?<agent>[^:]*):[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+([\s]*(?<fld1>[^\s]*)[\s]+Sending[\s]+address\[(?<fld2>[^\]]*)\]:[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+|[\s]*(?<event_description>[^\s]*)[\s]+)$" }
			id => "msgParserId1092"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId743
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId743" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId743"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1095
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Syscall Monitor - <info> 
	else if [logstash][msgparser][id] == "msgParserId1095" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Syscall[\s]+Monitor[\s]+\-[\s]+(?<info>[^\s]*)[\s]+$" }
			id => "msgParserId1095"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1096
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Status Code: <status> -- <info> 
	else if [logstash][msgparser][id] == "msgParserId1096" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Status[\s]+Code:[\s]+(?<status>[^\s]*)[\s]+\-\-[\s]+(?<info>[^\s]*)[\s]+$" }
			id => "msgParserId1096"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1097
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info> 
	else if [logstash][msgparser][id] == "msgParserId1097" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+$" }
			id => "msgParserId1097"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1098
	# line in RSA:  <id> <event_source>.<severity>] <agent>: <username>(<uid>) <terminal> <saddr> <event_time_string> CUT
	else if [logstash][msgparser][id] == "msgParserId1098" {
		dissect {
			mapping => { "message" => "%{id} %{event_source}.%{severity}] %{agent}: %{username}(%{uid}) %{terminal} %{saddr} %{event_time_string} CUT" }
			id => "msgParserId1098"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "user login"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Logout" {
		# MESSAGE 001977
		# line in RSA:  <id> <event_source>.<severity>] <agent>: <username>(<uid>) <terminal>  <event_time_string> CUT
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{id} %{event_source}.%{severity}] %{agent}: %{username}(%{uid}) %{terminal}  %{event_time_string} CUT" }
				id => "message-001977"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "User Logoff"
					"[event][id]" => "001977"
					"[rsa][message][id1]" => "001977"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 004468
		# line in RSA:  <process_id>]: [ID <id> <event_source>.<severity>] Logout by <username> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id}]: [ID %{id} %{event_source}.%{severity}] Logout by %{username} from %{saddr}" }
				id => "message-004468"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "User Logoff"
					"[event][id]" => "004468"
					"[rsa][message][id1]" => "004468"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "descron" {
		# MESSAGE 002531
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] uid=<uid> status=<info> time=<fld1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+uid=(?<uid>[^\s]*)[\s]+status=(?<info>[^\s]*)[\s]+time=(?<fld1>.*)$" }
				id => "message-002531"
				add_field => {
					"[event][id]" => "002531"
					"[rsa][message][id1]" => "002531"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002532
		# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] cmd=<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+cmd=(?<action>.*)$" }
				id => "message-002532"
				add_field => {
					"[event][id]" => "002532"
					"[rsa][message][id1]" => "002532"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "named_daemon" {
		# MESSAGE 00001
		# line in RSA: <agent>[<process_id>]: [ID <id> <severity>] client <saddr>#<sport>: query: <domain> {IN <fld3> (<hostip>)|IN <fld1>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<severity>[^\]]*)\][\s]+client[\s]+(?<saddr>[^#]*)#(?<sport>[^:]*):[\s]+query:[\s]+(?<domain>[^\s]*)[\s]+(IN[\s]+(?<fld3>[^\s]*)[\s]+\((?<hostip>[^\)]*)\)|IN[\s]+(?<fld1>.*))$" }
				id => "message-00001"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "00001"
					"[rsa][message][id1]" => "00001"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002
		# line in RSA: <agent>[<process_id>]: [ID <id> <severity>] network unreachable resolving <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{severity}] network unreachable resolving %{fld3}" }
				id => "message-00002"
				add_field => {
				"hostname" => "%{hhost}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "00002"
					"[rsa][message][id1]" => "00002"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00003
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] automatic empty zone: <zone>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] automatic empty zone: %{zone}" }
				id => "message-00003"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00003"
					"[rsa][message][id1]" => "00003"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00004
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] command channel listening on <saddr>#<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] command channel listening on %{saddr}#%{sport}" }
				id => "message-00004"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00004"
					"[rsa][message][id1]" => "00004"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00005
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] zone <zone> loaded serial <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] zone %{zone} loaded serial %{fld4}" }
				id => "message-00005"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00005"
					"[rsa][message][id1]" => "00005"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00006
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] listening on <fld3> interface <sinterface>, <saddr>#<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] listening on %{fld3} interface %{sinterface}, %{saddr}#%{sport}" }
				id => "message-00006"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00006"
					"[rsa][message][id1]" => "00006"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00007
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] loading configuration from <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] loading configuration from %{filename}" }
				id => "message-00007"
				add_field => {
				"hostname" => "%{hhost}"
					"[event][id]" => "00007"
					"[rsa][message][id1]" => "00007"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00008
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] stopping command channel on <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] stopping command channel on %{fld3}" }
				id => "message-00008"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "stopping command channel"
					"[event][id]" => "00008"
					"[rsa][message][id1]" => "00008"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00009
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] no longer listening on <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] no longer listening on %{fld3}" }
				id => "message-00009"
				add_field => {
				"hostname" => "%{hhost}"
				"event_description" => "no longer listening"
					"[event][id]" => "00009"
					"[rsa][message][id1]" => "00009"
					"[event][categoryid]" => "1605010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 000637
		# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>.*)$" }
				id => "message-000637"
				add_field => {
				"event_computer" => "%{hhostip}"
					"[event][id]" => "000637"
					"[rsa][message][id1]" => "000637"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1112
	# line in RSA:    { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <info>
	else if [logstash][msgparser][id] == "msgParserId1112" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<info>.*)$" }
			id => "msgParserId1112"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "uxauthd_daemon" {
		# MESSAGE 002552
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] ERROR: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] ERROR: %{result}" }
				id => "message-002552"
				add_field => {
					"[event][id]" => "002552"
					"[rsa][message][id1]" => "002552"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002553
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] SASL BIND was OK.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] SASL BIND was OK." }
				id => "message-002553"
				add_field => {
				"event_description" => " SASL BIND was OK"
					"[event][id]" => "002553"
					"[rsa][message][id1]" => "002553"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002554
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] Looking for user '<username>' in '<fld1>' as <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] Looking for user '%{username}' in '%{fld1}' as %{fld2}" }
				id => "message-002554"
				add_field => {
					"[event][id]" => "002554"
					"[rsa][message][id1]" => "002554"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002555
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] Looking for groups for user <username> in <fld1> as <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] Looking for groups for user %{username} in %{fld1} as %{fld2}" }
				id => "message-002555"
				add_field => {
					"[event][id]" => "002555"
					"[rsa][message][id1]" => "002555"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002556
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] Groups for user '<username>' will be updated in <db_name> cache db.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] Groups for user '%{username}' will be updated in %{db_name} cache db." }
				id => "message-002556"
				add_field => {
					"[event][id]" => "002556"
					"[rsa][message][id1]" => "002556"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002558
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] Looking for users in <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] Looking for users in %{info}" }
				id => "message-002558"
				add_field => {
					"[event][id]" => "002558"
					"[rsa][message][id1]" => "002558"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002559
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] Loaded <fld1> group member entries.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] Loaded %{fld1} group member entries." }
				id => "message-002559"
				add_field => {
				"event_description" => " Loaded group member entries"
					"[event][id]" => "002559"
					"[rsa][message][id1]" => "002559"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002560
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] Domain '<domain>', used DCs '<hostname>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] Domain '%{domain}', used DCs '%{hostname}'." }
				id => "message-002560"
				add_field => {
					"[event][id]" => "002560"
					"[rsa][message][id1]" => "002560"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002561
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] Looking for groups in <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] Looking for groups in %{info}" }
				id => "message-002561"
				add_field => {
					"[event][id]" => "002561"
					"[rsa][message][id1]" => "002561"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 002562
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] Successfully renew proxy ticket for domain '<domain>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] Successfully renew proxy ticket for domain '%{domain}'." }
				id => "message-002562"
				add_field => {
				"event_description" => " Successfully renew proxy ticket for domain"
					"[event][id]" => "002562"
					"[rsa][message][id1]" => "002562"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1118
	# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<event_type>] connect from <hostname>
	else if [logstash][msgparser][id] == "msgParserId1118" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{event_type}] connect from %{hostname}" }
			id => "msgParserId1118"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1124
	# line in RSA:   { <agent>[<fld1>:<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1124" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<fld1>[^:]*):(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId1124"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1125
	# line in RSA:   { <agent>_<fld1>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1125" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^_]*)_(?<fld1>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId1125"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1126
	# line in RSA:   { <agent>:[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1126" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^:]*):\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId1126"
			add_field => {
				"event_computer" => "%{hhostip}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog_auth" {
		# MESSAGE 004465
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_vas: Authentication <<succeeded> for <<<info>> user: <<<username>> account: <<<fqdn>> service: <<<service>> reason: <<<result>>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_vas: Authentication <succeeded> for <%{info}> user: <%{username}> account: <%{fqdn}> service: <%{service}> reason: <%{result}>" }
				id => "message-004465"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_computer" => "%{hhostip}"
				"event_description" => "Authentication succeeded"
					"[event][id]" => "004465"
					"[rsa][message][id1]" => "004465"
					"[event][categoryid]" => "1302010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 011166
		# line in RSA:  <agent>[<process_id>]: [ID <id> <event_source>.<severity>] pam_unix_account: cron attempting to validate locked account <username> from local host
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] pam_unix_account: cron attempting to validate locked account %{username} from local host" }
				id => "message-011166"
				add_field => {
				"ec_theme" => "Authentication"
				"event_description" => "cron attempting to validate locked account"
					"[event][id]" => "011166"
					"[rsa][message][id1]" => "011166"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1128
	# line in RSA:  { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1128" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId1128"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1129
	# line in RSA:  Will recheck at <duration>s intervals for <fld1> seconds before exiting...<fld2>
	else if [logstash][msgparser][id] == "msgParserId1129" {
		dissect {
			mapping => { "message" => "Will recheck at %{duration}s intervals for %{fld1} seconds before exiting...%{fld2}" }
			id => "msgParserId1129"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "mdRequestBackup" {
		# MESSAGE 004482
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Looking in pickup directory <directory> on server <shost>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Looking[\s]+in[\s]+pickup[\s]+directory[\s]+(?<directory>[^\s]*)[\s]+on[\s]+server[\s]+(?<shost>[^\.]*)\.$" }
				id => "message-004482"
				add_field => {
					"[event][id]" => "004482"
					"[rsa][message][id1]" => "004482"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 004496
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Looking in pickup directory <directory>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Looking[\s]+in[\s]+pickup[\s]+directory[\s]+(?<directory>[^\.]*)\.$" }
				id => "message-004496"
				add_field => {
					"[event][id]" => "004496"
					"[rsa][message][id1]" => "004496"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 004497
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Copied file <filename> to <shost>:<directory>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Copied[\s]+file[\s]+(?<filename>[^\s]*)[\s]+to[\s]+(?<shost>[^:]*):(?<directory>[^\.]*)\.$" }
				id => "message-004497"
				add_field => {
					"[event][id]" => "004497"
					"[rsa][message][id1]" => "004497"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 004498
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] Created directory <directory> on server <shost>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+Created[\s]+directory[\s]+(?<directory>[^\s]*)[\s]+on[\s]+server[\s]+(?<shost>[^\.]*)\.$" }
				id => "message-004498"
				add_field => {
					"[event][id]" => "004498"
					"[rsa][message][id1]" => "004498"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 004499
		# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
				id => "message-004499"
				add_field => {
					"[event][id]" => "004499"
					"[rsa][message][id1]" => "004499"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1131
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId1131" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>.*)$" }
			id => "msgParserId1131"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1132
	# line in RSA:   { <agent>[<process_id>]: | <agent>: } [ID <id> <event_source>.<severity>] <event_description>.
	else if [logstash][msgparser][id] == "msgParserId1132" {
		grok {
			match => { "message" => "^[\s]*([\s]*(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+|[\s]*(?<agent>[^:]*):[\s]+)[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<event_description>[^\.]*)\.$" }
			id => "msgParserId1132"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1136
	# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld11>,<fld12>:<info>
	else if [logstash][msgparser][id] == "msgParserId1136" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld11},%{fld12}:%{info}" }
			id => "msgParserId1136"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1137
	# line in RSA: [<process_id>]: [ID <id> <event_source>.<severity>] <fld11>,<fld12>:<info> file: <filename>, errno: <resultcode> <fld13>
	else if [logstash][msgparser][id] == "msgParserId1137" {
		dissect {
			mapping => { "message" => "[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld11},%{fld12}:%{info} file: %{filename}, errno: %{resultcode} %{fld13}" }
			id => "msgParserId1137"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DBProvider10" {
		# MESSAGE 102026
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld11>,<fld12>:<event_description>: <db_name>, Oracle error: <resultcode> (<result>) <fld13>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld11},%{fld12}:%{event_description}: %{db_name}, Oracle error: %{resultcode} (%{result}) %{fld13}" }
				id => "message-102026"
				add_field => {
					"[event][id]" => "102026"
					"[rsa][message][id1]" => "102026"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 102027
		# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld11>,<fld12>:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{fld11},%{fld12}:%{info}" }
				id => "message-102027"
				add_field => {
					"[event][id]" => "102027"
					"[rsa][message][id1]" => "102027"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1139
	# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <fld11>,<fld12>: {ERROR ! <info>|<info>}
	else if [logstash][msgparser][id] == "msgParserId1139" {
		grok {
			match => { "message" => "^(?<agent>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+\[ID[\s]+(?<id>[^\s]*)[\s]+(?<event_source>[^\.]*)\.(?<severity>[^\]]*)\][\s]+(?<fld11>[^,]*),(?<fld12>[^:]*):[\s]+(ERROR[\s]+![\s]+(?<info>.*)|(?<info>.*))$" }
			id => "msgParserId1139"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "[SYNCSSH]" {
		# MESSAGE SYNCSSH
		# line in RSA: [<agent>]: [ID <id> <event_source>.<severity>] Connected to <url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{agent}]: [ID %{id} %{event_source}.%{severity}] Connected to %{url}" }
				id => "message-SYNCSSH"
				add_field => {
					"[event][id]" => "SYNCSSH"
					"[rsa][message][id1]" => "SYNCSSH"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SYNCSSH:01
		# line in RSA: [<agent>]: [ID <id> <event_source>.<severity>] <fld>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "[%{agent}]: [ID %{id} %{event_source}.%{severity}] %{fld}" }
				id => "message-SYNCSSH:01"
				add_field => {
					"[event][id]" => "SYNCSSH:01"
					"[rsa][message][id1]" => "SYNCSSH:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId1141
	# line in RSA: [<agent>]: [ID <id> <event_source>.<severity>] <fld>
	else if [logstash][msgparser][id] == "msgParserId1141" {
		dissect {
			mapping => { "message" => "[%{agent}]: [ID %{id} %{event_source}.%{severity}] %{fld}" }
			id => "msgParserId1141"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1142
	# line in RSA: <agent>[<process_id>]: [ID <id> <event_source>.<severity>] <process>(service=<service>, terminal=<terminal>, user=<username>, ruser=<c_username>, rhost=<dhost>)
	else if [logstash][msgparser][id] == "msgParserId1142" {
		dissect {
			mapping => { "message" => "%{agent}[%{process_id}]: [ID %{id} %{event_source}.%{severity}] %{process}(service=%{service}, terminal=%{terminal}, user=%{username}, ruser=%{c_username}, rhost=%{dhost})" }
			id => "msgParserId1142"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1143
	# line in RSA: <fld>
	else if [logstash][msgparser][id] == "msgParserId1143" {
		dissect {
			mapping => { "message" => "%{fld}" }
			id => "msgParserId1143"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_solarismsg.json"
#			template_name => "solaris_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
