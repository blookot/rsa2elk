# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "ciscoworks"
			"[observer][name]" => "CiscoWorks Common Services/Cisco Security Manager"
			"[observer][type]" => "Configuration Management"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %CISCOWORKS-<level>-<messageid> <hfld6>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%CISCOWORKS-%{level}-%{messageid} %{hfld6}: %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %CISCOWORKS-<level>-<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%CISCOWORKS-%{level}-%{messageid}: %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_ciscoworksmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<event_description>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{event_description}" }
			id => "msgParserId0"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Add" {
		# MESSAGE Add
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,Add User,<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},Add User,%{event_description}" }
				id => "message-Add"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
				"action" => "Add User"
					"[event][id]" => "Add"
					"[rsa][message][id1]" => "Add"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Add:01
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<fld1> is NOT AUTHORIZED to perform Add on <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{fld1} is NOT AUTHORIZED to perform Add on %{fld2}" }
				id => "message-Add:01"
				add_field => {
				"event_description" => "NOT AUTHORIZED to perform Add"
					"[event][id]" => "Add:01"
					"[rsa][message][id1]" => "Add:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Add:02
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{event_description}" }
				id => "message-Add:02"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "Add:02"
					"[rsa][message][id1]" => "Add:02"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Delete" {
		# MESSAGE Delete
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<fld1> is NOT AUTHORIZED to perform Delete on <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{fld1} is NOT AUTHORIZED to perform Delete on %{fld2}" }
				id => "message-Delete"
				add_field => {
				"event_description" => "NOT AUTHORIZED to perform Delete"
					"[event][id]" => "Delete"
					"[rsa][message][id1]" => "Delete"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Delete:01
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{event_description}" }
				id => "message-Delete:01"
				add_field => {
					"[event][id]" => "Delete:01"
					"[rsa][message][id1]" => "Delete:01"
					"[event][categoryid]" => "1502040000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<event_description>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{event_description}" }
			id => "msgParserId3"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Login" {
		# MESSAGE Login
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,User <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},User %{event_description}" }
				id => "message-Login"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Login"
					"[rsa][message][id1]" => "Login"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Login:01
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{event_description}" }
				id => "message-Login:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Login:01"
					"[rsa][message][id1]" => "Login:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<event_description>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{event_description}" }
			id => "msgParserId7"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Modify" {
		# MESSAGE Modify
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,Modify User,<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},Modify User,%{event_description}" }
				id => "message-Modify"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"action" => "Modify User"
					"[event][id]" => "Modify"
					"[rsa][message][id1]" => "Modify"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Modify:01
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<fld1> is NOT AUTHORIZED to perform Modify on <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{fld1} is NOT AUTHORIZED to perform Modify on %{fld2}" }
				id => "message-Modify:01"
				add_field => {
				"event_description" => "NOT AUTHORIZED to perform Modify"
					"[event][id]" => "Modify:01"
					"[rsa][message][id1]" => "Modify:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE Modify:02
		# line in RSA: <fld3>,<fld4>,<username>,<info>,<service>,<operation_id>,<action>,<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3},%{fld4},%{username},%{info},%{service},%{operation_id},%{action},%{event_description}" }
				id => "message-Modify:02"
				add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "Modify:02"
					"[rsa][message][id1]" => "Modify:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_ciscoworksmsg.json"
#			template_name => "ciscoworks_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
