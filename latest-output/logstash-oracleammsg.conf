# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "oracleam"
			"[observer][name]" => "Oracle Access Manager"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %ORACLEAM-<hfld1>: <hdate>@<htime>.<hfld2> - <hprocess_id> - <hfld4> - <hseverity> - <hfld5> - <hfilename>:<hfld6> - <messageid>::<hfld7> <!payload:hprocess_id>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^@]*)@(?<htime>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+\-[\s]+(?<message>(?<hprocess_id>[^\s]*)[\s]+\-[\s]+(?<hfld4>[^\s]*)[\s]+\-[\s]+(?<hseverity>[^\s]*)[\s]+\-[\s]+(?<hfld5>[^\s]*)[\s]+\-[\s]+(?<hfilename>[^:]*):(?<hfld6>[^\s]*)[\s]+\-[\s]+(?<messageid>[^:]*)::(?<hfld7>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %ORACLEAM-<hfld1>: <hdate>@<htime>.<hfld2> - <hprocess_id> - <hfld4> - <hseverity> - <hfld5> - <hfilename>:<hfld6> - <messageid> <!payload:hprocess_id>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^@]*)@(?<htime>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+\-[\s]+(?<message>(?<hprocess_id>[^\s]*)[\s]+\-[\s]+(?<hfld4>[^\s]*)[\s]+\-[\s]+(?<hseverity>[^\s]*)[\s]+\-[\s]+(?<hfld5>[^\s]*)[\s]+\-[\s]+(?<hfilename>[^:]*):(?<hfld6>[^\s]*)[\s]+\-[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %ORACLEAM-<hfld1>: <hdate>@<htime>.<hfld2> - <hprocess_id> - <hfld4> - <hseverity> - <hfld5> - <messageid>.<hfld6>:<!payload:hprocess_id>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^@]*)@(?<htime>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+\-[\s]+(?<message>(?<hprocess_id>[^\s]*)[\s]+\-[\s]+(?<hfld4>[^\s]*)[\s]+\-[\s]+(?<hseverity>[^\s]*)[\s]+\-[\s]+(?<hfld5>[^\s]*)[\s]+\-[\s]+(?<messageid>[^\.]*)\.(?<hfld6>[^:]*):(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %ORACLEAM-<hfld1>: <hdate> <htime> -<htimezone> - <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+\-(?<htimezone>[^\s]*)[\s]+\-[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %ORACLEAM-<hfld1>: <hdate> <htime> +<htimezone> - <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+\+(?<htimezone>[^\s]*)[\s]+\-[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: %ORACLEAM-<hfld1>: <hdate>T<htime>-<htimezone> - <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\-]*)\-(?<htimezone>[^\s]*)[\s]+\-[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: %ORACLEAM-<hfld1>: <hdate>T<htime>+<htimezone> - <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\+]*)\+(?<htimezone>[^\s]*)[\s]+\-[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: %ORACLEAM-<hfld1>: <hdate>@<htime>.<hfld2> <hfld3> <hfld4> <hfld5> <messageid> <!payload:hfld3>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^@]*)@(?<htime>[^\.]*)\.(?<hfld2>[^\s]*)[\s]+(?<message>(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: %ORACLEAM-<hfld1>: <hdate> <htime> - "<messageid>"  <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+\-[\s]+\"(?<message>(?<messageid>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: %ORACLEAM-<hfld1>: <hdate> <htime> "<hfld3>" "<messageid>" <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+\"(?<hfld3>[^\"]*)\"[\s]+\"(?<message>(?<messageid>[^\"]*)\"[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: %ORACLEAM-<hfld1>:  <hfld2>  <hfld3>  <hfld4>  [<hdatetime> -<htimezone>] "<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ORACLEAM\-(?<hfld1>[^:]*):[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+\[(?<hdatetime>[^\s]*)[\s]+\-(?<htimezone>[^\]]*)\][\s]+\"(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: %ORACLEAMTVM: <operation_id>^^<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%ORACLEAMTVM: %{operation_id}^^%{message}" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "ORACLEAM_TVM"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: %ORACLEAM-<hfld1>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%ORACLEAM-%{hfld1}: %{message}" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "ORACLEAM_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-oracleammsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "AUTHZ_SUCCESS" {
		# MESSAGE AUTHZ_SUCCESS:01
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - cn=<username>,<fld3> - <fld4> - <protocol> - <obj_type><fld6> - <context> - <id> - cn=<fld7>, uid=<uid>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHZ_SUCCESS:02
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27>|<url>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "AUTHZ_FAIL" {
		# MESSAGE AUTHZ_FAIL:01
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - - cn=<username>,<fld3> - <fld4> - <protocol> - <obj_type><fld6> - <context> - <id> - {cn=<fld8>, uid=<uid> | cn=<fld8>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHZ_FAIL:02
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>}- cn=<username>,<fld3> - <fld4> - <protocol> - <obj_type><fld6> - <context> - <id> - {cn=<fld8>, uid=<uid> | cn=<fld8> }
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHZ_FAIL:03
		# line in RSA: <event_type> - <web_method> -  <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>}- cn=<username>,<fld3> - <fld4> - <protocol> - <obj_type><fld6> - <context> - 2cn=<fld8>, uid=<uid>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHZ_FAIL:04
		# line in RSA: <event_type> - <web_method> -  <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>}  {- cn=<username>,<fld3> | - CN=<username>,OU=<fld3>,DC=<fld4>,DC=<fld5>,DC=<fld6>} - <fld7> - <protocol> - <obj_type><fld8> - <context> - <fld9> - cn=<fld10>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHZ_FAIL:05
		# line in RSA: <event_type> - <web_method> -  <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>}- { CN | cn }=<username>,<fld3> - <fld4> - <protocol> - <obj_type><fld6> - <context> - 68cn=<fld8>, uid=<uid>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "AUTHN_SUCCESS" {
		# MESSAGE AUTHN_SUCCESS
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27>|<url>}  { - cn=<username>,<fld2> | - CN=<username>,OU=<fld2>,DC=<fld3>,DC=<fld4>,DC=<fld5>} - <fld6> - <protocol> - <obj_type><fld7> - <context> - <id> - {cn=<fld8>, uid=<uid> | <info>} 
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_SUCCESS:01
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27>|<url>}  { - cn=<username>,<fld2> | - CN=<username>,OU=<fld2>,DC=<fld3>,DC=<fld4>,DC=<fld5>} - <fld6> - <protocol> - <obj_type><fld7> - <context> - <id>cn=<fld8>, uid=<uid> 
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_SUCCESS:02
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27>|<url>} 
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "AUTHN_FAIL" {
		# MESSAGE AUTHN_FAIL:01
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27>|<url>} - <dst_dn> - <fld3> - <protocol> - <obj_type><fld5> - <context> - <id> - cn=<username>, uid=<uid>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:02
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - ldap_authn=<info> (<resultcode>) - <fld3> - <protocol> - <obj_type><fld5> - <context> - <id> -
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:06
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - mapping_filter=(&(&(objectclass=<obj_name>)(uid=<uid>)<info>)) - <fld3> - <protocol> - <obj_type><fld5> - <context> - <id>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:07
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - ldap_authn=<disposition>vsoblixasplugin=<fld3>Auth():<result>:userid:<username>,composedPassword:<info> - <fld4> - <protocol> - <obj_type><fld5> - <context> { - <id> - | - <id>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:08
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - ldap_authn=<disposition> - <fld4> - <protocol> - <obj_type><fld5> - <context> { - <id> - | - <id>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:09
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - mapping_filter=(<info>)(cn=<dst_dn>)) - <fld3> - <protocol> - <obj_type><fld5> - <context> { - <id> - | - <id>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:10
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - authn_pingfed=<fld9>mapping_filter=(<info>) - <fld3> - <protocol> - <obj_type><fld5> - <context> - <id>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:04
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - vsoblixasplugin=<fld3>Auth():<result>:userid:<username>,composedPassword:<info> - <fld4> - <protocol> - <obj_type><fld5> - <context> { - <id> - | - <id>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:05
		# line in RSA: <event_type> - <web_method> - <hostname><fld1>- <saddr> - {<web_domain>%<fld27><fld2>|<url><fld2>} - mapping_filter=(<info>)uid=<dst_dn> - <fld3> - <protocol> - <obj_type><fld5> - <context> - <id>cn=<fld8>, uid=<uid> 
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:11
		# line in RSA: <event_type> - <web_method> - <hostname><fld1> - <saddr> - {<web_domain>%<fld27>|<url>}<space> - mapping_filter=(<info>)(uid=<dst_dn>)) - <fld3> - <protocol> - <obj_type><fld4> -<space>- <id>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE AUTHN_FAIL:03
		# line in RSA: <event_type> - <web_method> - <hostname> - <saddr> - {<web_domain>%<fld27>|<url>}<space>- <info> - <fld3> - <protocol> - <obj_type> -<space>- <id>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_type>[^\s]*)[\s]+\-[\s]+(?<web_method>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+(?<saddr>[^\s]*)[\s]+\-[\s]+((?<web_domain>[^%]*)%(?<fld27>.*)|(?<url>.*))(?<space>[^\-]*)\-[\s]+(?<info>[^\s]*)[\s]+\-[\s]+(?<fld3>[^\s]*)[\s]+\-[\s]+(?<protocol>[^\s]*)[\s]+\-[\s]+(?<obj_type>[^\s]*)[\s]+\-(?<space>[^\-]*)\-[\s]+(?<id>.*)$" }
				id => "message-AUTHN_FAIL:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "AUTHN_FAIL:03"
					"[rsa][message][id1]" => "AUTHN_FAIL:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
		# MESSAGE AUTHN_FAIL:12
		# line in RSA: <event_type> - <web_method> - <hostname><fld1> - <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} - %{web_method} - %{hostname}%{fld1} - %{saddr}" }
				id => "message-AUTHN_FAIL:12"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "AUTHN_FAIL:12"
					"[rsa][message][id1]" => "AUTHN_FAIL:12"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Login" {
		# MESSAGE Login:01
		# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> <policy_id> <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34>  "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43> <fld44> <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <fld83> "<fld84>" "<fld85>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} %{policy_id} %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34}  \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43} %{fld44} %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{fld83} \"%{fld84}\" \"%{fld85}\"" }
				id => "message-Login:01"
				add_field => {
				"user_address" => "%{hfld3}"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Login:01"
					"[rsa][message][id1]" => "Login:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
			}
		}
		# MESSAGE Login
		# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld2> -  <application> - {cn=<username>,<fld3>|<fld3>} - <fld4> - {UID~cn=<fld5>,<fld6>|<event_description>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	# PARSER msgParserId24
	# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld2> -  <application> - cn=<username>,<fld3> - <fld4> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}%{fld1}- %{saddr} - %{url}  - %{fld2} -  %{application} - cn=%{username},%{fld3} - %{fld4} - %{event_description}" }
			id => "msgParserId24"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId25
	# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld2> -  <application> - cn=<username>,<fld3> - <fld4> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}%{fld1}- %{saddr} - %{url}  - %{fld2} -  %{application} - cn=%{username},%{fld3} - %{fld4} - %{event_description}" }
			id => "msgParserId25"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId26
	# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <dn> -   <application> - cn=<username>,<fld5> - <fld6> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}%{fld1}- %{saddr} - %{url}  - %{dn} -   %{application} - cn=%{username},%{fld5} - %{fld6} - %{event_description}" }
			id => "msgParserId26"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId27
	# line in RSA: <event_type> - <result> - <hostname>-<fld1>- <saddr> - <url>  - <fld4> -   <application> - cn=<username>,<fld5> - <fld6> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}-%{fld1}- %{saddr} - %{url}  - %{fld4} -   %{application} - cn=%{username},%{fld5} - %{fld6} - %{event_description}" }
			id => "msgParserId27"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId28
	# line in RSA: <event_type> - <result> - <hostname>-<fld1>- <saddr> - <url>  - <fld4> -  <application> - cn=<username>,<fld5> - <fld6> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}-%{fld1}- %{saddr} - %{url}  - %{fld4} -  %{application} - cn=%{username},%{fld5} - %{fld6} - %{event_description}" }
			id => "msgParserId28"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId29
	# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld4> -  <application> - cn=<username>,<fld5> - <fld6> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}%{fld1}- %{saddr} - %{url}  - %{fld4} -  %{application} - cn=%{username},%{fld5} - %{fld6} - %{event_description}" }
			id => "msgParserId29"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId30
	# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld4> -  <application> - cn=<username>,<fld5> - <fld6> - {WFDefOperation~<action>|ConfigOperation~<action>}#<event_description>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId31
	# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld4> -  <application> - cn=<username>,<fld5> - <fld6> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}%{fld1}- %{saddr} - %{url}  - %{fld4} -  %{application} - cn=%{username},%{fld5} - %{fld6} - %{event_description}" }
			id => "msgParserId31"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Start"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId32
	# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld4> -  <application> - cn=<username>,<fld5> - <fld6> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}%{fld1}- %{saddr} - %{url}  - %{fld4} -  %{application} - cn=%{username},%{fld5} - %{fld6} - %{event_description}" }
			id => "msgParserId32"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Stop"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId33
	# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld4> -  <application> - cn=<username>,<fld5> - <fld6>  - <event_description>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{event_type} - %{result} - %{hostname}%{fld1}- %{saddr} - %{url}  - %{fld4} -  %{application} - cn=%{username},%{fld5} - %{fld6}  - %{event_description}" }
			id => "msgParserId33"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Logout" {
		# MESSAGE Logout:01
		# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> <policy_id> <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17>  <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34>  "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43> <fld44> <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} %{policy_id} %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17}  %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34}  \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43} %{fld44} %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83}" }
				id => "message-Logout:01"
				add_field => {
				"user_address" => "%{hfld3}"
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Logout:01"
					"[rsa][message][id1]" => "Logout:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
			}
		}
		# MESSAGE Logout
		# line in RSA: <event_type> - <result> - <hostname><fld1>- <saddr> - <url>  - <fld4> -  <application> - cn=<username>,<fld5> - <fld6>  - <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} - %{result} - %{hostname}%{fld1}- %{saddr} - %{url}  - %{fld4} -  %{application} - cn=%{username},%{fld5} - %{fld6}  - %{event_description}" }
				id => "message-Logout"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Logout"
					"[rsa][message][id1]" => "Logout"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ERROR" {
		# MESSAGE ERROR:01
		# line in RSA: <process_id> <fld1> <event_type> <severity> <resultcode> <filename>:<fld2> <event_description> <fld3>^<fld4>^<fld5>^<fld6>^<fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} %{fld1} %{event_type} %{severity} %{resultcode} %{filename}:%{fld2} %{event_description} %{fld3}^%{fld4}^%{fld5}^%{fld6}^%{fld7}" }
				id => "message-ERROR:01"
				add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
					"[event][id]" => "ERROR:01"
					"[rsa][message][id1]" => "ERROR:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE ERROR:02
		# line in RSA: <process_id> <fld1> <event_type> <severity> <resultcode> <filename>:<fld2> <event_description> <fld3>^<hostname> port^<sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} %{fld1} %{event_type} %{severity} %{resultcode} %{filename}:%{fld2} %{event_description} %{fld3}^%{hostname} port^%{sport}" }
				id => "message-ERROR:02"
				add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
					"[event][id]" => "ERROR:02"
					"[rsa][message][id1]" => "ERROR:02"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE ERROR:03
		# line in RSA: <process_id> <fld1> <event_type> <severity> <resultcode> <filename>:<fld2> <event_description> <fld3>^<fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} %{fld1} %{event_type} %{severity} %{resultcode} %{filename}:%{fld2} %{event_description} %{fld3}^%{fld4}" }
				id => "message-ERROR:03"
				add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
					"[event][id]" => "ERROR:03"
					"[rsa][message][id1]" => "ERROR:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <process_id> <fld2> <event_type> <severity> <resultcode> <filename>:<fld3> <event_description>^{<fld4>::<fld5>|<fld5>^cn=<username>|<fld5>}
	else if [logstash][msgparser][id] == "msgParserId39" {
		grok {
			match => { "message" => "^(?<process_id>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<event_type>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<filename>[^:]*):(?<fld3>[^\s]*)[\s]+(?<event_description>[^\^]*)\^((?<fld4>[^:]*)::(?<fld5>.*)|(?<fld5>[^\^]*)\^cn=(?<username>.*)|(?<fld5>.*))$" }
			id => "msgParserId39"
			add_field => {
				"ec_theme" => "Communication"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
		}
	}
	# PARSER msgParserId40
	# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <info>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{info}" }
			id => "msgParserId40"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "LDAPServer" {
		# MESSAGE LDAPServer:01
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <fld8> <hostname>:<fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{fld8} %{hostname}:%{fld9}" }
				id => "message-LDAPServer:01"
				add_field => {
					"[event][id]" => "LDAPServer:01"
					"[rsa][message][id1]" => "LDAPServer:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE LDAPServer:02
		# line in RSA: <process_id> - <fld2> - <severity> - <fld3> - <filename>:<fld4> - <event_type> - <event_description>, <fld5> <fld6> <hostname> (<dclass_counter1> connections)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld3} - %{filename}:%{fld4} - %{event_type} - %{event_description}, %{fld5} %{fld6} %{hostname} (%{dclass_counter1} connections)" }
				id => "message-LDAPServer:02"
				add_field => {
					"[event][id]" => "LDAPServer:02"
					"[rsa][message][id1]" => "LDAPServer:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE LDAPServer:03
		# line in RSA: <process_id> - <fld2> - <severity> - <fld3> - <filename>:<fld4> - <event_type> - <action> user cn=<username>,<fld5> to <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld3} - %{filename}:%{fld4} - %{event_type} - %{action} user cn=%{username},%{fld5} to %{fld7}" }
				id => "message-LDAPServer:03"
				add_field => {
					"[event][id]" => "LDAPServer:03"
					"[rsa][message][id1]" => "LDAPServer:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE LDAPServer:04
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <action> user <username> <event_description> ou=<fld8>,<fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{action} user %{username} %{event_description} ou=%{fld8},%{fld9}" }
				id => "message-LDAPServer:04"
				add_field => {
					"[event][id]" => "LDAPServer:04"
					"[rsa][message][id1]" => "LDAPServer:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE LDAPServer:05
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - Server <hostname> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - Server %{hostname} %{info}" }
				id => "message-LDAPServer:05"
				add_field => {
					"[event][id]" => "LDAPServer:05"
					"[rsa][message][id1]" => "LDAPServer:05"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE LDAPServer:06
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{info}" }
				id => "message-LDAPServer:06"
				add_field => {
					"[event][id]" => "LDAPServer:06"
					"[rsa][message][id1]" => "LDAPServer:06"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE LDAPServer:07
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6}" }
				id => "message-LDAPServer:07"
				add_field => {
					"[event][id]" => "LDAPServer:07"
					"[rsa][message][id1]" => "LDAPServer:07"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LDAPConnection" {
		# MESSAGE LDAPConnection:01
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - Bind as <dn> cn=<username>,ou=<fld8>,ou=<fld9>,o=<user_org>' to <hostname>:<sport> <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - Bind as %{dn} cn=%{username},ou=%{fld8},ou=%{fld9},o=%{user_org}' to %{hostname}:%{sport} %{result}" }
				id => "message-LDAPConnection:01"
				add_field => {
					"[event][id]" => "LDAPConnection:01"
					"[rsa][message][id1]" => "LDAPConnection:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE LDAPConnection:02
		# line in RSA: <process_id> - <fld1> - <severity> - <fld2> - <filename>:<fld3> - <event_type> - <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld1} - %{severity} - %{fld2} - %{filename}:%{fld3} - %{event_type} - %{event_description}" }
				id => "message-LDAPConnection:02"
				add_field => {
					"[event][id]" => "LDAPConnection:02"
					"[rsa][message][id1]" => "LDAPConnection:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s", "yyyy/M/d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "LDAPConnectionPool" {
		# MESSAGE LDAPConnectionPool:01
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - User {cn=<username>,ou=<fld8>,ou=<fld9>,o=<user_org>|cn=<username>,ou=<fld8>,o=<user_org>} authenticated <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process_id>[^\s]*)[\s]+\-[\s]+(?<fld2>[^\s]*)[\s]+\-[\s]+(?<severity>[^\s]*)[\s]+\-[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<filename>[^:]*):(?<fld6>[^\s]*)[\s]+\-[\s]+(?<event_type>[^\s]*)[\s]+\-[\s]+User[\s]+(cn=(?<username>[^,]*),ou=(?<fld8>[^,]*),ou=(?<fld9>[^,]*),o=(?<user_org>[^\s]*)|cn=(?<username>[^,]*),ou=(?<fld8>[^,]*),o=(?<user_org>[^\s]*))[\s]+authenticated[\s]+(?<event_description>.*)$" }
				id => "message-LDAPConnectionPool:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "LDAPConnectionPool:01"
					"[rsa][message][id1]" => "LDAPConnectionPool:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE LDAPConnectionPool:02
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <action> user <username> <event_description> ou=<fld8>,<fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{action} user %{username} %{event_description} ou=%{fld8},%{fld9}" }
				id => "message-LDAPConnectionPool:02"
				add_field => {
					"[event][id]" => "LDAPConnectionPool:02"
					"[rsa][message][id1]" => "LDAPConnectionPool:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE LDAPConnectionPool:03
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <action> user cn=<username>,<fld8> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{action} user cn=%{username},%{fld8} %{event_description}" }
				id => "message-LDAPConnectionPool:03"
				add_field => {
					"[event][id]" => "LDAPConnectionPool:03"
					"[rsa][message][id1]" => "LDAPConnectionPool:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE LDAPConnectionPool:04
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{event_description}" }
				id => "message-LDAPConnectionPool:04"
				add_field => {
					"[event][id]" => "LDAPConnectionPool:04"
					"[rsa][message][id1]" => "LDAPConnectionPool:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s", "yyyy/M/d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId54
	# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{event_description}" }
			id => "msgParserId54"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ObAnPluginFn" {
		# MESSAGE ObAnPluginFn:01
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - Authenticated user {cn=<username>,ou=<fld8>,ou=<fld9>,o=<fld10>|cn=<username>,ou=<fld8>,o=<fld9>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<process_id>[^\s]*)[\s]+\-[\s]+(?<fld2>[^\s]*)[\s]+\-[\s]+(?<severity>[^\s]*)[\s]+\-[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<filename>[^:]*):(?<fld6>[^\s]*)[\s]+\-[\s]+(?<event_type>[^\s]*)[\s]+\-[\s]+Authenticated[\s]+user[\s]+(cn=(?<username>[^,]*),ou=(?<fld8>[^,]*),ou=(?<fld9>[^,]*),o=(?<fld10>.*)|cn=(?<username>[^,]*),ou=(?<fld8>[^,]*),o=(?<fld9>.*))$" }
				id => "message-ObAnPluginFn:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "ObAnPluginFn:01"
					"[rsa][message][id1]" => "ObAnPluginFn:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE ObAnPluginFn:02
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - Authenticating user <username> <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - Authenticating user %{username} %{event_description}" }
				id => "message-ObAnPluginFn:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "ObAnPluginFn:02"
					"[rsa][message][id1]" => "ObAnPluginFn:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/MM/dd H:m:s" ] }
			}
		}
		# MESSAGE ObAnPluginFn:03
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - Username <username> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - Username %{username} %{info}" }
				id => "message-ObAnPluginFn:03"
				add_field => {
					"[event][id]" => "ObAnPluginFn:03"
					"[rsa][message][id1]" => "ObAnPluginFn:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE ObAnPluginFn:04
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <action> user <fld7> <dn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{action} user %{fld7} %{dn}" }
				id => "message-ObAnPluginFn:04"
				add_field => {
					"[event][id]" => "ObAnPluginFn:04"
					"[rsa][message][id1]" => "ObAnPluginFn:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE ObAnPluginFn:05
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <action> URL <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{action} URL %{event_description}" }
				id => "message-ObAnPluginFn:05"
				add_field => {
					"[event][id]" => "ObAnPluginFn:05"
					"[rsa][message][id1]" => "ObAnPluginFn:05"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE ObAnPluginFn:06
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - User cn=<username>,<fld7> failed authentication, LDAP return code -<resultcode>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - User cn=%{username},%{fld7} failed authentication, LDAP return code -%{resultcode}, %{info}" }
				id => "message-ObAnPluginFn:06"
				add_field => {
					"[event][id]" => "ObAnPluginFn:06"
					"[rsa][message][id1]" => "ObAnPluginFn:06"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
		# MESSAGE ObAnPluginFn:07
		# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <action> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{action} %{info}" }
				id => "message-ObAnPluginFn:07"
				add_field => {
					"[event][id]" => "ObAnPluginFn:07"
					"[rsa][message][id1]" => "ObAnPluginFn:07"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId53
	# line in RSA: <process_id> - <fld2> - <severity> - <fld4> - <filename>:<fld6> - <event_type> - <event_description>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "%{process_id} - %{fld2} - %{severity} - %{fld4} - %{filename}:%{fld6} - %{event_type} - %{event_description}" }
			id => "msgParserId53"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M/d/yyyy H:m:s", "yyyy/M/d H:m:s" ] }
		}
	}
	# PARSER msgParserId62
	# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> "<policy_id>" <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34> "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43>  "<url>" <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> <fld84>
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} \"%{policy_id}\" %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34} \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43}  \"%{url}\" %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83} %{fld84}" }
			id => "msgParserId62"
			add_field => {
				"user_address" => "%{hfld3}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId63
	# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> "<policy_id>" <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17>  <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34>  "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43> "<url>" <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> <fld84>
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} \"%{policy_id}\" %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17}  %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34}  \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43} \"%{url}\" %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83} %{fld84}" }
			id => "msgParserId63"
			add_field => {
				"user_address" => "%{hfld3}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId64
	# line in RSA: <event_type> <result> - { - | "<username>" } "<fld2>" <fld3> <id> <fld4> <domain> <application> <authmethod> <policy_id> <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> <fld16> <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34> <fld35> <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43> <fld44> <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> <fld84>
	else if [logstash][msgparser][id] == "msgParserId64" {
		grok {
			match => { "message" => "^(?<event_type>[^\s]*)[\s]+(?<result>[^\s]*)[\s]+\-[\s]+([\s]*\-[\s]+|[\s]*\"(?<username>[^\"]*)\"[\s]+)[\s]+\"(?<fld2>[^\"]*)\"[\s]+(?<fld3>[^\s]*)[\s]+(?<id>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<domain>[^\s]*)[\s]+(?<application>[^\s]*)[\s]+(?<authmethod>[^\s]*)[\s]+(?<policy_id>[^\s]*)[\s]+(?<fld7>[^\s]*)[\s]+(?<fld8>[^\s]*)[\s]+(?<fld9>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+(?<fld14>[^\s]*)[\s]+(?<vendor_event_cat>[^\s]*)[\s]+(?<resultcode>[^\s]*)[\s]+(?<fld16>[^\s]*)[\s]+(?<fld17>[^\s]*)[\s]+(?<fld18>[^\s]*)[\s]+(?<fld19>[^\s]*)[\s]+(?<fld20>[^\s]*)[\s]+(?<fld21>[^\s]*)[\s]+(?<fld22>[^\s]*)[\s]+(?<fld23>[^\s]*)[\s]+(?<fld24>[^\s]*)[\s]+(?<fld25>[^\s]*)[\s]+(?<fld26>[^\s]*)[\s]+(?<fld86>[^\s]*)[\s]+(?<fld27>[^\s]*)[\s]+(?<fld28>[^\s]*)[\s]+(?<fld29>[^\s]*)[\s]+(?<policyname>[^\s]*)[\s]+(?<fld30>[^\s]*)[\s]+(?<fld31>[^\s]*)[\s]+(?<fld32>[^\s]*)[\s]+(?<fld33>[^\s]*)[\s]+(?<fld34>[^\s]*)[\s]+(?<fld35>[^\s]*)[\s]+(?<fld36>[^\s]*)[\s]+(?<fld37>[^\s]*)[\s]+(?<fld38>[^\s]*)[\s]+(?<fld39>[^\s]*)[\s]+(?<fld40>[^\s]*)[\s]+(?<fld41>[^\s]*)[\s]+(?<fld42>[^\s]*)[\s]+(?<fld43>[^\s]*)[\s]+(?<fld44>[^\s]*)[\s]+(?<fld45>[^\s]*)[\s]+(?<fld46>[^\s]*)[\s]+(?<fld47>[^\s]*)[\s]+(?<fld48>[^\s]*)[\s]+(?<fld49>[^\s]*)[\s]+(?<fld50>[^\s]*)[\s]+(?<fld51>[^\s]*)[\s]+(?<fld52>[^\s]*)[\s]+(?<fld53>[^\s]*)[\s]+(?<sessionid>[^\s]*)[\s]+(?<fld54>[^\s]*)[\s]+(?<fld55>[^\s]*)[\s]+(?<fld56>[^\s]*)[\s]+(?<fld57>[^\s]*)[\s]+(?<fld58>[^\s]*)[\s]+(?<fld59>[^\s]*)[\s]+(?<dn>[^\s]*)[\s]+(?<uid>[^\s]*)[\s]+(?<fld83>[^\s]*)[\s]+(?<fld84>.*)$" }
			id => "msgParserId64"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId65
	# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> "<domain>" "<application>" "<authmethod>" "<policy_id>" <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34> "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43>"<url>" <fld45> <fld46> <fld47> "<fld48>" <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> <fld84>
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} \"%{domain}\" \"%{application}\" \"%{authmethod}\" \"%{policy_id}\" %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34} \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43}\"%{url}\" %{fld45} %{fld46} %{fld47} \"%{fld48}\" %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83} %{fld84}" }
			id => "msgParserId65"
			add_field => {
				"user_address" => "%{hfld3}"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId66
	# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> "<policy_id>" <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34>  "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43>  "<url>" <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> 
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} \"%{policy_id}\" %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34}  \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43}  \"%{url}\" %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83}" }
			id => "msgParserId66"
			add_field => {
				"user_address" => "%{hfld3}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "SessionCreation" {
		# MESSAGE SessionCreation
		# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> "<policy_id>" <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34>  "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43>  "<url>" <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} \"%{policy_id}\" %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34}  \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43}  \"%{url}\" %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83}" }
				id => "message-SessionCreation"
				add_field => {
				"user_address" => "%{hfld3}"
					"[event][id]" => "SessionCreation"
					"[rsa][message][id1]" => "SessionCreation"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
			}
		}
		# MESSAGE SessionCreation:01
		# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> <policy_id> <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34> <fld35> <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43> <fld44> <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} %{policy_id} %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34} %{fld35} %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43} %{fld44} %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83}" }
				id => "message-SessionCreation:01"
				add_field => {
				"user_address" => "%{hfld3}"
					"[event][id]" => "SessionCreation:01"
					"[rsa][message][id1]" => "SessionCreation:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> <policy_id> <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34>  "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43> <fld44> <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> 
	else if [logstash][msgparser][id] == "msgParserId68" {
		dissect {
			mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} %{policy_id} %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34}  \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43} %{fld44} %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83}" }
			id => "msgParserId68"
			add_field => {
				"user_address" => "%{hfld3}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId69
	# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> "<policy_id>"  <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34>  "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43>  "<url>" <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> <fld84>
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} \"%{policy_id}\"  %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34}  \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43}  \"%{url}\" %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83} %{fld84}" }
			id => "msgParserId69"
			add_field => {
				"user_address" => "%{hfld3}"
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId70
	# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> <policy_id> <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld86> <fld27> <fld28> <fld29> <policyname> <fld30> <fld31> <fld32> <fld33> <fld34>  "<saddr>" <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43> <fld44> <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <sessionid> <fld54> <fld55> <fld56> <fld57> <fld58> <fld59> <dn> <uid> <fld83> <fld84>
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} %{policy_id} %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld86} %{fld27} %{fld28} %{fld29} %{policyname} %{fld30} %{fld31} %{fld32} %{fld33} %{fld34}  \"%{saddr}\" %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43} %{fld44} %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{sessionid} %{fld54} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{dn} %{uid} %{fld83} %{fld84}" }
			id => "msgParserId70"
			add_field => {
				"user_address" => "%{hfld3}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId71
	# line in RSA: <event_type> <result> <fld1> <username> <fld2>  <fld3> <id> <fld4> <domain> <application> <authmethod> <policy_id> <fld7> <fld8> <fld9> <fld15> <fld10> <fld11> <fld12> <fld13> <fld14> <vendor_event_cat> <resultcode> "PROXY_IP_ADDRESS = <fld16>" <fld17> <fld18> <fld19> <fld20> <fld21> <fld22> <fld23> <fld24> <fld25> <fld26> <fld27> <fld28> <fld29> <fld30> <policyname> <fld31> <fld32> <fld33> <fld34> <fld35> <fld36> <fld37> <fld38> <fld39> <fld40> <fld41> <fld42> <fld43> <fld44> <fld45> <fld46> <fld47> <fld48> <fld49> <fld50> <fld51> <fld52> <fld53> <fld54> <sessionid> <fld55> <fld56> <fld57> <fld58> <fld59> <fld60> <dn> <uid> <fld83> <fld84>
	else if [logstash][msgparser][id] == "msgParserId71" {
		dissect {
			mapping => { "message" => "%{event_type} %{result} %{fld1} %{username} %{fld2}  %{fld3} %{id} %{fld4} %{domain} %{application} %{authmethod} %{policy_id} %{fld7} %{fld8} %{fld9} %{fld15} %{fld10} %{fld11} %{fld12} %{fld13} %{fld14} %{vendor_event_cat} %{resultcode} \"PROXY_IP_ADDRESS = %{fld16}\" %{fld17} %{fld18} %{fld19} %{fld20} %{fld21} %{fld22} %{fld23} %{fld24} %{fld25} %{fld26} %{fld27} %{fld28} %{fld29} %{fld30} %{policyname} %{fld31} %{fld32} %{fld33} %{fld34} %{fld35} %{fld36} %{fld37} %{fld38} %{fld39} %{fld40} %{fld41} %{fld42} %{fld43} %{fld44} %{fld45} %{fld46} %{fld47} %{fld48} %{fld49} %{fld50} %{fld51} %{fld52} %{fld53} %{fld54} %{sessionid} %{fld55} %{fld56} %{fld57} %{fld58} %{fld59} %{fld60} %{dn} %{uid} %{fld83} %{fld84}" }
			id => "msgParserId71"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-MM-dd H:m:s" ] }
		}
	}
	# PARSER msgParserId72
	# line in RSA:  <web_method> <url> <protocol>/<version>" <resultcode> <fld1> 
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "%{web_method} %{url} %{protocol}/%{version}\" %{resultcode} %{fld1}" }
			id => "msgParserId72"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
		}
	}
	# PARSER msgParserId73
	# line in RSA: IAU_EVENTTYPE=<event_type>^^IAU_EVENTCATEGORY=<category>^^IAU_COMPONENTTYPE=<event_source>^^IAU_HOSTID=<dhost>^^IAU_HOSTNWADDR=<daddr>^^IAU_AGENTID=<fld1>^^IAU_PROCESSID=<process_id>^^IAU_SESSIONID=<sessionid>^^IAU_SSOSESSIONID=<sessionid1>^^IAU_APPLICATIONNAME=<application>^^IAU_APPLICATIONDOMAINNAME=<fld2>^^IAU_EVENTSTATUS=<fld12>^^IAU_TSTZORIGINATING=<fld3>^^IAU_THREADID=<fld4>^^IAU_INITIATOR=<username>^^IAU_USERID=<uid>^^IAU_MESSAGETEXT=<event_description>^^IAU_REMOTEIP=<saddr>^^IAU_RESOURCE=<fld5>^^IAU_DOMAINNAME=<domain>^^IAU_SERVERNAME=<hostname>^^IAU_INSTANCENAME=<instance>^^IAU_AUTHORIZATIONPOLICYID=<policy_id>^^IAU_AUTHENTICATIONPOLICYID=<policy_id>^^IAU_RESOURCEHOST=<shost>^^IAU_RESOURCEURI=<url>^^IAU_ADDITIONALINFO=<fld7>
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "IAU_EVENTTYPE=%{event_type}^^IAU_EVENTCATEGORY=%{category}^^IAU_COMPONENTTYPE=%{event_source}^^IAU_HOSTID=%{dhost}^^IAU_HOSTNWADDR=%{daddr}^^IAU_AGENTID=%{fld1}^^IAU_PROCESSID=%{process_id}^^IAU_SESSIONID=%{sessionid}^^IAU_SSOSESSIONID=%{sessionid1}^^IAU_APPLICATIONNAME=%{application}^^IAU_APPLICATIONDOMAINNAME=%{fld2}^^IAU_EVENTSTATUS=%{fld12}^^IAU_TSTZORIGINATING=%{fld3}^^IAU_THREADID=%{fld4}^^IAU_INITIATOR=%{username}^^IAU_USERID=%{uid}^^IAU_MESSAGETEXT=%{event_description}^^IAU_REMOTEIP=%{saddr}^^IAU_RESOURCE=%{fld5}^^IAU_DOMAINNAME=%{domain}^^IAU_SERVERNAME=%{hostname}^^IAU_INSTANCENAME=%{instance}^^IAU_AUTHORIZATIONPOLICYID=%{policy_id}^^IAU_AUTHENTICATIONPOLICYID=%{policy_id}^^IAU_RESOURCEHOST=%{shost}^^IAU_RESOURCEURI=%{url}^^IAU_ADDITIONALINFO=%{fld7}" }
			id => "msgParserId73"
			add_field => {
				"vid" => "%{event_type}"
				"event_id" => "%{event_type}_%{disposition}"
				"[logstash][fullDateTimeString]" => "%{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	# PARSER msgParserId74
	# line in RSA: <fld>
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "%{fld}" }
			id => "msgParserId74"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[fld12]"
		destination => "[disposition]"
		dictionary => {
			"0" => "Failure"
			"1" => "Success"
		}
		fallback => ""
		override => true
	}
}
filter {
	translate {
		field => "[event_id]"
		destination => "[event_cat]"
		dictionary => {
			"AgentCreation_Success" => "1701010000"
			"AgentDeletion_Success" => "1701030000"
			"AgentModification_Success" => "1701020000"
			"Authentication_Success" => "1302000000"
			"AuthenticationAttempt_Success" => "1302000000"
			"Authorization_Success" => "1302000000"
			"CheckAuthorization_Success" => "1302000000"
			"ConsoleLogin_Success" => "1401060000"
			"CredentialChallenge_Success" => "1401040000"
			"CredentialSubmit_Success" => "1401040000"
			"CredentialValidation_Success" => "1401040000"
			"DataSourceCreation_Success" => "1701010000"
			"DataSourceModification_Success" => "1701020000"
			"GenericAdminOperation_Success" => "1605000000"
			"HostIdentifierCreation_Success" => "1701010000"
			"HostIdentifierDeletion_Success" => "1701030000"
			"HostIdentifierModification_Success" => "1701020000"
			"Login_Success" => "1401060000"
			"Logout_Success" => "1401070000"
			"PluginInvocationComplete_Success" => "1605000000"
			"PluginInvocationStart_Success" => "1605000000"
			"PolicyCreation_Success" => "1701010000"
			"PolicyDeletion_Success" => "1701030000"
			"PolicyModification_Success" => "1701020000"
			"ResourceCreation_Success" => "1701010000"
			"ResourceDeletion_Success" => "1701030000"
			"ResourceModification_Success" => "1701020000"
			"ResourceTypeCreation_Success" => "1701010000"
			"SchemeCreation_Success" => "1701010000"
			"SchemeModification_Success" => "1701020000"
			"ServerDomainCreation_Success" => "1701010000"
			"ServerDomainDeletion_Success" => "1701030000"
			"ServerDomainModification_Success" => "1701020000"
			"ServerShutDown_Success" => "1611000000"
			"ServerStartup_Success" => "1610000000"
			"ServerUpgradeSubsystemEnd_Success" => "1605000000"
			"ServerUpgradeSubsystemStart_Success" => "1605000000"
			"UserAccountLocked_Success" => "1401070100"
			"AgentCreation_Failure" => "1703000000"
			"AgentDeletion_Failure" => "1703000000"
			"AgentModification_Failure" => "1703000000"
			"Authentication_Failure" => "1301000000"
			"AuthenticationAttempt_Failure" => "1301000000"
			"Authorization_Failure" => "1301000000"
			"CheckAuthorization_Failure" => "1301000000"
			"ConsoleLogin_Failure" => "1401030000"
			"CredentialChallenge_Failure" => "1401030000"
			"CredentialSubmit_Failure" => "1401030000"
			"CredentialValidation_Failure" => "1401030000"
			"DataSourceCreation_Failure" => "1703000000"
			"DataSourceModification_Failure" => "1703000000"
			"GenericAdminOperation_Failure" => "1703000000"
			"HostIdentifierCreation_Failure" => "1703000000"
			"HostIdentifierDeletion_Failure" => "1703000000"
			"HostIdentifierModification_Failure" => "1703000000"
			"Login_Failure" => "1401030000"
			"PluginInvocationComplete_Failure" => "1703000000"
			"PluginInvocationStart_Failure" => "1703000000"
			"PolicyCreation_Failure" => "1703000000"
			"PolicyDeletion_Failure" => "1703000000"
			"PolicyModification_Failure" => "1703000000"
			"ResourceCreation_Failure" => "1703000000"
			"ResourceDeletion_Failure" => "1703000000"
			"ResourceModification_Failure" => "1703000000"
			"ResourceTypeCreation_Failure" => "1703000000"
			"SchemeCreation_Failure" => "1703000000"
			"SchemeModification_Failure" => "1703000000"
			"ServerDomainCreation_Failure" => "1703000000"
			"ServerDomainDeletion_Failure" => "1703000000"
			"ServerDomainModification_Failure" => "1703000000"
			"ServerShutDown_Failure" => "1603000000"
			"ServerStartup_Failure" => "1603000000"
			"ServerUpgradeSubsystemEnd_Failure" => "1603000000"
			"ServerUpgradeSubsystemStart_Failure" => "1603000000"
		}
		fallback => "1901000000"
		override => true
	}
}
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1301000000" => "Auth.Failures"
			"1302000000" => "Auth.Successful"
			"1401030000" => "User.Activity.Failed Logins"
			"1401040000" => "User.Activity.Normal Activity"
			"1401060000" => "User.Activity.Successful Logins"
			"1401070000" => "User.Activity.Logoff"
			"1603000000" => "System.Errors"
			"1605000000" => "System.Normal Conditions"
			"1610000000" => "System.Startup"
			"1611000000" => "System.Shutdown"
			"1701010000" => "Config.Changes.Add"
			"1701020000" => "Config.Changes.Modify"
			"1701030000" => "Config.Changes.Delete"
			"1703000000" => "Config.Errors"
		}
		fallback => "Other.Default"
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-oracleammsg.json"
#			template_name => "oracleam_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
