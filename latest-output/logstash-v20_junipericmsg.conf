# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "juniperic"
			"[observer][name]" => "Juniper Infranet Controller"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0004
	# line in RSA: Juniper: JUNIPERIC-<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "Juniper: JUNIPERIC-%{messageid}: %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: Juniper: {JUNIPERIC-<hfld11>: | JUNIPERIC4000 | JUNIPERIC } <date> <time> - <hdevice> - [<hfld0>] {<hrealm>\<husername> | <hrealm>/<husername>}(<hfld1>)[<hgroup>] - <messageid> <!payload:date>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Juniper:[\s]+(JUNIPERIC\-(?<hfld11>[^:]*):[\s]+|[\s]*JUNIPERIC4000[\s]+|[\s]*JUNIPERIC[\s]+)[\s]+(?<message>(?<date>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\-[\s]+(?<hdevice>[^\s]*)[\s]+\-[\s]+\[(?<hfld0>[^\]]*)\][\s]+((?<hrealm>[^\\]*)\\(?<husername>[^\s]*)[\s]+|[\s]*(?<hrealm>[^/]*)/(?<husername>[^\(]*))\((?<hfld1>[^\)]*)\)\[(?<hgroup>[^\]]*)\][\s]+\-[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: Juniper: {JUNIPERIC-<hfld11>:| JUNIPERIC4000 | JUNIPERIC} <date> <time> - <hdevice> - [<hfld0>] <husername>(<hfld1>)[<hgroup>] - <messageid> <!payload:date>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Juniper:[\s]+(JUNIPERIC\-(?<hfld11>[^:]*):|[\s]*JUNIPERIC4000[\s]+|[\s]*JUNIPERIC)[\s]+(?<message>(?<date>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\-[\s]+(?<hdevice>[^\s]*)[\s]+\-[\s]+\[(?<hfld0>[^\]]*)\][\s]+(?<husername>[^\(]*)\((?<hfld1>[^\)]*)\)\[(?<hgroup>[^\]]*)\][\s]+\-[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: Juniper: {JUNIPERIC-<hfld11>:| JUNIPERIC4000 | JUNIPERIC } <date> <time> - <hdevice> - [<hfld0>] <husername>(<hfld1>)[<hgroup>] - <hfld2> <messageid> <!payload:date>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Juniper:[\s]+(JUNIPERIC\-(?<hfld11>[^:]*):|[\s]*JUNIPERIC4000[\s]+|[\s]*JUNIPERIC[\s]+)[\s]+(?<message>(?<date>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\-[\s]+(?<hdevice>[^\s]*)[\s]+\-[\s]+\[(?<hfld0>[^\]]*)\][\s]+(?<husername>[^\(]*)\((?<hfld1>[^\)]*)\)\[(?<hgroup>[^\]]*)\][\s]+\-[\s]+(?<hfld2>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: Juniper: {JUNIPERIC4000 | JUNIPERIC} <date> <time> - <hdevice> - [<hfld0>] <husername>(<hfld1>)[<hgroup>] - <hfld2>,<messageid>,<!payload:date>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Juniper:[\s]+(JUNIPERIC4000[\s]+|[\s]*JUNIPERIC)[\s]+(?<message>(?<date>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+\-[\s]+(?<hdevice>[^\s]*)[\s]+\-[\s]+\[(?<hfld0>[^\]]*)\][\s]+(?<husername>[^\(]*)\((?<hfld1>[^\)]*)\)\[(?<hgroup>[^\]]*)\][\s]+\-[\s]+(?<hfld2>[^,]*),(?<messageid>[^,]*),(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_junipericmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Account disabled by password management on auth server '<fld1>'
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Account disabled by password management on auth server '%{fld1}'" }
			id => "msgParserId0"
			add_field => {
				"action" => "Account disabled"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Activated in cluster: '<clustermembers>'
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Activated in cluster: '%{clustermembers}'" }
			id => "msgParserId1"
			add_field => {
				"action" => "Activated in cluster"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Added <info>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Added %{info}" }
			id => "msgParserId2"
			add_field => {
				"action" => "Added"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Agent" {
		# MESSAGE Agent
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Agent login succeeded for <fld1>/<info> from <smacaddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Agent login succeeded for %{fld1}/%{info} from %{smacaddr}" }
				id => "message-Agent"
				add_field => {
				"action" => "login succeeded"
					"[event][id]" => "Agent"
					"[rsa][message][id1]" => "Agent"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Agent:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Agent login rejected from IP <fld9> for <fld10> due to internal error.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Agent login rejected from IP %{fld9} for %{fld10} due to internal error." }
				id => "message-Agent:01"
				add_field => {
				"action" => "Agent login rejected"
					"[event][id]" => "Agent:01"
					"[rsa][message][id1]" => "Agent:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Authentication failed.<info>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Authentication failed.%{info}" }
			id => "msgParserId4"
			add_field => {
				"action" => "Authentication failed."
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <smacaddr>(<realm>)[<group>] - <authmethod> authentication failed: <result>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{smacaddr}(%{realm})[%{group}] - %{authmethod} authentication failed: %{result}" }
			id => "msgParserId5"
			add_field => {
				"action" => "authentication failed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Changed" {
		# MESSAGE Changed
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Changed log event <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Changed log event %{info}" }
				id => "message-Changed"
				add_field => {
				"action" => "Changed log event"
					"[event][id]" => "Changed"
					"[rsa][message][id1]" => "Changed"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Changed:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Changed <change_attribute> setting from '<change_old>' to '<change_new>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Changed %{change_attribute} setting from '%{change_old}' to '%{change_new}'" }
				id => "message-Changed:01"
				add_field => {
				"action" => "Changed log event"
					"[event][id]" => "Changed:01"
					"[rsa][message][id1]" => "Changed:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Completed syncing state (<fld1>)
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Completed syncing state (%{fld1})" }
			id => "msgParserId8"
			add_field => {
				"action" => "Completed syncing state"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - Connection from IP <saddr> not authenticated yet (URL=<info>)
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - Connection from IP %{saddr} not authenticated yet (URL=%{info})" }
			id => "msgParserId9"
			add_field => {
				"action" => "not authenticated yet"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Could" {
		# MESSAGE Could
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Could not change password for user <fld1> : Could not change password. New password must not be one of the previous <fld2> password(s).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Could not change password for user %{fld1} : Could not change password. New password must not be one of the previous %{fld2} password(s)." }
				id => "message-Could"
				add_field => {
				"action" => "Could not change password for user"
					"[event][id]" => "Could"
					"[rsa][message][id1]" => "Could"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Could:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Could not change password for user <fld1> : Old password is incorrect
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Could not change password for user %{fld1} : Old password is incorrect" }
				id => "message-Could:01"
				add_field => {
				"action" => "Could not change password for user"
					"[event][id]" => "Could:01"
					"[rsa][message][id1]" => "Could:01"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Could:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Could not connect to LDAP server <fld10>: Failed binding to admin DN: [<fld11>] Can't contact LDAP server: (<fld12>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Could not connect to LDAP server %{fld10}: Failed binding to admin DN: [%{fld11}] Can't contact LDAP server: (%{fld12})" }
				id => "message-Could:02"
				add_field => {
				"action" => "Could not connect to LDAP server"
					"[event][id]" => "Could:02"
					"[rsa][message][id1]" => "Could:02"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Could:03
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Could not connect to LDAP server <fld10>: Failed binding to admin DN: [<fld11>] Invalid credentials: 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Could not connect to LDAP server %{fld10}: Failed binding to admin DN: [%{fld11}] Invalid credentials:" }
				id => "message-Could:03"
				add_field => {
				"action" => "Could not connect to LDAP server"
					"[event][id]" => "Could:03"
					"[rsa][message][id1]" => "Could:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Deleted" {
		# MESSAGE Deleted
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Deleted new <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Deleted new %{info}" }
				id => "message-Deleted"
				add_field => {
				"action" => "Deleted"
					"[event][id]" => "Deleted"
					"[rsa][message][id1]" => "Deleted"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Deleted:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Deleted <fld10> realm '<fld9>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Deleted %{fld10} realm '%{fld9}'" }
				id => "message-Deleted:02"
				add_field => {
				"action" => "Deleted user"
					"[event][id]" => "Deleted:02"
					"[rsa][message][id1]" => "Deleted:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Deleted:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Deleted filter <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Deleted filter %{fld9}" }
				id => "message-Deleted:01"
				add_field => {
				"action" => "Deleted filter"
					"[event][id]" => "Deleted:01"
					"[rsa][message][id1]" => "Deleted:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Endpoint Assurance: [InitializeEngine] Initializing TNCS....
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Endpoint Assurance: [InitializeEngine] Initializing TNCS...." }
			id => "msgParserId15"
			add_field => {
				"action" => "Endpoint Assurance: [InitializeEngine] Initializing TNCS...."
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "No" {
		# MESSAGE No:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - No EAP protocol was agreed on
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - No EAP protocol was agreed on" }
				id => "message-No:02"
				add_field => {
				"action" => "No EAP protocol was agreed on"
					"[event][id]" => "No:02"
					"[rsa][message][id1]" => "No:02"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE No
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - No new patch management data available from '<url>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - No new patch management data available from '%{url}'." }
				id => "message-No"
				add_field => {
				"action" => "No new patch management data available"
					"[event][id]" => "No"
					"[rsa][message][id1]" => "No"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - ESAP package (version '<fld1>') {uploaded | activated | deleted |installed}.
	else if [logstash][msgparser][id] == "msgParserId17" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<group>[^\]]*)\][\s]+\-[\s]+ESAP[\s]+package[\s]+\(version[\s]+'(?<fld1>[^']*)'\)[\s]+(uploaded[\s]+|[\s]*activated[\s]+|[\s]*deleted[\s]+|installed)\.$" }
			id => "msgParserId17"
			add_field => {
				"action" => "ESAP package operation"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Exported" {
		# MESSAGE Exported:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Exported <info> configuration by administrator
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Exported %{info} configuration by administrator" }
				id => "message-Exported:01"
				add_field => {
				"action" => "Exported"
					"[event][id]" => "Exported:01"
					"[rsa][message][id1]" => "Exported:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Exported:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Exported <info> by administrator
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Exported %{info} by administrator" }
				id => "message-Exported:02"
				add_field => {
				"action" => "Exported"
					"[event][id]" => "Exported:02"
					"[rsa][message][id1]" => "Exported:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Forcing off user (<fld1>) because of change in <policyname> policy
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Forcing off user (%{fld1}) because of change in %{policyname} policy" }
			id => "msgParserId20"
			add_field => {
				"action" => "Forcing off user"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId21
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Forming cluster: '<info> [<fld1>] [<fld2>] [<fld8>]'
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Forming cluster: '%{info} [%{fld1}] [%{fld2}] [%{fld8}]'" }
			id => "msgParserId21"
			add_field => {
				"action" => "Forming cluster"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Host" {
		# MESSAGE Host:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <realm>\<username>(<fld1>)[<group>] - Host Checker policy '<policyname>' failed on host using <authmethod> authentication  for user '<fld2>\<fld6>'. Reason: '<result>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{realm}\%{username}(%{fld1})[%{group}] - Host Checker policy '%{policyname}' failed on host using %{authmethod} authentication  for user '%{fld2}\%{fld6}'. Reason: '%{result}'." }
				id => "message-Host:01"
				add_field => {
				"action" => "Host Checker policy failed"
					"[event][id]" => "Host:01"
					"[rsa][message][id1]" => "Host:01"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Host Checker policy '<policyname>' failed on host using <authmethod> authentication  for user '<fld1>'. Reason: '<result>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Host Checker policy '%{policyname}' failed on host using %{authmethod} authentication  for user '%{fld1}'. Reason: '%{result}'." }
				id => "message-Host:02"
				add_field => {
				"action" => "Host Checker policy failed"
					"[event][id]" => "Host:02"
					"[rsa][message][id1]" => "Host:02"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:03
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <realm>\<username>(<fld1>)[<group>] - Host Checker policy '<policyname>' failed on host '<fld2>' address '<smacaddr>'  for user '<fld6>\<fld7>' reason '<result>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{realm}\%{username}(%{fld1})[%{group}] - Host Checker policy '%{policyname}' failed on host '%{fld2}' address '%{smacaddr}'  for user '%{fld6}\%{fld7}' reason '%{result}'." }
				id => "message-Host:03"
				add_field => {
				"action" => "Host Checker policy failed"
					"[event][id]" => "Host:03"
					"[rsa][message][id1]" => "Host:03"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:04
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Host Checker policy '<policyname>' failed on host '<fld1>' address '<smacaddr>'  for user '<fld2>' reason '<result>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Host Checker policy '%{policyname}' failed on host '%{fld1}' address '%{smacaddr}'  for user '%{fld2}' reason '%{result}'." }
				id => "message-Host:04"
				add_field => {
				"action" => "Host Checker policy failed"
					"[event][id]" => "Host:04"
					"[rsa][message][id1]" => "Host:04"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:05
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Host Checker policy '<policyname>' failed on host <fld1>  for user '<fld2>'. Reason: '<result>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Host Checker policy '%{policyname}' failed on host %{fld1}  for user '%{fld2}'. Reason: '%{result}'." }
				id => "message-Host:05"
				add_field => {
				"action" => "Host Checker policy failed"
					"[event][id]" => "Host:05"
					"[rsa][message][id1]" => "Host:05"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:06
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <realm>\<username>(<fld1>)[<group>] - Host Checker policy '<policyname>' passed on host using <authmethod> authentication  for user '<fld2>\<fld6>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{realm}\%{username}(%{fld1})[%{group}] - Host Checker policy '%{policyname}' passed on host using %{authmethod} authentication  for user '%{fld2}\%{fld6}'." }
				id => "message-Host:06"
				add_field => {
				"action" => "Host Checker policy passed"
					"[event][id]" => "Host:06"
					"[rsa][message][id1]" => "Host:06"
					"[event][categoryid]" => "1502010000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:07
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Host Checker policy '<policyname>' passed on host using <authmethod> authentication  for user '<fld1>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Host Checker policy '%{policyname}' passed on host using %{authmethod} authentication  for user '%{fld1}'." }
				id => "message-Host:07"
				add_field => {
				"action" => "Host Checker policy passed"
					"[event][id]" => "Host:07"
					"[rsa][message][id1]" => "Host:07"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:10
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Host Checker policy '<policyname>' passed on host '<fld1>' address '<fld2>'  for user '<fld6>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Host Checker policy '%{policyname}' passed on host '%{fld1}' address '%{fld2}'  for user '%{fld6}'." }
				id => "message-Host:10"
				add_field => {
				"action" => "Host Checker policy passed"
					"[event][id]" => "Host:10"
					"[rsa][message][id1]" => "Host:10"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:08
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Host Checker policy '<policyname>' passed on host <fld1>  for user '<fld2>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Host Checker policy '%{policyname}' passed on host %{fld1}  for user '%{fld2}'." }
				id => "message-Host:08"
				add_field => {
				"action" => "Host Checker policy passed"
					"[event][id]" => "Host:08"
					"[rsa][message][id1]" => "Host:08"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:09
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Host Checker predefined Firewall check '<fld1>' changed for policy '<policyname>'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Host Checker predefined Firewall check '%{fld1}' changed for policy '%{policyname}'." }
				id => "message-Host:09"
				add_field => {
				"action" => "Host Checker predefined Firewall check"
					"[event][id]" => "Host:09"
					"[rsa][message][id1]" => "Host:09"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Host:11
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Host checking is not possible with this protocol
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Host checking is not possible with this protocol" }
				id => "message-Host:11"
				add_field => {
				"action" => "Host checking not possible"
					"[event][id]" => "Host:11"
					"[rsa][message][id1]" => "Host:11"
					"[event][categoryid]" => "1502020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "internal" {
		# MESSAGE internal
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - internal gateway '<saddr>' {up|unreachable}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<group>[^\]]*)\][\s]+\-[\s]+internal[\s]+gateway[\s]+'(?<saddr>[^']*)'[\s]+(up|unreachable)\.$" }
				id => "message-internal"
				add_field => {
				"action" => "internal"
					"[event][id]" => "internal"
					"[rsa][message][id1]" => "internal"
					"[event][categoryid]" => "1605030000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE internal:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - internal <info> {up|unreachable}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<group>[^\]]*)\][\s]+\-[\s]+internal[\s]+(?<info>[^\s]*)[\s]+(up|unreachable)\.$" }
				id => "message-internal:01"
				add_field => {
				"action" => "internal"
					"[event][id]" => "internal:01"
					"[rsa][message][id1]" => "internal:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE internal:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - internal <info> {down|unreachable}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<group>[^\]]*)\][\s]+\-[\s]+internal[\s]+(?<info>[^\s]*)[\s]+(down|unreachable)\.$" }
				id => "message-internal:02"
				add_field => {
				"action" => "internal"
					"[event][id]" => "internal:02"
					"[rsa][message][id1]" => "internal:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - LDAP server <fld10>: <context>.
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - LDAP server %{fld10}: %{context}." }
			id => "msgParserId36"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId37
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - <fld1>/<info> logged out from IP (<fld2>) because user started new session from IP (<daddr>).
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - %{fld1}/%{info} logged out from IP (%{fld2}) because user started new session from IP (%{daddr})." }
			id => "msgParserId37"
			add_field => {
				"action" => "logged out"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Login" {
		# MESSAGE Login:failed01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Login failed using auth server <fld1> (<authmethod>).  Reason: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Login failed using auth server %{fld1} (%{authmethod}).  Reason: %{result}" }
				id => "message-Login:failed01"
				add_field => {
				"action" => "Login failed"
					"[event][id]" => "Login:failed01"
					"[rsa][message][id1]" => "Login:failed01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Login:failed02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <smacaddr>(<realm>)[<group>] - Login failed <info>Reason: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{smacaddr}(%{realm})[%{group}] - Login failed %{info}Reason: %{result}" }
				id => "message-Login:failed02"
				add_field => {
				"action" => "Login failed"
					"[event][id]" => "Login:failed02"
					"[rsa][message][id1]" => "Login:failed02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Login:succeeded
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Login succeeded for <fld1>/<fld2> from <fld6> via internal port.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Login succeeded for %{fld1}/%{fld2} from %{fld6} via internal port." }
				id => "message-Login:succeeded"
				add_field => {
				"action" => "Login succeeded"
					"[event][id]" => "Login:succeeded"
					"[rsa][message][id1]" => "Login:succeeded"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Login:succeeded01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] {<realm>\<username>(<fld5>)[<group>] | <username>(<fld5>)[<group>]} - Login succeeded for <fld1>/<fld2> from <fld6>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+((?<realm>[^\\]*)\\(?<username>[^\(]*)\((?<fld5>[^\)]*)\)\[(?<group>[^\]]*)\][\s]+|[\s]*(?<username>[^\(]*)\((?<fld5>[^\)]*)\)\[(?<group>[^\]]*)\])[\s]+\-[\s]+Login[\s]+succeeded[\s]+for[\s]+(?<fld1>[^/]*)/(?<fld2>[^\s]*)[\s]+from[\s]+(?<fld6>[^\.]*)\.$" }
				id => "message-Login:succeeded01"
				add_field => {
				"action" => "Login succeeded"
					"[event][id]" => "Login:succeeded01"
					"[rsa][message][id1]" => "Login:succeeded01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Logout from <fld1>
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Logout from %{fld1}" }
			id => "msgParserId42"
			add_field => {
				"action" => "Logout"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId43
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - MAC address login succeeded for <fld1>/<fld2> from <fld6>.
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - MAC address login succeeded for %{fld1}/%{fld2} from %{fld6}." }
			id => "msgParserId43"
			add_field => {
				"action" => "Login succeeded"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId44
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Max session timeout for <fld1>/<fld2>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Max session timeout for %{fld1}/%{fld2}" }
			id => "msgParserId44"
			add_field => {
				"action" => "Max session timeout"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Node" {
		# MESSAGE Node:unreachable
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Node '<node>' is now unreachable from node '<info>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Node '%{node}' is now unreachable from node '%{info}'" }
				id => "message-Node:unreachable"
				add_field => {
				"action" => "Node unreachable from"
					"[event][id]" => "Node:unreachable"
					"[rsa][message][id1]" => "Node:unreachable"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Node:activated
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Node '<node>' activated in cluster '<clustermembers>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Node '%{node}' activated in cluster '%{clustermembers}'" }
				id => "message-Node:activated"
				add_field => {
				"action" => "Node activated in cluster"
					"[event][id]" => "Node:activated"
					"[rsa][message][id1]" => "Node:activated"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Node:deactivated
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Node '<node>' deactivated in cluster '<clustermembers>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Node '%{node}' deactivated in cluster '%{clustermembers}'" }
				id => "message-Node:deactivated"
				add_field => {
				"action" => "Node deactivated in cluster"
					"[event][id]" => "Node:deactivated"
					"[rsa][message][id1]" => "Node:deactivated"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Node:reachable
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Node '<node>' is now reachable from node <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Node '%{node}' is now reachable from node %{info}" }
				id => "message-Node:reachable"
				add_field => {
				"action" => "Node reachable from"
					"[event][id]" => "Node:reachable"
					"[rsa][message][id1]" => "Node:reachable"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Number" {
		# MESSAGE Number
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Number of concurrent users logged in to the device:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Number of concurrent users logged in to the device:%{info}" }
				id => "message-Number"
				add_field => {
				"action" => "Number of concurrent users logged in to the device"
					"[event][id]" => "Number"
					"[rsa][message][id1]" => "Number"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Number:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Number of <fld9> connections: <fld10>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Number of %{fld9} connections: %{fld10}" }
				id => "message-Number:01"
				add_field => {
				"action" => "Count the JCP Connections"
					"[event][id]" => "Number:01"
					"[rsa][message][id1]" => "Number:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Password" {
		# MESSAGE Password
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Password change failed for user <fld1>. Reason : 'Could not change password. New password must not be one of the previous <fld2> password(s).'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Password change failed for user %{fld1}. Reason : 'Could not change password. New password must not be one of the previous %{fld2} password(s).'." }
				id => "message-Password"
				add_field => {
				"action" => "Password change failed"
					"[event][id]" => "Password"
					"[rsa][message][id1]" => "Password"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Password:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Password change failed for user <fld1>. Reason : 'Old password is incorrect'.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Password change failed for user %{fld1}. Reason : 'Old password is incorrect'." }
				id => "message-Password:01"
				add_field => {
				"action" => "Password change failed"
					"[event][id]" => "Password:01"
					"[rsa][message][id1]" => "Password:01"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Password:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Password realm restrictions failed for <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Password realm restrictions failed for %{fld9}" }
				id => "message-Password:02"
				add_field => {
				"action" => "Password restrictions failed"
					"[event][id]" => "Password:02"
					"[rsa][message][id1]" => "Password:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId52
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Policy '<policyname>' is created
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Policy '%{policyname}' is created" }
			id => "msgParserId52"
			add_field => {
				"action" => "Policy created"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId53
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<fld5>)[<group>] - Preferred realm <realm> is not available
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{fld5})[%{group}] - Preferred realm %{realm} is not available" }
			id => "msgParserId53"
			add_field => {
				"action" => "Preferred realm is not available"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Primary" {
		# MESSAGE Primary:failed
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Primary authentication failed for <fld2>/<fld6> from <smacaddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Primary authentication failed for %{fld2}/%{fld6} from %{smacaddr}" }
				id => "message-Primary:failed"
				add_field => {
				"action" => "Primary authentication failed"
					"[event][id]" => "Primary:failed"
					"[rsa][message][id1]" => "Primary:failed"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Primary:successful
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Primary authentication successful for <fld2>/<fld6> from <smacaddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Primary authentication successful for %{fld2}/%{fld6} from %{smacaddr}" }
				id => "message-Primary:successful"
				add_field => {
				"action" => "Primary authentication successful"
					"[event][id]" => "Primary:successful"
					"[rsa][message][id1]" => "Primary:successful"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId56
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Program radius recently failed. Trace info: <context> 
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Program radius recently failed. Trace info: %{context}" }
			id => "msgParserId56"
			add_field => {
				"action" => "Program radius recently failed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Radius" {
		# MESSAGE Radius:accepted
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <realm>\<username>(<fld5>)[<fld9>] - Radius authentication accepted for <fld2>\<fld6> (realm '<fld7>') from location-group '<group>' and attributes are: Nas-IP-Address = <saddr>,NAS-Port = <sport>,NAS-Port-Type = <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{realm}\%{username}(%{fld5})[%{fld9}] - Radius authentication accepted for %{fld2}\%{fld6} (realm '%{fld7}') from location-group '%{group}' and attributes are: Nas-IP-Address = %{saddr},NAS-Port = %{sport},NAS-Port-Type = %{fld8}" }
				id => "message-Radius:accepted"
				add_field => {
				"action" => "Radius authentication accepted"
					"[event][id]" => "Radius:accepted"
					"[rsa][message][id1]" => "Radius:accepted"
					"[event][categoryid]" => "1302010100"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Radius:accepted01
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<fld5>)[<fld9>] - Radius authentication accepted for <fld6> (realm '<fld7>') from location-group '<group>' and attributes are: Nas-IP-Address = <saddr>,NAS-Port = <sport>,NAS-Port-Type = <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{fld5})[%{fld9}] - Radius authentication accepted for %{fld6} (realm '%{fld7}') from location-group '%{group}' and attributes are: Nas-IP-Address = %{saddr},NAS-Port = %{sport},NAS-Port-Type = %{fld8}" }
				id => "message-Radius:accepted01"
				add_field => {
				"action" => "Radius authentication accepted"
					"[event][id]" => "Radius:accepted01"
					"[rsa][message][id1]" => "Radius:accepted01"
					"[event][categoryid]" => "1302010100"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Radius:accepted02
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <realm>\<username>(<fld5>)[<fld9>] - Radius authentication accepted for <fld2>\<fld6> (realm '<fld7>') from location-group '<group>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{realm}\%{username}(%{fld5})[%{fld9}] - Radius authentication accepted for %{fld2}\%{fld6} (realm '%{fld7}') from location-group '%{group}'" }
				id => "message-Radius:accepted02"
				add_field => {
				"action" => "Radius authentication accepted"
					"[event][id]" => "Radius:accepted02"
					"[rsa][message][id1]" => "Radius:accepted02"
					"[event][categoryid]" => "1302010100"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Radius:accepted03
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<fld5>)[<fld9>] - Radius authentication accepted for <fld6> (realm '<fld7>') from location-group '<group>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{fld5})[%{fld9}] - Radius authentication accepted for %{fld6} (realm '%{fld7}') from location-group '%{group}'" }
				id => "message-Radius:accepted03"
				add_field => {
				"action" => "Radius authentication accepted"
					"[event][id]" => "Radius:accepted03"
					"[rsa][message][id1]" => "Radius:accepted03"
					"[event][categoryid]" => "1302010100"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Radius:rejected
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<fld2>] - Radius authentication rejected for <fld6> (realm '<fld7>') from location-group '<group>' and attributes are: Nas-IP-Address = <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{fld2}] - Radius authentication rejected for %{fld6} (realm '%{fld7}') from location-group '%{group}' and attributes are: Nas-IP-Address = %{saddr}" }
				id => "message-Radius:rejected"
				add_field => {
				"action" => "Radius authentication rejected"
					"[event][id]" => "Radius:rejected"
					"[rsa][message][id1]" => "Radius:rejected"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Radius:rejected01
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<fld2>] - Radius authentication rejected for <fld6> (realm '<fld7>') from location-group '<group>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{fld2}] - Radius authentication rejected for %{fld6} (realm '%{fld7}') from location-group '%{group}'" }
				id => "message-Radius:rejected01"
				add_field => {
				"action" => "Radius authentication rejected"
					"[event][id]" => "Radius:rejected01"
					"[rsa][message][id1]" => "Radius:rejected01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Radius:resumed
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<fld2>] - Radius authentication was resumed for <fld6> (realm '<fld7>') from location-group '<group>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{fld2}] - Radius authentication was resumed for %{fld6} (realm '%{fld7}') from location-group '%{group}'" }
				id => "message-Radius:resumed"
				add_field => {
				"action" => "Radius authentication resumed"
					"[event][id]" => "Radius:resumed"
					"[rsa][message][id1]" => "Radius:resumed"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Radius
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Radius server <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Radius server %{info}" }
				id => "message-Radius"
				add_field => {
				"action" => "Radius server"
					"[event][id]" => "Radius"
					"[rsa][message][id1]" => "Radius"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "RADIUS:" {
		# MESSAGE RADIUS:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: Proxy Interfaces Changed: Restarting RADIUS
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: Proxy Interfaces Changed: Restarting RADIUS" }
				id => "message-RADIUS:01"
				add_field => {
				"action" => "RADIUS: Proxy Interfaces Changed: Restarting RADIUS"
					"[event][id]" => "RADIUS:01"
					"[rsa][message][id1]" => "RADIUS:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - RADIUS: Proxy: Discarding response with invalid length received from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - RADIUS: Proxy: Discarding response with invalid length received from %{saddr}" }
				id => "message-RADIUS:02"
				add_field => {
				"action" => "RADIUS: Proxy: Discarding response with invalid length received"
					"[event][id]" => "RADIUS:02"
					"[rsa][message][id1]" => "RADIUS:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:03
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - RADIUS: RADIUS request received from unknown RAS Client <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - RADIUS: RADIUS request received from unknown RAS Client %{saddr}" }
				id => "message-RADIUS:03"
				add_field => {
				"action" => "RADIUS: RADIUS request received"
					"[event][id]" => "RADIUS:03"
					"[rsa][message][id1]" => "RADIUS:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:04
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: The Steel-Belted Radius Infranet Controller Edition service was started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: The Steel-Belted Radius Infranet Controller Edition service was started." }
				id => "message-RADIUS:04"
				add_field => {
				"action" => "RADIUS: The Steel-Belted Radius Infranet Controller Edition service was started."
					"[event][id]" => "RADIUS:04"
					"[rsa][message][id1]" => "RADIUS:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:05
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: The Steel-Belted Radius Infranet Controller Edition service was stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: The Steel-Belted Radius Infranet Controller Edition service was stopped." }
				id => "message-RADIUS:05"
				add_field => {
				"action" => "RADIUS: The Steel-Belted Radius Infranet Controller Edition service was stopped."
					"[event][id]" => "RADIUS:05"
					"[rsa][message][id1]" => "RADIUS:05"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:06
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - RADIUS: Warning -- {Authentication | Accounting} request received from unknown RAS Client <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<group>[^\]]*)\][\s]+\-[\s]+RADIUS:[\s]+Warning[\s]+\-\-[\s]+(Authentication[\s]+|[\s]*Accounting)[\s]+request[\s]+received[\s]+from[\s]+unknown[\s]+RAS[\s]+Client[\s]+(?<saddr>.*)$" }
				id => "message-RADIUS:06"
				add_field => {
				"action" => "RADIUS: Warning -- Authentication request received"
					"[event][id]" => "RADIUS:06"
					"[rsa][message][id1]" => "RADIUS:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:07
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - RADIUS: Library Requires EAP and credentials are not EAP
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - RADIUS: Library Requires EAP and credentials are not EAP" }
				id => "message-RADIUS:07"
				add_field => {
				"action" => "RADIUS: Library Requires EAP"
					"[event][id]" => "RADIUS:07"
					"[rsa][message][id1]" => "RADIUS:07"
					"[event][categoryid]" => "1613050201"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:08
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: Socket error '<event_description>'; operation = '<fld1>'; remote address = '<hostip>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: Socket error '%{event_description}'; operation = '%{fld1}'; remote address = '%{hostip}'" }
				id => "message-RADIUS:08"
				add_field => {
				"action" => "RADIUS: Socket error"
					"[event][id]" => "RADIUS:08"
					"[rsa][message][id1]" => "RADIUS:08"
					"[event][categoryid]" => "1601000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:09
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: Return code <fld1> from attempt to send UDP packet with <fld2> data
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: Return code %{fld1} from attempt to send UDP packet with %{fld2} data" }
				id => "message-RADIUS:09"
				add_field => {
				"action" => "RADIUS: Return code"
					"[event][id]" => "RADIUS:09"
					"[rsa][message][id1]" => "RADIUS:09"
					"[event][categoryid]" => "1303000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:10
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - RADIUS: Request contained EAP Identity Response, but Identity did not match User-Name
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - RADIUS: Request contained EAP Identity Response, but Identity did not match User-Name" }
				id => "message-RADIUS:10"
				add_field => {
				"action" => "RADIUS: Request contained"
					"[event][id]" => "RADIUS:10"
					"[rsa][message][id1]" => "RADIUS:10"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:11
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - RADIUS: Request has invalid syntax (e.g. invalid, missing or duplicate attributes), Rejecting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - RADIUS: Request has invalid syntax (e.g. invalid, missing or duplicate attributes), Rejecting" }
				id => "message-RADIUS:11"
				add_field => {
				"action" => "RADIUS: Request has invalid syntax"
					"[event][id]" => "RADIUS:11"
					"[rsa][message][id1]" => "RADIUS:11"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:12
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - RADIUS: Received request with unmatched state attribute, rejecting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - RADIUS: Received request with unmatched state attribute, rejecting" }
				id => "message-RADIUS:12"
				add_field => {
				"action" => "RADIUS: Received request"
					"[event][id]" => "RADIUS:12"
					"[rsa][message][id1]" => "RADIUS:12"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:13
		# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - RADIUS: Warning: Duplicate Request in Cache with mismatched message authenticator, rejecting.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - RADIUS: Warning: Duplicate Request in Cache with mismatched message authenticator, rejecting." }
				id => "message-RADIUS:13"
				add_field => {
				"action" => "RADIUS: Warning: Duplicate Request"
					"[event][id]" => "RADIUS:13"
					"[rsa][message][id1]" => "RADIUS:13"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:14
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: Failed to initialize cache, discarding accounting request
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: Failed to initialize cache, discarding accounting request" }
				id => "message-RADIUS:14"
				add_field => {
				"action" => "RADIUS: Failed to initialize cache"
					"[event][id]" => "RADIUS:14"
					"[rsa][message][id1]" => "RADIUS:14"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:15
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: The Auth flood queue has dropped <fld1> packet(s).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: The Auth flood queue has dropped %{fld1} packet(s)." }
				id => "message-RADIUS:15"
				add_field => {
				"action" => "RADIUS: The Auth flood queue has dropped"
					"[event][id]" => "RADIUS:15"
					"[rsa][message][id1]" => "RADIUS:15"
					"[event][categoryid]" => "1001030500"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:16
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: Shared secret verification failed - invalid accounting request
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: Shared secret verification failed - invalid accounting request" }
				id => "message-RADIUS:16"
				add_field => {
				"action" => "RADIUS: Shared secret verification failed"
					"[event][id]" => "RADIUS:16"
					"[rsa][message][id1]" => "RADIUS:16"
					"[event][categoryid]" => "1303000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:17
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: Client product information not found, Silently discarding
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: Client product information not found, Silently discarding" }
				id => "message-RADIUS:17"
				add_field => {
				"action" => "RADIUS: Client product information not found"
					"[event][id]" => "RADIUS:17"
					"[rsa][message][id1]" => "RADIUS:17"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:18
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: Invalid Message-Authenticator from RAS Client <fld10>, discarding.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: Invalid Message-Authenticator from RAS Client %{fld10}, discarding." }
				id => "message-RADIUS:18"
				add_field => {
				"action" => "RADIUS: Invalid Message-Authenticator"
					"[event][id]" => "RADIUS:18"
					"[rsa][message][id1]" => "RADIUS:18"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:19
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - RADIUS: Discarding invalid request
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - RADIUS: Discarding invalid request" }
				id => "message-RADIUS:19"
				add_field => {
				"action" => "RADIUS: Discarding invalid request"
					"[event][id]" => "RADIUS:19"
					"[rsa][message][id1]" => "RADIUS:19"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:21
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - RADIUS: Truncated request (<fld9>) received from <hostip>, ignoring authentication request
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - RADIUS: Truncated request (%{fld9}) received from %{hostip}, ignoring authentication request" }
				id => "message-RADIUS:21"
				add_field => {
				"action" => "RADIUS truncated request"
					"[event][id]" => "RADIUS:21"
					"[rsa][message][id1]" => "RADIUS:21"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE RADIUS:23
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - RADIUS: EAP Identity Response arrived with <fld9> attribute, ignoring <fld10> attribute
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - RADIUS: EAP Identity Response arrived with %{fld9} attribute, ignoring %{fld10} attribute" }
				id => "message-RADIUS:23"
				add_field => {
				"action" => "RADIUS EAP Identity Response arrived"
					"[event][id]" => "RADIUS:23"
					"[rsa][message][id1]" => "RADIUS:23"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId86
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<fld1>)[<group>] - Realm <realm>: <info>
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{fld1})[%{group}] - Realm %{realm}: %{info}" }
			id => "msgParserId86"
			add_field => {
				"action" => "Realm"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Received" {
		# MESSAGE Received:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Received a RADIUS Accounting Start, but <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Received a RADIUS Accounting Start, but %{info}" }
				id => "message-Received:01"
				add_field => {
				"action" => "Received a RADIUS Accounting Start"
					"[event][id]" => "Received:01"
					"[rsa][message][id1]" => "Received:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Received:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <fld1>(<realm>)[<group>] - Received a RADIUS Accounting Stop request for user <fld2>\<username>, but <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{fld1}(%{realm})[%{group}] - Received a RADIUS Accounting Stop request for user %{fld2}\%{username}, but %{info}" }
				id => "message-Received:02"
				add_field => {
				"action" => "Received a RADIUS Accounting Stop request"
					"[event][id]" => "Received:02"
					"[rsa][message][id1]" => "Received:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Received:03
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <fld1>(<realm>)[<group>] - Received a RADIUS Accounting Stop request for user <username>, but <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{fld1}(%{realm})[%{group}] - Received a RADIUS Accounting Stop request for user %{username}, but %{info}" }
				id => "message-Received:03"
				add_field => {
				"action" => "Received a RADIUS Accounting Stop request"
					"[event][id]" => "Received:03"
					"[rsa][message][id1]" => "Received:03"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Received:04
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Received a RADIUS Accounting Stop request. Terminated session
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Received a RADIUS Accounting Stop request. Terminated session" }
				id => "message-Received:04"
				add_field => {
				"action" => "Received a RADIUS Accounting Stop request"
					"[event][id]" => "Received:04"
					"[rsa][message][id1]" => "Received:04"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Received:05
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Received a RADIUS Accounting Stop request. Could not terminate MAC Auth Session
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Received a RADIUS Accounting Stop request. Could not terminate MAC Auth Session" }
				id => "message-Received:05"
				add_field => {
				"action" => "Received a RADIUS Accounting Stop request"
					"[event][id]" => "Received:05"
					"[rsa][message][id1]" => "Received:05"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Received:06
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Received a RADIUS Accounting Stop request. Terminated MAC Auth Session
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Received a RADIUS Accounting Stop request. Terminated MAC Auth Session" }
				id => "message-Received:06"
				add_field => {
				"action" => "Received a RADIUS Accounting Stop request"
					"[event][id]" => "Received:06"
					"[rsa][message][id1]" => "Received:06"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId93
	# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<group>] - Remote address for user <fld2>/<fld6> changed from <saddr> to <daddr>.
	else if [logstash][msgparser][id] == "msgParserId93" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{group}] - Remote address for user %{fld2}/%{fld6} changed from %{saddr} to %{daddr}." }
			id => "msgParserId93"
			add_field => {
				"action" => "Remote address"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId94
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Resources in Policy '<policyname>' is modified from [<fld1>] to [<fld2>]
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Resources in Policy '%{policyname}' is modified from [%{fld1}] to [%{fld2}]" }
			id => "msgParserId94"
			add_field => {
				"action" => "Resources in Policy"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId95
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Requested authentication protocol may not be available
	else if [logstash][msgparser][id] == "msgParserId95" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Requested authentication protocol may not be available" }
			id => "msgParserId95"
			add_field => {
				"action" => "Requested authentication protocol may not be available"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Role" {
		# MESSAGE Role:created
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<info>] - Role '<group>' is created
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{info}] - Role '%{group}' is created" }
				id => "message-Role:created"
				add_field => {
				"action" => "Role created"
					"[event][id]" => "Role:created"
					"[rsa][message][id1]" => "Role:created"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Role:deleted
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<info>] - Role '<group>' is deleted
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{info}] - Role '%{group}' is deleted" }
				id => "message-Role:deleted"
				add_field => {
				"action" => "Role deleted"
					"[event][id]" => "Role:deleted"
					"[rsa][message][id1]" => "Role:deleted"
					"[event][categoryid]" => "1402010100"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Roles" {
		# MESSAGE Roles:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Roles for user <fld1> on host <fld2> changed from <<<info>> to <<<group>> during policy reevaluation.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Roles for user %{fld1} on host %{fld2} changed from <%{info}> to <%{group}> during policy reevaluation." }
				id => "message-Roles:01"
				add_field => {
				"action" => "Role changed"
					"[event][id]" => "Roles:01"
					"[rsa][message][id1]" => "Roles:01"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Roles:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Roles for user <fld1> on host <fld2> changed from <<<info>> to <<<group>>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Roles for user %{fld1} on host %{fld2} changed from <%{info}> to <%{group}>." }
				id => "message-Roles:02"
				add_field => {
				"action" => "Role changed"
					"[event][id]" => "Roles:02"
					"[rsa][message][id1]" => "Roles:02"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "SBR" {
		# MESSAGE SBR
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - SBR Troubleshooting Log log is nearly full, currently <fld1> full
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - SBR Troubleshooting Log log is nearly full, currently %{fld1} full" }
				id => "message-SBR"
				add_field => {
				"action" => "SBR Troubleshooting Log log is nearly full"
					"[event][id]" => "SBR"
					"[rsa][message][id1]" => "SBR"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE SBR:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - SBR Troubleshooting Log log is full
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - SBR Troubleshooting Log log is full" }
				id => "message-SBR:01"
				add_field => {
				"action" => "SBR Troubleshooting Log log is full"
					"[event][id]" => "SBR:01"
					"[rsa][message][id1]" => "SBR:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId102
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - SCP <data_type> to archive <directory> succeeded; it took <fld1> secs to create and archive the file of size <fld2> bytes
	else if [logstash][msgparser][id] == "msgParserId102" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - SCP %{data_type} to archive %{directory} succeeded; it took %{fld1} secs to create and archive the file of size %{fld2} bytes" }
			id => "msgParserId102"
			add_field => {
				"action" => "SCP System Config to archive"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Server" {
		# MESSAGE Server
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Server reboot
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Server reboot" }
				id => "message-Server"
				add_field => {
				"action" => "Server reboot"
					"[event][id]" => "Server"
					"[rsa][message][id1]" => "Server"
					"[event][categoryid]" => "1606000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Server:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Server restart requested by <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Server restart requested by %{fld9}" }
				id => "message-Server:02"
				add_field => {
				"action" => "VIPs activated on node"
					"[event][id]" => "Server:02"
					"[rsa][message][id1]" => "Server:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Server:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Server restart
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Server restart" }
				id => "message-Server:01"
				add_field => {
				"action" => "Server restart"
					"[event][id]" => "Server:01"
					"[rsa][message][id1]" => "Server:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Session" {
		# MESSAGE Session
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Session timed out for <fld1>/<fld2> due to <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Session timed out for %{fld1}/%{fld2} due to %{info}" }
				id => "message-Session"
				add_field => {
				"action" => "Session timed out"
					"[event][id]" => "Session"
					"[rsa][message][id1]" => "Session"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Session:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Session not extended for <fld1> from <smacaddr> <info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Session not extended for %{fld1} from %{smacaddr} %{info}." }
				id => "message-Session:01"
				add_field => {
				"action" => "Session not extended"
					"[event][id]" => "Session:01"
					"[rsa][message][id1]" => "Session:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Session:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Session resumed from user agent '<fld1>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Session resumed from user agent '%{fld1}'" }
				id => "message-Session:02"
				add_field => {
				"action" => "Session resumed from user agent"
					"[event][id]" => "Session:02"
					"[rsa][message][id1]" => "Session:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Session:03
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Session has already exceeded its <fld9> session length
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Session has already exceeded its %{fld9} session length" }
				id => "message-Session:03"
				add_field => {
				"action" => "Session has already exceeded"
					"[event][id]" => "Session:03"
					"[rsa][message][id1]" => "Session:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId108
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - SiteMinder server: Caches flushed.
	else if [logstash][msgparser][id] == "msgParserId108" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - SiteMinder server: Caches flushed." }
			id => "msgParserId108"
			add_field => {
				"action" => "SiteMinder server: Caches flushed."
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId109
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Source IP realm restrictions successfully passed for <fld9>
	else if [logstash][msgparser][id] == "msgParserId109" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Source IP realm restrictions successfully passed for %{fld9}" }
			id => "msgParserId109"
			add_field => {
				"action" => "Source IP realm restrictions successfully"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId110
	# line in RSA: <fld3> <fld4> - <hostname> - [<fld1>] <username>(<realm>)[<fld6>] - SSL negotiation failed while client at source IP '<saddr>' was trying to connect to '<daddr>'. Reason: '<result>'
	else if [logstash][msgparser][id] == "msgParserId110" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{fld1}] %{username}(%{realm})[%{fld6}] - SSL negotiation failed while client at source IP '%{saddr}' was trying to connect to '%{daddr}'. Reason: '%{result}'" }
			id => "msgParserId110"
			add_field => {
				"action" => "SSL negotiation failed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Started" {
		# MESSAGE Started:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Started syncing state
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Started syncing state" }
				id => "message-Started:01"
				add_field => {
				"action" => "Started syncing state"
					"[event][id]" => "Started:01"
					"[rsa][message][id1]" => "Started:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Started
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Started system software <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Started system software %{info}" }
				id => "message-Started"
				add_field => {
				"action" => "Started system software"
					"[event][id]" => "Started"
					"[rsa][message][id1]" => "Started"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId113
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Starting services: <info>
	else if [logstash][msgparser][id] == "msgParserId113" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Starting services: %{info}" }
			id => "msgParserId113"
			add_field => {
				"action" => "Starting services"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId114
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Statistics <info>
	else if [logstash][msgparser][id] == "msgParserId114" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Statistics %{info}" }
			id => "msgParserId114"
			add_field => {
				"action" => "Statistics"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId115
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Syslog server <daddr> <info>
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Syslog server %{daddr} %{info}" }
			id => "msgParserId115"
			add_field => {
				"action" => "Syslog server added"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId116
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - System process detected a Host Checker time out on host <fld1>  for user '<fld2>'  (<info>)
	else if [logstash][msgparser][id] == "msgParserId116" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - System process detected a Host Checker time out on host %{fld1}  for user '%{fld2}'  (%{info})" }
			id => "msgParserId116"
			add_field => {
				"action" => "System process detected a Host Checker time out"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId117
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - TLS handshake failed
	else if [logstash][msgparser][id] == "msgParserId117" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - TLS handshake failed" }
			id => "msgParserId117"
			add_field => {
				"action" => "TLS handshake failed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Timeout" {
		# MESSAGE Timeout:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <realm>\<username>(<fld5>)[<group>] - Timeout while waiting for continuation request <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{realm}\%{username}(%{fld5})[%{group}] - Timeout while waiting for continuation request %{info}" }
				id => "message-Timeout:01"
				add_field => {
				"action" => "Timeout while waiting for continuation request"
					"[event][id]" => "Timeout:01"
					"[rsa][message][id1]" => "Timeout:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Timeout:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<fld5>)[<group>] - Timeout while waiting for continuation request <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{fld5})[%{group}] - Timeout while waiting for continuation request %{info}" }
				id => "message-Timeout:02"
				add_field => {
				"action" => "Timeout while waiting for continuation request"
					"[event][id]" => "Timeout:02"
					"[rsa][message][id1]" => "Timeout:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId120
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<group>] - Updated the sign-in policy '<policyname>'
	else if [logstash][msgparser][id] == "msgParserId120" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{group}] - Updated the sign-in policy '%{policyname}'" }
			id => "msgParserId120"
			add_field => {
				"action" => "Updated policy"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "User" {
		# MESSAGE User
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - User assigned RADIUS attribute(s) (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - User assigned RADIUS attribute(s) (%{info})" }
				id => "message-User"
				add_field => {
				"action" => "User assigned RADIUS attribute(s)"
					"[event][id]" => "User"
					"[rsa][message][id1]" => "User"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE User:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - User trying to login with a NULL password.  Login rejected.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - User trying to login with a NULL password.  Login rejected." }
				id => "message-User:01"
				add_field => {
				"action" => "User trying to login"
					"[event][id]" => "User:01"
					"[rsa][message][id1]" => "User:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE User:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - User Access log is nearly full, currently <fld10> full
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - User Access log is nearly full, currently %{fld10} full" }
				id => "message-User:02"
				add_field => {
				"action" => "User Access log is nearly full"
					"[event][id]" => "User:02"
					"[rsa][message][id1]" => "User:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE User:03
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - User Access log is full
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - User Access log is full" }
				id => "message-User:03"
				add_field => {
				"action" => "User Access log is full"
					"[event][id]" => "User:03"
					"[rsa][message][id1]" => "User:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE User:04
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - User assigned to vlan (VLAN='<vlan>')
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - User assigned to vlan (VLAN='%{vlan}')" }
				id => "message-User:04"
				add_field => {
				"action" => "User assigned to vlan"
					"[event][id]" => "User:04"
					"[rsa][message][id1]" => "User:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE User:06
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] {<realm>\<username>(<fld5>)[<group>] | <username>(<realm>)[<fld6>]} - User is signing in, not installing <fld9>, disabled for role
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+((?<realm>[^\\]*)\\(?<username>[^\(]*)\((?<fld5>[^\)]*)\)\[(?<group>[^\]]*)\][\s]+|[\s]*(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\])[\s]+\-[\s]+User[\s]+is[\s]+signing[\s]+in,[\s]+not[\s]+installing[\s]+(?<fld9>[^,]*),[\s]+disabled[\s]+for[\s]+role$" }
				id => "message-User:06"
				add_field => {
				"action" => "User is signing in"
					"[event][id]" => "User:06"
					"[rsa][message][id1]" => "User:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE User:07
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <realm>\<username>(<fld5>)[<group>] - User is signing in, not installing <fld9>, unsupported browser is <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{realm}\%{username}(%{fld5})[%{group}] - User is signing in, not installing %{fld9}, unsupported browser is %{info}" }
				id => "message-User:07"
				add_field => {
				"action" => "User is signing in"
					"[event][id]" => "User:07"
					"[rsa][message][id1]" => "User:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE User:05
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - User Accounts modified. Added <fld12> with username <fld9> to authentication server <fld10>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - User Accounts modified. Added %{fld12} with username %{fld9} to authentication server %{fld10}." }
				id => "message-User:05"
				add_field => {
				"action" => "User Accounts modified"
					"[event][id]" => "User:05"
					"[rsa][message][id1]" => "User:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "VIPs" {
		# MESSAGE VIPs
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - VIPs deactivated on node <node> on all ports, reason other node is better
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - VIPs deactivated on node %{node} on all ports, reason other node is better" }
				id => "message-VIPs"
				add_field => {
				"action" => "VIPs deactivated on node"
					"[event][id]" => "VIPs"
					"[rsa][message][id1]" => "VIPs"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE VIPs:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - VIPs activated on node <node> on all ports, reason: no one else has the vips
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - VIPs activated on node %{node} on all ports, reason: no one else has the vips" }
				id => "message-VIPs:01"
				add_field => {
				"action" => "VIPs activated on node"
					"[event][id]" => "VIPs:01"
					"[rsa][message][id1]" => "VIPs:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Local" {
		# MESSAGE Local_Authentication_Server:05
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Local Authentication server '<group>': Turned '<disposition>' the requirement for password to be different from username.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Local Authentication server '%{group}': Turned '%{disposition}' the requirement for password to be different from username." }
				id => "message-Local_Authentication_Server:05"
				add_field => {
				"action" => "Local Authentication server"
					"[event][id]" => "Local_Authentication_Server:05"
					"[rsa][message][id1]" => "Local_Authentication_Server:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Local_Authentication_Server:04
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Local Authentication server '<group>': Turned '<disposition>' the requirement for new password to be different from current password.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Local Authentication server '%{group}': Turned '%{disposition}' the requirement for new password to be different from current password." }
				id => "message-Local_Authentication_Server:04"
				add_field => {
				"action" => "Local Authentication server"
					"[event][id]" => "Local_Authentication_Server:04"
					"[rsa][message][id1]" => "Local_Authentication_Server:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Local_Authentication_Server:03
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Local Authentication server '<group>': Maximum required <change_attribute> changed from <change_old> to <change_new>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Local Authentication server '%{group}': Maximum required %{change_attribute} changed from %{change_old} to %{change_new}." }
				id => "message-Local_Authentication_Server:03"
				add_field => {
				"action" => "Local Authentication server"
					"[event][id]" => "Local_Authentication_Server:03"
					"[rsa][message][id1]" => "Local_Authentication_Server:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Local_Authentication_Server:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Local Authentication server instance name '<group>' created.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Local Authentication server instance name '%{group}' created." }
				id => "message-Local_Authentication_Server:02"
				add_field => {
				"action" => "Local Authentication server"
					"[event][id]" => "Local_Authentication_Server:02"
					"[rsa][message][id1]" => "Local_Authentication_Server:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Local_Authentication_Server:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Local Authentication server '<group>': Option to Allow users to change their passwords is turned '<disposition>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Local Authentication server '%{group}': Option to Allow users to change their passwords is turned '%{disposition}'" }
				id => "message-Local_Authentication_Server:01"
				add_field => {
				"action" => "Local Authentication server"
					"[event][id]" => "Local_Authentication_Server:01"
					"[rsa][message][id1]" => "Local_Authentication_Server:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Local_Authentication_Server
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Local Authentication server '<group>': Minimum required <change_attribute> changed from <change_old> to <change_new>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Local Authentication server '%{group}': Minimum required %{change_attribute} changed from %{change_old} to %{change_new}." }
				id => "message-Local_Authentication_Server"
				add_field => {
				"action" => "Local Authentication server"
					"[event][id]" => "Local_Authentication_Server"
					"[rsa][message][id1]" => "Local_Authentication_Server"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "License" {
		# MESSAGE License:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - License key restriction: number of concurrent users (<fld9>) exceeded the system limit (<fld10>). <fld11> is not allowed to login
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - License key restriction: number of concurrent users (%{fld9}) exceeded the system limit (%{fld10}). %{fld11} is not allowed to login" }
				id => "message-License:02"
				add_field => {
				"action" => "License key restriction"
					"[event][id]" => "License:02"
					"[rsa][message][id1]" => "License:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE License:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - License for '<info>', '<fld9>' expired
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - License for '%{info}', '%{fld9}' expired" }
				id => "message-License:01"
				add_field => {
				"action" => "License expired"
					"[event][id]" => "License:01"
					"[rsa][message][id1]" => "License:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE License
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - License for '<info>' - '<fld9>' {activated|installed}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+License[\s]+for[\s]+'(?<info>[^']*)'[\s]+\-[\s]+'(?<fld9>[^']*)'[\s]+(activated|installed)$" }
				id => "message-License"
				add_field => {
				"action" => "License activated"
					"[event][id]" => "License"
					"[rsa][message][id1]" => "License"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Created" {
		# MESSAGE Created:02
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Created new sign-in policy '<policyname>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Created new sign-in policy '%{policyname}'" }
				id => "message-Created:02"
				add_field => {
				"action" => "Created policy"
					"[event][id]" => "Created:02"
					"[rsa][message][id1]" => "Created:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Created:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Created Device Certificate '<info>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Created Device Certificate '%{info}'" }
				id => "message-Created:01"
				add_field => {
				"action" => "Created Device Certificate"
					"[event][id]" => "Created:01"
					"[rsa][message][id1]" => "Created:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE Created
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Created new sign-in notification '<policyname>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Created new sign-in notification '%{policyname}'" }
				id => "message-Created"
				add_field => {
				"action" => "Created notification"
					"[event][id]" => "Created"
					"[rsa][message][id1]" => "Created"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId144
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - NTP server '<daddr>' is unreachable.
	else if [logstash][msgparser][id] == "msgParserId144" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - NTP server '%{daddr}' is unreachable." }
			id => "msgParserId144"
			add_field => {
				"action" => "NTP server is unreachable"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId145
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Warning license key restriction: number of concurrent users (<fld9>) is nearing the system limit (<fld10>).
	else if [logstash][msgparser][id] == "msgParserId145" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Warning license key restriction: number of concurrent users (%{fld9}) is nearing the system limit (%{fld10})." }
			id => "msgParserId145"
			add_field => {
				"action" => "Warning license key restriction"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "The" {
		# MESSAGE The
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - The current virus signature list downloaded successfully from '<url>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - The current virus signature list downloaded successfully from '%{url}'" }
				id => "message-The"
				add_field => {
				"action" => "The current virus signature downloaded successfully"
					"[event][id]" => "The"
					"[rsa][message][id1]" => "The"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
		# MESSAGE The:01
		# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - The current virus signature list <fld9> successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - The current virus signature list %{fld9} successfully." }
				id => "message-The:01"
				add_field => {
				"action" => "The current virus signature downloaded successfully"
					"[event][id]" => "The:01"
					"[rsa][message][id1]" => "The:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId148
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Disconnect Message Failure: <result>
	else if [logstash][msgparser][id] == "msgParserId148" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Disconnect Message Failure: %{result}" }
			id => "msgParserId148"
			add_field => {
				"action" => "Disconnect message failure"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId149
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <fld9>,Start,<fld10>,<fld11>
	else if [logstash][msgparser][id] == "msgParserId149" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{fld9},Start,%{fld10},%{fld11}" }
			id => "msgParserId149"
			add_field => {
				"action" => "Disconnect message failure"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId150
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <fld9>,Stop,<fld10>,<fld11>
	else if [logstash][msgparser][id] == "msgParserId150" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{fld9},Stop,%{fld10},%{fld11}" }
			id => "msgParserId150"
			add_field => {
				"action" => "Disconnect message failure"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId152
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] {<realm>\<username>(<fld5>)[<group>] | <username>(<realm>)[<fld6>]} - could not get the realm info
	else if [logstash][msgparser][id] == "msgParserId152" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+((?<realm>[^\\]*)\\(?<username>[^\(]*)\((?<fld5>[^\)]*)\)\[(?<group>[^\]]*)\][\s]+|[\s]*(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\])[\s]+\-[\s]+could[\s]+not[\s]+get[\s]+the[\s]+realm[\s]+info$" }
			id => "msgParserId152"
			add_field => {
				"action" => "could not get realm info"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId153
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - There is no MAC Address Realm associated with Location Group <group>.
	else if [logstash][msgparser][id] == "msgParserId153" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - There is no MAC Address Realm associated with Location Group %{group}." }
			id => "msgParserId153"
			add_field => {
				"action" => "There is no MAC Address"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId154
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <fld9>,Interim-Update,<fld10>,<fld11>
	else if [logstash][msgparser][id] == "msgParserId154" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{fld9},Interim-Update,%{fld10},%{fld11}" }
			id => "msgParserId154"
			add_field => {
				"action" => "Disconnect message failure"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId156
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Browser on host <hostip> is not supported for Host Checker: User agent <fld9>
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Browser on host %{hostip} is not supported for Host Checker: User agent %{fld9}" }
			id => "msgParserId156"
			add_field => {
				"action" => "Browser not supported"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId158
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Minimum ESAP version on this IVE is '<change_new>'. Older ESAPs '<change_old>' are removed.
	else if [logstash][msgparser][id] == "msgParserId158" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Minimum ESAP version on this IVE is '%{change_new}'. Older ESAPs '%{change_old}' are removed." }
			id => "msgParserId158"
			add_field => {
				"action" => "Minimum ESAP version"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId159
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Modified filter <fld9>
	else if [logstash][msgparser][id] == "msgParserId159" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Modified filter %{fld9}" }
			id => "msgParserId159"
			add_field => {
				"action" => "Modified filter"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId160
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <change_attribute> updated from "<change_old>" to "<change_new>".
	else if [logstash][msgparser][id] == "msgParserId160" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{change_attribute} updated from \"%{change_old}\" to \"%{change_new}\"." }
			id => "msgParserId160"
			add_field => {
				"action" => "Host checker option"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId161
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <change_attribute> {changed from | set to} {<change_old> to <change_new> | <hostip>.}
	else if [logstash][msgparser][id] == "msgParserId161" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+(?<change_attribute>[^\s]*)[\s]+(changed[\s]+from[\s]+|[\s]*set[\s]+to)[\s]+((?<change_old>[^\s]*)[\s]+to[\s]+(?<change_new>[^\s]*)[\s]+|[\s]*(?<hostip>[^\.]*)\.)$" }
			id => "msgParserId161"
			add_field => {
				"action" => "Gateway address change"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId162
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <change_attribute> modified to <change_new>
	else if [logstash][msgparser][id] == "msgParserId162" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{change_attribute} modified to %{change_new}" }
			id => "msgParserId162"
			add_field => {
				"action" => "System date change"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId163
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Authentication token is created for administrative logon recovery
	else if [logstash][msgparser][id] == "msgParserId163" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Authentication token is created for administrative logon recovery" }
			id => "msgParserId163"
			add_field => {
				"action" => "VIPs deactivated on node"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId164
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Invalid license key <fld9>
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Invalid license key %{fld9}" }
			id => "msgParserId164"
			add_field => {
				"action" => "Invalid license key"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId165
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Login succeeded for <fld9> (<info>) from <hostip>
	else if [logstash][msgparser][id] == "msgParserId165" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Login succeeded for %{fld9} (%{info}) from %{hostip}" }
			id => "msgParserId165"
			add_field => {
				"action" => "Login succeeded"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId166
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Radius Server TestRadius: Login failed for <fld11> because host <hostip>:<fld10> is unreachable.
	else if [logstash][msgparser][id] == "msgParserId166" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Radius Server TestRadius: Login failed for %{fld11} because host %{hostip}:%{fld10} is unreachable." }
			id => "msgParserId166"
			add_field => {
				"action" => "VIPs deactivated on node"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId168
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - First DNS server {set to | changed from} {<change_old> to <change_new> | <daddr>}
	else if [logstash][msgparser][id] == "msgParserId168" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+First[\s]+DNS[\s]+server[\s]+(set[\s]+to[\s]+|[\s]*changed[\s]+from)[\s]+((?<change_old>[^\s]*)[\s]+to[\s]+(?<change_new>[^\s]*)[\s]+|[\s]*(?<daddr>.*))$" }
			id => "msgParserId168"
			add_field => {
				"action" => "First DNS Server set"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId169
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Second DNS server {set to | changed from} {<change_old> to <change_new> | <daddr>}
	else if [logstash][msgparser][id] == "msgParserId169" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+Second[\s]+DNS[\s]+server[\s]+(set[\s]+to[\s]+|[\s]*changed[\s]+from)[\s]+((?<change_old>[^\s]*)[\s]+to[\s]+(?<change_new>[^\s]*)[\s]+|[\s]*(?<daddr>.*))$" }
			id => "msgParserId169"
			add_field => {
				"action" => "Second DNS Server set"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId170
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Default DNS Search domain {set to | changed from} {<change_old> to <change_new> | <domain>}
	else if [logstash][msgparser][id] == "msgParserId170" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+Default[\s]+DNS[\s]+Search[\s]+domain[\s]+(set[\s]+to[\s]+|[\s]*changed[\s]+from)[\s]+((?<change_old>[^\s]*)[\s]+to[\s]+(?<change_new>[^\s]*)[\s]+|[\s]*(?<domain>.*))$" }
			id => "msgParserId170"
			add_field => {
				"action" => "Default DNS Search domain"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId171
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - WINS server set to <daddr>.
	else if [logstash][msgparser][id] == "msgParserId171" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - WINS server set to %{daddr}." }
			id => "msgParserId171"
			add_field => {
				"action" => "WINS server set"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId172
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Starting system software version <version>
	else if [logstash][msgparser][id] == "msgParserId172" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Starting system software version %{version}" }
			id => "msgParserId172"
			add_field => {
				"action" => "Starting system software"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId173
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - External port disabled, <result>.
	else if [logstash][msgparser][id] == "msgParserId173" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - External port disabled, %{result}." }
			id => "msgParserId173"
			add_field => {
				"action" => "External licence missing"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId174
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Created statistics file.
	else if [logstash][msgparser][id] == "msgParserId174" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Created statistics file." }
			id => "msgParserId174"
			add_field => {
				"action" => "Created statistics file"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId175
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - SSL connection dropped because client at source IP '<daddr>' negotiated a cipher with strength less than the configured '128-bit' cipher strength while connecting to '<fld10>'
	else if [logstash][msgparser][id] == "msgParserId175" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - SSL connection dropped because client at source IP '%{daddr}' negotiated a cipher with strength less than the configured '128-bit' cipher strength while connecting to '%{fld10}'" }
			id => "msgParserId175"
			add_field => {
				"action" => "SSL connection dropped"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId176
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - User is signing in, installing or updating <fld9>
	else if [logstash][msgparser][id] == "msgParserId176" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - User is signing in, installing or updating %{fld9}" }
			id => "msgParserId176"
			add_field => {
				"action" => "VIPs activated on node"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId179
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Connected to <fld9>:<fld11> port <fld10>
	else if [logstash][msgparser][id] == "msgParserId179" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Connected to %{fld9}:%{fld11} port %{fld10}" }
			id => "msgParserId179"
			add_field => {
				"action" => "Connected to source"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId155
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Password realm restrictions failed for <fld9>
	else if [logstash][msgparser][id] == "msgParserId155" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Password realm restrictions failed for %{fld9}" }
			id => "msgParserId155"
			add_field => {
				"action" => "Password restrictions failed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId180
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - IVS Root: Set <info> to '<fld9>'
	else if [logstash][msgparser][id] == "msgParserId180" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - IVS Root: Set %{info} to '%{fld9}'" }
			id => "msgParserId180"
			add_field => {
				"action" => "Set name to policy"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId181
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <change_attribute> in Role '<group>' is modified from [<change_old>] to [<change_new>]
	else if [logstash][msgparser][id] == "msgParserId181" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{change_attribute} in Role '%{group}' is modified from [%{change_old}] to [%{change_new}]" }
			id => "msgParserId181"
			add_field => {
				"action" => "Session max timeout"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId182
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Service '<service>' removed
	else if [logstash][msgparser][id] == "msgParserId182" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Service '%{service}' removed" }
			id => "msgParserId182"
			add_field => {
				"action" => "Service removed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId183
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - IP address {set to | changed from} {<change_old> to <change_new> | <hostip>}.
	else if [logstash][msgparser][id] == "msgParserId183" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+IP[\s]+address[\s]+(set[\s]+to[\s]+|[\s]*changed[\s]+from)[\s]+((?<change_old>[^\s]*)[\s]+to[\s]+(?<change_new>[^\s]*)[\s]+|[\s]*(?<hostip>[^\.]*))\.$" }
			id => "msgParserId183"
			add_field => {
				"action" => "IP address set"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId184
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - {Action in Policy | Resources in Policy} '<change_attribute>' is modified from [<change_old>] to [<change_new>]
	else if [logstash][msgparser][id] == "msgParserId184" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+(Action[\s]+in[\s]+Policy[\s]+|[\s]*Resources[\s]+in[\s]+Policy)[\s]+'(?<change_attribute>[^']*)'[\s]+is[\s]+modified[\s]+from[\s]+\[(?<change_old>[^\]]*)\][\s]+to[\s]+\[(?<change_new>[^\]]*)\]$" }
			id => "msgParserId184"
			add_field => {
				"action" => "Action policy change"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId185
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Netmask {set to | changed from} {<change_old> to <change_new> | <mask>}.
	else if [logstash][msgparser][id] == "msgParserId185" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+Netmask[\s]+(set[\s]+to[\s]+|[\s]*changed[\s]+from)[\s]+((?<change_old>[^\s]*)[\s]+to[\s]+(?<change_new>[^\s]*)[\s]+|[\s]*(?<mask>[^\.]*))\.$" }
			id => "msgParserId185"
			add_field => {
				"action" => "Netmask set"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId186
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Link speed on internal port set to <fld9>.
	else if [logstash][msgparser][id] == "msgParserId186" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Link speed on internal port set to %{fld9}." }
			id => "msgParserId186"
			add_field => {
				"action" => "Link speed set"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId187
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - MTU on internal port set to <fld9>.
	else if [logstash][msgparser][id] == "msgParserId187" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - MTU on internal port set to %{fld9}." }
			id => "msgParserId187"
			add_field => {
				"action" => "MTU on internal port set"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId189
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - RADIUS Vendor "<change_attribute>" changed from '<change_old>' to '<change_new>'
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - RADIUS Vendor \"%{change_attribute}\" changed from '%{change_old}' to '%{change_new}'" }
			id => "msgParserId189"
			add_field => {
				"action" => "RADIUS Vendor Setting changed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId190
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Device Certificate "<fqdn>": Setting "<change_attribute>" changed from '<change_old>' to '<<<fld9>>'
	else if [logstash][msgparser][id] == "msgParserId190" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Device Certificate \"%{fqdn}\": Setting \"%{change_attribute}\" changed from '%{change_old}' to '<%{fld9}>'" }
			id => "msgParserId190"
			add_field => {
				"action" => "Device Certificate changed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId191
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Extra Action in Policy '<policyname>' is modified to [<info>]
	else if [logstash][msgparser][id] == "msgParserId191" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Extra Action in Policy '%{policyname}' is modified to [%{info}]" }
			id => "msgParserId191"
			add_field => {
				"action" => "Extra Action in Policy"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId192
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Webserver Distinguished Name (DN) changed to '<fqdn>'.
	else if [logstash][msgparser][id] == "msgParserId192" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Webserver Distinguished Name (DN) changed to '%{fqdn}'." }
			id => "msgParserId192"
			add_field => {
				"action" => "Webserver name changed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId193
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <fld9> Users logged out from IP (<fld10>) because user started new session from IP (<fld11>).
	else if [logstash][msgparser][id] == "msgParserId193" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{fld9} Users logged out from IP (%{fld10}) because user started new session from IP (%{fld11})." }
			id => "msgParserId193"
			add_field => {
				"action" => "Users logged out"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId194
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Downloaded system software package.
	else if [logstash][msgparser][id] == "msgParserId194" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Downloaded system software package." }
			id => "msgParserId194"
			add_field => {
				"action" => "Downloaded system software package"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId195
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Imported snapshot successful by <fld9>
	else if [logstash][msgparser][id] == "msgParserId195" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Imported snapshot successful by %{fld9}" }
			id => "msgParserId195"
			add_field => {
				"action" => "Imported snapshot successful"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId196
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Imported <fld9> configuration.
	else if [logstash][msgparser][id] == "msgParserId196" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Imported %{fld9} configuration." }
			id => "msgParserId196"
			add_field => {
				"action" => "Imported system configuration"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId197
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - store key failed for key <fld9> {url_meeting created 1 | value  created | value <fld10> created <fld11>}
	else if [logstash][msgparser][id] == "msgParserId197" {
		grok {
			match => { "message" => "^(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<hostname>[^\s]*)[\s]+\-[\s]+\[(?<saddr>[^\]]*)\][\s]+(?<username>[^\(]*)\((?<realm>[^\)]*)\)\[(?<fld6>[^\]]*)\][\s]+\-[\s]+store[\s]+key[\s]+failed[\s]+for[\s]+key[\s]+(?<fld9>[^\s]*)[\s]+(url_meeting[\s]+created[\s]+1[\s]+|[\s]*value[\s]+created[\s]+|[\s]*value[\s]+(?<fld10>[^\s]*)[\s]+created[\s]+(?<fld11>.*))$" }
			id => "msgParserId197"
			add_field => {
				"action" => "Store key failed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId198
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <change_attribute> changed to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId198" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{change_attribute} changed to %{change_new}." }
			id => "msgParserId198"
			add_field => {
				"action" => "TimeZone adjusted"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId199
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Time adjusted by <fld9> seconds.
	else if [logstash][msgparser][id] == "msgParserId199" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Time adjusted by %{fld9} seconds." }
			id => "msgParserId199"
			add_field => {
				"action" => "Time adjusted"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId200
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Password realm restrictions failed for <fld9> Users
	else if [logstash][msgparser][id] == "msgParserId200" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Password realm restrictions failed for %{fld9} Users" }
			id => "msgParserId200"
			add_field => {
				"action" => "Password realm restrictions failed "
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId201
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Allowed <change_attribute> changed from '<change_old>' to '<change_new>'
	else if [logstash][msgparser][id] == "msgParserId201" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Allowed %{change_attribute} changed from '%{change_old}' to '%{change_new}'" }
			id => "msgParserId201"
			add_field => {
				"action" => "Changed Allowed SSL and TLS "
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId202
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Changed Allowed <change_attribute> from '<change_old>' to '<change_new>'
	else if [logstash][msgparser][id] == "msgParserId202" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Changed Allowed %{change_attribute} from '%{change_old}' to '%{change_new}'" }
			id => "msgParserId202"
			add_field => {
				"action" => "Changed Allowed Encryption"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId203
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Successfully exported configuration in XML to file '<filename>'.
	else if [logstash][msgparser][id] == "msgParserId203" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Successfully exported configuration in XML to file '%{filename}'." }
			id => "msgParserId203"
			add_field => {
				"action" => "Successfully exported configuration"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId204
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <change_attribute> interval changed from <change_old> to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId204" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{change_attribute} interval changed from %{change_old} to %{change_new}." }
			id => "msgParserId204"
			add_field => {
				"action" => "Host checker interval changed"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId205
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - <change_attribute> timeout changed from <change_old> to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId205" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - %{change_attribute} timeout changed from %{change_old} to %{change_new}." }
			id => "msgParserId205"
			add_field => {
				"action" => "Host checker login inactivity"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId206
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Host Checker policy '<policyname>' created.
	else if [logstash][msgparser][id] == "msgParserId206" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Host Checker policy '%{policyname}' created." }
			id => "msgParserId206"
			add_field => {
				"action" => "Host checker policy created"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId207
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Host Checker predefined Antivirus check '<info>' added for policy '<policyname>'.
	else if [logstash][msgparser][id] == "msgParserId207" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Host Checker predefined Antivirus check '%{info}' added for policy '%{policyname}'." }
			id => "msgParserId207"
			add_field => {
				"action" => "Host Checker predefined Antivirus check"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId208
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Updated the sign-in page '<fld9>'
	else if [logstash][msgparser][id] == "msgParserId208" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Updated the sign-in page '%{fld9}'" }
			id => "msgParserId208"
			add_field => {
				"action" => "Updated the sign-in page"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId209
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Modified session import policy '<policyname>'
	else if [logstash][msgparser][id] == "msgParserId209" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Modified session import policy '%{policyname}'" }
			id => "msgParserId209"
			add_field => {
				"action" => "Modified session import policy"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId210
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Policy '<policyname>' is duplicated from '<change_old>'
	else if [logstash][msgparser][id] == "msgParserId210" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Policy '%{policyname}' is duplicated from '%{change_old}'" }
			id => "msgParserId210"
			add_field => {
				"action" => "Policy is duplicated"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}
	# PARSER msgParserId211
	# line in RSA: <fld3> <fld4> - <hostname> - [<saddr>] <username>(<realm>)[<fld6>] - Policy '<policyname>' is deleted
	else if [logstash][msgparser][id] == "msgParserId211" {
		dissect {
			mapping => { "message" => "%{fld3} %{fld4} - %{hostname} - [%{saddr}] %{username}(%{realm})[%{fld6}] - Policy '%{policyname}' is deleted" }
			id => "msgParserId211"
			add_field => {
				"action" => "Policy is deleted"
				"[logstash][fullDateTimeString]" => "%{fld3} %{fld4}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_junipericmsg.json"
#			template_name => "juniperic_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
