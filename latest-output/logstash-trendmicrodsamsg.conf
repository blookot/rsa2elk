# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "trendmicrodsa"
			"[observer][name]" => "Trend Micro Deep Security Agent"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth> <hdate> <htime> <hhostname> CEF:0|Trend Micro|Deep Security Agent|<hversion>|<messageid>|<hevent_description>|<hseverity>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{htime} %{hhostname} CEF:0|Trend Micro|Deep Security Agent|%{hversion}|%{messageid}|%{hevent_description}|%{hseverity}|%{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hdate> <htime> <hhostname> CEF:0|Trend Micro|<product>|<hversion>|<id>|<hevent_description>|<hseverity>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{htime} %{hhostname} CEF:0|Trend Micro|%{product}|%{hversion}|%{id}|%{hevent_description}|%{hseverity}|%{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "trendmicrodsa_TVM"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-trendmicrodsamsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname}" }
			id => "msgParserId0"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<fld7> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> shost=<shost> dvchost=<hostname> TrendMicroDsTags=<fld19> Id\=<fld20> Status\=<fld21> TrendMicroDsTenant=<fld22> TrendMicroDsTenantId=<fld23> "http://go.microsoft.com/fwlink/?LinkID\=<fld24> Version\=<version> Culture\=<fld25> PublicKeyToken\=<fld26>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{fld7} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} shost=%{shost} dvchost=%{hostname} TrendMicroDsTags=%{fld19} Id\=%{fld20} Status\=%{fld21} TrendMicroDsTenant=%{fld22} TrendMicroDsTenantId=%{fld23} \"http://go.microsoft.com/fwlink/?LinkID\=%{fld24} Version\=%{version} Culture\=%{fld25} PublicKeyToken\=%{fld26}" }
			id => "msgParserId1"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<fld7> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> shost=<shost> dvchost=<hostname> TrendMicroDsTags=<fld19> TrendMicroDsTenant=<fld23> TrendMicroDsTenantId=<fld24>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{fld7} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} shost=%{shost} dvchost=%{hostname} TrendMicroDsTags=%{fld19} TrendMicroDsTenant=%{fld23} TrendMicroDsTenantId=%{fld24}" }
			id => "msgParserId2"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<fld7> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> shost=<shost> dvchost=<hostname> TrendMicroDsTags=<fld19>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{fld7} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} shost=%{shost} dvchost=%{hostname} TrendMicroDsTags=%{fld19}" }
			id => "msgParserId3"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvc=<hostip> dvchost=<shost>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvc=%{hostip} dvchost=%{shost}" }
			id => "msgParserId4"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId5
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvc=<hostip> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>  dvchost=<shost> TrendMicroDsTags=<fld2>
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvc=%{hostip} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}  dvchost=%{shost} TrendMicroDsTags=%{fld2}" }
			id => "msgParserId5"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId6
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvc=<hostip> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvc=%{hostip} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}" }
			id => "msgParserId6"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvc=<hostip> dvchost=<shost> TrendMicroDsTenant=<fld22> TrendMicroDsTenantId=<fld23>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvc=%{hostip} dvchost=%{shost} TrendMicroDsTenant=%{fld22} TrendMicroDsTenantId=%{fld23}" }
			id => "msgParserId7"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvchost=<shost>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvchost=%{shost}" }
			id => "msgParserId8"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId9
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvc=<hostip>
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvc=%{hostip}" }
			id => "msgParserId9"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvc=<hostip> dvchost=<shost> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvc=%{hostip} dvchost=%{shost} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}" }
			id => "msgParserId10"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvc=<hostip> dvchost=<shost>
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvc=%{hostip} dvchost=%{shost}" }
			id => "msgParserId11"
			add_field => {
				"event_description" => "%{hevent_description}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: cn1=<hostid> cn1Label=<fld1> dvchost=<shost> cs3=<fld1> cs3Label=<fld2> act=<action> msg=<info> cs4=<fld3> cs4Label=<fld4> cs5=<fld5> cs5Label=<fld6>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "cn1=%{hostid} cn1Label=%{fld1} dvchost=%{shost} cs3=%{fld1} cs3Label=%{fld2} act=%{action} msg=%{info} cs4=%{fld3} cs4Label=%{fld4} cs5=%{fld5} cs5Label=%{fld6}" }
			id => "msgParserId12"
			add_field => {
				"event_description" => "%{hevent_description}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: cn1=<hostid> cn1Label=<fld1> dvchost=<shost> cs3=<fld1> cs3Label=<fld2> cs4=<fld3> cs4Label=<fld4> cs5=<fld5> cs5Label=<fld6> act=<action> msg=<info>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "cn1=%{hostid} cn1Label=%{fld1} dvchost=%{shost} cs3=%{fld1} cs3Label=%{fld2} cs4=%{fld3} cs4Label=%{fld4} cs5=%{fld5} cs5Label=%{fld6} act=%{action} msg=%{info}" }
			id => "msgParserId13"
			add_field => {
				"event_description" => "%{hevent_description}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld16> TrendMicroDsPacketData=<fld17> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvchost=<shost> TrendMicroDsTags=<fld20> Id\=<fld21> Status\=<fld22> TrendMicroDsTenant=<fld23> TrendMicroDsTenantId=<fld24> "http://go.microsoft.com/fwlink/?LinkID\=<fld25> Version\=<version> Culture\=<fld26> PublicKeyToken\=<fld27>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld16} TrendMicroDsPacketData=%{fld17} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvchost=%{shost} TrendMicroDsTags=%{fld20} Id\=%{fld21} Status\=%{fld22} TrendMicroDsTenant=%{fld23} TrendMicroDsTenantId=%{fld24} \"http://go.microsoft.com/fwlink/?LinkID\=%{fld25} Version\=%{version} Culture\=%{fld26} PublicKeyToken\=%{fld27}" }
			id => "msgParserId14"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld16> TrendMicroDsPacketData=<fld17> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<username> fname=<obj_name> target=<hostname> dvchost=<hostname> shost=<shost> TrendMicroDsTags=<fld20> Id\=<fld21> Status\=<fld22> TrendMicroDsTenant=<fld23> TrendMicroDsTenantId=<fld24> "http://go.microsoft.com/fwlink/?LinkID\=<fld25> Version\=<version> Culture\=<fld26> PublicKeyToken\=<fld27>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld16} TrendMicroDsPacketData=%{fld17} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{username} fname=%{obj_name} target=%{hostname} dvchost=%{hostname} shost=%{shost} TrendMicroDsTags=%{fld20} Id\=%{fld21} Status\=%{fld22} TrendMicroDsTenant=%{fld23} TrendMicroDsTenantId=%{fld24} \"http://go.microsoft.com/fwlink/?LinkID\=%{fld25} Version\=%{version} Culture\=%{fld26} PublicKeyToken\=%{fld27}" }
			id => "msgParserId15"
			add_field => {
				"vid" => "%{id}"
				"event_description" => "%{hevent_description}"
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[msg_id]"
		destination => "[event_cat]"
		dictionary => {
			"1006298" => "1605000000"
			"200" => "1605000000"
			"1008643" => "1002020000"
		}
		fallback => "1901000000"
		override => true
	}
}
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1605000000" => "System.Normal Conditions"
			"1002020000" => "Attacks.Denial of Service.Generic attacks"
		}
		fallback => "Other.Default"
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-trendmicrodsamsg.json"
#			template_name => "trendmicrodsa_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
