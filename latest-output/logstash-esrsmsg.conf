# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "esrs"
			"[observer][name]" => "EMC Secure Remote Support"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hfld1> <hfld2>,<hfld3>: EMC Policy Manager Audit: <hfld4> <hfld5> <hfld6> <hfld7> <hfld8> <hfld9>, <hfld10>, <hfld11>, <messageid> <!payload:hfld4>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^,]*),(?<hfld3>[^:]*):[\s]+EMC[\s]+Policy[\s]+Manager[\s]+Audit:[\s]+(?<message>(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+(?<hfld9>[^,]*),[\s]+(?<hfld10>[^,]*),[\s]+(?<hfld11>[^,]*),[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-esrsmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "User" {
		# MESSAGE User_Logged_In
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, User Logged In
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, User Logged In" }
				id => "message-User_Logged_In"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "User_Logged_In"
					"[rsa][message][id1]" => "User_Logged_In"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE User_Logged_out
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, User Logged out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, User Logged out" }
				id => "message-User_Logged_out"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "User_Logged_out"
					"[rsa][message][id1]" => "User_Logged_out"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE User_Created
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, User Created: <fld58>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, User Created: %{fld58}" }
				id => "message-User_Created"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "User_Created"
					"[rsa][message][id1]" => "User_Created"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE User_Updated
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, User Updated: <fld58>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, User Updated: %{fld58}" }
				id => "message-User_Updated"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "User_Updated"
					"[rsa][message][id1]" => "User_Updated"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE User_Deleted
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, User Deleted: <fld58>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, User Deleted: %{fld58}" }
				id => "message-User_Deleted"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "User_Deleted"
					"[rsa][message][id1]" => "User_Deleted"
					"[event][categoryid]" => "1402020100"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Remote" {
		# MESSAGE Remote_Session_Started
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Remote Session <sessionid> started on device <fld55> with model <fld21> by remote user <c_username> from enterprise <fld22> at <fld15> <fld16> <fld17> <fld18> <fld19> <fld20>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Remote Session %{sessionid} started on device %{fld55} with model %{fld21} by remote user %{c_username} from enterprise %{fld22} at %{fld15} %{fld16} %{fld17} %{fld18} %{fld19} %{fld20}" }
				id => "message-Remote_Session_Started"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Start"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
					"[event][id]" => "Remote_Session_Started"
					"[rsa][message][id1]" => "Remote_Session_Started"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Remote_Session_Status_Change_Started
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Remote Session <sessionid> status changed to Session Started at <fld15> <fld16> <fld17> <fld18> <fld19> <fld20>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Remote Session %{sessionid} status changed to Session Started at %{fld15} %{fld16} %{fld17} %{fld18} %{fld19} %{fld20}" }
				id => "message-Remote_Session_Status_Change_Started"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Start"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
					"[event][id]" => "Remote_Session_Status_Change_Started"
					"[rsa][message][id1]" => "Remote_Session_Status_Change_Started"
					"[event][categoryid]" => "1204010000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Remote_Session_Terminated
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Remote Session <sessionid> terminated at <fld15> <fld16> <fld17> <fld18> <fld19> <fld20>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Remote Session %{sessionid} terminated at %{fld15} %{fld16} %{fld17} %{fld18} %{fld19} %{fld20}" }
				id => "message-Remote_Session_Terminated"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Stop"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
					"[event][id]" => "Remote_Session_Terminated"
					"[rsa][message][id1]" => "Remote_Session_Terminated"
					"[event][categoryid]" => "1204020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Remote_Session_Status_Change_End
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Remote Session <sessionid> status changed to Session Ended at <fld15> <fld16> <fld17> <fld18> <fld19> <fld20>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Remote Session %{sessionid} status changed to Session Ended at %{fld15} %{fld16} %{fld17} %{fld18} %{fld19} %{fld20}" }
				id => "message-Remote_Session_Status_Change_End"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Stop"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
					"[event][id]" => "Remote_Session_Status_Change_End"
					"[rsa][message][id1]" => "Remote_Session_Status_Change_End"
					"[event][categoryid]" => "1204020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Remote_Session_Status_Denied
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Remote Session <sessionid> status changed to Session Denied at <fld15>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Remote Session %{sessionid} status changed to Session Denied at %{fld15}" }
				id => "message-Remote_Session_Status_Denied"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
					"[event][id]" => "Remote_Session_Status_Denied"
					"[rsa][message][id1]" => "Remote_Session_Status_Denied"
					"[event][categoryid]" => "1204020000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Device <fld55> successfully processed Action: <action>: <info> Permission: <policyname>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Device %{fld55} successfully processed Action: %{action}: %{info} Permission: %{policyname}" }
			id => "msgParserId7"
			add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Execute"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId8
	# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Processed request for device <fld55> to accept pending action: Action: <action>; Permission: <policyname>; Parameters [Notes = <fld23>, Remote Application Name = <process>, Remote Session id = <sessionid>]
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Processed request for device %{fld55} to accept pending action: Action: %{action}; Permission: %{policyname}; Parameters [Notes = %{fld23}, Remote Application Name = %{process}, Remote Session id = %{sessionid}]" }
			id => "msgParserId8"
			add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Permit"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Pending action for device <fld55> timedout. Action: Action: <action>; Permission: <policyname>; Parameters [Notes = <fld24>, Remote Application Name = <process>, Remote Session id = <sessionid>]
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Pending action for device %{fld55} timedout. Action: Action: %{action}; Permission: %{policyname}; Parameters [Notes = %{fld24}, Remote Application Name = %{process}, Remote Session id = %{sessionid}]" }
			id => "msgParserId9"
			add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Request"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Unknown"
				"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId10
	# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Set the right override for group <fld55> to right=(<fld29>)
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Set the right override for group %{fld55} to right=(%{fld29})" }
			id => "msgParserId10"
			add_field => {
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Modified" {
		# MESSAGE Modified_Policy
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Modified policy: [<policyname>: <info>]]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Modified policy: [%{policyname}: %{info}]]" }
				id => "message-Modified_Policy"
				add_field => {
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
					"[event][id]" => "Modified_Policy"
					"[rsa][message][id1]" => "Modified_Policy"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Modified_Group
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Modified group <fld55>.  group(name=<fld59>, description=<fld33>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Modified group %{fld55}.  group(name=%{fld59}, description=%{fld33})" }
				id => "message-Modified_Group"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
					"[event][id]" => "Modified_Group"
					"[rsa][message][id1]" => "Modified_Group"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Modified_Action
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Modified action: name=(<action>), description=(<fld41>), pending timeout=(<fld42>), permission[name=<info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Modified action: name=(%{action}), description=(%{fld41}), pending timeout=(%{fld42}), permission[name=%{info}]" }
				id => "message-Modified_Action"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
					"[event][id]" => "Modified_Action"
					"[rsa][message][id1]" => "Modified_Action"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Modified_Permission
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Modified permission: , permission[name=(<policyname>), description=(<fld44>), right=(<fld45>), parameters=(<info>), group=(group(name=<fld55>, description=<fld48>))]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Modified permission: , permission[name=(%{policyname}), description=(%{fld44}), right=(%{fld45}), parameters=(%{info}), group=(group(name=%{fld55}, description=%{fld48}))]" }
				id => "message-Modified_Permission"
				add_field => {
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
					"[event][id]" => "Modified_Permission"
					"[rsa][message][id1]" => "Modified_Permission"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Role" {
		# MESSAGE Role_Created
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Role Created: <fld39>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Role Created: %{fld39}" }
				id => "message-Role_Created"
				add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "Role_Created"
					"[rsa][message][id1]" => "Role_Created"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Role_Updated
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Role Updated: <fld39>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Role Updated: %{fld39}" }
				id => "message-Role_Updated"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "Role_Updated"
					"[rsa][message][id1]" => "Role_Updated"
					"[event][categoryid]" => "1502050000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Role_Deleted
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Role Deleted: <fld39>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Role Deleted: %{fld39}" }
				id => "message-Role_Deleted"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "Role_Deleted"
					"[rsa][message][id1]" => "Role_Deleted"
					"[event][categoryid]" => "1502040000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Profile" {
		# MESSAGE Profile_Created
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Profile Created: <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Profile Created: %{fld40}" }
				id => "message-Profile_Created"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "Profile_Created"
					"[rsa][message][id1]" => "Profile_Created"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Profile_Updated
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Profile Updated: <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Profile Updated: %{fld40}" }
				id => "message-Profile_Updated"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "Profile_Updated"
					"[rsa][message][id1]" => "Profile_Updated"
					"[event][categoryid]" => "1502050000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Profile_Deleted
		# line in RSA:  <fld4> <fld5> <fld6> <fld7> <timezone> <fld9>, <group>, <username>, Profile Deleted: <fld40>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld4} %{fld5} %{fld6} %{fld7} %{timezone} %{fld9}, %{group}, %{username}, Profile Deleted: %{fld40}" }
				id => "message-Profile_Deleted"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
					"[event][id]" => "Profile_Deleted"
					"[rsa][message][id1]" => "Profile_Deleted"
					"[event][categoryid]" => "1502040000"
					"[logstash][fullDateTimeString]" => "%{fld5} %{fld6} %{fld7} %{fld9}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-esrsmsg.json"
#			template_name => "esrs_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
