# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "celerra"
			"[observer][name]" => "EMC Celerra"
			"[observer][type]" => "Storage"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %CELERRA <month> <day> <time> <year> <msgIdPart1>:<facility>:<msgIdPart2> <!payload:msgIdPart1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%CELERRA[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<year>[^\s]*)[\s]+(?<message>(?<msgIdPart1>[^:]*):(?<facility>[^:]*):(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %CELERRA-<hlevel>-<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%CELERRA-%{hlevel}-%{messageid}: %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_celerramsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <event_source>:<severity>:<id> Battery backup enabled 
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Battery backup enabled" }
			id => "msgParserId0"
			add_field => {
				"event_description" => "Battery backup enabled"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA: <event_source>:<severity>:<id> EPO unit <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} EPO unit %{device} has been detected" }
			id => "msgParserId1"
			add_field => {
				"event_description" => "EPO unit has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA: <event_source>:<severity>:<id> Battery box <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Battery box %{device} has been detected" }
			id => "msgParserId2"
			add_field => {
				"event_description" => "Battery box has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: <event_source>:<severity>:<id> Power Supply unit <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Power Supply unit %{device} has been detected" }
			id => "msgParserId3"
			add_field => {
				"event_description" => "Power Supply has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: <event_source>:<severity>:<id> Charger <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Charger %{device} has been detected" }
			id => "msgParserId4"
			add_field => {
				"event_description" => "Charger has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: <event_source>:<severity>:<id> Commbd <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Commbd %{device} has been detected" }
			id => "msgParserId5"
			add_field => {
				"event_description" => "Commbd has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId6
	# line in RSA: <event_source>:<severity>:<id> Slot <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId6" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} has been detected" }
			id => "msgParserId6"
			add_field => {
				"event_description" => "Slot has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId7
	# line in RSA: <event_source>:<severity>:<id> Backplane unit <device> detected on Commbd <fld1> 
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Backplane unit %{device} detected on Commbd %{fld1}" }
			id => "msgParserId7"
			add_field => {
				"event_description" => "Backplane unit detected on Commbd"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "BoxMonitor_41" {
		# MESSAGE BoxMonitor_41
		# line in RSA: <event_source>:<severity>:<id> Slot <device> Power off requested 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} Power off requested" }
				id => "message-BoxMonitor_41"
				add_field => {
				"event_description" => "Slot Power off requested"
					"[event][id]" => "BoxMonitor_41"
					"[rsa][message][id1]" => "BoxMonitor_41"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE BoxMonitor_41:01
		# line in RSA: <event_source>:<severity>:<id> Slot <device> Online requested 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} Online requested" }
				id => "message-BoxMonitor_41:01"
				add_field => {
				"event_description" => "Slot Online requested"
					"[event][id]" => "BoxMonitor_41:01"
					"[rsa][message][id1]" => "BoxMonitor_41:01"
					"[event][categoryid]" => "1610000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "BoxMonitor_45" {
		# MESSAGE BoxMonitor_45
		# line in RSA: <event_source>:<severity>:<id> Slot <device> has rebooted. (<fld2>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} has rebooted. (%{fld2})" }
				id => "message-BoxMonitor_45"
				add_field => {
				"event_description" => "Slot has rebooted"
					"[event][id]" => "BoxMonitor_45"
					"[rsa][message][id1]" => "BoxMonitor_45"
					"[event][categoryid]" => "1606000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE BoxMonitor_45:01
		# line in RSA: <event_source>:<severity>:<id> Slot <device> has rebooted with (<fld2>) attempts 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} has rebooted with (%{fld2}) attempts" }
				id => "message-BoxMonitor_45:01"
				add_field => {
				"event_description" => "Slot has rebooted"
					"[event][id]" => "BoxMonitor_45:01"
					"[rsa][message][id1]" => "BoxMonitor_45:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: <event_source>:<severity>:<id> Version <version>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Version %{version}" }
			id => "msgParserId12"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId13
	# line in RSA: <event_source>:<severity>:<id> Sense cable <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Sense cable %{device} has been detected" }
			id => "msgParserId13"
			add_field => {
				"event_description" => "Sense cable has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA: <event_source>:<severity>:<id> Terminator <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Terminator %{device} has been detected" }
			id => "msgParserId14"
			add_field => {
				"event_description" => "Terminator has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA: <event_source>:<severity>:<id> B Bus Terminator <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} B Bus Terminator %{device} has been detected" }
			id => "msgParserId15"
			add_field => {
				"event_description" => "B Bus Terminator has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA: <event_source>:<severity>:<id> CD rom <device> has been detected 
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} CD rom %{device} has been detected" }
			id => "msgParserId16"
			add_field => {
				"event_description" => "CD rom has been detected"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId17
	# line in RSA: <event_source>:<severity>:<id> Slot <device> parameter <fld1> set to <fld2> 
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} parameter %{fld1} set to %{fld2}" }
			id => "msgParserId17"
			add_field => {
				"event_description" => "Slot parameter set"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId18
	# line in RSA: <event_source>:<severity>:<id> Slot <device> thermal failure [<fld1> to <fld2>] 
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} thermal failure [%{fld1} to %{fld2}]" }
			id => "msgParserId18"
			add_field => {
				"event_description" => "Slot thermal failure"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA: <event_source>:<severity>:<id> Slot <device> reason code of <resultcode> is stale 
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} reason code of %{resultcode} is stale" }
			id => "msgParserId19"
			add_field => {
				"event_description" => "Slot reason code is stale"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId20
	# line in RSA: <event_source>:<severity>:<id> Slot <device> has panicked 
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} has panicked" }
			id => "msgParserId20"
			add_field => {
				"event_description" => "Slot has panicked"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "BoxMonitor_526" {
		# MESSAGE BoxMonitor_526
		# line in RSA: <event_source>:<severity>:<id> Enclosure <fld1> failed to respond to \"ping\" at management switch B. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Enclosure %{fld1} failed to respond to \\"ping\\" at management switch B." }
				id => "message-BoxMonitor_526"
				add_field => {
				"event_description" => "Enclosure failed to respond"
					"[event][id]" => "BoxMonitor_526"
					"[rsa][message][id1]" => "BoxMonitor_526"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE BoxMonitor_526:01
		# line in RSA: <event_source>:<severity>:<id> enclosure <fld1> failed to respond to ping at management switch A 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} enclosure %{fld1} failed to respond to ping at management switch A" }
				id => "message-BoxMonitor_526:01"
				add_field => {
				"event_description" => "enclosure failed to respond"
					"[event][id]" => "BoxMonitor_526:01"
					"[rsa][message][id1]" => "BoxMonitor_526:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE BoxMonitor_526:02
		# line in RSA: <event_source>:<severity>:<id> Enclosure <fld1> failed to respond to \"ping\" at management switch <fld2>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Enclosure %{fld1} failed to respond to \\"ping\\" at management switch %{fld2}." }
				id => "message-BoxMonitor_526:02"
				add_field => {
				"event_description" => "Enclosure failed to respond"
					"[event][id]" => "BoxMonitor_526:02"
					"[rsa][message][id1]" => "BoxMonitor_526:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA: <event_source>:<severity>:<id> enclosure <fld1> management switch <fld2> port <dport> is up 
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} enclosure %{fld1} management switch %{fld2} port %{dport} is up" }
			id => "msgParserId24"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId25
	# line in RSA: <event_source>:<severity>:<id> enclosure <fld1> management switch <fld2> port <dport> is down 
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} enclosure %{fld1} management switch %{fld2} port %{dport} is down" }
			id => "msgParserId25"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId26
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22> last message repeated <fld1> time 
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22} last message repeated %{fld1} time" }
			id => "msgParserId26"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId27
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  { I/O Error | Warning | WARNING }: <result> 
	else if [logstash][msgparser][id] == "msgParserId27" {
		grok {
			match => { "message" => "^(?<event_source>[^:]*):(?<severity>[^:]*):(?<id>[^\s]*)[\s]+Slot[\s]+(?<device>[^:]*):[\s]+(?<fld22>[^:]*):[\s]+([\s]*I/O[\s]+Error[\s]+|[\s]*Warning[\s]+|[\s]*WARNING[\s]+):[\s]+(?<result>[^\s]*)[\s]+$" }
			id => "msgParserId27"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId28
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: <space>filesystem size threshold (<trigger_val>) crossed (<directory>) 
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: %{space}filesystem size threshold (%{trigger_val}) crossed (%{directory})" }
			id => "msgParserId28"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId29
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: <space>filesystem size threshold (<trigger_val>) dropped below (<directory>) 
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: %{space}filesystem size threshold (%{trigger_val}) dropped below (%{directory})" }
			id => "msgParserId29"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId30
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  FsId: <fld1> MaxSize: <fld2> HWM: <trigger_val> reached. 
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  FsId: %{fld1} MaxSize: %{fld2} HWM: %{trigger_val} reached." }
			id => "msgParserId30"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId31
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: The file system size (<directory>) dropped below the threshold of (<trigger_val>) 
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: The file system size (%{directory}) dropped below the threshold of (%{trigger_val})" }
			id => "msgParserId31"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId32
	# line in RSA: <event_source>:<severity>:<id> fs auto extension failed: <result> (Slot <device>: <fld22>:) 
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} fs auto extension failed: %{result} (Slot %{device}: %{fld22}:)" }
			id => "msgParserId32"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "CFS_102" {
		# MESSAGE CFS_102
		# line in RSA: <event_source>:<severity>:<id> fs auto extension end: [<directory>] fs_size:<fld1> max_size:<fld2> (Slot <device>: <fld22>:) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} fs auto extension end: [%{directory}] fs_size:%{fld1} max_size:%{fld2} (Slot %{device}: %{fld22}:)" }
				id => "message-CFS_102"
				add_field => {
					"[event][id]" => "CFS_102"
					"[rsa][message][id1]" => "CFS_102"
					"[event][categoryid]" => "1601010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE CFS_102:01
		# line in RSA: <event_source>:<severity>:<id> fs auto extension start: [<directory>] max_size:<fld1> hwm:<fld2> (Slot <device>: <fld22>:) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} fs auto extension start: [%{directory}] max_size:%{fld1} hwm:%{fld2} (Slot %{device}: %{fld22}:)" }
				id => "message-CFS_102:01"
				add_field => {
					"[event][id]" => "CFS_102:01"
					"[rsa][message][id1]" => "CFS_102:01"
					"[event][categoryid]" => "1601010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: <event_source>:<severity>:<id> fs auto extension: <directory> (size:<fld1>) has reached its max_size:<fld2> and cannot be extended (Slot <device>: <fld22>:) 
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} fs auto extension: %{directory} (size:%{fld1}) has reached its max_size:%{fld2} and cannot be extended (Slot %{device}: %{fld22}:)" }
			id => "msgParserId35"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId36
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  encmon: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  encmon: %{event_description}" }
			id => "msgParserId36"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId37
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  encmon: <event_description>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  encmon: %{event_description}" }
			id => "msgParserId37"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId38
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  Found a warning during POST: <fld23> WARNING: <result>
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  Found a warning during POST: %{fld23} WARNING: %{result}" }
			id => "msgParserId38"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId39
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: <interface>: link down 
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: %{interface}: link down" }
			id => "msgParserId39"
			add_field => {
				"event_description" => "link down"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId40
	# line in RSA:  <event_source>:<severity>:<id> Slot <device>: <fld22>:  <interface>: link up 
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{interface}: link up" }
			id => "msgParserId40"
			add_field => {
				"event_description" => "link up"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId41
	# line in RSA:  <event_source>:<severity>:<id> Slot <device>: <fld22>:  <interface>: link down 
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{interface}: link down" }
			id => "msgParserId41"
			add_field => {
				"event_description" => "link down"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId42
	# line in RSA:  <event_source>:<severity>:<id> Slot <device>: <fld22>: Fiber Port <network_port> <interface> inserted: <info> 
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: Fiber Port %{network_port} %{interface} inserted: %{info}" }
			id => "msgParserId42"
			add_field => {
				"event_description" => "Fiber Port SFP inserted"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId43
	# line in RSA:  <event_source>:<severity>:<id> Slot <device>: <fld22>: Fibre Port <network_port> <interface> removed: <info> 
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: Fibre Port %{network_port} %{interface} removed: %{info}" }
			id => "msgParserId43"
			add_field => {
				"event_description" => "Fibre Port SFP removed"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "FCP_1" {
		# MESSAGE FCP_1
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: <space><interface> Now Online 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: %{space}%{interface} Now Online" }
				id => "message-FCP_1"
				add_field => {
				"event_description" => "Now Online"
					"[event][id]" => "FCP_1"
					"[rsa][message][id1]" => "FCP_1"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE FCP_1:01
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: <interface> Now online 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: %{interface} Now online" }
				id => "message-FCP_1:01"
				add_field => {
				"event_description" => "Now Online"
					"[event][id]" => "FCP_1:01"
					"[rsa][message][id1]" => "FCP_1:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  <interface>:  Link Down 
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{interface}:  Link Down" }
			id => "msgParserId46"
			add_field => {
				"event_description" => "Link Down"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "FCP_4" {
		# MESSAGE FCP_4
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  <interface>: BINDING TABLE WRITE FAIL 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{interface}: BINDING TABLE WRITE FAIL" }
				id => "message-FCP_4"
				add_field => {
				"event_description" => "BINDING TABLE WRITE FAIL"
					"[event][id]" => "FCP_4"
					"[rsa][message][id1]" => "FCP_4"
					"[event][categoryid]" => "1601020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE FCP_4:01
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  <interface>:  Link Down 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{interface}:  Link Down" }
				id => "message-FCP_4:01"
				add_field => {
				"event_description" => "Link Down"
					"[event][id]" => "FCP_4:01"
					"[rsa][message][id1]" => "FCP_4:01"
					"[event][categoryid]" => "1601020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE FCP_4:02
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  <interface>: BINDING TABLE WRITE RETRY SUCCEEDED 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{interface}: BINDING TABLE WRITE RETRY SUCCEEDED" }
				id => "message-FCP_4:02"
				add_field => {
				"event_description" => "BINDING TABLE WRITE RETRY SUCCEEDED"
					"[event][id]" => "FCP_4:02"
					"[rsa][message][id1]" => "FCP_4:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE FCP_4:03
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  <interface>: new N_PORT D_ID <fld1>: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{interface}: new N_PORT D_ID %{fld1}: %{fld2}" }
				id => "message-FCP_4:03"
				add_field => {
					"[event][id]" => "FCP_4:03"
					"[rsa][message][id1]" => "FCP_4:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA: <event_source>:<severity>:<id> <fld1> 
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} %{fld1}" }
			id => "msgParserId50"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "JServer_201" {
		# MESSAGE JServer_201
		# line in RSA: <event_source>:<severity>:<id> Alert <info> (averages, { memory | cpu }); Mover '<interface>' (<fld1>); value=<trigger_val>  
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^:]*):(?<severity>[^:]*):(?<id>[^\s]*)[\s]+Alert[\s]+(?<info>[^\s]*)[\s]+\(averages,[\s]+([\s]*memory[\s]+|[\s]*cpu[\s]+)\);[\s]+Mover[\s]+'(?<interface>[^']*)'[\s]+\((?<fld1>[^\)]*)\);[\s]+value=(?<trigger_val>[^\s]*)[\s]+$" }
				id => "message-JServer_201"
				add_field => {
				"event_description" => "Alert Mover"
					"[event][id]" => "JServer_201"
					"[rsa][message][id1]" => "JServer_201"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE JServer_201:01
		# line in RSA: <event_source>:<severity>:<id> Alert <info> (space); File System '<directory>'; value=<trigger_val> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Alert %{info} (space); File System '%{directory}'; value=%{trigger_val}" }
				id => "message-JServer_201:01"
				add_field => {
				"event_description" => "Alert File System"
					"[event][id]" => "JServer_201:01"
					"[rsa][message][id1]" => "JServer_201:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "JServer_202" {
		# MESSAGE JServer_202
		# line in RSA: <event_source>:<severity>:<id> Alert <info> (space); File System '<directory>'; value=<trigger_val> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Alert %{info} (space); File System '%{directory}'; value=%{trigger_val}" }
				id => "message-JServer_202"
				add_field => {
				"event_description" => "Alert File System"
					"[event][id]" => "JServer_202"
					"[rsa][message][id1]" => "JServer_202"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE JServer_202:01
		# line in RSA: <event_source>:<severity>:<id> Alert <info>; File System '<directory>'; space limit on <fld23> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Alert %{info}; File System '%{directory}'; space limit on %{fld23}" }
				id => "message-JServer_202:01"
				add_field => {
				"event_description" => "Alert File System"
					"[event][id]" => "JServer_202:01"
					"[rsa][message][id1]" => "JServer_202:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId52
	# line in RSA: <event_source>:<severity>:<id> Alert <info> (space); File System '<directory>'; value=<trigger_val> 
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Alert %{info} (space); File System '%{directory}'; value=%{trigger_val}" }
			id => "msgParserId52"
			add_field => {
				"event_description" => "Alert File System"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId54
	# line in RSA: <event_source>:<severity>:<id> Alert <info>: File system <directory> is using <trigger_val> of its current space capacity. 
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Alert %{info}: File system %{directory} is using %{trigger_val} of its current space capacity." }
			id => "msgParserId54"
			add_field => {
				"event_description" => "Alert File System"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId55
	# line in RSA: <event_source>:<severity>:<id> <event_description> 
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} %{event_description}" }
			id => "msgParserId55"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId56
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  DNS: unable to connect to name server <daddr>: Connection timed out 
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  DNS: unable to connect to name server %{daddr}: Connection timed out" }
			id => "msgParserId56"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId57
	# line in RSA: <event_source>:<severity>:<id> <event_description>
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} %{event_description}" }
			id => "msgParserId57"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId58
	# line in RSA: <event_source>:<severity>:<id> Terminating Master Control Application 
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Terminating Master Control Application" }
			id => "msgParserId58"
			add_field => {
				"event_description" => "Terminating Master Control Application"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId59
	# line in RSA: <event_source>:<severity>:<id> daemon \
	# Parsing error: String ends with a \ which is not supported, see issue https://github.com/elastic/logstash/issues/9701
	# PARSER msgParserId60
	# line in RSA: <service>:<event_type>:<event_id> Apache daemon respawning too fast; disabled for 5 minutes.
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "%{service}:%{event_type}:%{event_id} Apache daemon respawning too fast; disabled for 5 minutes." }
			id => "msgParserId60"
			add_field => {
				"reason" => "Apache daemon respawning too fast"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA:  <event_source>:<severity>:<id> (<device>:<fld22>:) <interface> extension succeeded
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} (%{device}:%{fld22}:) %{interface} extension succeeded" }
			id => "msgParserId61"
			add_field => {
				"event_description" => "extension succeeded"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "NASDB_11" {
		# MESSAGE NASDB_11
		# line in RSA: <event_source>:<severity>:<id> <fld1> <interface> -get passwd <fld2> Error <resultcode>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} %{fld1} %{interface} -get passwd %{fld2} Error %{resultcode}: %{result}" }
				id => "message-NASDB_11"
				add_field => {
				"event_description" => "No such file or directory"
					"[event][id]" => "NASDB_11"
					"[rsa][message][id1]" => "NASDB_11"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE NASDB_11:01
		# line in RSA: <event_source>:<severity>:<id> <fld1> <interface> -delete <fld2> Error <resultcode>: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} %{fld1} %{interface} -delete %{fld2} Error %{resultcode}: %{result}" }
				id => "message-NASDB_11:01"
				add_field => {
					"[event][id]" => "NASDB_11:01"
					"[rsa][message][id1]" => "NASDB_11:01"
					"[event][categoryid]" => "1603050000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA: <event_source>:<severity>:<id> Backend Event Number <fld1> Host <shost>  Storage Array <interface>  SPA  Device Enclosure <fld2> Disk <fld3>  SoftwareRev <version> (<fld4>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Backend Event Number %{fld1} Host %{shost}  Storage Array %{interface}  SPA  Device Enclosure %{fld2} Disk %{fld3}  SoftwareRev %{version} (%{fld4}) %{event_description}" }
			id => "msgParserId64"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId65
	# line in RSA: <event_source>:<severity>:<id> Backend Event Number <fld1> Host <shost>  Storage Array <interface>  SPA  Device Bus <fld2> Enclosure <fld3> Power <fld4>  SoftwareRev <version> (<fld5>)  <event_description>
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Backend Event Number %{fld1} Host %{shost}  Storage Array %{interface}  SPA  Device Bus %{fld2} Enclosure %{fld3} Power %{fld4}  SoftwareRev %{version} (%{fld5})  %{event_description}" }
			id => "msgParserId65"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId66
	# line in RSA: <event_source>:<severity>:<id> Backend Event Number <fld1> Host <shost>  Storage Array <interface>  SPA  Device Bus <fld2> Enclosure <fld3>  SoftwareRev <version> (<fld4>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Backend Event Number %{fld1} Host %{shost}  Storage Array %{interface}  SPA  Device Bus %{fld2} Enclosure %{fld3}  SoftwareRev %{version} (%{fld4}) %{event_description}" }
			id => "msgParserId66"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "NaviEventMonitor_5" {
		# MESSAGE NaviEventMonitor_5
		# line in RSA: <event_source>:<severity>:<id> Backend Event Number <fld1> N/A  SP N/A  SoftwareRev <version> (<fld3>)  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Backend Event Number %{fld1} N/A  SP N/A  SoftwareRev %{version} (%{fld3})  %{event_description}" }
				id => "message-NaviEventMonitor_5"
				add_field => {
					"[event][id]" => "NaviEventMonitor_5"
					"[rsa][message][id1]" => "NaviEventMonitor_5"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE NaviEventMonitor_5:01
		# line in RSA: <event_source>:<severity>:<id> Backend Event Number <fld1> - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Backend Event Number %{fld1} - %{info}" }
				id => "message-NaviEventMonitor_5:01"
				add_field => {
					"[event][id]" => "NaviEventMonitor_5:01"
					"[rsa][message][id1]" => "NaviEventMonitor_5:01"
					"[event][categoryid]" => "1609000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA: <event_source>:<severity>:<id> Disk <interface> has been trespassed
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Disk %{interface} has been trespassed" }
			id => "msgParserId69"
			add_field => {
				"event_description" => "Disk trespassed"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId70
	# line in RSA: <event_source>:<severity>:<id>  Task: Create checkpoint <fld1>, of schedule <fld2> failed (task id = <fld3>)
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id}  Task: Create checkpoint %{fld1}, of schedule %{fld2} failed (task id = %{fld3})" }
			id => "msgParserId70"
			add_field => {
				"event_description" => "Create checkpoint failed"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "NDMP_1" {
		# MESSAGE NDMP_1
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  source_fsid: <fld1> mount_point: <directory> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  source_fsid: %{fld1} mount_point: %{directory}" }
				id => "message-NDMP_1"
				add_field => {
					"[event][id]" => "NDMP_1"
					"[rsa][message][id1]" => "NDMP_1"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE NDMP_1:01
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: source_fsid: <fld1> mount_point: <directory> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: source_fsid: %{fld1} mount_point: %{directory}" }
				id => "message-NDMP_1:01"
				add_field => {
					"[event][id]" => "NDMP_1:01"
					"[rsa][message][id1]" => "NDMP_1:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "NDMP_2" {
		# MESSAGE NDMP_2
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  fsid: <fld1> mount_point: <directory> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  fsid: %{fld1} mount_point: %{directory}" }
				id => "message-NDMP_2"
				add_field => {
					"[event][id]" => "NDMP_2"
					"[rsa][message][id1]" => "NDMP_2"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE NDMP_2:01
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: fsid: <fld1> mount_point: <directory> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: fsid: %{fld1} mount_point: %{directory}" }
				id => "message-NDMP_2:01"
				add_field => {
					"[event][id]" => "NDMP_2:01"
					"[rsa][message][id1]" => "NDMP_2:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "NDMP_10" {
		# MESSAGE NDMP_10
		# line in RSA:  <event_source>:<severity>:<id> PID:<process_id> command succeeded: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} PID:%{process_id} command succeeded: %{info}" }
				id => "message-NDMP_10"
				add_field => {
				"event_description" => "command succeeded"
					"[event][id]" => "NDMP_10"
					"[rsa][message][id1]" => "NDMP_10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE NDMP_10:01
		# line in RSA: <event_source>:<severity>:<id> PID:<process_id> fsid <fld1> not found
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} PID:%{process_id} fsid %{fld1} not found" }
				id => "message-NDMP_10:01"
				add_field => {
					"[event][id]" => "NDMP_10:01"
					"[rsa][message][id1]" => "NDMP_10:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE NDMP_10:02
		# line in RSA: <event_source>:<severity>:<id> PID:<process_id> name <fld1> not found
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} PID:%{process_id} name %{fld1} not found" }
				id => "message-NDMP_10:02"
				add_field => {
					"[event][id]" => "NDMP_10:02"
					"[rsa][message][id1]" => "NDMP_10:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId78
	# line in RSA:  <event_source>:<severity>:<id> command succeeded: <info> 
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} command succeeded: %{info}" }
			id => "msgParserId78"
			add_field => {
				"event_description" => "command succeeded"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "OTHERS_1" {
		# MESSAGE OTHERS_1
		# line in RSA: <event_source>:<severity>:<id> nasdb_backup: <disposition> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} nasdb_backup: %{disposition}" }
				id => "message-OTHERS_1"
				add_field => {
					"[event][id]" => "OTHERS_1"
					"[rsa][message][id1]" => "OTHERS_1"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE OTHERS_01
		# line in RSA: <event_source>:<severity>:<id> Slot <device> recover_slot handle panic Uptime: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} recover_slot handle panic Uptime: %{info}" }
				id => "message-OTHERS_01"
				add_field => {
					"[event][id]" => "OTHERS_01"
					"[rsa][message][id1]" => "OTHERS_01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE OTHERS_1:02
		# line in RSA: <event_source>:<severity>:<id> Slot <device> recover_slot /nas <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device} recover_slot /nas %{fld1}" }
				id => "message-OTHERS_1:02"
				add_field => {
					"[event][id]" => "OTHERS_1:02"
					"[rsa][message][id1]" => "OTHERS_1:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId82
	# line in RSA: <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,<fld2>,(EMC) <event_description>
	else if [logstash][msgparser][id] == "msgParserId82" {
		dissect {
			mapping => { "message" => "%{event_log},%{fld1},%{fld3} %{datetime},%{id},%{event_source},%{event_user},%{event_type},%{event_computer},(EMC) %{category},%{fld2},(EMC) %{event_description}" }
			id => "msgParserId82"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId83
	# line in RSA:  <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,<fld2>,(EMC) <event_description>: <space> Reason: <result>User Name: <username> Domain: <domain> Logon Type: <logon_type> Logon Process: <process> Authentication Package: <authmethod> Workstation Name: <hostname>
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "%{event_log},%{fld1},%{fld3} %{datetime},%{id},%{event_source},%{event_user},%{event_type},%{event_computer},(EMC) %{category},%{fld2},(EMC) %{event_description}: %{space} Reason: %{result}User Name: %{username} Domain: %{domain} Logon Type: %{logon_type} Logon Process: %{process} Authentication Package: %{authmethod} Workstation Name: %{hostname}" }
			id => "msgParserId83"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId84
	# line in RSA:  <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,<fld2>,(EMC) <event_description>:<space>User Name: <username> Domain: <domain> Logon ID: <sessionid> Logon Type: <logon_type>
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "%{event_log},%{fld1},%{fld3} %{datetime},%{id},%{event_source},%{event_user},%{event_type},%{event_computer},(EMC) %{category},%{fld2},(EMC) %{event_description}:%{space}User Name: %{username} Domain: %{domain} Logon ID: %{sessionid} Logon Type: %{logon_type}" }
			id => "msgParserId84"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId85
	# line in RSA:  <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,<fld2>,(EMC) <event_description>: User Name: <username> Domain: <domain>  Logon ID: <sessionid>  Logon Type: <logon_type> Logon Process: <process> Authentication Package: <authmethod> Workstation Name: <hostname>
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "%{event_log},%{fld1},%{fld3} %{datetime},%{id},%{event_source},%{event_user},%{event_type},%{event_computer},(EMC) %{category},%{fld2},(EMC) %{event_description}: User Name: %{username} Domain: %{domain}  Logon ID: %{sessionid}  Logon Type: %{logon_type} Logon Process: %{process} Authentication Package: %{authmethod} Workstation Name: %{hostname}" }
			id => "msgParserId85"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId86
	# line in RSA:  <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,,(EMC) <event_description>:<space>Object Server: <obj_server>  Object Type: <obj_type>  Object Name: <obj_name>  New Handle ID: <fld6>  Operation ID: {{<fld2>} Process ID: <process> Primary User Name: <username> Primary Domain: <domain> Primary Logon ID: <sessionid> Client User Name: <c_username> Client Domain: <c_domain> Client Logon ID: <c_logon_id> Accesses<accesses> Privileges<privilege>
	else if [logstash][msgparser][id] == "msgParserId86" {
		grok {
			match => { "message" => "^[\s]*(?<event_log>[^,]*),(?<fld1>[^,]*),(?<fld3>[^\s]*)[\s]+(?<datetime>[^,]*),(?<id>[^,]*),(?<event_source>[^,]*),(?<event_user>[^,]*),(?<event_type>[^,]*),(?<event_computer>[^,]*),\(EMC\)[\s]+(?<category>[^,]*),,\(EMC\)[\s]+(?<event_description>[^:]*):(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+New[\s]+Handle[\s]+ID:[\s]+(?<fld6>[^\s]*)[\s]+Operation[\s]+ID:[\s]+\{(?<fld2>[^\}]*)\}[\s]+Process[\s]+ID:[\s]+(?<process>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Client[\s]+Logon[\s]+ID:[\s]+(?<c_logon_id>[^\s]*)[\s]+Accesses(?<accesses>[^\s]*)[\s]+Privileges(?<privilege>.*)$" }
			id => "msgParserId86"
			add_field => {
				"ec_theme" => "ALM"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId87
	# line in RSA:  <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,,(EMC) <event_description>:<space>Object Server: <obj_server>  Handle ID: <fld6>  Process ID: <process>
	else if [logstash][msgparser][id] == "msgParserId87" {
		dissect {
			mapping => { "message" => "%{event_log},%{fld1},%{fld3} %{datetime},%{id},%{event_source},%{event_user},%{event_type},%{event_computer},(EMC) %{category},,(EMC) %{event_description}:%{space}Object Server: %{obj_server}  Handle ID: %{fld6}  Process ID: %{process}" }
			id => "msgParserId87"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId88
	# line in RSA:  <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,,(EMC) <event_description>:<space>Object Server: <obj_server>  Object Type: <obj_type>  Object Name: <obj_name>  New Handle ID: <fld6>  Operation ID: {{<fld2>} Process ID: <process> Primary User Name: <username> Primary Domain: <domain> Primary Logon ID: <sessionid> Client User Name: <c_username> Client Domain: <c_domain> Client Logon ID: <c_logon_id> Accesses<accesses> Privileges<privilege>
	else if [logstash][msgparser][id] == "msgParserId88" {
		grok {
			match => { "message" => "^[\s]*(?<event_log>[^,]*),(?<fld1>[^,]*),(?<fld3>[^\s]*)[\s]+(?<datetime>[^,]*),(?<id>[^,]*),(?<event_source>[^,]*),(?<event_user>[^,]*),(?<event_type>[^,]*),(?<event_computer>[^,]*),\(EMC\)[\s]+(?<category>[^,]*),,\(EMC\)[\s]+(?<event_description>[^:]*):(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+New[\s]+Handle[\s]+ID:[\s]+(?<fld6>[^\s]*)[\s]+Operation[\s]+ID:[\s]+\{(?<fld2>[^\}]*)\}[\s]+Process[\s]+ID:[\s]+(?<process>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Client[\s]+Logon[\s]+ID:[\s]+(?<c_logon_id>[^\s]*)[\s]+Accesses(?<accesses>[^\s]*)[\s]+Privileges(?<privilege>.*)$" }
			id => "msgParserId88"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId89
	# line in RSA:  <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,,(EMC) <event_description>: User Name: <username>  Domain: <domain>  Logon ID: <sessionid>  Assigned: <fld2>
	else if [logstash][msgparser][id] == "msgParserId89" {
		dissect {
			mapping => { "message" => "%{event_log},%{fld1},%{fld3} %{datetime},%{id},%{event_source},%{event_user},%{event_type},%{event_computer},(EMC) %{category},,(EMC) %{event_description}: User Name: %{username}  Domain: %{domain}  Logon ID: %{sessionid}  Assigned: %{fld2}" }
			id => "msgParserId89"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId90
	# line in RSA:  <event_log>,<fld1>,<fld3> <datetime>,<id>,<event_source>,<event_user>,<event_type>,<event_computer>,(EMC) <category>,,(EMC) The logon to account:<username>by: EMC <info>from workstation: <hostname>failed. The error code was: <result>
	else if [logstash][msgparser][id] == "msgParserId90" {
		dissect {
			mapping => { "message" => "%{event_log},%{fld1},%{fld3} %{datetime},%{id},%{event_source},%{event_user},%{event_type},%{event_computer},(EMC) %{category},,(EMC) The logon to account:%{username}by: EMC %{info}from workstation: %{hostname}failed. The error code was: %{result}" }
			id => "msgParserId90"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId91
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: The NTP servers are not accessible or responding to the time service from [<fld1> <fld2>].  
	else if [logstash][msgparser][id] == "msgParserId91" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: The NTP servers are not accessible or responding to the time service from [%{fld1} %{fld2}]." }
			id => "msgParserId91"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId92
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{event_description}" }
			id => "msgParserId92"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId93
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: LUN <lun> was trespassed to { SPA | SPB }.
	else if [logstash][msgparser][id] == "msgParserId93" {
		grok {
			match => { "message" => "^(?<event_source>[^:]*):(?<severity>[^:]*):(?<id>[^\s]*)[\s]+Slot[\s]+(?<device>[^:]*):[\s]+(?<fld22>[^:]*):[\s]+LUN[\s]+(?<lun>[^\s]*)[\s]+was[\s]+trespassed[\s]+to[\s]+([\s]*SPA[\s]+|[\s]*SPB[\s]+)\.$" }
			id => "msgParserId93"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "STORAGE_5" {
		# MESSAGE STORAGE_5
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  volume <interface> has moved from <change_old> to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  volume %{interface} has moved from %{change_old} to %{change_new}" }
				id => "message-STORAGE_5"
				add_field => {
				"event_description" => "volume moved"
					"[event][id]" => "STORAGE_5"
					"[rsa][message][id1]" => "STORAGE_5"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE STORAGE_5:01
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  Trespass lun <lun> to <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  Trespass lun %{lun} to %{shost}" }
				id => "message-STORAGE_5:01"
				add_field => {
					"[event][id]" => "STORAGE_5:01"
					"[rsa][message][id1]" => "STORAGE_5:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId96
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  FSID: <fld1> SavVol:  <info>
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  FSID: %{fld1} SavVol:  %{info}" }
			id => "msgParserId96"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "SYR_5" {
		# MESSAGE SYR_5:2
		# line in RSA: <event_source>:<severity>:<id> The SYR file <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} The SYR file %{event_description}" }
				id => "message-SYR_5:2"
				add_field => {
					"[event][id]" => "SYR_5:2"
					"[rsa][message][id1]" => "SYR_5:2"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE SYR_5:3
		# line in RSA: <event_source>:<severity>:<id> SYR data is attached.|<fld1>|<fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} SYR data is attached.|%{fld1}|%{fld2}" }
				id => "message-SYR_5:3"
				add_field => {
					"[event][id]" => "SYR_5:3"
					"[rsa][message][id1]" => "SYR_5:3"
					"[event][categoryid]" => "1601010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId99
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  filesystem size threshold (<trigger_val>) dropped below (<directory>) 
	else if [logstash][msgparser][id] == "msgParserId99" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  filesystem size threshold (%{trigger_val}) dropped below (%{directory})" }
			id => "msgParserId99"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId100
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  Usermapper database created 
	else if [logstash][msgparser][id] == "msgParserId100" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  Usermapper database created" }
			id => "msgParserId100"
			add_field => {
				"event_description" => "database created"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "USRMAP_2" {
		# MESSAGE USRMAP_2
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  Usermapper service enabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  Usermapper service enabled" }
				id => "message-USRMAP_2"
				add_field => {
				"event_description" => "service enabled"
					"[event][id]" => "USRMAP_2"
					"[rsa][message][id1]" => "USRMAP_2"
					"[event][categoryid]" => "1701060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE USRMAP_2:01
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>: Usermapper service has been enabled. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}: Usermapper service has been enabled." }
				id => "message-USRMAP_2:01"
				add_field => {
				"event_description" => "service enabled"
					"[event][id]" => "USRMAP_2:01"
					"[rsa][message][id1]" => "USRMAP_2:01"
					"[event][categoryid]" => "1701060000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId103
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  Usermapper service disabled 
	else if [logstash][msgparser][id] == "msgParserId103" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  Usermapper service disabled" }
			id => "msgParserId103"
			add_field => {
				"event_description" => "service disabled"
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId104
	# line in RSA:  <event_source>:<severity>:<id> Slot <device>: <fld22>:  Virus Checking: <result> 
	else if [logstash][msgparser][id] == "msgParserId104" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  Virus Checking: %{result}" }
			id => "msgParserId104"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId105
	# line in RSA:  <event_source>:<severity>:<id> Slot <device>: <fld22>:  <directory> 
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{directory}" }
			id => "msgParserId105"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "VC_7" {
		# MESSAGE VC_7:02
		# line in RSA: <event_source>:<severity>:<id> Slot 4: <directory> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot 4: %{directory}" }
				id => "message-VC_7:02"
				add_field => {
					"[event][id]" => "VC_7:02"
					"[rsa][message][id1]" => "VC_7:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE VC_7
		# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  Server <daddr>: <info>, RPC program version <version>, { CAVA release: <fld1>, AV Engine: <fld2> | Pre <fld1> CAVA }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_source>[^:]*):(?<severity>[^:]*):(?<id>[^\s]*)[\s]+Slot[\s]+(?<device>[^:]*):[\s]+(?<fld22>[^:]*):[\s]+Server[\s]+(?<daddr>[^:]*):[\s]+(?<info>[^,]*),[\s]+RPC[\s]+program[\s]+version[\s]+(?<version>[^,]*),[\s]+([\s]*CAVA[\s]+release:[\s]+(?<fld1>[^,]*),[\s]+AV[\s]+Engine:[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*Pre[\s]+(?<fld1>[^\s]*)[\s]+CAVA[\s]+)$" }
				id => "message-VC_7"
				add_field => {
					"[event][id]" => "VC_7"
					"[rsa][message][id1]" => "VC_7"
					"[event][categoryid]" => "1601010000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
		# MESSAGE VC_7:01
		# line in RSA: <event_source>:<severity>:<id> Slot 2: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot 2: %{event_description}" }
				id => "message-VC_7:01"
				add_field => {
					"[event][id]" => "VC_7:01"
					"[rsa][message][id1]" => "VC_7:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
			}
		}
	}
	# PARSER msgParserId109
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  Server <saddr>: <info>, RPC program version <version>, { CAVA release: <fld1>, AV Engine: <fld2> | Pre <fld1> CAVA }
	else if [logstash][msgparser][id] == "msgParserId109" {
		grok {
			match => { "message" => "^(?<event_source>[^:]*):(?<severity>[^:]*):(?<id>[^\s]*)[\s]+Slot[\s]+(?<device>[^:]*):[\s]+(?<fld22>[^:]*):[\s]+Server[\s]+(?<saddr>[^:]*):[\s]+(?<info>[^,]*),[\s]+RPC[\s]+program[\s]+version[\s]+(?<version>[^,]*),[\s]+([\s]*CAVA[\s]+release:[\s]+(?<fld1>[^,]*),[\s]+AV[\s]+Engine:[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*Pre[\s]+(?<fld1>[^\s]*)[\s]+CAVA[\s]+)$" }
			id => "msgParserId109"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId108
	# line in RSA: <event_source>:<severity>:<id> Slot 2: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId108" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot 2: %{event_description}" }
			id => "msgParserId108"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId110
	# line in RSA:  <event_source>:<severity>:<id> Slot <device>: <fld22>:  <event_description> 
	else if [logstash][msgparser][id] == "msgParserId110" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  %{event_description}" }
			id => "msgParserId110"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId111
	# line in RSA: <event_source>:<severity>:<id> Slot <device>: <fld22>:  Virus Checking <action>
	else if [logstash][msgparser][id] == "msgParserId111" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} Slot %{device}: %{fld22}:  Virus Checking %{action}" }
			id => "msgParserId111"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}
	# PARSER msgParserId112
	# line in RSA: <event_source>:<severity>:<id> nasdb_backup: <event_description> 
	else if [logstash][msgparser][id] == "msgParserId112" {
		dissect {
			mapping => { "message" => "%{event_source}:%{severity}:%{id} nasdb_backup: %{event_description}" }
			id => "msgParserId112"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{month} %{day} %{time} %{year}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:mm:ss yyyy" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_celerramsg.json"
#			template_name => "celerra_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
