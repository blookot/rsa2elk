# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "firepass"
			"[observer][name]" => "F5 Firepass"
			"[observer][type]" => "VPN"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0005
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>[<hfld1>]: [<husername>] [<hfld2>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hhost} %{messageid}[%{hfld1}]: [%{husername}] [%{hfld2}] %{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>[<hfld1>]: [<husername>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hhost} %{messageid}[%{hfld1}]: [%{husername}] %{message}" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>[<hfld1>]: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hhost} %{messageid}[%{hfld1}]: %{message}" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: <hmonth> <hday> <htime> <hhost> <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <messageid>[<hfld1>]: [<husername>] [<hfld2>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{messageid}[%{hfld1}]: [%{husername}] [%{hfld2}] %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <messageid>[<hfld1>]: [<husername>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{messageid}[%{hfld1}]: [%{husername}] %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <messageid>[<hfld1>]: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{messageid}[%{hfld1}]: %{message}" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_firepassmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "firepass" {
		# MESSAGE firepass:01
		# line in RSA: Entered <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Entered %{fld2}" }
				id => "message-firepass:01"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "firepass:01"
					"[rsa][message][id1]" => "firepass:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:02
		# line in RSA: Logged out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logged out" }
				id => "message-firepass:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"username" => "%{husername}"
					"[event][id]" => "firepass:02"
					"[rsa][message][id1]" => "firepass:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:03
		# line in RSA: Finished using <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Finished using %{fld2}" }
				id => "message-firepass:03"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "firepass:03"
					"[rsa][message][id1]" => "firepass:03"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:04
		# line in RSA: Open  <fld2> to Remote Host:<dhost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Open  %{fld2} to Remote Host:%{dhost}" }
				id => "message-firepass:04"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "firepass:04"
					"[rsa][message][id1]" => "firepass:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:05
		# line in RSA: param <fld1> = <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "param %{fld1} = %{fld2}" }
				id => "message-firepass:05"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "firepass:05"
					"[rsa][message][id1]" => "firepass:05"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:06
		# line in RSA: Access menu <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Access menu %{fld2}" }
				id => "message-firepass:06"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "firepass:06"
					"[rsa][message][id1]" => "firepass:06"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:07
		# line in RSA: Accessing <url>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Accessing %{url}" }
				id => "message-firepass:07"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "firepass:07"
					"[rsa][message][id1]" => "firepass:07"
					"[event][categoryid]" => "1401040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:08
		# line in RSA: Network Access: dialing Click to connect to Network Access
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Access: dialing Click to connect to Network Access" }
				id => "message-firepass:08"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "firepass:08"
					"[rsa][message][id1]" => "firepass:08"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:09
		# line in RSA: FirePass service stopped on <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FirePass service stopped on %{hostname}" }
				id => "message-firepass:09"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"username" => "%{husername}"
					"[event][id]" => "firepass:09"
					"[rsa][message][id1]" => "firepass:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:10
		# line in RSA: FirePass service started on <hostname>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FirePass service started on %{hostname}" }
				id => "message-firepass:10"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"username" => "%{husername}"
					"[event][id]" => "firepass:10"
					"[rsa][message][id1]" => "firepass:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:11
		# line in RSA: shutting down for system reboot
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "shutting down for system reboot" }
				id => "message-firepass:11"
				add_field => {
				"event_description" => "shutting down for system reboot"
					"[event][id]" => "firepass:11"
					"[rsa][message][id1]" => "firepass:11"
					"[event][categoryid]" => "1606000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE firepass:12
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-firepass:12"
				add_field => {
					"[event][id]" => "firepass:12"
					"[rsa][message][id1]" => "firepass:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "GarbageCollection" {
		# MESSAGE GarbageCollection:01
		# line in RSA: User: '<username>' session expired due to inactivity. <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User: '%{username}' session expired due to inactivity. %{result}." }
				id => "message-GarbageCollection:01"
				add_field => {
					"[event][id]" => "GarbageCollection:01"
					"[rsa][message][id1]" => "GarbageCollection:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:02
		# line in RSA: User: '<username>' session was terminated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User: '%{username}' session was terminated." }
				id => "message-GarbageCollection:02"
				add_field => {
					"[event][id]" => "GarbageCollection:02"
					"[rsa][message][id1]" => "GarbageCollection:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:03
		# line in RSA: session '<sessionid>' is expired due to inactivity. <result>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "session '%{sessionid}' is expired due to inactivity. %{result}." }
				id => "message-GarbageCollection:03"
				add_field => {
					"[event][id]" => "GarbageCollection:03"
					"[rsa][message][id1]" => "GarbageCollection:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:04
		# line in RSA: apache server is not running. start it
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "apache server is not running. start it" }
				id => "message-GarbageCollection:04"
				add_field => {
					"[event][id]" => "GarbageCollection:04"
					"[rsa][message][id1]" => "GarbageCollection:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:05
		# line in RSA: <fld2> already started with pid <process_id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld2} already started with pid %{process_id}" }
				id => "message-GarbageCollection:05"
				add_field => {
					"[event][id]" => "GarbageCollection:05"
					"[rsa][message][id1]" => "GarbageCollection:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:06
		# line in RSA: no servers defined for Radius Accounting
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "no servers defined for Radius Accounting" }
				id => "message-GarbageCollection:06"
				add_field => {
					"[event][id]" => "GarbageCollection:06"
					"[rsa][message][id1]" => "GarbageCollection:06"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:07
		# line in RSA: DHCP Agent is not running... Restarting it.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DHCP Agent is not running... Restarting it." }
				id => "message-GarbageCollection:07"
				add_field => {
					"[event][id]" => "GarbageCollection:07"
					"[rsa][message][id1]" => "GarbageCollection:07"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:08
		# line in RSA: session '<sessionid>' is terminated.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "session '%{sessionid}' is terminated." }
				id => "message-GarbageCollection:08"
				add_field => {
					"[event][id]" => "GarbageCollection:08"
					"[rsa][message][id1]" => "GarbageCollection:08"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:09
		# line in RSA: can not connect to database <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "can not connect to database %{fld1}" }
				id => "message-GarbageCollection:09"
				add_field => {
				"event_description" => "can not connect to database"
					"[event][id]" => "GarbageCollection:09"
					"[rsa][message][id1]" => "GarbageCollection:09"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE GarbageCollection:10
		# line in RSA: timeout happened. restarting <fld1> services
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "timeout happened. restarting %{fld1} services" }
				id => "message-GarbageCollection:10"
				add_field => {
				"event_description" => "timeout happened. restarting services"
					"[event][id]" => "GarbageCollection:10"
					"[rsa][message][id1]" => "GarbageCollection:10"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "maintenance" {
		# MESSAGE maintenance:01
		# line in RSA: Failed to upload backup file <filename>. <info> Server returned:<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to upload backup file %{filename}. %{info} Server returned:%{result}" }
				id => "message-maintenance:01"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "maintenance:01"
					"[rsa][message][id1]" => "maintenance:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE maintenance:02
		# line in RSA: Logged out Sid = <sessionid> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logged out Sid = %{sessionid}" }
				id => "message-maintenance:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Logoff"
				"ec_theme" => "Communication"
				"username" => "%{husername}"
					"[event][id]" => "maintenance:02"
					"[rsa][message][id1]" => "maintenance:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE maintenance:03
		# line in RSA: Network Access: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Network Access: %{info}" }
				id => "message-maintenance:03"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "maintenance:03"
					"[rsa][message][id1]" => "maintenance:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE maintenance:04
		# line in RSA: Trying connect to <fld2> on <fqdn>:<network_port> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Trying connect to %{fld2} on %{fqdn}:%{network_port}" }
				id => "message-maintenance:04"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "maintenance:04"
					"[rsa][message][id1]" => "maintenance:04"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE maintenance:05
		# line in RSA: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}" }
				id => "message-maintenance:05"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "maintenance:05"
					"[rsa][message][id1]" => "maintenance:05"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "NetworkAccess" {
		# MESSAGE NetworkAccess:01
		# line in RSA: <<<sessionid>> Open Network Access Connection using remote IP address <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{sessionid}> Open Network Access Connection using remote IP address %{daddr}" }
				id => "message-NetworkAccess:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"username" => "%{husername}"
					"[event][id]" => "NetworkAccess:01"
					"[rsa][message][id1]" => "NetworkAccess:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE NetworkAccess:02
		# line in RSA: <<<sessionid>> Network Access Connection terminated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{sessionid}> Network Access Connection terminated" }
				id => "message-NetworkAccess:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"username" => "%{husername}"
					"[event][id]" => "NetworkAccess:02"
					"[rsa][message][id1]" => "NetworkAccess:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE NetworkAccess:03
		# line in RSA: <<<sessionid>> Error - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{sessionid}> Error - %{info}" }
				id => "message-NetworkAccess:03"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"username" => "%{husername}"
					"[event][id]" => "NetworkAccess:03"
					"[rsa][message][id1]" => "NetworkAccess:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "security" {
		# MESSAGE security:01
		# line in RSA: User <username> logged on from { <saddr> to <daddr> Sid = <sessionid> | <saddr> Sid = <sessionid> | <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^User[\s]+(?<username>[^\s]*)[\s]+logged[\s]+on[\s]+from[\s]+([\s]*(?<saddr>[^\s]*)[\s]+to[\s]+(?<daddr>[^\s]*)[\s]+Sid[\s]+=[\s]+(?<sessionid>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+Sid[\s]+=[\s]+(?<sessionid>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-security:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "security:01"
					"[rsa][message][id1]" => "security:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE security:02
		# line in RSA: { Invalid | Valid } user <username> failed to log on from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^([\s]*Invalid[\s]+|[\s]*Valid[\s]+)[\s]+user[\s]+(?<username>[^\s]*)[\s]+failed[\s]+to[\s]+log[\s]+on[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-security:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "security:02"
					"[rsa][message][id1]" => "security:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE security:03
		# line in RSA: Successful password update for user <user_fullname>, username: <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Successful password update for user %{user_fullname}, username: %{username}" }
				id => "message-security:03"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
					"[event][id]" => "security:03"
					"[rsa][message][id1]" => "security:03"
					"[event][categoryid]" => "1402040100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE security:04
		# line in RSA: Possible intrusion attempt!  <fld1> consecutive authentication failures happened within <fld2> min. Last Source IP Address: <saddr> <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Possible intrusion attempt!  %{fld1} consecutive authentication failures happened within %{fld2} min. Last Source IP Address: %{saddr} %{info}" }
				id => "message-security:04"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "security:04"
					"[rsa][message][id1]" => "security:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE security:05
		# line in RSA: User [<action>] logon from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User [%{action}] logon from %{saddr}" }
				id => "message-security:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
					"[event][id]" => "security:05"
					"[rsa][message][id1]" => "security:05"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE security:06
		# line in RSA: Non-administrator account <username> attempted to access admin account
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Non-administrator account %{username} attempted to access admin account" }
				id => "message-security:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Policy"
				"ec_outcome" => "Failure"
					"[event][id]" => "security:06"
					"[rsa][message][id1]" => "security:06"
					"[event][categoryid]" => "1501000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE security:07
		# line in RSA: User <username> exceeded the allowed number of concurrent logons
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User %{username} exceeded the allowed number of concurrent logons" }
				id => "message-security:07"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_description" => "user exceeded the allowed number of concurrent logons"
					"[event][id]" => "security:07"
					"[rsa][message][id1]" => "security:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE security:08
		# line in RSA: User <username> from <saddr> presented with challenge
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User %{username} from %{saddr} presented with challenge" }
				id => "message-security:08"
				add_field => {
				"ec_subject" => "User"
				"event_description" => "user presented with challenge"
					"[event][id]" => "security:08"
					"[rsa][message][id1]" => "security:08"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE security:09
		# line in RSA: Possible intrusion attempt detected against account <fld1> from source IP address <saddr> for URI=[<fld2>]<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Possible intrusion attempt detected against account %{fld1} from source IP address %{saddr} for URI=[%{fld2}]%{info}" }
				id => "message-security:09"
				add_field => {
				"ec_subject" => "User"
				"event_description" => "Possible intrusion attempt detected"
					"[event][id]" => "security:09"
					"[rsa][message][id1]" => "security:09"
					"[event][categoryid]" => "1401000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: scr_monitor: <fld1>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "scr_monitor: %{fld1}" }
			id => "msgParserId39"
			add_field => {
				"username" => "%{husername}"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Miscellaneous" {
		# MESSAGE Miscellaneous:01
		# line in RSA: Purge logs: not started. Next purge scheduled time <fld1> is not exceeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Purge logs: not started. Next purge scheduled time %{fld1} is not exceeded" }
				id => "message-Miscellaneous:01"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "Miscellaneous:01"
					"[rsa][message][id1]" => "Miscellaneous:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Miscellaneous:02
		# line in RSA: Purge logs: finished. Deleted <fld1> logon records
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Purge logs: finished. Deleted %{fld1} logon records" }
				id => "message-Miscellaneous:02"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "Miscellaneous:02"
					"[rsa][message][id1]" => "Miscellaneous:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Miscellaneous:03
		# line in RSA: Purge logs: auto started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Purge logs: auto started" }
				id => "message-Miscellaneous:03"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "Miscellaneous:03"
					"[rsa][message][id1]" => "Miscellaneous:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Miscellaneous:04
		# line in RSA: Database error detected, dump: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Database error detected, dump: %{info}" }
				id => "message-Miscellaneous:04"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "Miscellaneous:04"
					"[rsa][message][id1]" => "Miscellaneous:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Miscellaneous:05
		# line in RSA: Recovered database successfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Recovered database successfully" }
				id => "message-Miscellaneous:05"
				add_field => {
				"username" => "%{husername}"
					"[event][id]" => "Miscellaneous:05"
					"[rsa][message][id1]" => "Miscellaneous:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "kernel" {
		# MESSAGE kernel:07
		# line in RSA: kernel: Marketing_resource:<fld1> SRC=<saddr> DST=<daddr> <info> PROTO=<protocol> SPT=<sport> DPT=<dport> <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel: Marketing_resource:%{fld1} SRC=%{saddr} DST=%{daddr} %{info} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} %{fld3}" }
				id => "message-kernel:07"
				add_field => {
					"[event][id]" => "kernel:07"
					"[rsa][message][id1]" => "kernel:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:01
		# line in RSA: kernel: Marketing_resource: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel: Marketing_resource: %{info}" }
				id => "message-kernel:01"
				add_field => {
					"[event][id]" => "kernel:01"
					"[rsa][message][id1]" => "kernel:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:02
		# line in RSA: kernel: CSLIP: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel: CSLIP: %{info}" }
				id => "message-kernel:02"
				add_field => {
					"[event][id]" => "kernel:02"
					"[rsa][message][id1]" => "kernel:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:03
		# line in RSA: kernel: PPP <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel: PPP %{info}" }
				id => "message-kernel:03"
				add_field => {
					"[event][id]" => "kernel:03"
					"[rsa][message][id1]" => "kernel:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:04
		# line in RSA: kernel: cdrom: open failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel: cdrom: open failed." }
				id => "message-kernel:04"
				add_field => {
					"[event][id]" => "kernel:04"
					"[rsa][message][id1]" => "kernel:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:06
		# line in RSA: kernel: GlobalFilter:<fld1> SRC=<saddr> DST=<daddr> <info> PROTO=<protocol> SPT=<sport> DPT=<dport> <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel: GlobalFilter:%{fld1} SRC=%{saddr} DST=%{daddr} %{info} PROTO=%{protocol} SPT=%{sport} DPT=%{dport} %{fld3}" }
				id => "message-kernel:06"
				add_field => {
					"[event][id]" => "kernel:06"
					"[rsa][message][id1]" => "kernel:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE kernel:05
		# line in RSA: kernel: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel: %{info}" }
				id => "message-kernel:05"
				add_field => {
					"[event][id]" => "kernel:05"
					"[rsa][message][id1]" => "kernel:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId52
	# line in RSA: Accepted publickey for <username> from <saddr> port <sport> <fld2>
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "Accepted publickey for %{username} from %{saddr} port %{sport} %{fld2}" }
			id => "msgParserId52"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ntpd" {
		# MESSAGE ntpd:01
		# line in RSA: frequency initialized <fld1> PPM from <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "frequency initialized %{fld1} PPM from %{fld2}" }
				id => "message-ntpd:01"
				add_field => {
					"[event][id]" => "ntpd:01"
					"[rsa][message][id1]" => "ntpd:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpd:02
		# line in RSA: kernel time sync status <resultcode>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "kernel time sync status %{resultcode}" }
				id => "message-ntpd:02"
				add_field => {
					"[event][id]" => "ntpd:02"
					"[rsa][message][id1]" => "ntpd:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpd:03
		# line in RSA: Listening on interface <interface>, <hostip>#<network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Listening on interface %{interface}, %{hostip}#%{network_port}" }
				id => "message-ntpd:03"
				add_field => {
					"[event][id]" => "ntpd:03"
					"[rsa][message][id1]" => "ntpd:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpd:04
		# line in RSA: precision = <duration_string>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "precision = %{duration_string}" }
				id => "message-ntpd:04"
				add_field => {
					"[event][id]" => "ntpd:04"
					"[rsa][message][id1]" => "ntpd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE ntpd:05
		# line in RSA: ntpd <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ntpd %{info}" }
				id => "message-ntpd:05"
				add_field => {
					"[event][id]" => "ntpd:05"
					"[rsa][message][id1]" => "ntpd:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "AppTunnel" {
		# MESSAGE AppTunnel:01
		# line in RSA: <<<sessionid>> <fld2> connection  to <dhost>(<daddr>):<dport> terminated
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{sessionid}> %{fld2} connection  to %{dhost}(%{daddr}):%{dport} terminated" }
				id => "message-AppTunnel:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"username" => "%{husername}"
					"[event][id]" => "AppTunnel:01"
					"[rsa][message][id1]" => "AppTunnel:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AppTunnel:02
		# line in RSA: <<<sessionid>> <fld2> connection  to <dhost>(<daddr>):<dport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{sessionid}> %{fld2} connection  to %{dhost}(%{daddr}):%{dport}" }
				id => "message-AppTunnel:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"username" => "%{husername}"
					"[event][id]" => "AppTunnel:02"
					"[rsa][message][id1]" => "AppTunnel:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AppTunnel:03
		# line in RSA: <<<sessionid>> Error - Connection timed out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{sessionid}> Error - Connection timed out" }
				id => "message-AppTunnel:03"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"username" => "%{husername}"
					"[event][id]" => "AppTunnel:03"
					"[rsa][message][id1]" => "AppTunnel:03"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AppTunnel:04
		# line in RSA: Connection to <daddr> port <dport> failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Connection to %{daddr} port %{dport} failed" }
				id => "message-AppTunnel:04"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"username" => "%{husername}"
					"[event][id]" => "AppTunnel:04"
					"[rsa][message][id1]" => "AppTunnel:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AppTunnel:05
		# line in RSA: <<<sessionid>> Error - Invalid session id
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "<%{sessionid}> Error - Invalid session id" }
				id => "message-AppTunnel:05"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
					"[event][id]" => "AppTunnel:05"
					"[rsa][message][id1]" => "AppTunnel:05"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId63
	# line in RSA: <fld2> returned <resultcode>
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "%{fld2} returned %{resultcode}" }
			id => "msgParserId63"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA: (<username>) CMD (<action>) 
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "(%{username}) CMD (%{action})" }
			id => "msgParserId64"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA: adjust time server <daddr> offset <duration_string>
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "adjust time server %{daddr} offset %{duration_string}" }
			id => "msgParserId65"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA:  info: <info>
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "info: %{info}" }
			id => "msgParserId66"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA: Failed to send \'<subject>\' to \'<to>\'
	else if [logstash][msgparser][id] == "msgParserId67" {
		dissect {
			mapping => { "message" => "Failed to send \'%{subject}\' to \'%{to}\'" }
			id => "msgParserId67"
			add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "EndpointSecurity" {
		# MESSAGE EndpointSecurity
		# line in RSA: id[<fld1>]: "{<fld2> - Connected|Connected} from <saddr> <info>"
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^id\[(?<fld1>[^\]]*)\]:[\s]+\"((?<fld2>[^\s]*)[\s]+\-[\s]+Connected|Connected)[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+(?<info>[^\"]*)\"$" }
				id => "message-EndpointSecurity"
				add_field => {
				"ec_theme" => "Communication"
					"[event][id]" => "EndpointSecurity"
					"[rsa][message][id1]" => "EndpointSecurity"
					"[event][categoryid]" => "1603060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE EndpointSecurity:01
		# line in RSA: id[<fld1>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "id[%{fld1}]: %{event_description}" }
				id => "message-EndpointSecurity:01"
				add_field => {
				"ec_theme" => "Communication"
					"[event][id]" => "EndpointSecurity:01"
					"[rsa][message][id1]" => "EndpointSecurity:01"
					"[event][categoryid]" => "1603060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "snmp" {
		# MESSAGE snmp
		# line in RSA:  SNMP handler started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMP handler started" }
				id => "message-snmp"
				add_field => {
				"event_description" => "SNMP handler started"
				"action" => "started"
				"protocol" => "SNMP"
					"[event][id]" => "snmp"
					"[rsa][message][id1]" => "snmp"
					"[event][categoryid]" => "1603060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE snmp:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-snmp:01"
				add_field => {
					"[event][id]" => "snmp:01"
					"[rsa][message][id1]" => "snmp:01"
					"[event][categoryid]" => "1603060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_firepassmsg.json"
#			template_name => "firepass_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
