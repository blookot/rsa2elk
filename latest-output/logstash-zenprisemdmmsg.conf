# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "zenprisemdm"
			"[observer][name]" => "Zenprise MobileManager"
			"[observer][type]" => "Configuration Management"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0002
	# line in RSA: 'ZENPRISEMDM' <hdate> <htime>,<hfld1> [<hprocess>] <messageid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^'ZENPRISEMDM'[\s]+(?<message>(?<hdate>[^\s]*)[\s]+(?<htime>[^,]*),(?<hfld1>[^\s]*)[\s]+\[(?<hprocess>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <hmonth> <hday> <htime> <hhostip> ZENPRISEMDM <hhostname>\SMG: action=<messageid>, <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hday} %{htime} %{hhostip} ZENPRISEMDM %{hhostname}\SMG: action=%{messageid}, %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %ZENPRISEMDM-4: <hdate> <htime>, <hfld1> <hfld2> [<hprocess>]  <messageid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ZENPRISEMDM\-4:[\s]+(?<message>(?<hdate>[^\s]*)[\s]+(?<htime>[^,]*),[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+\[(?<hprocess>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %ZENPRISEMDM-4: <hdate> <htime>, <hfld1> [<hprocess>] <messageid> <!payload:hdate>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%ZENPRISEMDM\-4:[\s]+(?<message>(?<hdate>[^\s]*)[\s]+(?<htime>[^,]*),[\s]+(?<hfld1>[^\s]*)[\s]+\[(?<hprocess>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hdate>T<hfld1> "<username>" "<sessionid>" <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hdate}T%{hfld1} \"%{username}\" \"%{sessionid}\" %{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "xenmobile"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hfld1><hdate>T<hfld2><hhost>XMS -<id><!payload:hhost>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-zenprisemdmmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: group=<group>, user=<username>, did=<serial_number>, dt=<product>, cmd=<action>, ua=<user_agent>, ip=<saddr>,
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "group=%{group}, user=%{username}, did=%{serial_number}, dt=%{product}, cmd=%{action}, ua=%{user_agent}, ip=%{saddr}," }
			id => "msgParserId0"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hday} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM dd HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "INFO" {
		# MESSAGE INFO:01
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - Initialising <fld5> services for: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - Initialising %{fld5} services for: %{info}" }
				id => "message-INFO:01"
				add_field => {
					"[event][id]" => "INFO:01"
					"[rsa][message][id1]" => "INFO:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:02
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - Successfully loaded <service> for iOS <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - Successfully loaded %{service} for iOS %{info}" }
				id => "message-INFO:02"
				add_field => {
					"[event][id]" => "INFO:02"
					"[rsa][message][id1]" => "INFO:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:11
		# line in RSA: <fld1> <fld2>,<fld3> <fld4> [<process>] <severity> <fld5> - <info>: <username> device ID:<id>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} %{fld4} [%{process}] %{severity} %{fld5} - %{info}: %{username} device ID:%{id}" }
				id => "message-INFO:11"
				add_field => {
					"[event][id]" => "INFO:11"
					"[rsa][message][id1]" => "INFO:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:12
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <action>: <fld8>, id=<fld9>, status=<disposition>, username='<username>', <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - %{action}: %{fld8}, id=%{fld9}, status=%{disposition}, username='%{username}', %{info}" }
				id => "message-INFO:12"
				add_field => {
					"[event][id]" => "INFO:12"
					"[rsa][message][id1]" => "INFO:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:03
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <action>: {ID: <id>. Returned: <info>. DeleteStatus: <result> | <disposition>.}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^,]*),(?<fld3>[^\s]*)[\s]+\[(?<process>[^\]]*)\][\s]+(?<severity>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+\-[\s]+(?<action>[^:]*):[\s]+(ID:[\s]+(?<id>[^\.]*)\.[\s]+Returned:[\s]+(?<info>[^\.]*)\.[\s]+DeleteStatus:[\s]+(?<result>[^\s]*)[\s]+|[\s]*(?<disposition>[^\.]*)\.)$" }
				id => "message-INFO:03"
				add_field => {
					"[event][id]" => "INFO:03"
					"[rsa][message][id1]" => "INFO:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:04
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - user=<username> deviceid=<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - user=%{username} deviceid=%{info}" }
				id => "message-INFO:04"
				add_field => {
					"[event][id]" => "INFO:04"
					"[rsa][message][id1]" => "INFO:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:05
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - Client disconnect
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - Client disconnect" }
				id => "message-INFO:05"
				add_field => {
					"[event][id]" => "INFO:05"
					"[rsa][message][id1]" => "INFO:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:06
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <application> finished loading.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - %{application} finished loading." }
				id => "message-INFO:06"
				add_field => {
					"[event][id]" => "INFO:06"
					"[rsa][message][id1]" => "INFO:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:07
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - Confirmation for next device connection time received for <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - Confirmation for next device connection time received for %{fld5}" }
				id => "message-INFO:07"
				add_field => {
					"[event][id]" => "INFO:07"
					"[rsa][message][id1]" => "INFO:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:09
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <application> version <version> Revision <fld5> initialized on Apache Tomcat
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - %{application} version %{version} Revision %{fld5} initialized on Apache Tomcat" }
				id => "message-INFO:09"
				add_field => {
					"[event][id]" => "INFO:09"
					"[rsa][message][id1]" => "INFO:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO:10
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> { <fld4> [UID=<id>,usr=<fld5>,dev=<fld6>] | <fld4> } - <info> for user <username>([])
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^,]*),(?<fld3>[^\s]*)[\s]+\[(?<process>[^\]]*)\][\s]+(?<severity>[^\s]*)[\s]+([\s]*(?<fld4>[^\s]*)[\s]+\[UID=(?<id>[^,]*),usr=(?<fld5>[^,]*),dev=(?<fld6>[^\]]*)\][\s]+|[\s]*(?<fld4>[^\s]*)[\s]+)[\s]+\-[\s]+(?<info>[^\s]*)[\s]+for[\s]+user[\s]+(?<username>[^\(]*)\(\[\]\)$" }
				id => "message-INFO:10"
				add_field => {
					"[event][id]" => "INFO:10"
					"[rsa][message][id1]" => "INFO:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE INFO
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - %{info}" }
				id => "message-INFO"
				add_field => {
					"[event][id]" => "INFO"
					"[rsa][message][id1]" => "INFO"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "DEBUG" {
		# MESSAGE DEBUG:01
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - User role resolved for '<username>' <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - User role resolved for '%{username}' %{fld5}" }
				id => "message-DEBUG:01"
				add_field => {
					"[event][id]" => "DEBUG:01"
					"[rsa][message][id1]" => "DEBUG:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE DEBUG
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - %{info}" }
				id => "message-DEBUG"
				add_field => {
					"[event][id]" => "DEBUG"
					"[rsa][message][id1]" => "DEBUG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WARN" {
		# MESSAGE WARN:01
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - Authentication of MDM connection from <hostip> failed (<info>). Denying access with <sport>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - Authentication of MDM connection from %{hostip} failed (%{info}). Denying access with %{sport}." }
				id => "message-WARN:01"
				add_field => {
					"[event][id]" => "WARN:01"
					"[rsa][message][id1]" => "WARN:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE WARN
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - %{info}" }
				id => "message-WARN"
				add_field => {
					"[event][id]" => "WARN"
					"[rsa][message][id1]" => "WARN"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ERROR" {
		# MESSAGE ERROR:01
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - Referral failed: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - Referral failed: %{info}" }
				id => "message-ERROR:01"
				add_field => {
					"[event][id]" => "ERROR:01"
					"[rsa][message][id1]" => "ERROR:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE ERROR
		# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - %{info}" }
				id => "message-ERROR"
				add_field => {
					"[event][id]" => "ERROR"
					"[rsa][message][id1]" => "ERROR"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA: <fld1> <fld2>,<fld3> [<process>] <severity> <fld4>  - <info>
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2},%{fld3} [%{process}] %{severity} %{fld4}  - %{info}" }
			id => "msgParserId15"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
		}
	}
	else if [logstash][msgparser][id] == "xenmobile" {
		# MESSAGE xenmobile:01
		# line in RSA: "<fld1>" "<saddr>" "<event_type>" "<disposition>" "<obj_name>" "<fld2>" "<user_agent>" <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{fld1}\" \"%{saddr}\" \"%{event_type}\" \"%{disposition}\" \"%{obj_name}\" \"%{fld2}\" \"%{user_agent}\" %{event_description}" }
				id => "message-xenmobile:01"
				add_field => {
				"event_id" => "%{event_type}_%{disposition}"
					"[event][id]" => "xenmobile:01"
					"[rsa][message][id1]" => "xenmobile:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{hfld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE xenmobile
		# line in RSA: "<saddr>" "<event_type>" "<disposition>" "<obj_name>" "<user_agent>" <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "\"%{saddr}\" \"%{event_type}\" \"%{disposition}\" \"%{obj_name}\" \"%{user_agent}\" %{event_description}" }
				id => "message-xenmobile"
				add_field => {
				"event_id" => "%{event_type}_%{disposition}"
					"[event][id]" => "xenmobile"
					"[rsa][message][id1]" => "xenmobile"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{hfld1}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Audit" {
		# MESSAGE Audit
		# line in RSA: <hostname>XMS -<audit_class>[@18060{app.name="<application>" app.userid="<c_username>" client.ip="<saddr>" device.id="<node>"|app.name="<application>" client.ip="<saddr>" device.id="<node>"|client.ip="<saddr>"}event.action="<action>" event.status="<event_state>" http.user-agent="<user_agent>"{session.id="<sessionid>" user.id="<uid>"|session.id="<sessionid>"}]<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^X]*)XMS[\s]+\-(?<audit_class>[^\[]*)\[@18060(app\.name=\"(?<application>[^\"]*)\"[\s]+app\.userid=\"(?<c_username>[^\"]*)\"[\s]+client\.ip=\"(?<saddr>[^\"]*)\"[\s]+device\.id=\"(?<node>[^\"]*)\"|app\.name=\"(?<application>[^\"]*)\"[\s]+client\.ip=\"(?<saddr>[^\"]*)\"[\s]+device\.id=\"(?<node>[^\"]*)\"|client\.ip=\"(?<saddr>[^\"]*)\")event\.action=\"(?<action>[^\"]*)\"[\s]+event\.status=\"(?<event_state>[^\"]*)\"[\s]+http\.user\-agent=\"(?<user_agent>[^\"]*)\"(session\.id=\"(?<sessionid>[^\"]*)\"[\s]+user\.id=\"(?<uid>[^\"]*)\"|session\.id=\"(?<sessionid>[^\"]*)\")\](?<event_description>.*)$" }
				id => "message-Audit"
				add_field => {
					"[event][id]" => "Audit"
					"[rsa][message][id1]" => "Audit"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{hfld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE Audit:01
		# line in RSA: <hostname>XMS -<audit_class>[@18060 app.name="<application>" device.id="<node>" device.imei="<fld2>" device.ownerName="<owner>" device.serial="<serial_number>" device.userDefined.id="<fld3>" event.action="<action>" event.status="<event_state>" ew.session.id="<sessionid>" user.id="<uid>"] {{"source":"<fld4>","deviceUser":"<username>",{"deviceIMEI":"<fld5>","arg1":"<fld6>","arg2":"<fld7>"|"deviceIMEI":"<fld5>","arg1":"<fld6>"|"deviceIMEI":"<fld5>"}}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^X]*)XMS[\s]+\-(?<audit_class>[^\[]*)\[@18060[\s]+app\.name=\"(?<application>[^\"]*)\"[\s]+device\.id=\"(?<node>[^\"]*)\"[\s]+device\.imei=\"(?<fld2>[^\"]*)\"[\s]+device\.ownerName=\"(?<owner>[^\"]*)\"[\s]+device\.serial=\"(?<serial_number>[^\"]*)\"[\s]+device\.userDefined\.id=\"(?<fld3>[^\"]*)\"[\s]+event\.action=\"(?<action>[^\"]*)\"[\s]+event\.status=\"(?<event_state>[^\"]*)\"[\s]+ew\.session\.id=\"(?<sessionid>[^\"]*)\"[\s]+user\.id=\"(?<uid>[^\"]*)\"\][\s]+\{\"source\":\"(?<fld4>[^\"]*)\",\"deviceUser\":\"(?<username>[^\"]*)\",(\"deviceIMEI\":\"(?<fld5>[^\"]*)\",\"arg1\":\"(?<fld6>[^\"]*)\",\"arg2\":\"(?<fld7>[^\"]*)\"|\"deviceIMEI\":\"(?<fld5>[^\"]*)\",\"arg1\":\"(?<fld6>[^\"]*)\"|\"deviceIMEI\":\"(?<fld5>[^\"]*)\")\}$" }
				id => "message-Audit:01"
				add_field => {
					"[event][id]" => "Audit:01"
					"[rsa][message][id1]" => "Audit:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{hfld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE Audit:03
		# line in RSA: <hostname>XMS -<audit_class>[@18060 device.id="<node>" event.action="<action>" {event.status="<event_state>" session.id="<sessionid>"| event.status="<event_state>"} user.id="<uid>"] {{"source":"<fld2>","deviceUser":"<username>",{"deviceIMEI":"<fld3>","arg1":"<fld4>","arg2":"<fld5>"|"deviceIMEI":"<fld3>","arg1":"<fld4>"|"deviceIMEI":"<fld3>"}}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^X]*)XMS[\s]+\-(?<audit_class>[^\[]*)\[@18060[\s]+device\.id=\"(?<node>[^\"]*)\"[\s]+event\.action=\"(?<action>[^\"]*)\"[\s]+(event\.status=\"(?<event_state>[^\"]*)\"[\s]+session\.id=\"(?<sessionid>[^\"]*)\"|[\s]*event\.status=\"(?<event_state>[^\"]*)\")[\s]+user\.id=\"(?<uid>[^\"]*)\"\][\s]+\{\"source\":\"(?<fld2>[^\"]*)\",\"deviceUser\":\"(?<username>[^\"]*)\",(\"deviceIMEI\":\"(?<fld3>[^\"]*)\",\"arg1\":\"(?<fld4>[^\"]*)\",\"arg2\":\"(?<fld5>[^\"]*)\"|\"deviceIMEI\":\"(?<fld3>[^\"]*)\",\"arg1\":\"(?<fld4>[^\"]*)\"|\"deviceIMEI\":\"(?<fld3>[^\"]*)\")\}$" }
				id => "message-Audit:03"
				add_field => {
					"[event][id]" => "Audit:03"
					"[rsa][message][id1]" => "Audit:03"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{hfld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE Audit:04
		# line in RSA: <hostname>XMS -<audit_class>[@18060 app.name="<application>" device.id="<node>" event.action="<action>" event.status="<event_state>" push.device="<fld7>" push.id="<fld8>" push.info="<fld9>" push.target="<fld10>[os=<os>, device=<device>, user=<fld12>, type=<fld13>]" push.user="<fld11>" user.id="<uid>"] {{"source":"<fld3>","deviceUser":"<username>","deviceIMEI":"<fld4>","arg1":"<fld5>","arg2":"<fld6>"}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^X]*)XMS[\s]+\-(?<audit_class>[^\[]*)\[@18060[\s]+app\.name=\"(?<application>[^\"]*)\"[\s]+device\.id=\"(?<node>[^\"]*)\"[\s]+event\.action=\"(?<action>[^\"]*)\"[\s]+event\.status=\"(?<event_state>[^\"]*)\"[\s]+push\.device=\"(?<fld7>[^\"]*)\"[\s]+push\.id=\"(?<fld8>[^\"]*)\"[\s]+push\.info=\"(?<fld9>[^\"]*)\"[\s]+push\.target=\"(?<fld10>[^\[]*)\[os=(?<os>[^,]*),[\s]+device=(?<device>[^,]*),[\s]+user=(?<fld12>[^,]*),[\s]+type=(?<fld13>[^\]]*)\]\"[\s]+push\.user=\"(?<fld11>[^\"]*)\"[\s]+user\.id=\"(?<uid>[^\"]*)\"\][\s]+\{\"source\":\"(?<fld3>[^\"]*)\",\"deviceUser\":\"(?<username>[^\"]*)\",\"deviceIMEI\":\"(?<fld4>[^\"]*)\",\"arg1\":\"(?<fld5>[^\"]*)\",\"arg2\":\"(?<fld6>[^\"]*)\"\}$" }
				id => "message-Audit:04"
				add_field => {
					"[event][id]" => "Audit:04"
					"[rsa][message][id1]" => "Audit:04"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{hfld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
		# MESSAGE Audit:02
		# line in RSA: <hostname>XMS -<audit_class>[@18060 app.name="<application>" event.action="<action>" event.status="<event_state>" user.id="<uid>"]{<event_description>. Device Details - Device Serial : <serial_number>, Device OS: <os>|<event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^X]*)XMS[\s]+\-(?<audit_class>[^\[]*)\[@18060[\s]+app\.name=\"(?<application>[^\"]*)\"[\s]+event\.action=\"(?<action>[^\"]*)\"[\s]+event\.status=\"(?<event_state>[^\"]*)\"[\s]+user\.id=\"(?<uid>[^\"]*)\"\]((?<event_description>[^\.]*)\.[\s]+Device[\s]+Details[\s]+\-[\s]+Device[\s]+Serial[\s]+:[\s]+(?<serial_number>[^,]*),[\s]+Device[\s]+OS:[\s]+(?<os>.*)|(?<event_description>.*))$" }
				id => "message-Audit:02"
				add_field => {
					"[event][id]" => "Audit:02"
					"[rsa][message][id1]" => "Audit:02"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{hfld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:mm:ss" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[event_id]"
		destination => "[event_cat]"
		dictionary => {
			"CertificateMgmt_DeleteCert_fail" => "1703000000"
			"CredentialProvider_AddProvider_Success" => "1701010000"
			"CredentialProvider_UpdateProvider_Success" => "1701020000"
			"DeliveryGroup_DeleteGroups_Success" => "1701030000"
			"DeliveryGroup_UpdateGroup_Success" => "1701020000"
			"Device_RemoveDevice_Success" => "1701030000"
			"DevicePolicy_AddPolicy_Success" => "1701010000"
			"DevicePolicy_DeletePolicyList_Success" => "1701030000"
			"DevicePolicy_UpdatePolicy_Success" => "1701020000"
			"LocalUser_AddUser_Success" => "1701010000"
			"MobileApp_CreateApp_Success" => "1701010000"
			"ZdmService_Login_Success" => "1401060000"
			"ZdmService_Login_Fail" => "1401030000"
			"Login_succeeded" => "1401060000"
			"Login_failed" => "1401030000"
			"Logout_succeeded" => "1401070000"
		}
		fallback => "1901000000"
		override => true
	}
}
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1301000000" => "Auth.Failures"
			"1302000000" => "Auth.Successful"
			"1401030000" => "User.Activity.Failed Logins"
			"1401040000" => "User.Activity.Normal Activity"
			"1401060000" => "User.Activity.Successful Logins"
			"1401070000" => "User.Activity.Logoff"
			"1603000000" => "System.Errors"
			"1605000000" => "System.Normal Conditions"
			"1610000000" => "System.Startup"
			"1611000000" => "System.Shutdown"
			"1701010000" => "Config.Changes.Add"
			"1701020000" => "Config.Changes.Modify"
			"1701030000" => "Config.Changes.Delete"
			"1703000000" => "Config.Errors"
		}
		fallback => "Other.Default"
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-zenprisemdmmsg.json"
#			template_name => "zenprisemdm_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
