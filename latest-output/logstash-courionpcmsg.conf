# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "courionpc"
			"[observer][name]" => "Courion Password Courier"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: %COURIONPC-<hfld5>:<hfld1> <hfld2>;<hfld3>;<hfld4>;<messageid>;<!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%COURIONPC\-(?<hfld5>[^:]*):(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^;]*);(?<hfld3>[^;]*);(?<hfld4>[^;]*);(?<messageid>[^;]*);(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-courionpcmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "0000" {
		# MESSAGE 0000
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;PasswordResetRequest;<fqdn>:<network_port>;<fld5>;uid=<uid>,<dn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};PasswordResetRequest;%{fqdn}:%{network_port};%{fld5};uid=%{uid},%{dn}" }
				id => "message-0000"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Request"
				"ec_theme" => "Password"
				"action" => "PasswordResetRequest"
					"[event][id]" => "0000"
					"[rsa][message][id1]" => "0000"
					"[event][categoryid]" => "1402040100"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0000:01
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;PasswordResetRequest;<fld5>;<fld6>;<username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};PasswordResetRequest;%{fld5};%{fld6};%{username}" }
				id => "message-0000:01"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Request"
				"ec_theme" => "Password"
				"action" => "PasswordResetRequest"
					"[event][id]" => "0000:01"
					"[rsa][message][id1]" => "0000:01"
					"[event][categoryid]" => "1402040100"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};" }
			id => "msgParserId2"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Request"
				"ec_theme" => "Password"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;PasswordResetRequest;<fld5>;<fld6>;<username>
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};PasswordResetRequest;%{fld5};%{fld6};%{username}" }
			id => "msgParserId3"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Request"
				"ec_theme" => "Password"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};" }
			id => "msgParserId4"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Request"
				"ec_theme" => "Password"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};" }
			id => "msgParserId5"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "0005" {
		# MESSAGE 0005
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;Password reset for Netscape Directory Server failed on Server <fqdn>:<network_port>.    The search for DN "<dn>" failed because of the following reason: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};Password reset for Netscape Directory Server failed on Server %{fqdn}:%{network_port}.    The search for DN \"%{dn}\" failed because of the following reason: %{result}" }
				id => "message-0005"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "Password reset for Server failed "
					"[event][id]" => "0005"
					"[rsa][message][id1]" => "0005"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:01
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;Password reset for <fld3> Server failed on Server <fqdn>:<network_port>.    <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};Password reset for %{fld3} Server failed on Server %{fqdn}:%{network_port}.    %{result}" }
				id => "message-0005:01"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "Password reset for Server failed "
					"[event][id]" => "0005:01"
					"[rsa][message][id1]" => "0005:01"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:02
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;The user account '<username>' is disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};The user account '%{username}' is disabled" }
				id => "message-0005:02"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "The RPC server is unavailable."
					"[event][id]" => "0005:02"
					"[rsa][message][id1]" => "0005:02"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:03
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> The password does not meet the password policy requirements. Check the minimum password length, password complexity and password history requirements.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} The password does not meet the password policy requirements. Check the minimum password length, password complexity and password history requirements." }
				id => "message-0005:03"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "The password does not meet the password policy requirements"
					"[event][id]" => "0005:03"
					"[rsa][message][id1]" => "0005:03"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:04
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> The RPC server is unavailable.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} The RPC server is unavailable." }
				id => "message-0005:04"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "The RPC server is unavailable."
					"[event][id]" => "0005:04"
					"[rsa][message][id1]" => "0005:04"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:05
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> The server is unwilling to process the request.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} The server is unwilling to process the request." }
				id => "message-0005:05"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "The server is unwilling to process the request."
					"[event][id]" => "0005:05"
					"[rsa][message][id1]" => "0005:05"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:06
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> Password reset failed.  The user was not found on the current domain.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} Password reset failed.  The user was not found on the current domain." }
				id => "message-0005:06"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "Password reset failed.  The user was not found on the current domain."
					"[event][id]" => "0005:06"
					"[rsa][message][id1]" => "0005:06"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:07
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> A constraint violation occurred.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} A constraint violation occurred." }
				id => "message-0005:07"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "A constraint violation occurred."
					"[event][id]" => "0005:07"
					"[rsa][message][id1]" => "0005:07"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:08
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> The user name could not be found.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} The user name could not be found." }
				id => "message-0005:08"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "The user name could not be found"
					"[event][id]" => "0005:08"
					"[rsa][message][id1]" => "0005:08"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:09
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> Access is denied.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} Access is denied." }
				id => "message-0005:09"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "Access is denied."
					"[event][id]" => "0005:09"
					"[rsa][message][id1]" => "0005:09"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:10
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> Logon failure: the user has not been granted the requested logon type at this computer.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} Logon failure: the user has not been granted the requested logon type at this computer." }
				id => "message-0005:10"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "Logon failure: the user has not been granted the requested logon type at this computer."
					"[event][id]" => "0005:10"
					"[rsa][message][id1]" => "0005:10"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
		# MESSAGE 0005:11
		# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;<result> Logon failure: unknown user name or bad password.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};%{result} Logon failure: unknown user name or bad password." }
				id => "message-0005:11"
				add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_theme" => "Password"
				"ec_outcome" => "Failure"
				"event_description" => "Logon failure: unknown user name or bad password."
					"[event][id]" => "0005:11"
					"[rsa][message][id1]" => "0005:11"
					"[event][categoryid]" => "1402040101"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;PasswordResetRequest;<fld5>;<fld6>;<fld7>
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};PasswordResetRequest;%{fld5};%{fld6};%{fld7}" }
			id => "msgParserId18"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Request"
				"ec_theme" => "Password"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA: <fld1> <fld2>;<trans_id>;<sessionid>;<operation_id>;
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2};%{trans_id};%{sessionid};%{operation_id};" }
			id => "msgParserId19"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Request"
				"ec_theme" => "Password"
				"ec_outcome" => "Unknown"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "M-d-yyyy HH:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-courionpcmsg.json"
#			template_name => "courionpc_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
