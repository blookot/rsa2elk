# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "nexpose"
			"[observer][name]" => "Rapid7 NeXpose"
			"[observer][type]" => "Vulnerability"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0031
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] <hfld39>[Thread: <messageid>] [Started: <hfld40>] [Duration: <hfld41>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NEXPOSE-%{hfld49}: %{hdate}T%{htime} [%{hpriority}] %{hfld39}[Thread: %{messageid}] [Started: %{hfld40}] [Duration: %{hfld41}] %{message}" }
			id => "header-0031"
			add_field => {
				"[rsa][header][id]" => "0031"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>{] <hfld39>[|][|[}Thread: <hfld17>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]\]\[]*)(\][\s]+(?<hfld39>[^\[]*)\[|\]\[|\[)Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0028
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Site: <hsite>] <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0028"
			add_field => {
				"[rsa][header][id]" => "0028"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0017
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Site: <hsite>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0017"
			add_field => {
				"[rsa][header][id]" => "0017"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0024
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Site: <hsite>] <hfld41> <messageid> completed <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+(?<hfld41>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+completed[\s]+(?<payload>.*))$" }
			id => "header-0024"
			add_field => {
				"[rsa][header][id]" => "0024"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0018
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Site: <hsite>] [<hshost>:<hsport>/<hprotocol>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+\[(?<hshost>[^:]*):(?<hsport>[^/]*)/(?<hprotocol>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0018"
			add_field => {
				"[rsa][header][id]" => "0018"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0029
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Silo ID: <hfld22>] [Site: <hsite>] [Site ID: <hinfo>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Silo[\s]+ID:[\s]+(?<hfld22>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+\[Site[\s]+ID:[\s]+(?<hinfo>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0029"
			add_field => {
				"[rsa][header][id]" => "0029"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0019
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Site: <hsite>] [<hshost>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+\[(?<hshost>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0019"
			add_field => {
				"[rsa][header][id]" => "0019"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0020
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Site: <hsite>] [<hshost>:<hsport>/<hprotocol>] [<hinfo>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+\[(?<hshost>[^:]*):(?<hsport>[^/]*)/(?<hprotocol>[^\]]*)\][\s]+\[(?<hinfo>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0020"
			add_field => {
				"[rsa][header][id]" => "0020"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0021
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Site: <hsite>] [<hshost>] [<hinfo>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+\[(?<hshost>[^\]]*)\][\s]+\[(?<hinfo>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0021"
			add_field => {
				"[rsa][header][id]" => "0021"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0023
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Site: <hsite>] [<hshost>] [<hinfo>]: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Site:[\s]+(?<hsite>[^\]]*)\][\s]+\[(?<hshost>[^\]]*)\][\s]+\[(?<hinfo>[^\]]*)\]:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0023"
			add_field => {
				"[rsa][header][id]" => "0023"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0036
	# line in RSA: %NEXPOSE-<hfld49>: <hfld1>: <messageid> <hfld2> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld1>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0036"
			add_field => {
				"[rsa][header][id]" => "0036"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: %NEXPOSE-<hfld49>: <messageid> <hdate>T<htime> [<hobj_name>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NEXPOSE-%{hfld49}: %{messageid} %{hdate}T%{htime} [%{hobj_name}] %{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0037
	# line in RSA: %NEXPOSE-<hfld49>: <messageid> <hfld1> '<hfld2>' - <hfld1> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+'(?<hfld2>[^']*)'[\s]+\-[\s]+(?<hfld1>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0037"
			add_field => {
				"[rsa][header][id]" => "0037"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %NEXPOSE-<hfld49>: <messageid> <hdate>T<htime> <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NEXPOSE-%{hfld49}: %{messageid} %{hdate}T%{htime} %{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] (<hfld41>) <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+\((?<hfld41>[^\)]*)\)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0030
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]]*)\][\s]+\[Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0030"
			add_field => {
				"[rsa][header][id]" => "0030"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0040
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>] [Thread: <hfld17>] [Principal: <username>] [<messageid>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NEXPOSE-%{hfld49}: %{hdate}T%{htime} [%{hpriority}] [Thread: %{hfld17}] [Principal: %{username}] [%{messageid}: %{message}" }
			id => "header-0040"
			add_field => {
				"[rsa][header][id]" => "0040"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0034
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>{] [|][}Thread: <hfld17>] [<hfld18>] [<hfld19>] <messageid> <hfld21> <!payload:hfld18>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]\]]*)(\][\s]+\[|\]\[)Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[(?<message>(?<hfld18>[^\]]*)\][\s]+\[(?<hfld19>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<hfld21>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0034"
			add_field => {
				"[rsa][header][id]" => "0034"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0035
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>{] [|][|[}Thread: <hfld17>] [<hfld18>] <messageid> <hfld21> <!payload:hfld18>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]\]\[]*)(\][\s]+\[|\]\[|\[)Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[(?<message>(?<hfld18>[^\]]*)\][\s]+(?<messageid>[^\s]*)[\s]+(?<hfld21>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0035"
			add_field => {
				"[rsa][header][id]" => "0035"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0032
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>{] [|][}Thread: <hfld17>] [Silo ID: <hfld18>] [Report: <hobj_name>] [<messageid> Config ID: <hfld19>] <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]\]]*)(\][\s]+\[|\]\[)Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[Silo[\s]+ID:[\s]+(?<hfld18>[^\]]*)\][\s]+\[Report:[\s]+(?<hobj_name>[^\]]*)\][\s]+\[(?<message>(?<messageid>[^\s]*)[\s]+Config[\s]+ID:[\s]+(?<hfld19>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0032"
			add_field => {
				"[rsa][header][id]" => "0032"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0038
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <messageid>: <hfld1> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<hfld1>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0038"
			add_field => {
				"[rsa][header][id]" => "0038"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0039
	# line in RSA: %NEXPOSE-<hfld49>: <messageid>: <hfld1> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<hfld1>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0039"
			add_field => {
				"[rsa][header][id]" => "0039"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] <hfld48> <hfld41> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+(?<hfld48>[^\s]*)[\s]+(?<hfld41>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] [<messageid>] <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NEXPOSE-%{hfld49}: %{hfld40} %{hdate}T%{htime} [%{hobj_name}] [%{messageid}] %{message}" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0033
	# line in RSA: %NEXPOSE-<hfld49>: <hdate>T<htime> [<hpriority>{] [|][}Thread: <hfld17>] [<hfld18>] [<hfld19>] {[<hfld20>] [<hfld21>] [<hfld22>] [<hfld23>]|[<hfld20>] [<hfld21>]|[<hfld20>]} <messageid> <hfld24> <!payload:hfld18>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hpriority>[^\]\]]*)(\][\s]+\[|\]\[)Thread:[\s]+(?<hfld17>[^\]]*)\][\s]+\[(?<message>(?<hfld18>[^\]]*)\][\s]+\[(?<hfld19>[^\]]*)\][\s]+(\[(?<hfld20>[^\]]*)\][\s]+\[(?<hfld21>[^\]]*)\][\s]+\[(?<hfld22>[^\]]*)\][\s]+\[(?<hfld23>[^\]]*)\]|\[(?<hfld20>[^\]]*)\][\s]+\[(?<hfld21>[^\]]*)\]|\[(?<hfld20>[^\]]*)\])[\s]+(?<messageid>[^\s]*)[\s]+(?<hfld24>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0033"
			add_field => {
				"[rsa][header][id]" => "0033"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] (<messageid>) <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NEXPOSE-%{hfld49}: %{hfld40} %{hdate}T%{htime} [%{hobj_name}] (%{messageid}) %{message}" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] <fld41> <messageid> <!payload:fld41>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+(?<message>(?<fld41>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>]  <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0011
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> <messageid>(<hobj_name>): <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NEXPOSE-%{hfld49}: %{hfld40} %{hdate}T%{htime} %{messageid}(%{hobj_name}): %{message}" }
			id => "header-0011"
			add_field => {
				"[rsa][header][id]" => "0011"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> <hfld41> <hfld42> <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+(?<hfld41>[^\s]*)[\s]+(?<hfld42>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] <hfld45> (<hfld46>) - <msgIdPart1> <msgIdPart2> <msgIdPart3> <!payload:hfld45>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+(?<message>(?<hfld45>[^\s]*)[\s]+\((?<hfld46>[^\)]*)\)[\s]+\-[\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\s]*)[\s]+(?<msgIdPart3>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] <hfld45> (<hfld46>) - <msgIdPart1> <msgIdPart2> <!payload:hfld45>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+(?<message>(?<hfld45>[^\s]*)[\s]+\((?<hfld46>[^\)]*)\)[\s]+\-[\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] <hfld45> (<hfld46>) - <messageid> <!payload:hfld45>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+(?<message>(?<hfld45>[^\s]*)[\s]+\((?<hfld46>[^\)]*)\)[\s]+\-[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0016
	# line in RSA: %NEXPOSE-<hfld49>: <hfld40> <hdate>T<htime> [<hobj_name>] <hfld45> (<hfld46>) - <msgIdPart1> <msgIdPart2>(U) <!payload:hfld45>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld40>[^\s]*)[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+\[(?<hobj_name>[^\]]*)\][\s]+(?<message>(?<hfld45>[^\s]*)[\s]+\((?<hfld46>[^\)]*)\)[\s]+\-[\s]+(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\(]*)\(U\)[\s]+(?<payload>.*))$" }
			id => "header-0016"
			add_field => {
				"[rsa][header][id]" => "0016"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0026
	# line in RSA: %NEXPOSE-<hfld49>: <messageid> Constructor threw <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+Constructor[\s]+threw[\s]+(?<payload>.*))$" }
			id => "header-0026"
			add_field => {
				"[rsa][header][id]" => "0026"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0027
	# line in RSA: %NEXPOSE-<hfld49>: <messageid> Called method <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<message>(?<messageid>[^\s]*)[\s]+Called[\s]+method[\s]+(?<payload>.*))$" }
			id => "header-0027"
			add_field => {
				"[rsa][header][id]" => "0027"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0025
	# line in RSA: %NEXPOSE-<hfld49>: <hfld41> <hfld42> <messageid> frames <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%NEXPOSE\-(?<hfld49>[^:]*):[\s]+(?<hfld41>[^\s]*)[\s]+(?<hfld42>[^\s]*)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+frames[\s]+(?<payload>.*))$" }
			id => "header-0025"
			add_field => {
				"[rsa][header][id]" => "0025"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: %NEXPOSE-<hfld49>: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%NEXPOSE-%{hfld49}: %{message}" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "NEXPOSE_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-nexposemsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:  <signame> - NOT VULNERABLE VERSION .
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{signame} - NOT VULNERABLE VERSION ." }
			id => "msgParserId0"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId1
	# line in RSA:  <signame> - VULNERABLE VERSION .
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{signame} - VULNERABLE VERSION ." }
			id => "msgParserId1"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "NOT_VULNERABLE" {
		# MESSAGE NOT_VULNERABLE
		# line in RSA:  <signame> - NOT VULNERABLE [UNIQUE ID: <fld45>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{signame} - NOT VULNERABLE [UNIQUE ID: %{fld45}]" }
				id => "message-NOT_VULNERABLE"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "NOT_VULNERABLE"
					"[rsa][message][id1]" => "NOT_VULNERABLE"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE NOT_VULNERABLE:01
		# line in RSA:  <signame> - NOT VULNERABLE(U) [UNIQUE ID: <fld45>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{signame} - NOT VULNERABLE(U) [UNIQUE ID: %{fld45}]" }
				id => "message-NOT_VULNERABLE:01"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "NOT_VULNERABLE:01"
					"[rsa][message][id1]" => "NOT_VULNERABLE:01"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE NOT_VULNERABLE:02
		# line in RSA:  <signame> - NOT VULNERABLE .
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{signame} - NOT VULNERABLE ." }
				id => "message-NOT_VULNERABLE:02"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "NOT_VULNERABLE:02"
					"[rsa][message][id1]" => "NOT_VULNERABLE:02"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "VULNERABLE" {
		# MESSAGE VULNERABLE
		# line in RSA:  <signame> - VULNERABLE [UNIQUE ID: <fld45>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{signame} - VULNERABLE [UNIQUE ID: %{fld45}]" }
				id => "message-VULNERABLE"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "VULNERABLE"
					"[rsa][message][id1]" => "VULNERABLE"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE VULNERABLE:01
		# line in RSA:  <signame> - VULNERABLE .
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{signame} - VULNERABLE ." }
				id => "message-VULNERABLE:01"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "VULNERABLE:01"
					"[rsa][message][id1]" => "VULNERABLE:01"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ERROR" {
		# MESSAGE ERROR
		# line in RSA:  <signame> - ERROR [UNIQUE ID: <fld45>] - <context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{signame} - ERROR [UNIQUE ID: %{fld45}] - %{context}" }
				id => "message-ERROR"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Error"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "ERROR"
					"[rsa][message][id1]" => "ERROR"
					"[event][categoryid]" => "1614030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ERROR:01
		# line in RSA:  <signame> - ERROR - <context>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{signame} - ERROR - %{context}" }
				id => "message-ERROR:01"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Error"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "ERROR:01"
					"[rsa][message][id1]" => "ERROR:01"
					"[event][categoryid]" => "1614030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ExtMgr" {
		# MESSAGE ExtMgr
		# line in RSA:  Initialization successful.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Initialization successful." }
				id => "message-ExtMgr"
				add_field => {
				"ec_activity" => "Start"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
				"event_description" => "Initialization successful"
					"[event][id]" => "ExtMgr"
					"[rsa][message][id1]" => "ExtMgr"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ExtMgr:01
		# line in RSA:  initializing...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "initializing..." }
				id => "message-ExtMgr:01"
				add_field => {
				"ec_activity" => "Start"
				"ec_theme" => "TEV"
				"event_description" => "initializing"
					"[event][id]" => "ExtMgr:01"
					"[rsa][message][id1]" => "ExtMgr:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ExtMgr:02
		# line in RSA:  Shutdown successful.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Shutdown successful." }
				id => "message-ExtMgr:02"
				add_field => {
				"ec_activity" => "Stop"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
				"event_description" => "Shutdown successful."
					"[event][id]" => "ExtMgr:02"
					"[rsa][message][id1]" => "ExtMgr:02"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ExtMgr:03
		# line in RSA:  Shutting down...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Shutting down..." }
				id => "message-ExtMgr:03"
				add_field => {
				"ec_activity" => "Stop"
				"ec_theme" => "TEV"
				"action" => "Shutting down"
					"[event][id]" => "ExtMgr:03"
					"[rsa][message][id1]" => "ExtMgr:03"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ScanMgr" {
		# MESSAGE ScanMgr
		# line in RSA:  Shutting down <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Shutting down %{info}" }
				id => "message-ScanMgr"
				add_field => {
				"ec_activity" => "Stop"
				"ec_theme" => "TEV"
				"action" => "Shutting down"
					"[event][id]" => "ScanMgr"
					"[rsa][message][id1]" => "ScanMgr"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ScanMgr:01
		# line in RSA:  shutting down...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "shutting down..." }
				id => "message-ScanMgr:01"
				add_field => {
				"ec_activity" => "Stop"
				"ec_theme" => "TEV"
				"action" => "shutting down"
					"[event][id]" => "ScanMgr:01"
					"[rsa][message][id1]" => "ScanMgr:01"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ScanMgr:02
		# line in RSA:  Scan <fld30> is being stopped.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan %{fld30} is being stopped." }
				id => "message-ScanMgr:02"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Failure"
					"[event][id]" => "ScanMgr:02"
					"[rsa][message][id1]" => "ScanMgr:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "NSE" {
		# MESSAGE NSE
		# line in RSA:  Logging initialized <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Logging initialized %{fld30}" }
				id => "message-NSE"
				add_field => {
				"action" => "Logging initialized"
					"[event][id]" => "NSE"
					"[rsa][message][id1]" => "NSE"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE NSE:01
		# line in RSA:  { Initializing | initializing } <fld30>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*Initializing[\s]+|[\s]*initializing[\s]+)[\s]+(?<fld30>.*)$" }
				id => "message-NSE:01"
				add_field => {
				"action" => "Initializing"
					"[event][id]" => "NSE:01"
					"[rsa][message][id1]" => "NSE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE NSE:02
		# line in RSA:  shutting down <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "shutting down %{fld30}" }
				id => "message-NSE:02"
				add_field => {
				"action" => "shutting down"
					"[event][id]" => "NSE:02"
					"[rsa][message][id1]" => "NSE:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE NSE:03
		# line in RSA:  NeXpose scan engine initialization completed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NeXpose scan engine initialization completed." }
				id => "message-NSE:03"
				add_field => {
				"event_description" => "NeXpose scan engine initialization completed."
					"[event][id]" => "NSE:03"
					"[rsa][message][id1]" => "NSE:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE NSE:04
		# line in RSA:  disabling promiscuous on all devices...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "disabling promiscuous on all devices..." }
				id => "message-NSE:04"
				add_field => {
				"event_description" => "disabling promiscuous on all devices"
					"[event][id]" => "NSE:04"
					"[rsa][message][id1]" => "NSE:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE NSE:05
		# line in RSA:  NSE connection failure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NSE connection failure" }
				id => "message-NSE:05"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "NSE:05"
					"[rsa][message][id1]" => "NSE:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE NSE:07
		# line in RSA:  NSE DN is <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NSE DN is %{info}" }
				id => "message-NSE:07"
				add_field => {
					"[event][id]" => "NSE:07"
					"[rsa][message][id1]" => "NSE:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Console" {
		# MESSAGE Console
		# line in RSA:  NSE Name: <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NSE Name: %{fld30}" }
				id => "message-Console"
				add_field => {
					"[event][id]" => "Console"
					"[rsa][message][id1]" => "Console"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Console:01
		# line in RSA:  NSE Identifier: <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NSE Identifier: %{fld30}" }
				id => "message-Console:01"
				add_field => {
					"[event][id]" => "Console:01"
					"[rsa][message][id1]" => "Console:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Console:02
		# line in RSA:  NSE version: <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NSE version: %{fld30}" }
				id => "message-Console:02"
				add_field => {
					"[event][id]" => "Console:02"
					"[rsa][message][id1]" => "Console:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Console:03
		# line in RSA:  Last update: <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Last update: %{fld30}" }
				id => "message-Console:03"
				add_field => {
					"[event][id]" => "Console:03"
					"[rsa][message][id1]" => "Console:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Console:04
		# line in RSA:  VM version: <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VM version: %{fld30}" }
				id => "message-Console:04"
				add_field => {
					"[event][id]" => "Console:04"
					"[rsa][message][id1]" => "Console:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Console:05
		# line in RSA:  log rotation completed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "log rotation completed" }
				id => "message-Console:05"
				add_field => {
				"event_description" => "log rotation completed"
					"[event][id]" => "Console:05"
					"[rsa][message][id1]" => "Console:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Console:06
		# line in RSA:  rotating logs...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "rotating logs..." }
				id => "message-Console:06"
				add_field => {
				"action" => "rotating logs"
					"[event][id]" => "Console:06"
					"[rsa][message][id1]" => "Console:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA:  Loaded <fld30>
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "Loaded %{fld30}" }
			id => "msgParserId28"
			add_field => {
				"action" => "Loaded"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Nexpose" {
		# MESSAGE Nexpose
		# line in RSA:  Closing service: <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Closing service: %{fld30}" }
				id => "message-Nexpose"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"action" => "Closing service"
					"[event][id]" => "Nexpose"
					"[rsa][message][id1]" => "Nexpose"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:01
		# line in RSA:  Freeing <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Freeing %{fld30}" }
				id => "message-Nexpose:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"action" => "Freeing"
					"[event][id]" => "Nexpose:01"
					"[rsa][message][id1]" => "Nexpose:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:02
		# line in RSA:  starting <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "starting %{fld30}" }
				id => "message-Nexpose:02"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"action" => "starting"
					"[event][id]" => "Nexpose:02"
					"[rsa][message][id1]" => "Nexpose:02"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:03
		# line in RSA:  <fld31> nodes completed, <fld32> active, <fld33> pending.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld31} nodes completed, %{fld32} active, %{fld33} pending." }
				id => "message-Nexpose:03"
				add_field => {
					"[event][id]" => "Nexpose:03"
					"[rsa][message][id1]" => "Nexpose:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Backup_completed
		# line in RSA:  Nexpose system backup completed successfully in <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nexpose system backup completed successfully in %{info}" }
				id => "message-Backup_completed"
				add_field => {
				"event_description" => "Backup completed"
					"[event][id]" => "Backup_completed"
					"[rsa][message][id1]" => "Backup_completed"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:04
		# line in RSA:  Nexpose is changing the database port number from <change_old> to <change_new>. DONE.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nexpose is changing the database port number from %{change_old} to %{change_new}. DONE." }
				id => "message-Nexpose:04"
				add_field => {
				"event_description" => "Nexpose is changing the database port number"
				"event_state" => "DONE"
					"[event][id]" => "Nexpose:04"
					"[rsa][message][id1]" => "Nexpose:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:05
		# line in RSA:  Nexpose is changing the database port number from <change_old> to <change_new>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nexpose is changing the database port number from %{change_old} to %{change_new}." }
				id => "message-Nexpose:05"
				add_field => {
				"event_description" => "Nexpose is changing the database port number"
					"[event][id]" => "Nexpose:05"
					"[rsa][message][id1]" => "Nexpose:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:06
		# line in RSA:  Nexpose is executing the data transfer process from <change_old> to <change_new> DONE.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nexpose is executing the data transfer process from %{change_old} to %{change_new} DONE." }
				id => "message-Nexpose:06"
				add_field => {
				"event_description" => "Nexpose is executing data transfer process"
				"event_state" => "DONE"
					"[event][id]" => "Nexpose:06"
					"[rsa][message][id1]" => "Nexpose:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:07
		# line in RSA:  Nexpose is executing the data transfer process from <change_old> to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nexpose is executing the data transfer process from %{change_old} to %{change_new}" }
				id => "message-Nexpose:07"
				add_field => {
				"event_description" => "Nexpose is executing data transfer process"
					"[event][id]" => "Nexpose:07"
					"[rsa][message][id1]" => "Nexpose:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:08
		# line in RSA:  Nexpose is installing the <db_name> database. DONE.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nexpose is installing the %{db_name} database. DONE." }
				id => "message-Nexpose:08"
				add_field => {
				"event_description" => "Nexpose is installing the database"
				"event_state" => "DONE"
					"[event][id]" => "Nexpose:08"
					"[rsa][message][id1]" => "Nexpose:08"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:09
		# line in RSA:  Nexpose is installing the <db_name> database to <directory> using PostgreSQL binaries from package <filename>.<fld1>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nexpose is installing the %{db_name} database to %{directory} using PostgreSQL binaries from package %{filename}.%{fld1}." }
				id => "message-Nexpose:09"
				add_field => {
				"event_description" => "Nexpose is installing the database"
					"[event][id]" => "Nexpose:09"
					"[rsa][message][id1]" => "Nexpose:09"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:10
		# line in RSA:  Nexpose is moving <change_old> to <change_new>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nexpose is moving %{change_old} to %{change_new}." }
				id => "message-Nexpose:10"
				add_field => {
				"event_description" => "Nexpose is moving a directory"
					"[event][id]" => "Nexpose:10"
					"[rsa][message][id1]" => "Nexpose:10"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:11
		# line in RSA:  <event_description> DONE.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description} DONE." }
				id => "message-Nexpose:11"
				add_field => {
				"event_state" => "DONE"
					"[event][id]" => "Nexpose:11"
					"[rsa][message][id1]" => "Nexpose:11"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nexpose:12
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Nexpose:12"
				add_field => {
					"[event][id]" => "Nexpose:12"
					"[rsa][message][id1]" => "Nexpose:12"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA:  Shutting down <fld30>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "Shutting down %{fld30}" }
			id => "msgParserId33"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"action" => "Shutting down"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId34
	# line in RSA:  Interrupted, <event_description>
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "Interrupted, %{event_description}" }
			id => "msgParserId34"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId35
	# line in RSA:  shutting down <fld30>
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "shutting down %{fld30}" }
			id => "msgParserId35"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"action" => "shutting down"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId36
	# line in RSA:  Shutdown successful.
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "Shutdown successful." }
			id => "msgParserId36"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"action" => "Shutting down"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security" {
		# MESSAGE Security
		# line in RSA:  Security Console shutting down.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security Console shutting down." }
				id => "message-Security"
				add_field => {
				"action" => "Shutting down"
					"[event][id]" => "Security"
					"[rsa][message][id1]" => "Security"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:02
		# line in RSA:  Security Console restarting from an auto-update
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security Console restarting from an auto-update" }
				id => "message-Security:02"
				add_field => {
					"[event][id]" => "Security:02"
					"[rsa][message][id1]" => "Security:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:06
		# line in RSA: Started: <fld1>] [Duration: <fld2>] Security Console started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Started: %{fld1}] [Duration: %{fld2}] Security Console started" }
				id => "message-Security:06"
				add_field => {
					"[event][id]" => "Security:06"
					"[rsa][message][id1]" => "Security:06"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Security:03
		# line in RSA:  { Security Console started | Security Console web interface ready. <info> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*Security[\s]+Console[\s]+started[\s]+|[\s]*Security[\s]+Console[\s]+web[\s]+interface[\s]+ready\.[\s]+(?<info>[^\s]*)[\s]+)$" }
				id => "message-Security:03"
				add_field => {
					"[event][id]" => "Security:03"
					"[rsa][message][id1]" => "Security:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Security:04
		# line in RSA:  Security Console is launching in Maintenance Mode. <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security Console is launching in Maintenance Mode. %{action}." }
				id => "message-Security:04"
				add_field => {
				"event_description" => "Security Console is launching in Maintenance Mode"
					"[event][id]" => "Security:04"
					"[rsa][message][id1]" => "Security:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Security:05
		# line in RSA:  Security Console update failed.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security Console update failed." }
				id => "message-Security:05"
				add_field => {
				"event_description" => "Security Console update failed"
					"[event][id]" => "Security:05"
					"[rsa][message][id1]" => "Security:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Web" {
		# MESSAGE Web
		# line in RSA:  Web server stopped
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Web server stopped" }
				id => "message-Web"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"action" => "Stopped"
					"[event][id]" => "Web"
					"[rsa][message][id1]" => "Web"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Web:02
		# line in RSA:  Web <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Web %{info}" }
				id => "message-Web:02"
				add_field => {
					"[event][id]" => "Web:02"
					"[rsa][message][id1]" => "Web:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Done" {
		# MESSAGE Done
		# line in RSA:  Done shutting down.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Done shutting down." }
				id => "message-Done"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"action" => "shutting down"
					"[event][id]" => "Done"
					"[rsa][message][id1]" => "Done"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Done:02
		# line in RSA:  Done with statistics generation [Started: <fld1>] [Duration: <fld2>]. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Done with statistics generation [Started: %{fld1}] [Duration: %{fld2}]." }
				id => "message-Done:02"
				add_field => {
					"[event][id]" => "Done:02"
					"[rsa][message][id1]" => "Done:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Queueing" {
		# MESSAGE Queueing:01
		# line in RSA:  Queueing <protocol> port scan
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Queueing %{protocol} port scan" }
				id => "message-Queueing:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Queueing:01"
					"[rsa][message][id1]" => "Queueing:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Queueing
		# line in RSA:  Queueing <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Queueing %{fld30}" }
				id => "message-Queueing"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"action" => "Queueing"
					"[event][id]" => "Queueing"
					"[rsa][message][id1]" => "Queueing"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Performing" {
		# MESSAGE Performing
		# line in RSA:  Performing { form | query } injection against <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Performing[\s]+([\s]*form[\s]+|[\s]*query[\s]+)[\s]+injection[\s]+against[\s]+(?<info>.*)$" }
				id => "message-Performing"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"action" => "Performing injection"
					"[event][id]" => "Performing"
					"[rsa][message][id1]" => "Performing"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Performing:01
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Performing:01"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "Performing:01"
					"[rsa][message][id1]" => "Performing:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:  Trying <fld30> injection <fld31>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "Trying %{fld30} injection %{fld31}" }
			id => "msgParserId44"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"action" => "Trying injection"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId45
	# line in RSA:  Rewrote to <url>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "Rewrote to %{url}" }
			id => "msgParserId45"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId46
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId46"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Scan" {
		# MESSAGE Scan
		# line in RSA:  Scan started by: "<username>" <fld34>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan started by: \"%{username}\" %{fld34}" }
				id => "message-Scan"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"action" => "scan started"
					"[event][id]" => "Scan"
					"[rsa][message][id1]" => "Scan"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:01
		# line in RSA:  Scan [<fld35>] completed in <fld36>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan [%{fld35}] completed in %{fld36}" }
				id => "message-Scan:01"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
				"action" => "scan completed"
					"[event][id]" => "Scan:01"
					"[rsa][message][id1]" => "Scan:01"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:03
		# line in RSA:  Scan for site <fld11> started by Schedule[<info>].
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan for site %{fld11} started by Schedule[%{info}]." }
				id => "message-Scan:03"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:03"
					"[rsa][message][id1]" => "Scan:03"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:04
		# line in RSA:  Scan startup took <fld24> seconds
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan startup took %{fld24} seconds" }
				id => "message-Scan:04"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:04"
					"[rsa][message][id1]" => "Scan:04"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:06
		# line in RSA:  Scan: [{ <saddr>:<sport> | <saddr> }] <fld12> (<info>) - VULNERABLE VERSION
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Scan:[\s]+\[([\s]*(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)\][\s]+(?<fld12>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+\-[\s]+VULNERABLE[\s]+VERSION$" }
				id => "message-Scan:06"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:06"
					"[rsa][message][id1]" => "Scan:06"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:05
		# line in RSA:  Scan: [{ <saddr>:<sport> | <saddr> }] <fld12> (<info>) - VULNERABLE
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Scan:[\s]+\[([\s]*(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)\][\s]+(?<fld12>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+\-[\s]+VULNERABLE$" }
				id => "message-Scan:05"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:05"
					"[rsa][message][id1]" => "Scan:05"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:07
		# line in RSA:  Scan: [{ <saddr>:<sport> | <saddr> }] <fld12> (<info>) - NOT VULNERABLE VERSION
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Scan:[\s]+\[([\s]*(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)\][\s]+(?<fld12>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+\-[\s]+NOT[\s]+VULNERABLE[\s]+VERSION$" }
				id => "message-Scan:07"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:07"
					"[rsa][message][id1]" => "Scan:07"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:09
		# line in RSA:  Scan: [{ <saddr>:<sport> | <saddr> }] <fld12> (<info>) - NOT VULNERABLE [UNIQUE ID: <fld13>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Scan:[\s]+\[([\s]*(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)\][\s]+(?<fld12>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+\-[\s]+NOT[\s]+VULNERABLE[\s]+\[UNIQUE[\s]+ID:[\s]+(?<fld13>[^\]]*)\]$" }
				id => "message-Scan:09"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:09"
					"[rsa][message][id1]" => "Scan:09"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:08
		# line in RSA:  Scan: [{ <saddr>:<sport> | <saddr> }] <fld12> (<info>) - NOT VULNERABLE
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Scan:[\s]+\[([\s]*(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)\][\s]+(?<fld12>[^\s]*)[\s]+\((?<info>[^\)]*)\)[\s]+\-[\s]+NOT[\s]+VULNERABLE$" }
				id => "message-Scan:08"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:08"
					"[rsa][message][id1]" => "Scan:08"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:10
		# line in RSA:  Scan for site <fld12> started by "<username>".
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan for site %{fld12} started by \"%{username}\"." }
				id => "message-Scan:10"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:10"
					"[rsa][message][id1]" => "Scan:10"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:11
		# line in RSA:  Scan stopped: "<username>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan stopped: \"%{username}\"" }
				id => "message-Scan:11"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:11"
					"[rsa][message][id1]" => "Scan:11"
					"[event][categoryid]" => "1614030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:12
		# line in RSA:  Scan Engine shutting down...
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan Engine shutting down..." }
				id => "message-Scan:12"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Error"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:12"
					"[rsa][message][id1]" => "Scan:12"
					"[event][categoryid]" => "1611000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:13
		# line in RSA: Scan ID: <fld1>] [Started: <fld2>T<fld3>] [Duration: <fld4>] Scan synopsis inconsistency resolved.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan ID: %{fld1}] [Started: %{fld2}T%{fld3}] [Duration: %{fld4}] Scan synopsis inconsistency resolved." }
				id => "message-Scan:13"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
				"event_description" => "Scan synopsis inconsistency resolved"
					"[event][id]" => "Scan:13"
					"[rsa][message][id1]" => "Scan:13"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:15
		# line in RSA: Silo ID: <fld1>] [Scan ID: <fld2>] Scan for site <audit_object> - {Non-Windows Systems Audit|Audit} restored. <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Silo[\s]+ID:[\s]+(?<fld1>[^\]]*)\][\s]+\[Scan[\s]+ID:[\s]+(?<fld2>[^\]]*)\][\s]+Scan[\s]+for[\s]+site[\s]+(?<audit_object>[^\s]*)[\s]+\-[\s]+(Non\-Windows[\s]+Systems[\s]+Audit|Audit)[\s]+restored\.[\s]+(?<info>.*)$" }
				id => "message-Scan:15"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
				"event_description" => "Scan for site restored"
					"[event][id]" => "Scan:15"
					"[rsa][message][id1]" => "Scan:15"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scan:02
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Scan:02"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Scan:02"
					"[rsa][message][id1]" => "Scan:02"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: Scan ID: <fld1>] Inconsistency discovered for scan. <info>
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "Scan ID: %{fld1}] Inconsistency discovered for scan. %{info}" }
			id => "msgParserId60"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Unknown"
				"event_description" => "Inconsistency discovered for scan"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId63
	# line in RSA:  Site saved.
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "Site saved." }
			id => "msgParserId63"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId64
	# line in RSA:  Authenticated: <username>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "Authenticated: %{username}" }
			id => "msgParserId64"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Authentication" {
		# MESSAGE Authentication
		# line in RSA:  Authentication failed. Login information is missing.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authentication failed. Login information is missing." }
				id => "message-Authentication"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Authentication"
					"[rsa][message][id1]" => "Authentication"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Authentication:01
		# line in RSA:  Authentication failed for <username>: Access denied.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authentication failed for %{username}: Access denied." }
				id => "message-Authentication:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Authentication:01"
					"[rsa][message][id1]" => "Authentication:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Authentication:02
		# line in RSA:  Authentication failed. User account may be invalid or disabled.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Authentication failed. User account may be invalid or disabled." }
				id => "message-Authentication:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Authentication:02"
					"[rsa][message][id1]" => "Authentication:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Authentication:03
		# line in RSA: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}" }
				id => "message-Authentication:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"obj_name" => "%{hobj_name}"
					"[event][id]" => "Authentication:03"
					"[rsa][message][id1]" => "Authentication:03"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "User" {
		# MESSAGE User
		# line in RSA:  User (<username>) is over the limit (<fld12>) for failed login attempts.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User (%{username}) is over the limit (%{fld12}) for failed login attempts." }
				id => "message-User"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "User"
					"[rsa][message][id1]" => "User"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE User:04
		# line in RSA:  User name:                       <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "User name:                       %{username}" }
				id => "message-User:04"
				add_field => {
					"[event][id]" => "User:04"
					"[rsa][message][id1]" => "User:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId70"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Adding" {
		# MESSAGE Adding:01
		# line in RSA:  Adding user to datastore: <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Adding user to datastore: %{username}" }
				id => "message-Adding:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"obj_type" => "User"
					"[event][id]" => "Adding:01"
					"[rsa][message][id1]" => "Adding:01"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Adding
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Adding"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "Adding"
					"[rsa][message][id1]" => "Adding"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId72
	# line in RSA:  spider-parse-robot-exclusions: <fld40> Malformed HTTP <fld41>
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "spider-parse-robot-exclusions: %{fld40} Malformed HTTP %{fld41}" }
			id => "msgParserId72"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId73
	# line in RSA:  Searching for <service> domain <fld11>...
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "Searching for %{service} domain %{fld11}..." }
			id => "msgParserId73"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId74
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId74"
			add_field => {
				"ec_subject" => "NetworkComm"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId75
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId75" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId75"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Attempting" {
		# MESSAGE Attempting:01
		# line in RSA:  Attempting to authenticate user <username> from <saddr>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Attempting to authenticate user %{username} from %{saddr}." }
				id => "message-Attempting:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Attempting:01"
					"[rsa][message][id1]" => "Attempting:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Attempting
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Attempting"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Attempting"
					"[rsa][message][id1]" => "Attempting"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Recursively" {
		# MESSAGE Recursively:01
		# line in RSA:  Recursively listing files on <service>[<info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Recursively listing files on %{service}[%{info}]" }
				id => "message-Recursively:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Recursively:01"
					"[rsa][message][id1]" => "Recursively:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Recursively
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Recursively"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "Recursively"
					"[rsa][message][id1]" => "Recursively"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId77" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId77"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId79
	# line in RSA:  creating new connection to <obj_name>
	else if [logstash][msgparser][id] == "msgParserId79" {
		dissect {
			mapping => { "message" => "creating new connection to %{obj_name}" }
			id => "msgParserId79"
			add_field => {
				"ec_subject" => "NetworkComm"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId80
	# line in RSA:  Trusted MAC address checking is disabled
	else if [logstash][msgparser][id] == "msgParserId80" {
		dissect {
			mapping => { "message" => "Trusted MAC address checking is disabled" }
			id => "msgParserId80"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId81
	# line in RSA:  signon_type: <fld40>
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "signon_type: %{fld40}" }
			id => "msgParserId81"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Asserting" {
		# MESSAGE Asserting
		# line in RSA:  Asserting software fingerprint name=<obj_name>, version=<version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Asserting software fingerprint name=%{obj_name}, version=%{version}" }
				id => "message-Asserting"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"obj_type" => "Software Fingerprint"
					"[event][id]" => "Asserting"
					"[rsa][message][id1]" => "Asserting"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Asserting:01
		# line in RSA:  Asserting run entry: <service>: <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Asserting run entry: %{service}: %{filename}" }
				id => "message-Asserting:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Asserting:01"
					"[rsa][message][id1]" => "Asserting:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Asserting:02
		# line in RSA:  Asserting network interface: <sinterface> with IP: <saddr> and netmask: <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Asserting network interface: %{sinterface} with IP: %{saddr} and netmask: %{fld12}" }
				id => "message-Asserting:02"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Asserting:02"
					"[rsa][message][id1]" => "Asserting:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Asserting:03
		# line in RSA:  Asserting highest MDAC version of <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Asserting highest MDAC version of %{version}" }
				id => "message-Asserting:03"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Asserting:03"
					"[rsa][message][id1]" => "Asserting:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Asserting:04
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Asserting:04"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "Asserting:04"
					"[rsa][message][id1]" => "Asserting:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Determining" {
		# MESSAGE Determining:01
		# line in RSA:  Determining version of file <filename> (<application>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Determining version of file %{filename} (%{application})" }
				id => "message-Determining:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Determining:01"
					"[rsa][message][id1]" => "Determining:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Determining
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Determining"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "Determining"
					"[rsa][message][id1]" => "Determining"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId87
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId87" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId87"
			add_field => {
				"ec_subject" => "Service"
				"ec_outcome" => "Failure"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Running" {
		# MESSAGE Running:02
		# line in RSA:  Running unresolved <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Running unresolved %{service}" }
				id => "message-Running:02"
				add_field => {
				"ec_subject" => "Service"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Running:02"
					"[rsa][message][id1]" => "Running:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Running:01
		# line in RSA:  Running <protocol> service <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Running %{protocol} service %{service}" }
				id => "message-Running:01"
				add_field => {
				"ec_subject" => "Service"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Running:01"
					"[rsa][message][id1]" => "Running:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Running
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Running"
				add_field => {
				"ec_subject" => "Service"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "Running"
					"[rsa][message][id1]" => "Running"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Service" {
		# MESSAGE path:
		# line in RSA:  {Service path:|path:} <filename>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(Service[\s]+path:|path:)[\s]+(?<filename>.*)$" }
				id => "message-path:"
				add_field => {
					"[event][id]" => "path:"
					"[rsa][message][id1]" => "path:"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE path:01
		# line in RSA:   Service path is insecure.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Service path is insecure." }
				id => "message-path:01"
				add_field => {
				"info" => "Service path is insecure."
					"[event][id]" => "path:01"
					"[rsa][message][id1]" => "path:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Service
		# line in RSA: Service <service> <action> on Provider: <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Service %{service} %{action} on Provider: %{fld2}" }
				id => "message-Service"
				add_field => {
					"[event][id]" => "Service"
					"[rsa][message][id1]" => "Service"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ServiceFingerprint
		# line in RSA: Service running: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Service running: %{event_description}" }
				id => "message-ServiceFingerprint"
				add_field => {
				"ec_subject" => "Service"
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "ServiceFingerprint"
					"[rsa][message][id1]" => "ServiceFingerprint"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE path
		# line in RSA:  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}" }
				id => "message-path"
				add_field => {
					"[event][id]" => "path"
					"[rsa][message][id1]" => "path"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Found" {
		# MESSAGE Found:01
		# line in RSA:  Found group: CIFS Group <group>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Found group: CIFS Group %{group}" }
				id => "message-Found:01"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Found:01"
					"[rsa][message][id1]" => "Found:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Found:02
		# line in RSA:  Found user: CIFS User <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Found user: CIFS User %{username}" }
				id => "message-Found:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Found:02"
					"[rsa][message][id1]" => "Found:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Found:03
		# line in RSA:  Found user <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Found user %{username}" }
				id => "message-Found:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Detect"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Found:03"
					"[rsa][message][id1]" => "Found:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Found:04
		# line in RSA:  Found interface <sinterface>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Found interface %{sinterface}" }
				id => "message-Found:04"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Found:04"
					"[rsa][message][id1]" => "Found:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Found:05
		# line in RSA:  Found DHCP-assigned WINS server: <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Found DHCP-assigned WINS server: %{saddr}" }
				id => "message-Found:05"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Found:05"
					"[rsa][message][id1]" => "Found:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Found
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Found"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "Found"
					"[rsa][message][id1]" => "Found"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId101
	# line in RSA:  FTP name: <fld40>
	else if [logstash][msgparser][id] == "msgParserId101" {
		dissect {
			mapping => { "message" => "FTP name: %{fld40}" }
			id => "msgParserId101"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Starting" {
		# MESSAGE Starting:02
		# line in RSA:  Starting Office fingerprinting with dir <directory>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Starting Office fingerprinting with dir %{directory}" }
				id => "message-Starting:02"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Starting:02"
					"[rsa][message][id1]" => "Starting:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Starting:01
		# line in RSA:  Starting scan against <fld11> (<fld12>) with scan template: <fld13>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Starting scan against %{fld11} (%{fld12}) with scan template: %{fld13}." }
				id => "message-Starting:01"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Starting:01"
					"[rsa][message][id1]" => "Starting:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Starting
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Starting"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"obj_type" => "Asset"
					"[event][id]" => "Starting"
					"[rsa][message][id1]" => "Starting"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId104
	# line in RSA:  trying the next key: <fld11>
	else if [logstash][msgparser][id] == "msgParserId104" {
		dissect {
			mapping => { "message" => "trying the next key: %{fld11}" }
			id => "msgParserId104"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId105
	# line in RSA:  Got version: <version>
	else if [logstash][msgparser][id] == "msgParserId105" {
		dissect {
			mapping => { "message" => "Got version: %{version}" }
			id => "msgParserId105"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId106
	# line in RSA:  checking version of '<directory>'
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "checking version of '%{directory}'" }
			id => "msgParserId106"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "No" {
		# MESSAGE No
		# line in RSA:  No closed UDP ports, IP fingerprinting may be less accurate
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No closed UDP ports, IP fingerprinting may be less accurate" }
				id => "message-No"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "No"
					"[rsa][message][id1]" => "No"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE No:01
		# line in RSA:  No credentials available
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No credentials available" }
				id => "message-No:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "No:01"
					"[rsa][message][id1]" => "No:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE No:02
		# line in RSA:  No access to <directory> with <service>[<info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No access to %{directory} with %{service}[%{info}]" }
				id => "message-No:02"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "No:02"
					"[rsa][message][id1]" => "No:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE No:03
		# line in RSA:  No approved updates found for processing.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "No approved updates found for processing." }
				id => "message-No:03"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "No:03"
					"[rsa][message][id1]" => "No:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE No:04
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-No:04"
				add_field => {
					"[event][id]" => "No:04"
					"[rsa][message][id1]" => "No:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId111
	# line in RSA:  Applying update ID <fld12>.
	else if [logstash][msgparser][id] == "msgParserId111" {
		dissect {
			mapping => { "message" => "Applying update ID %{fld12}." }
			id => "msgParserId111"
			add_field => {
				"ec_theme" => "Configuration"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Update" {
		# MESSAGE Update
		# line in RSA:  Update ID <fld12> applied successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Update ID %{fld12} applied successfully." }
				id => "message-Update"
				add_field => {
				"ec_theme" => "Configuration"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Update"
					"[rsa][message][id1]" => "Update"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Update:02
		# line in RSA:  Update ID <fld1>, for product ID <id>, <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Update ID %{fld1}, for product ID %{id}, %{event_description}" }
				id => "message-Update:02"
				add_field => {
					"[event][id]" => "Update:02"
					"[rsa][message][id1]" => "Update:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Update:03
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Update:03"
				add_field => {
					"[event][id]" => "Update:03"
					"[rsa][message][id1]" => "Update:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Installing" {
		# MESSAGE Installing
		# line in RSA:  Installing directory <directory>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Installing directory %{directory}." }
				id => "message-Installing"
				add_field => {
				"ec_theme" => "Configuration"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Installing"
					"[rsa][message][id1]" => "Installing"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Installing:01
		# line in RSA:  Installing file, <filename>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Installing file, %{filename}." }
				id => "message-Installing:01"
				add_field => {
				"ec_theme" => "Configuration"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Installing:01"
					"[rsa][message][id1]" => "Installing:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Installing:02
		# line in RSA:  Installing Postgres files into <directory> from <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Installing Postgres files into %{directory} from %{info}" }
				id => "message-Installing:02"
				add_field => {
				"event_description" => "Installing Postgres files"
					"[event][id]" => "Installing:02"
					"[rsa][message][id1]" => "Installing:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId115
	# line in RSA:  Resolving additional DNS records
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "Resolving additional DNS records" }
			id => "msgParserId115"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId116
	# line in RSA:  DNS name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId116" {
		dissect {
			mapping => { "message" => "DNS name: %{obj_name}" }
			id => "msgParserId116"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"obj_type" => "DNS"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId117
	# line in RSA:  Scanning <fld23> <protocol> ports
	else if [logstash][msgparser][id] == "msgParserId117" {
		dissect {
			mapping => { "message" => "Scanning %{fld23} %{protocol} ports" }
			id => "msgParserId117"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Windows" {
		# MESSAGE Windows
		# line in RSA:  Windows <obj_name> dir is: '<directory>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Windows %{obj_name} dir is: '%{directory}'" }
				id => "message-Windows"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Windows"
					"[rsa][message][id1]" => "Windows"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Windows:01
		# line in RSA:  Windows Media Player version: <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Windows Media Player version: %{version}" }
				id => "message-Windows:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Windows:01"
					"[rsa][message][id1]" => "Windows:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Windows:02
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Windows:02"
				add_field => {
					"[event][id]" => "Windows:02"
					"[rsa][message][id1]" => "Windows:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId120
	# line in RSA:  JRE version <version> is installed
	else if [logstash][msgparser][id] == "msgParserId120" {
		dissect {
			mapping => { "message" => "JRE version %{version} is installed" }
			id => "msgParserId120"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId121
	# line in RSA:   MDAC version: <version>
	else if [logstash][msgparser][id] == "msgParserId121" {
		dissect {
			mapping => { "message" => "MDAC version: %{version}" }
			id => "msgParserId121"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId122
	# line in RSA:  Name Server: <saddr>
	else if [logstash][msgparser][id] == "msgParserId122" {
		dissect {
			mapping => { "message" => "Name Server: %{saddr}" }
			id => "msgParserId122"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Closing" {
		# MESSAGE Closing
		# line in RSA:  Closing service: <service> (source: <info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Closing service: %{service} (source: %{info})" }
				id => "message-Closing"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Closing"
					"[rsa][message][id1]" => "Closing"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Closing:03
		# line in RSA:  Engine: <fld1>] [Engine ID: <fld3>] Closing connection to scan engine.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Engine: %{fld1}] [Engine ID: %{fld3}] Closing connection to scan engine." }
				id => "message-Closing:03"
				add_field => {
				"event_description" => "Closing connection to scan engine"
					"[event][id]" => "Closing:03"
					"[rsa][message][id1]" => "Closing:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Closing:02
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Closing:02"
				add_field => {
					"[event][id]" => "Closing:02"
					"[rsa][message][id1]" => "Closing:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA:  key does not exist: <fld11>
	else if [logstash][msgparser][id] == "msgParserId124" {
		dissect {
			mapping => { "message" => "key does not exist: %{fld11}" }
			id => "msgParserId124"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId125
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId125" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId125"
			add_field => {
				"ec_subject" => "Group"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId126
	# line in RSA:  Version: <version>
	else if [logstash][msgparser][id] == "msgParserId126" {
		dissect {
			mapping => { "message" => "Version: %{version}" }
			id => "msgParserId126"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Completed" {
		# MESSAGE Completed
		# line in RSA:  Completed <protocol> port scan (<dclass_counter1> open ports): <fld11> seconds
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Completed %{protocol} port scan (%{dclass_counter1} open ports): %{fld11} seconds" }
				id => "message-Completed"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Success"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Completed"
					"[rsa][message][id1]" => "Completed"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Completed:01
		# line in RSA:  Completed <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Completed %{info}" }
				id => "message-Completed:01"
				add_field => {
					"[event][id]" => "Completed:01"
					"[rsa][message][id1]" => "Completed:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Completed:02
		# line in RSA: Scan ID: <fld1>] [Started: <fld2>T<fld3>] [Duration: <fld4>] Completed computation of asset group synopses.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan ID: %{fld1}] [Started: %{fld2}T%{fld3}] [Duration: %{fld4}] Completed computation of asset group synopses." }
				id => "message-Completed:02"
				add_field => {
				"event_description" => "Completed computation of asset group synopses"
					"[event][id]" => "Completed:02"
					"[rsa][message][id1]" => "Completed:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Completed:03
		# line in RSA: Scan ID: <fld1>] [Started: <fld2>T<fld3>] [Duration: <fld4>] Completed computation of site synopsis.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan ID: %{fld1}] [Started: %{fld2}T%{fld3}] [Duration: %{fld4}] Completed computation of site synopsis." }
				id => "message-Completed:03"
				add_field => {
				"event_description" => "Completed computation of site synopsis"
					"[event][id]" => "Completed:03"
					"[rsa][message][id1]" => "Completed:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Completed:04
		# line in RSA: Scan ID: <fld1>] [Started: <fld2>T<fld3>] [Duration: <fld4>] Completed recomputation of synopsis data.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan ID: %{fld1}] [Started: %{fld2}T%{fld3}] [Duration: %{fld4}] Completed recomputation of synopsis data." }
				id => "message-Completed:04"
				add_field => {
				"event_description" => "Completed recomputation of synopsis data"
					"[event][id]" => "Completed:04"
					"[rsa][message][id1]" => "Completed:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Completed:05
		# line in RSA: Scan ID: <fld1>] [Started: <fld2>T<fld3>] [Duration: <fld4>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scan ID: %{fld1}] [Started: %{fld2}T%{fld3}] [Duration: %{fld4}] %{event_description}" }
				id => "message-Completed:05"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Unknown"
					"[event][id]" => "Completed:05"
					"[rsa][message][id1]" => "Completed:05"
					"[event][categoryid]" => "1614030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Completed:06
		# line in RSA: Started: <fld2>T<fld3>] [Duration: <fld4>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Started: %{fld2}T%{fld3}] [Duration: %{fld4}] %{event_description}" }
				id => "message-Completed:06"
				add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"ec_outcome" => "Unknown"
					"[event][id]" => "Completed:06"
					"[rsa][message][id1]" => "Completed:06"
					"[event][categoryid]" => "1614030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Completed:07
		# line in RSA: <fld1>] [<fld2>] [<fld3>] [<fld4>] [Started: <fld5>T<fld6>] [Duration: <fld7>] Completed purging sub-scan results.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}] [%{fld2}] [%{fld3}] [%{fld4}] [Started: %{fld5}T%{fld6}] [Duration: %{fld7}] Completed purging sub-scan results." }
				id => "message-Completed:07"
				add_field => {
				"event_description" => "Completed purging sub-scan results"
					"[event][id]" => "Completed:07"
					"[rsa][message][id1]" => "Completed:07"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Completed:08
		# line in RSA: SiteID: <fld1>] [Scan ID: <fld2>] [Started: <fld3>T<fld4>] [Duration: <fld5>] Completed computation of synopsis.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SiteID: %{fld1}] [Scan ID: %{fld2}] [Started: %{fld3}T%{fld4}] [Duration: %{fld5}] Completed computation of synopsis." }
				id => "message-Completed:08"
				add_field => {
				"event_description" => "Completed computation of synopsis"
					"[event][id]" => "Completed:08"
					"[rsa][message][id1]" => "Completed:08"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId128
	# line in RSA:  Retrieved XML version <version> for file <filename>
	else if [logstash][msgparser][id] == "msgParserId128" {
		dissect {
			mapping => { "message" => "Retrieved XML version %{version} for file %{filename}" }
			id => "msgParserId128"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId129
	# line in RSA:   CIFS Name Service name: <service>
	else if [logstash][msgparser][id] == "msgParserId129" {
		dissect {
			mapping => { "message" => "CIFS Name Service name: %{service}" }
			id => "msgParserId129"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Checking" {
		# MESSAGE Checking:01
		# line in RSA:  Checking for approved updates.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Checking for approved updates." }
				id => "message-Checking:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Checking:01"
					"[rsa][message][id1]" => "Checking:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Checking:02
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Checking:02"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Checking:02"
					"[rsa][message][id1]" => "Checking:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId131
	# line in RSA:  CSIDL_SYSTEMX86 dir is: '<directory>'
	else if [logstash][msgparser][id] == "msgParserId131" {
		dissect {
			mapping => { "message" => "CSIDL_SYSTEMX86 dir is: '%{directory}'" }
			id => "msgParserId131"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId132
	# line in RSA:  CSIDL_SYSTEM dir is: '<directory>'
	else if [logstash][msgparser][id] == "msgParserId132" {
		dissect {
			mapping => { "message" => "CSIDL_SYSTEM dir is: '%{directory}'" }
			id => "msgParserId132"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId133
	# line in RSA:  office root dir is: '<directory>'
	else if [logstash][msgparser][id] == "msgParserId133" {
		dissect {
			mapping => { "message" => "office root dir is: '%{directory}'" }
			id => "msgParserId133"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId134
	# line in RSA:  Exchange root dir is: '<directory>'
	else if [logstash][msgparser][id] == "msgParserId134" {
		dissect {
			mapping => { "message" => "Exchange root dir is: '%{directory}'" }
			id => "msgParserId134"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId135
	# line in RSA:  SQL Server root dir is: '<directory>'
	else if [logstash][msgparser][id] == "msgParserId135" {
		dissect {
			mapping => { "message" => "SQL Server root dir is: '%{directory}'" }
			id => "msgParserId135"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId136
	# line in RSA:  starting <service>
	else if [logstash][msgparser][id] == "msgParserId136" {
		dissect {
			mapping => { "message" => "starting %{service}" }
			id => "msgParserId136"
			add_field => {
				"ec_activity" => "Scan"
				"ec_theme" => "TEV"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Host" {
		# MESSAGE Host
		# line in RSA:  Host type (from MAC <smacaddr>): <fld11>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host type (from MAC %{smacaddr}): %{fld11}" }
				id => "message-Host"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Host"
					"[rsa][message][id1]" => "Host"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Host:01
		# line in RSA:  Host Address:                       <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host Address:                       %{saddr}" }
				id => "message-Host:01"
				add_field => {
					"[event][id]" => "Host:01"
					"[rsa][message][id1]" => "Host:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Host:02
		# line in RSA:  Host FQDN:                       <fqdn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Host FQDN:                       %{fqdn}" }
				id => "message-Host:02"
				add_field => {
					"[event][id]" => "Host:02"
					"[rsa][message][id1]" => "Host:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId138
	# line in RSA:  Advertising <service> service
	else if [logstash][msgparser][id] == "msgParserId138" {
		dissect {
			mapping => { "message" => "Advertising %{service} service" }
			id => "msgParserId138"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId139
	# line in RSA:  IP fingerprint:<fld11>
	else if [logstash][msgparser][id] == "msgParserId139" {
		dissect {
			mapping => { "message" => "IP fingerprint:%{fld11}" }
			id => "msgParserId139"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Updating" {
		# MESSAGE Updating:01
		# line in RSA:  Updating file, <filename>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Updating file, %{filename}." }
				id => "message-Updating:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Updating:01"
					"[rsa][message][id1]" => "Updating:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Updating
		# line in RSA:  Updating <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Updating %{info}" }
				id => "message-Updating"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Updating"
					"[rsa][message][id1]" => "Updating"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Updated" {
		# MESSAGE Updated
		# line in RSA:  Updated risk scores for <dclass_counter1> vulnerabilities in <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Updated risk scores for %{dclass_counter1} vulnerabilities in %{fld12}" }
				id => "message-Updated"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Updated"
					"[rsa][message][id1]" => "Updated"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Updated:01
		# line in RSA:  Updated risk scores for <dclass_counter1> assets in <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Updated risk scores for %{dclass_counter1} assets in %{fld12}" }
				id => "message-Updated:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Updated:01"
					"[rsa][message][id1]" => "Updated:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Updated:02
		# line in RSA:  Updated risk scores for <dclass_counter1> sites in <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Updated risk scores for %{dclass_counter1} sites in %{fld12}" }
				id => "message-Updated:02"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Updated:02"
					"[rsa][message][id1]" => "Updated:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Updated:03
		# line in RSA:  Updated risk scores for <dclass_counter1> groups in <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Updated risk scores for %{dclass_counter1} groups in %{fld12}" }
				id => "message-Updated:03"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Updated:03"
					"[rsa][message][id1]" => "Updated:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Updated:04
		# line in RSA: Started: <fld2>] [Duration: <fld3>] Updated risk scores for <fld1> { vulnerabilities.| assets.| sites.| groups.}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Started:[\s]+(?<fld2>[^\]]*)\][\s]+\[Duration:[\s]+(?<fld3>[^\]]*)\][\s]+Updated[\s]+risk[\s]+scores[\s]+for[\s]+(?<fld1>[^\s]*)[\s]+([\s]*vulnerabilities\.|[\s]*assets\.|[\s]*sites\.|[\s]*groups\.)$" }
				id => "message-Updated:04"
				add_field => {
					"[event][id]" => "Updated:04"
					"[rsa][message][id1]" => "Updated:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Updated:06
		# line in RSA:  <fld1>] [Started: <fld2>] [Duration: <fld3>] Updated {scan risk scores|risk scores for site}.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\]]*)\][\s]+\[Started:[\s]+(?<fld2>[^\]]*)\][\s]+\[Duration:[\s]+(?<fld3>[^\]]*)\][\s]+Updated[\s]+(scan[\s]+risk[\s]+scores|risk[\s]+scores[\s]+for[\s]+site)\.$" }
				id => "message-Updated:06"
				add_field => {
				"event_description" => "Updated risk scores"
					"[event][id]" => "Updated:06"
					"[rsa][message][id1]" => "Updated:06"
					"[event][categoryid]" => "1614000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Updated:05
		# line in RSA:  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}" }
				id => "message-Updated:05"
				add_field => {
					"[event][id]" => "Updated:05"
					"[rsa][message][id1]" => "Updated:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Started" {
		# MESSAGE Started
		# line in RSA:  Started auto-update.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Started auto-update." }
				id => "message-Started"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Started"
					"[rsa][message][id1]" => "Started"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Started:02
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Started:02"
				add_field => {
					"[event][id]" => "Started:02"
					"[rsa][message][id1]" => "Started:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Executing" {
		# MESSAGE Executing
		# line in RSA:  Executing job JobID[<info>] Risk and daily history updater for silo <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Executing job JobID[%{info}] Risk and daily history updater for silo %{fld12}" }
				id => "message-Executing"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Executing"
					"[rsa][message][id1]" => "Executing"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Executing:01
		# line in RSA:  Executing job JobID[<info>] Auto-update retriever
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Executing job JobID[%{info}] Auto-update retriever" }
				id => "message-Executing:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Executing:01"
					"[rsa][message][id1]" => "Executing:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Executing:02
		# line in RSA:  Executing job JobID[<info>] <fld1> retention updater-default
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Executing job JobID[%{info}] %{fld1} retention updater-default" }
				id => "message-Executing:02"
				add_field => {
					"[event][id]" => "Executing:02"
					"[rsa][message][id1]" => "Executing:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Executing:04
		# line in RSA:  Executing job JobID[<info>] <obj_type>: <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Executing job JobID[%{info}] %{obj_type}: %{obj_name}" }
				id => "message-Executing:04"
				add_field => {
					"[event][id]" => "Executing:04"
					"[rsa][message][id1]" => "Executing:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Executing:03
		# line in RSA:  Executing SQL: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Executing SQL: %{info}" }
				id => "message-Executing:03"
				add_field => {
					"[event][id]" => "Executing:03"
					"[rsa][message][id1]" => "Executing:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId151
	# line in RSA:  A set of SSH administrative credentials have failed verification.
	else if [logstash][msgparser][id] == "msgParserId151" {
		dissect {
			mapping => { "message" => "A set of SSH administrative credentials have failed verification." }
			id => "msgParserId151"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Administrative" {
		# MESSAGE Administrative:01
		# line in RSA:  Administrative credentials failed (access denied).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Administrative credentials failed (access denied)." }
				id => "message-Administrative:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Administrative:01"
					"[rsa][message][id1]" => "Administrative:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Administrative
		# line in RSA:  Administrative credentials for <service> will be used.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Administrative credentials for %{service} will be used." }
				id => "message-Administrative"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Administrative"
					"[rsa][message][id1]" => "Administrative"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Initializing" {
		# MESSAGE Initializing:01
		# line in RSA: Engine: <fld1>] [Engine ID: <fld2>] Initializing remote scan engine (<dhost>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Engine: %{fld1}] [Engine ID: %{fld2}] Initializing remote scan engine (%{dhost})." }
				id => "message-Initializing:01"
				add_field => {
				"event_description" => "Initializing remote scan engine"
					"[event][id]" => "Initializing:01"
					"[rsa][message][id1]" => "Initializing:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Initializing
		# line in RSA:  { Initializing <service>.| Initializing JDBC drivers | <event_description>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*Initializing[\s]+(?<service>[^\.]*)\.|[\s]*Initializing[\s]+JDBC[\s]+drivers[\s]+|[\s]*(?<event_description>.*))$" }
				id => "message-Initializing"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Initializing"
					"[rsa][message][id1]" => "Initializing"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Loaded" {
		# MESSAGE Loaded
		# line in RSA:  Loaded <dclass_counter1> policy checks for scan.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Loaded %{dclass_counter1} policy checks for scan." }
				id => "message-Loaded"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Loaded"
					"[rsa][message][id1]" => "Loaded"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Loaded:01
		# line in RSA:  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}" }
				id => "message-Loaded:01"
				add_field => {
					"[event][id]" => "Loaded:01"
					"[rsa][message][id1]" => "Loaded:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Finished" {
		# MESSAGE Finished
		# line in RSA:  Finished locating <dclass_counter1> live nodes. [Started: <fld11>] [Duration: <fld12>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Finished locating %{dclass_counter1} live nodes. [Started: %{fld11}] [Duration: %{fld12}]" }
				id => "message-Finished"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Finished"
					"[rsa][message][id1]" => "Finished"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Finished:01
		# line in RSA:  Finished loading <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Finished loading %{service}" }
				id => "message-Finished:01"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Finished:01"
					"[rsa][message][id1]" => "Finished:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Finished:02
		# line in RSA:  Finished resolving DNS records
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Finished resolving DNS records" }
				id => "message-Finished:02"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Finished:02"
					"[rsa][message][id1]" => "Finished:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Finished:03
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Finished:03"
				add_field => {
					"[event][id]" => "Finished:03"
					"[rsa][message][id1]" => "Finished:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId160
	# line in RSA:  TCP port scanner is using: <fld11>
	else if [logstash][msgparser][id] == "msgParserId160" {
		dissect {
			mapping => { "message" => "TCP port scanner is using: %{fld11}" }
			id => "msgParserId160"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId161
	# line in RSA:  UDP port scanner is using: <fld11>
	else if [logstash][msgparser][id] == "msgParserId161" {
		dissect {
			mapping => { "message" => "UDP port scanner is using: %{fld11}" }
			id => "msgParserId161"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId162
	# line in RSA:  Queued live nodes for scanning: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId162" {
		dissect {
			mapping => { "message" => "Queued live nodes for scanning: %{dclass_counter1}" }
			id => "msgParserId162"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Registered" {
		# MESSAGE Registered
		# line in RSA:  Registered session [<fld12>] for IP [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Registered session [%{fld12}] for IP [%{saddr}]" }
				id => "message-Registered"
				add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "Registered"
					"[rsa][message][id1]" => "Registered"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Registered:02
		# line in RSA:  Registered session for principal name [<username>] for IP [<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Registered session for principal name [%{username}] for IP [%{saddr}]" }
				id => "message-Registered:02"
				add_field => {
					"[event][id]" => "Registered:02"
					"[rsa][message][id1]" => "Registered:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId164
	# line in RSA:   Seeing if <saddr> is a valid network node
	else if [logstash][msgparser][id] == "msgParserId164" {
		dissect {
			mapping => { "message" => "Seeing if %{saddr} is a valid network node" }
			id => "msgParserId164"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId165
	# line in RSA:  Logging initialized. [Name = <obj_name>] [Level = <fld11>] [Timezone = <fld12>]
	else if [logstash][msgparser][id] == "msgParserId165" {
		dissect {
			mapping => { "message" => "Logging initialized. [Name = %{obj_name}] [Level = %{fld11}] [Timezone = %{fld12}]" }
			id => "msgParserId165"
			add_field => {
				"obj_name" => "%{hobj_name}"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId167
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId167" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId167"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId168
	# line in RSA:  Successfully  <info>
	else if [logstash][msgparser][id] == "msgParserId168" {
		dissect {
			mapping => { "message" => "Successfully  %{info}" }
			id => "msgParserId168"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Route:" {
		# MESSAGE Route:01
		# line in RSA:  Route: <fld1> shutdown complete, <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Route: %{fld1} shutdown complete, %{event_description}" }
				id => "message-Route:01"
				add_field => {
					"[event][id]" => "Route:01"
					"[rsa][message][id1]" => "Route:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Route:02
		# line in RSA:  Route: <fld1> started and consuming from: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Route: %{fld1} started and consuming from: %{event_description}" }
				id => "message-Route:02"
				add_field => {
					"[event][id]" => "Route:02"
					"[rsa][message][id1]" => "Route:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Freeing" {
		# MESSAGE Freeing
		# line in RSA:  Freeing session for principal name [<username>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Freeing session for principal name [%{username}]" }
				id => "message-Freeing"
				add_field => {
					"[event][id]" => "Freeing"
					"[rsa][message][id1]" => "Freeing"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Freeing:01
		# line in RSA:  Freeing <dclass_counter1> current sessions.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Freeing %{dclass_counter1} current sessions." }
				id => "message-Freeing:01"
				add_field => {
					"[event][id]" => "Freeing:01"
					"[rsa][message][id1]" => "Freeing:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId176
	# line in RSA:  Kill session for principal name [<username>]
	else if [logstash][msgparser][id] == "msgParserId176" {
		dissect {
			mapping => { "message" => "Kill session for principal name [%{username}]" }
			id => "msgParserId176"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Created" {
		# MESSAGE Created:01
		# line in RSA:  Created temporary directory <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created temporary directory %{filename}" }
				id => "message-Created:01"
				add_field => {
					"[event][id]" => "Created:01"
					"[rsa][message][id1]" => "Created:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Created:02
		# line in RSA:  Created <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Created %{info}" }
				id => "message-Created:02"
				add_field => {
					"[event][id]" => "Created:02"
					"[rsa][message][id1]" => "Created:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId180
	# line in RSA:  Product Version:                 <version>
	else if [logstash][msgparser][id] == "msgParserId180" {
		dissect {
			mapping => { "message" => "Product Version:                 %{version}" }
			id => "msgParserId180"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Current" {
		# MESSAGE Current
		# line in RSA:  Current directory:               <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Current directory:               %{filename}" }
				id => "message-Current"
				add_field => {
					"[event][id]" => "Current"
					"[rsa][message][id1]" => "Current"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Current:01
		# line in RSA:  Current DB_VERSION = <version> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Current DB_VERSION = %{version}" }
				id => "message-Current:01"
				add_field => {
					"[event][id]" => "Current:01"
					"[rsa][message][id1]" => "Current:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId183
	# line in RSA:  Super user:                       <result>
	else if [logstash][msgparser][id] == "msgParserId183" {
		dissect {
			mapping => { "message" => "Super user:                       %{result}" }
			id => "msgParserId183"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId184
	# line in RSA:  Computer name:                       <hostname>
	else if [logstash][msgparser][id] == "msgParserId184" {
		dissect {
			mapping => { "message" => "Computer name:                       %{hostname}" }
			id => "msgParserId184"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId187
	# line in RSA:  Operating system:                       <os>
	else if [logstash][msgparser][id] == "msgParserId187" {
		dissect {
			mapping => { "message" => "Operating system:                       %{os}" }
			id => "msgParserId187"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId188
	# line in RSA:  CPU speed:                       <fld1>
	else if [logstash][msgparser][id] == "msgParserId188" {
		dissect {
			mapping => { "message" => "CPU speed:                       %{fld1}" }
			id => "msgParserId188"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId189
	# line in RSA:  Number of CPUs:                       <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "Number of CPUs:                       %{dclass_counter1}" }
			id => "msgParserId189"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Total" {
		# MESSAGE Total
		# line in RSA:  Total <fld1>:                       <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Total %{fld1}:                       %{fld2}" }
				id => "message-Total"
				add_field => {
					"[event][id]" => "Total"
					"[rsa][message][id1]" => "Total"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Total:02
		# line in RSA:  Total <dclass_counter1> routes, of which <dclass_counter2> is started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Total %{dclass_counter1} routes, of which %{dclass_counter2} is started." }
				id => "message-Total:02"
				add_field => {
					"[event][id]" => "Total:02"
					"[rsa][message][id1]" => "Total:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId191
	# line in RSA:  Available <fld1>:                       <fld2>
	else if [logstash][msgparser][id] == "msgParserId191" {
		dissect {
			mapping => { "message" => "Available %{fld1}:                       %{fld2}" }
			id => "msgParserId191"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId192
	# line in RSA:  Disk space used by <fld1>:                       <info>
	else if [logstash][msgparser][id] == "msgParserId192" {
		dissect {
			mapping => { "message" => "Disk space used by %{fld1}:                       %{info}" }
			id => "msgParserId192"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId193
	# line in RSA:  JVM <fld1>:                        <info>
	else if [logstash][msgparser][id] == "msgParserId193" {
		dissect {
			mapping => { "message" => "JVM %{fld1}:                        %{info}" }
			id => "msgParserId193"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId194
	# line in RSA:  Pausing ProtocolHandler [<info>]
	else if [logstash][msgparser][id] == "msgParserId194" {
		dissect {
			mapping => { "message" => "Pausing ProtocolHandler [%{info}]" }
			id => "msgParserId194"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Policy" {
		# MESSAGE Policy
		# line in RSA:  Policy <policyname> replaces <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy %{policyname} replaces %{fld1}" }
				id => "message-Policy"
				add_field => {
					"[event][id]" => "Policy"
					"[rsa][message][id1]" => "Policy"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Policy:01
		# line in RSA:  Policy benchmark <policyname> in <info> with hash <fld1> is not valid builtin content and will not load.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy benchmark %{policyname} in %{info} with hash %{fld1} is not valid builtin content and will not load." }
				id => "message-Policy:01"
				add_field => {
				"event_description" => "Policy benchmark is not valid builtin content and will not load"
					"[event][id]" => "Policy:01"
					"[rsa][message][id1]" => "Policy:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId196
	# line in RSA:  Bulk <action> <info>
	else if [logstash][msgparser][id] == "msgParserId196" {
		dissect {
			mapping => { "message" => "Bulk %{action} %{info}" }
			id => "msgParserId196"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId197
	# line in RSA:  <action> <info>
	else if [logstash][msgparser][id] == "msgParserId197" {
		dissect {
			mapping => { "message" => "%{action} %{info}" }
			id => "msgParserId197"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Imported" {
		# MESSAGE Imported
		# line in RSA:  <action> <dclass_counter1> new categories, categorized <fld1> vulnerabilities and <fld2> tags.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{action} %{dclass_counter1} new categories, categorized %{fld1} vulnerabilities and %{fld2} tags." }
				id => "message-Imported"
				add_field => {
					"[event][id]" => "Imported"
					"[rsa][message][id1]" => "Imported"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Imported:01
		# line in RSA:  <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}" }
				id => "message-Imported:01"
				add_field => {
					"[event][id]" => "Imported:01"
					"[rsa][message][id1]" => "Imported:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId200
	# line in RSA:  Compiling <info> 
	else if [logstash][msgparser][id] == "msgParserId200" {
		dissect {
			mapping => { "message" => "Compiling %{info}" }
			id => "msgParserId200"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId201
	# line in RSA:  Vulnerability <info> 
	else if [logstash][msgparser][id] == "msgParserId201" {
		dissect {
			mapping => { "message" => "Vulnerability %{info}" }
			id => "msgParserId201"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId202
	# line in RSA:  Truncating <info> 
	else if [logstash][msgparser][id] == "msgParserId202" {
		dissect {
			mapping => { "message" => "Truncating %{info}" }
			id => "msgParserId202"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId203
	# line in RSA:  Synchronizing <info> 
	else if [logstash][msgparser][id] == "msgParserId203" {
		dissect {
			mapping => { "message" => "Synchronizing %{info}" }
			id => "msgParserId203"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId204
	# line in RSA:  Parsing <info> 
	else if [logstash][msgparser][id] == "msgParserId204" {
		dissect {
			mapping => { "message" => "Parsing %{info}" }
			id => "msgParserId204"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId205
	# line in RSA:  Remapping <info> 
	else if [logstash][msgparser][id] == "msgParserId205" {
		dissect {
			mapping => { "message" => "Remapping %{info}" }
			id => "msgParserId205"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId206
	# line in RSA: Started: <fld1>] [Duration: <fld2>] Remapped <info> 
	else if [logstash][msgparser][id] == "msgParserId206" {
		dissect {
			mapping => { "message" => "Started: %{fld1}] [Duration: %{fld2}] Remapped %{info}" }
			id => "msgParserId206"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Database" {
		# MESSAGE Database
		# line in RSA: Started: <fld1>] [Duration: <fld2>] Database <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Started: %{fld1}] [Duration: %{fld2}] Database %{info}" }
				id => "message-Database"
				add_field => {
					"[event][id]" => "Database"
					"[rsa][message][id1]" => "Database"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE Database:01
		# line in RSA:  Database <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Database %{info}" }
				id => "message-Database:01"
				add_field => {
					"[event][id]" => "Database:01"
					"[rsa][message][id1]" => "Database:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId209
	# line in RSA:  Accepting <info> 
	else if [logstash][msgparser][id] == "msgParserId209" {
		dissect {
			mapping => { "message" => "Accepting %{info}" }
			id => "msgParserId209"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId210
	# line in RSA:  VERSION <info> 
	else if [logstash][msgparser][id] == "msgParserId210" {
		dissect {
			mapping => { "message" => "VERSION %{info}" }
			id => "msgParserId210"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId211
	# line in RSA:  Detected <info> 
	else if [logstash][msgparser][id] == "msgParserId211" {
		dissect {
			mapping => { "message" => "Detected %{info}" }
			id => "msgParserId211"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId212
	# line in RSA:  Telling <info> 
	else if [logstash][msgparser][id] == "msgParserId212" {
		dissect {
			mapping => { "message" => "Telling %{info}" }
			id => "msgParserId212"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId215
	# line in RSA:  Stopping <info> 
	else if [logstash][msgparser][id] == "msgParserId215" {
		dissect {
			mapping => { "message" => "Stopping %{info}" }
			id => "msgParserId215"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId216
	# line in RSA:  removing <info> 
	else if [logstash][msgparser][id] == "msgParserId216" {
		dissect {
			mapping => { "message" => "removing %{info}" }
			id => "msgParserId216"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId217
	# line in RSA:  Enabling <info> 
	else if [logstash][msgparser][id] == "msgParserId217" {
		dissect {
			mapping => { "message" => "Enabling %{info}" }
			id => "msgParserId217"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId218
	# line in RSA:  Granting <info> 
	else if [logstash][msgparser][id] == "msgParserId218" {
		dissect {
			mapping => { "message" => "Granting %{info}" }
			id => "msgParserId218"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId219
	# line in RSA:  Version <info> 
	else if [logstash][msgparser][id] == "msgParserId219" {
		dissect {
			mapping => { "message" => "Version %{info}" }
			id => "msgParserId219"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId220
	# line in RSA:  Configuring <info> 
	else if [logstash][msgparser][id] == "msgParserId220" {
		dissect {
			mapping => { "message" => "Configuring %{info}" }
			id => "msgParserId220"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Scheduler" {
		# MESSAGE Scheduler
		# line in RSA:  Scheduler <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Scheduler %{info}" }
				id => "message-Scheduler"
				add_field => {
					"[event][id]" => "Scheduler"
					"[rsa][message][id1]" => "Scheduler"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scheduler:01
		# line in RSA:  Silo: <fld1>] [Started: <fld2>] [Duration: <fld3>] Scheduler started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Silo: %{fld1}] [Started: %{fld2}] [Duration: %{fld3}] Scheduler started." }
				id => "message-Scheduler:01"
				add_field => {
				"event_description" => "Scheduler started"
					"[event][id]" => "Scheduler:01"
					"[rsa][message][id1]" => "Scheduler:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scheduler:02
		# line in RSA: <fld1>: <fld2>] Scheduler <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: %{fld2}] Scheduler %{info}" }
				id => "message-Scheduler:02"
				add_field => {
					"[event][id]" => "Scheduler:02"
					"[rsa][message][id1]" => "Scheduler:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId223
	# line in RSA:  PostgreSQL <info> 
	else if [logstash][msgparser][id] == "msgParserId223" {
		dissect {
			mapping => { "message" => "PostgreSQL %{info}" }
			id => "msgParserId223"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Cleaning" {
		# MESSAGE Cleaning
		# line in RSA:  Cleaning <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Cleaning %{info}" }
				id => "message-Cleaning"
				add_field => {
					"[event][id]" => "Cleaning"
					"[rsa][message][id1]" => "Cleaning"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Cleaning:01
		# line in RSA: <fld1>] [<fld2>] [<fld3>] [<fld4>] Cleaning up sub-scan results.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}] [%{fld2}] [%{fld3}] [%{fld4}] Cleaning up sub-scan results." }
				id => "message-Cleaning:01"
				add_field => {
				"event_description" => "Cleaning up sub-scan results"
					"[event][id]" => "Cleaning:01"
					"[rsa][message][id1]" => "Cleaning:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId226
	# line in RSA:  Installed { DB_VERSION after upgrade| DB VERSION } = <version>
	else if [logstash][msgparser][id] == "msgParserId226" {
		grok {
			match => { "message" => "^[\s]*Installed[\s]+([\s]*DB_VERSION[\s]+after[\s]+upgrade|[\s]*DB[\s]+VERSION[\s]+)[\s]+=[\s]+(?<version>.*)$" }
			id => "msgParserId226"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId227
	# line in RSA:  Inserted <info>
	else if [logstash][msgparser][id] == "msgParserId227" {
		dissect {
			mapping => { "message" => "Inserted %{info}" }
			id => "msgParserId227"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId229
	# line in RSA: Started: <fld1>] [Duration: <fld2>] Deleted <info>
	else if [logstash][msgparser][id] == "msgParserId229" {
		dissect {
			mapping => { "message" => "Started: %{fld1}] [Duration: %{fld2}] Deleted %{info}" }
			id => "msgParserId229"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId230
	# line in RSA:  <info>
	else if [logstash][msgparser][id] == "msgParserId230" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId230"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Initialized" {
		# MESSAGE Initialized
		# line in RSA:  Initialized PolicyCheckService with <dclass_counter1> benchmarks, containing <fld1> policies. The total check count is <dclass_counter2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Initialized PolicyCheckService with %{dclass_counter1} benchmarks, containing %{fld1} policies. The total check count is %{dclass_counter2}" }
				id => "message-Initialized"
				add_field => {
					"[event][id]" => "Initialized"
					"[rsa][message][id1]" => "Initialized"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Initialized:01
		# line in RSA:  Initialized <dclass_counter1> policy benchmarks in total.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Initialized %{dclass_counter1} policy benchmarks in total." }
				id => "message-Initialized:01"
				add_field => {
					"[event][id]" => "Initialized:01"
					"[rsa][message][id1]" => "Initialized:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Initialized_Scheduler
		# line in RSA:  Initialized Scheduler Signaller of type: <obj_type> <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Initialized Scheduler Signaller of type: %{obj_type} %{obj_name}" }
				id => "message-Initialized_Scheduler"
				add_field => {
				"action" => "Initialized Scheduler Signaller"
					"[event][id]" => "Initialized_Scheduler"
					"[rsa][message][id1]" => "Initialized_Scheduler"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId234
	# line in RSA:  Graceful shutdown of <dclass_counter1> routes completed in <dclass_counter2> seconds
	else if [logstash][msgparser][id] == "msgParserId234" {
		dissect {
			mapping => { "message" => "Graceful shutdown of %{dclass_counter1} routes completed in %{dclass_counter2} seconds" }
			id => "msgParserId234"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId237
	# line in RSA:  DB_VERSION = <version>
	else if [logstash][msgparser][id] == "msgParserId237" {
		dissect {
			mapping => { "message" => "DB_VERSION = %{version}" }
			id => "msgParserId237"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId238
	# line in RSA:  Populating <info>
	else if [logstash][msgparser][id] == "msgParserId238" {
		dissect {
			mapping => { "message" => "Populating %{info}" }
			id => "msgParserId238"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId240
	# line in RSA:  EventLog <info>
	else if [logstash][msgparser][id] == "msgParserId240" {
		dissect {
			mapping => { "message" => "EventLog %{info}" }
			id => "msgParserId240"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId241
	# line in RSA:  Making <info>
	else if [logstash][msgparser][id] == "msgParserId241" {
		dissect {
			mapping => { "message" => "Making %{info}" }
			id => "msgParserId241"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId242
	# line in RSA:  Setting <info>
	else if [logstash][msgparser][id] == "msgParserId242" {
		dissect {
			mapping => { "message" => "Setting %{info}" }
			id => "msgParserId242"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId243
	# line in RSA:  initdb <info>
	else if [logstash][msgparser][id] == "msgParserId243" {
		dissect {
			mapping => { "message" => "initdb %{info}" }
			id => "msgParserId243"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId244
	# line in RSA:  Verifying <info>
	else if [logstash][msgparser][id] == "msgParserId244" {
		dissect {
			mapping => { "message" => "Verifying %{info}" }
			id => "msgParserId244"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId245
	# line in RSA:   <info>
	else if [logstash][msgparser][id] == "msgParserId245" {
		dissect {
			mapping => { "message" => "%{info}" }
			id => "msgParserId245"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId246
	# line in RSA:  Benchmark <info>
	else if [logstash][msgparser][id] == "msgParserId246" {
		dissect {
			mapping => { "message" => "Benchmark %{info}" }
			id => "msgParserId246"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Report" {
		# MESSAGE Report:01
		# line in RSA:  Report Config ID: <fld1>] [Started: <fld2>T<fld3>] [Duration: <fld4>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Report Config ID: %{fld1}] [Started: %{fld2}T%{fld3}] [Duration: %{fld4}] %{event_description}" }
				id => "message-Report:01"
				add_field => {
				"obj_type" => "%{messageid}"
				"obj_name" => "%{hobj_name}"
					"[event][id]" => "Report:01"
					"[rsa][message][id1]" => "Report:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Report
		# line in RSA:  Report Config ID: <fld1>] <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Report Config ID: %{fld1}] %{event_description}" }
				id => "message-Report"
				add_field => {
				"obj_type" => "%{messageid}"
				"obj_name" => "%{hobj_name}"
					"[event][id]" => "Report"
					"[rsa][message][id1]" => "Report"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Cannot" {
		# MESSAGE Cannot_preload
		# line in RSA: Engine ID: <fld1>] [Engine Name: <fld2>] Cannot preload incremental pool with a connection <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Engine ID: %{fld1}] [Engine Name: %{fld2}] Cannot preload incremental pool with a connection %{fld3}" }
				id => "message-Cannot_preload"
				add_field => {
				"event_description" => "Cannot preload incremental pool with a connection"
					"[event][id]" => "Cannot_preload"
					"[rsa][message][id1]" => "Cannot_preload"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Cannot_preload:01
		# line in RSA: Cannot preload incremental pool with a connection<fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Cannot preload incremental pool with a connection%{fld3}" }
				id => "message-Cannot_preload:01"
				add_field => {
				"event_description" => "Cannot preload incremental pool with a connection"
					"[event][id]" => "Cannot_preload:01"
					"[rsa][message][id1]" => "Cannot_preload:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId257
	# line in RSA: ERROR: syntax error at or near "<fld1>"
	else if [logstash][msgparser][id] == "msgParserId257" {
		dissect {
			mapping => { "message" => "ERROR: syntax error at or near \"%{fld1}\"" }
			id => "msgParserId257"
			add_field => {
				"event_description" => "Syntax error"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId258
	# line in RSA: QuartzRepeaterBuilder failed to add schedule to ScanConfig: null
	else if [logstash][msgparser][id] == "msgParserId258" {
		dissect {
			mapping => { "message" => "QuartzRepeaterBuilder failed to add schedule to ScanConfig: null" }
			id => "msgParserId258"
			add_field => {
				"event_description" => "QuartzRepeaterBuilder failed to add schedule"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId259
	# line in RSA: Backing up <event_source>
	else if [logstash][msgparser][id] == "msgParserId259" {
		dissect {
			mapping => { "message" => "Backing up %{event_source}" }
			id => "msgParserId259"
			add_field => {
				"action" => "Backing up"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId260
	# line in RSA:  com.rapid.nexpose.scanpool.stateInterval is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId260" {
		dissect {
			mapping => { "message" => "com.rapid.nexpose.scanpool.stateInterval is not configured - returning default value %{resultcode}." }
			id => "msgParserId260"
			add_field => {
				"event_description" => "com.rapid.nexpose.scanpool.stateInterval is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId261
	# line in RSA:  com.rapid7.nexpose.comms.clientConnectionProvider.autoPairTimeout is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId261" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.comms.clientConnectionProvider.autoPairTimeout is not configured - returning default value %{resultcode}." }
			id => "msgParserId261"
			add_field => {
				"event_description" => "com.rapid7.nexpose.comms.clientConnectionProvider.autoPairTimeout is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId262
	# line in RSA:  com.rapid7.nexpose.comms.clientConnectionProvider.getConnectionTimeout is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId262" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.comms.clientConnectionProvider.getConnectionTimeout is not configured - returning default value %{resultcode}." }
			id => "msgParserId262"
			add_field => {
				"event_description" => "com.rapid7.nexpose.comms.clientConnectionProvider.getConnectionTimeout is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId263
	# line in RSA:  com.rapid7.nexpose.datastore.connection.evictionThreadTime is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId263" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.datastore.connection.evictionThreadTime is not configured - returning default value %{resultcode}." }
			id => "msgParserId263"
			add_field => {
				"event_description" => "com.rapid7.nexpose.datastore.connection.evictionThreadTime is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId264
	# line in RSA:  com.rapid7.nexpose.datastore.eviction.connection.threadIdleTimeout is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId264" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.datastore.eviction.connection.threadIdleTimeout is not configured - returning default value %{resultcode}." }
			id => "msgParserId264"
			add_field => {
				"event_description" => "com.rapid7.nexpose.datastore.eviction.connection.threadIdleTimeout is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId265
	# line in RSA:  com.rapid7.nexpose.nsc.dbcc is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId265" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.dbcc is not configured - returning default value %{result}." }
			id => "msgParserId265"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.dbcc is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId266
	# line in RSA:  com.rapid7.nexpose.nsc.scanExecutorService.maximumCorePoolSize is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId266" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.scanExecutorService.maximumCorePoolSize is not configured - returning default value %{resultcode}." }
			id => "msgParserId266"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.scanExecutorService.maximumCorePoolSize is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId267
	# line in RSA:  com.rapid7.nexpose.nsc.scanExecutorService.minimumCorePoolSize is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId267" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.scanExecutorService.minimumCorePoolSize is not configured - returning default value %{resultcode}." }
			id => "msgParserId267"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.scanExecutorService.minimumCorePoolSize is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId268
	# line in RSA:  com.rapid7.nexpose.nsc.scanExecutorService.monitorCorePoolSizeIncreaseOnSaturation is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId268" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.scanExecutorService.monitorCorePoolSizeIncreaseOnSaturation is not configured - returning default value %{resultcode}." }
			id => "msgParserId268"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.scanExecutorService.monitorCorePoolSizeIncreaseOnSaturation is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId269
	# line in RSA:  com.rapid7.nexpose.nsc.scanExecutorService.monitorEnabled is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId269" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.scanExecutorService.monitorEnabled is not configured - returning default value %{result}." }
			id => "msgParserId269"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.scanExecutorService.monitorEnabled is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId270
	# line in RSA:  com.rapid7.nexpose.nsc.scanExecutorService.monitorInterval is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId270" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.scanExecutorService.monitorInterval is not configured - returning default value %{resultcode}." }
			id => "msgParserId270"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.scanExecutorService.monitorInterval is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId271
	# line in RSA:  com.rapid7.nexpose.nse.nscClient.connectTimeout is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId271" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nse.nscClient.connectTimeout is not configured - returning default value %{resultcode}." }
			id => "msgParserId271"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nse.nscClient.connectTimeout is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId272
	# line in RSA:  com.rapid7.nexpose.nse.nscClient.readTimeout is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId272" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nse.nscClient.readTimeout is not configured - returning default value %{resultcode}." }
			id => "msgParserId272"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nse.nscClient.readTimeout is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId273
	# line in RSA:  com.rapid7.nexpose.reportGenerator.assetCollectionUpdateTimeout is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId273" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.reportGenerator.assetCollectionUpdateTimeout is not configured - returning default value %{resultcode}." }
			id => "msgParserId273"
			add_field => {
				"event_description" => "com.rapid7.nexpose.reportGenerator.assetCollectionUpdateTimeout is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId274
	# line in RSA:  com.rapid7.nexpose.scan.consolidation.delay is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId274" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.scan.consolidation.delay is not configured - returning default value %{resultcode}." }
			id => "msgParserId274"
			add_field => {
				"event_description" => "com.rapid7.nexpose.scan.consolidation.delay is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId275
	# line in RSA:  com.rapid7.nexpose.scan.lifecyclemonitor.delay is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId275" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.scan.lifecyclemonitor.delay is not configured - returning default value %{resultcode}." }
			id => "msgParserId275"
			add_field => {
				"event_description" => "com.rapid7.nexpose.scan.lifecyclemonitor.delay is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId276
	# line in RSA:  com.rapid7.nexpose.scan.usescanpool is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId276" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.scan.usescanpool is not configured - returning default value %{result}." }
			id => "msgParserId276"
			add_field => {
				"event_description" => "com.rapid7.nexpose.scan.usescanpool is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId277
	# line in RSA:  com.rapid7.nsc.workflow.timeout is not configured - returning default value <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId277" {
		dissect {
			mapping => { "message" => "com.rapid7.nsc.workflow.timeout is not configured - returning default value %{resultcode}." }
			id => "msgParserId277"
			add_field => {
				"event_description" => "com.rapid7.nsc.workflow.timeout is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId278
	# line in RSA:  Delivered mail to <to>: <fld1> <fld2> <mail_id> [InternalId=<fld3>] Queued mail for delivery
	else if [logstash][msgparser][id] == "msgParserId278" {
		dissect {
			mapping => { "message" => "Delivered mail to %{to}: %{fld1} %{fld2} %{mail_id} [InternalId=%{fld3}] Queued mail for delivery" }
			id => "msgParserId278"
			add_field => {
				"action" => "Queued mail for delivery"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId279
	# line in RSA:  Engine update thread pool shutting down.
	else if [logstash][msgparser][id] == "msgParserId279" {
		dissect {
			mapping => { "message" => "Engine update thread pool shutting down." }
			id => "msgParserId279"
			add_field => {
				"action" => "Engine update thread pool shutting down"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId280
	# line in RSA:  Freed <fld1> triggers from 'acquired' / 'blocked' state.
	else if [logstash][msgparser][id] == "msgParserId280" {
		dissect {
			mapping => { "message" => "Freed %{fld1} triggers from 'acquired' / 'blocked' state." }
			id => "msgParserId280"
			add_field => {
				"action" => "Freed triggers from 'acquired' / 'blocked' state"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "PG" {
		# MESSAGE Upgrade_completed
		# line in RSA:  PG Upgrade has completed succesfully
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PG Upgrade has completed succesfully" }
				id => "message-Upgrade_completed"
				add_field => {
				"event_description" => "Upgrade has completed succesfully"
					"[event][id]" => "Upgrade_completed"
					"[rsa][message][id1]" => "Upgrade_completed"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE PG
		# line in RSA:  <fld1>: <process> <param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}: %{process} %{param}" }
				id => "message-PG"
				add_field => {
					"[event][id]" => "PG"
					"[rsa][message][id1]" => "PG"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId284
	# line in RSA:  DEFAULT SCHEDULER: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId284" {
		dissect {
			mapping => { "message" => "DEFAULT SCHEDULER: %{obj_name}" }
			id => "msgParserId284"
			add_field => {
				"event_description" => "DEFAULT SCHEDULER"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId285
	# line in RSA:  Context loader config file is jar:file:<filename>
	else if [logstash][msgparser][id] == "msgParserId285" {
		dissect {
			mapping => { "message" => "Context loader config file is jar:file:%{filename}" }
			id => "msgParserId285"
			add_field => {
				"event_description" => "Context loader config file"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId286
	# line in RSA:  Copied <filename> file from <directory> to <info>
	else if [logstash][msgparser][id] == "msgParserId286" {
		dissect {
			mapping => { "message" => "Copied %{filename} file from %{directory} to %{info}" }
			id => "msgParserId286"
			add_field => {
				"action" => "Copied file"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId288
	# line in RSA:  Java HotSpot(TM) <info>
	else if [logstash][msgparser][id] == "msgParserId288" {
		dissect {
			mapping => { "message" => "Java HotSpot(TM) %{info}" }
			id => "msgParserId288"
			add_field => {
				"event_description" => "Console VM version"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Changing" {
		# MESSAGE Changing
		# line in RSA:  Changing permissions of <obj_type> '<obj_name>' to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Changing permissions of %{obj_type} '%{obj_name}' to %{change_new}" }
				id => "message-Changing"
				add_field => {
				"action" => "Changing permissions"
					"[event][id]" => "Changing"
					"[rsa][message][id1]" => "Changing"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Changing:01
		# line in RSA:  Changing the new database AUTH method to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Changing the new database AUTH method to %{change_new}" }
				id => "message-Changing:01"
				add_field => {
				"action" => "Changing new database AUTH method"
					"[event][id]" => "Changing:01"
					"[rsa][message][id1]" => "Changing:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId291
	# line in RSA:  Job execution threads will use class loader of thread: <info>
	else if [logstash][msgparser][id] == "msgParserId291" {
		dissect {
			mapping => { "message" => "Job execution threads will use class loader of thread: %{info}" }
			id => "msgParserId291"
			add_field => {
				"event_description" => "Job execution threads will use class loader"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId292
	# line in RSA:  JobStoreCMT initialized.
	else if [logstash][msgparser][id] == "msgParserId292" {
		dissect {
			mapping => { "message" => "JobStoreCMT initialized." }
			id => "msgParserId292"
			add_field => {
				"action" => "JobStoreCMT initialized"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Quartz" {
		# MESSAGE Initialized:03
		# line in RSA:  Quartz scheduler '<obj_name>' <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Quartz scheduler '%{obj_name}' %{event_description}" }
				id => "message-Initialized:03"
				add_field => {
				"action" => "Quartz scheduler initialized"
					"[event][id]" => "Initialized:03"
					"[rsa][message][id1]" => "Initialized:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Created:03
		# line in RSA:  Quartz Scheduler <version> created.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Quartz Scheduler %{version} created." }
				id => "message-Created:03"
				add_field => {
				"action" => "Quartz Scheduler created."
					"[event][id]" => "Created:03"
					"[rsa][message][id1]" => "Created:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Scheduler_version
		# line in RSA:  Quartz scheduler version: <version>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Quartz scheduler version: %{version}" }
				id => "message-Scheduler_version"
				add_field => {
					"[event][id]" => "Scheduler_version"
					"[rsa][message][id1]" => "Scheduler_version"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId296
	# line in RSA:  Recovering <fld1> <event_description>
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "Recovering %{fld1} %{event_description}" }
			id => "msgParserId296"
			add_field => {
				"action" => "Recovering jobs"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId297
	# line in RSA:  Recovery complete.
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "Recovery complete." }
			id => "msgParserId297"
			add_field => {
				"event_description" => "Recovery"
				"disposition" => "Complete"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Removed" {
		# MESSAGE Removed
		# line in RSA:  Removed <fld1> 'complete' triggers.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Removed %{fld1} 'complete' triggers." }
				id => "message-Removed"
				add_field => {
				"action" => "Removed triggers"
					"[event][id]" => "Removed"
					"[rsa][message][id1]" => "Removed"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Removed:01
		# line in RSA:  Removed <fld1> stale fired job entries.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Removed %{fld1} stale fired job entries." }
				id => "message-Removed:01"
				add_field => {
				"action" => "Removed job entries"
					"[event][id]" => "Removed:01"
					"[rsa][message][id1]" => "Removed:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId300
	# line in RSA:  <action>
	else if [logstash][msgparser][id] == "msgParserId300" {
		dissect {
			mapping => { "message" => "%{action}" }
			id => "msgParserId300"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId301
	# line in RSA:  Upgrading database<fld1>
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "Upgrading database%{fld1}" }
			id => "msgParserId301"
			add_field => {
				"action" => "Upgrading database"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId302
	# line in RSA:  Exploits are up to date.
	else if [logstash][msgparser][id] == "msgParserId302" {
		dissect {
			mapping => { "message" => "Exploits are up to date." }
			id => "msgParserId302"
			add_field => {
				"event_description" => "Exploits are up to date"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId303
	# line in RSA:  Failure communicating with NSE @ <dhost>:<dport>.
	else if [logstash][msgparser][id] == "msgParserId303" {
		dissect {
			mapping => { "message" => "Failure communicating with NSE @ %{dhost}:%{dport}." }
			id => "msgParserId303"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
				"event_description" => "Failure communicating with NSE"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId304
	# line in RSA:  Renamed <filename> to <info>
	else if [logstash][msgparser][id] == "msgParserId304" {
		dissect {
			mapping => { "message" => "Renamed %{filename} to %{info}" }
			id => "msgParserId304"
			add_field => {
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId305
	# line in RSA:  Reinitializing web server for maintenance mode...
	else if [logstash][msgparser][id] == "msgParserId305" {
		dissect {
			mapping => { "message" => "Reinitializing web server for maintenance mode..." }
			id => "msgParserId305"
			add_field => {
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"event_description" => "Reinitializing web server for maintenance mode"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Replaced" {
		# MESSAGE Replaced
		# line in RSA:  Replaced <change_old> values from <filename> file with new auth method: <change_new>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Replaced %{change_old} values from %{filename} file with new auth method: %{change_new}." }
				id => "message-Replaced"
				add_field => {
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"action" => "Replaced conf values"
					"[event][id]" => "Replaced"
					"[rsa][message][id1]" => "Replaced"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Replaced:01
		# line in RSA:  Replaced <change_old> values from <filename> with new setting values
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Replaced %{change_old} values from %{filename} with new setting values" }
				id => "message-Replaced:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"action" => "Replaced conf values"
					"[event][id]" => "Replaced:01"
					"[rsa][message][id1]" => "Replaced:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "System" {
		# MESSAGE System
		# line in RSA:  System is running low on memory: <fld1>MB total (<fld2>MB free)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System is running low on memory: %{fld1}MB total (%{fld2}MB free)" }
				id => "message-System"
				add_field => {
				"event_description" => "System is running low on memory"
					"[event][id]" => "System"
					"[rsa][message][id1]" => "System"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE System:01
		# line in RSA: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{info}" }
				id => "message-System:01"
				add_field => {
				"group_object" => "%{hsite}"
				"shost" => "%{hshost}"
				"sport" => "%{hsport}"
				"protocol" => "%{hprotocol}"
					"[event][id]" => "System:01"
					"[rsa][message][id1]" => "System:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId310
	# line in RSA:  Analyzing the database.
	else if [logstash][msgparser][id] == "msgParserId310" {
		dissect {
			mapping => { "message" => "Analyzing the database." }
			id => "msgParserId310"
			add_field => {
				"event_description" => "Analyzing the database"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId311
	# line in RSA:  Connection to the new database was successful. <action>.
	else if [logstash][msgparser][id] == "msgParserId311" {
		dissect {
			mapping => { "message" => "Connection to the new database was successful. %{action}." }
			id => "msgParserId311"
			add_field => {
				"event_description" => "Connection to the new database was successful"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId312
	# line in RSA:  Handling <fld1> trigger(s) that missed their scheduled fire-time.
	else if [logstash][msgparser][id] == "msgParserId312" {
		dissect {
			mapping => { "message" => "Handling %{fld1} trigger(s) that missed their scheduled fire-time." }
			id => "msgParserId312"
			add_field => {
				"event_description" => "Handling trigger(s) that missed their scheduled fire-time"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId314
	# line in RSA:  LDAP authentication requires resolution
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "LDAP authentication requires resolution" }
			id => "msgParserId314"
			add_field => {
				"event_description" => "LDAP authentication requires resolution"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId315
	# line in RSA:  Maintenance Task Started
	else if [logstash][msgparser][id] == "msgParserId315" {
		dissect {
			mapping => { "message" => "Maintenance Task Started" }
			id => "msgParserId315"
			add_field => {
				"event_description" => "Maintenance Task Started"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId324
	# line in RSA:  <event_description>
	else if [logstash][msgparser][id] == "msgParserId324" {
		dissect {
			mapping => { "message" => "%{event_description}" }
			id => "msgParserId324"
			add_field => {
				"action" => "Shutting down"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId326
	# line in RSA:  <event_description>. Cleaning up. <directory>
	else if [logstash][msgparser][id] == "msgParserId326" {
		dissect {
			mapping => { "message" => "%{event_description}. Cleaning up. %{directory}" }
			id => "msgParserId326"
			add_field => {
				"action" => "Cleaning up"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId327
	# line in RSA:  Succesfully <event_description> to <dport>
	else if [logstash][msgparser][id] == "msgParserId327" {
		dissect {
			mapping => { "message" => "Succesfully %{event_description} to %{dport}" }
			id => "msgParserId327"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId328
	# line in RSA:  <action> <fld1> bytes into <directory>
	else if [logstash][msgparser][id] == "msgParserId328" {
		dissect {
			mapping => { "message" => "%{action} %{fld1} bytes into %{directory}" }
			id => "msgParserId328"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId329
	# line in RSA:  <process> executed with a return value of <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId329" {
		dissect {
			mapping => { "message" => "%{process} executed with a return value of %{resultcode}." }
			id => "msgParserId329"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId330
	# line in RSA: Started: <fld2>T<fld3>] [Duration: <fld4>] Processed vuln check types for <fld5> vuln checks.
	else if [logstash][msgparser][id] == "msgParserId330" {
		dissect {
			mapping => { "message" => "Started: %{fld2}T%{fld3}] [Duration: %{fld4}] Processed vuln check types for %{fld5} vuln checks." }
			id => "msgParserId330"
			add_field => {
				"event_description" => "Processed vuln check types"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId335
	# line in RSA:  Reflections <event_description>
	else if [logstash][msgparser][id] == "msgParserId335" {
		dissect {
			mapping => { "message" => "Reflections %{event_description}" }
			id => "msgParserId335"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId336
	# line in RSA: 0.16: <info>
	else if [logstash][msgparser][id] == "msgParserId336" {
		dissect {
			mapping => { "message" => "0.16: %{info}" }
			id => "msgParserId336"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId337
	# line in RSA: 0.49: <info>
	else if [logstash][msgparser][id] == "msgParserId337" {
		dissect {
			mapping => { "message" => "0.49: %{info}" }
			id => "msgParserId337"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId338
	# line in RSA: 0.245: <info>
	else if [logstash][msgparser][id] == "msgParserId338" {
		dissect {
			mapping => { "message" => "0.245: %{info}" }
			id => "msgParserId338"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId339
	# line in RSA: 0.325: <info>
	else if [logstash][msgparser][id] == "msgParserId339" {
		dissect {
			mapping => { "message" => "0.325: %{info}" }
			id => "msgParserId339"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId340
	# line in RSA: <fld1> <action>
	else if [logstash][msgparser][id] == "msgParserId340" {
		dissect {
			mapping => { "message" => "%{fld1} %{action}" }
			id => "msgParserId340"
			add_field => {
				"service" => "fld1"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId341
	# line in RSA:  com.rapid7.nexpose.nsc.critical.task.executor.core.thread.pool.size is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId341" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.critical.task.executor.core.thread.pool.size is not configured - returning default value %{result}." }
			id => "msgParserId341"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.critical.task.executor.core.thread.pool.size is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId342
	# line in RSA:  com.rapid7.nexpose.nsc.scan.multiengine.scanHaltTimeoutMilliSecond is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId342" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.scan.multiengine.scanHaltTimeoutMilliSecond is not configured - returning default value %{result}." }
			id => "msgParserId342"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.scan.multiengine.scanHaltTimeoutMilliSecond is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId343
	# line in RSA:  com.rapid7.nexpose.nsc.scan.scan.event.monitor.poll.duration is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId343" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.scan.scan.event.monitor.poll.duration is not configured - returning default value %{result}." }
			id => "msgParserId343"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.scan.scan.event.monitor.poll.duration is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId344
	# line in RSA:  com.rapid7.nexpose.nse.excludedFileSystems is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId344" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nse.excludedFileSystems is not configured - returning default value %{result}." }
			id => "msgParserId344"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nse.excludedFileSystems is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId345
	# line in RSA:  com.rapid7.nexpose.scan.logCPUMemoryToMemLog.enable is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId345" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.scan.logCPUMemoryToMemLog.enable is not configured - returning default value %{result}." }
			id => "msgParserId345"
			add_field => {
				"event_description" => "com.rapid7.nexpose.scan.logCPUMemoryToMemLog.enable is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId346
	# line in RSA:  com.rapid7.nexpose.scan.logMemory.interval is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId346" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.scan.logMemory.interval is not configured - returning default value %{result}." }
			id => "msgParserId346"
			add_field => {
				"event_description" => "com.rapid7.nexpose.scan.logMemory.interval is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId347
	# line in RSA:  com.rapid7.nexpose.scan.monitor.numberSavedAssetDurations is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId347" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.scan.monitor.numberSavedAssetDurations is not configured - returning default value %{result}." }
			id => "msgParserId347"
			add_field => {
				"event_description" => "com.rapid7.nexpose.scan.monitor.numberSavedAssetDurations is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId348
	# line in RSA:  com.rapid7.scan.perTestDurationLogging is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId348" {
		dissect {
			mapping => { "message" => "com.rapid7.scan.perTestDurationLogging is not configured - returning default value %{result}." }
			id => "msgParserId348"
			add_field => {
				"event_description" => "com.rapid7.scan.perTestDurationLogging is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId349
	# line in RSA:  com.rapid7.thread.threadPoolNonBlockingOpsProviderParallelism is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId349" {
		dissect {
			mapping => { "message" => "com.rapid7.thread.threadPoolNonBlockingOpsProviderParallelism is not configured - returning default value %{result}." }
			id => "msgParserId349"
			add_field => {
				"event_description" => "com.rapid7.thread.threadPoolNonBlockingOpsProviderParallelism is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId350
	# line in RSA:  com.rapid7.nexpose.nsc.critical.task.executor.max.thread.pool.size is not configured - returning default value <result>.
	else if [logstash][msgparser][id] == "msgParserId350" {
		dissect {
			mapping => { "message" => "com.rapid7.nexpose.nsc.critical.task.executor.max.thread.pool.size is not configured - returning default value %{result}." }
			id => "msgParserId350"
			add_field => {
				"event_description" => "com.rapid7.nexpose.nsc.critical.task.executor.max.thread.pool.size is not configured"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId351
	# line in RSA: <process> detected on classpath: [<fld2>]
	else if [logstash][msgparser][id] == "msgParserId351" {
		dissect {
			mapping => { "message" => "%{process} detected on classpath: [%{fld2}]" }
			id => "msgParserId351"
			add_field => {
				"action" => "detected"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId352
	# line in RSA: <fld1>] [<fld2>] Storing scan details for <event_type>.
	else if [logstash][msgparser][id] == "msgParserId352" {
		dissect {
			mapping => { "message" => "%{fld1}] [%{fld2}] Storing scan details for %{event_type}." }
			id => "msgParserId352"
			add_field => {
				"action" => "Storing scan details"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId353
	# line in RSA:  Clearing object tracker after <dclass_counter1> hits and <dclass_counter2> misses.
	else if [logstash][msgparser][id] == "msgParserId353" {
		dissect {
			mapping => { "message" => "Clearing object tracker after %{dclass_counter1} hits and %{dclass_counter2} misses." }
			id => "msgParserId353"
			add_field => {
				"action" => "Clearing object tracker"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId354
	# line in RSA: <fld1>] [<fld2>] All scan engines are up to date.
	else if [logstash][msgparser][id] == "msgParserId354" {
		dissect {
			mapping => { "message" => "%{fld1}] [%{fld2}] All scan engines are up to date." }
			id => "msgParserId354"
			add_field => {
				"result" => "All scan engines are up to date"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId355
	# line in RSA:  New Provider <audit_object> discovered.
	else if [logstash][msgparser][id] == "msgParserId355" {
		dissect {
			mapping => { "message" => "New Provider %{audit_object} discovered." }
			id => "msgParserId355"
			add_field => {
				"action" => "New Provider discovered"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId359
	# line in RSA: <fld1>] [<fld2>] [<fld3>] Session created.
	else if [logstash][msgparser][id] == "msgParserId359" {
		dissect {
			mapping => { "message" => "%{fld1}] [%{fld2}] [%{fld3}] Session created." }
			id => "msgParserId359"
			add_field => {
				"event_description" => "Session created"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Debug" {
		# MESSAGE Debug
		# line in RSA:  Debug logging is not enabled for this scan.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Debug logging is not enabled for this scan." }
				id => "message-Debug"
				add_field => {
				"event_description" => "Debug logging is not enabled"
					"[event][id]" => "Debug"
					"[rsa][message][id1]" => "Debug"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Debug:01
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Debug:01"
				add_field => {
					"[event][id]" => "Debug:01"
					"[rsa][message][id1]" => "Debug:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ACES" {
		# MESSAGE ACES
		# line in RSA:  ACES logging is not enabled.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ACES logging is not enabled." }
				id => "message-ACES"
				add_field => {
				"event_description" => "ACES logging is not enabled"
					"[event][id]" => "ACES"
					"[rsa][message][id1]" => "ACES"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ACES:01
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-ACES:01"
				add_field => {
					"[event][id]" => "ACES:01"
					"[rsa][message][id1]" => "ACES:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId362
	# line in RSA:  Invulnerable Data Storage is on.
	else if [logstash][msgparser][id] == "msgParserId362" {
		dissect {
			mapping => { "message" => "Invulnerable Data Storage is on." }
			id => "msgParserId362"
			add_field => {
				"event_description" => "Invulnerable Data Storage is on"
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Nmap" {
		# MESSAGE Nmap
		# line in RSA:  Nmap ARP Ping for local networks
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Nmap ARP Ping for local networks" }
				id => "message-Nmap"
				add_field => {
				"event_description" => "Nmap ARP Ping for local networks"
					"[event][id]" => "Nmap"
					"[rsa][message][id1]" => "Nmap"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Nmap:01
		# line in RSA:  <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Nmap:01"
				add_field => {
					"[event][id]" => "Nmap:01"
					"[rsa][message][id1]" => "Nmap:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId364
	# line in RSA:  {Authentication <result> for principal <fld>] <info>| <result>] <info>}
	else if [logstash][msgparser][id] == "msgParserId364" {
		grok {
			match => { "message" => "^[\s]*(Authentication[\s]+(?<result>[^\s]*)[\s]+for[\s]+principal[\s]+(?<fld>[^\]]*)\][\s]+(?<info>.*)|[\s]*(?<result>[^\]]*)\][\s]+(?<info>.*))$" }
			id => "msgParserId364"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId365
	# line in RSA: <fld1>
	else if [logstash][msgparser][id] == "msgParserId365" {
		dissect {
			mapping => { "message" => "%{fld1}" }
			id => "msgParserId365"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-nexposemsg.json"
#			template_name => "nexpose_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
