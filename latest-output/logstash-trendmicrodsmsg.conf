# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "trendmicrods"
			"[observer][name]" => "Trend Micro Deep Security"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth> <hdate> <htime> <hostname> CEF:0|Trend Micro|Deep Security Manager|<hversion>|<messageid>|<hevent_description>|<hseverity>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{htime} %{hostname} CEF:0|Trend Micro|Deep Security Manager|%{hversion}|%{messageid}|%{hevent_description}|%{hseverity}|%{message}" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hdate> <htime> <hostname> CEF:0|Trend Micro|Deep Security Manager|<hversion>|<hid>|<hevent_description>|<hseverity>|<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{htime} %{hostname} CEF:0|Trend Micro|Deep Security Manager|%{hversion}|%{hid}|%{hevent_description}|%{hseverity}|%{message}" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "TRENDMICRODS_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-trendmicrodsmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<fld17> fname=<obj_name> target=<hostname> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{fld17} fname=%{obj_name} target=%{hostname} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}" }
			id => "msgParserId0"
			add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "930" {
		# MESSAGE 930
		# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<fld17> fname=<obj_name> target=<hostname> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{fld17} fname=%{obj_name} target=%{hostname} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}" }
				id => "message-930"
				add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
					"[event][id]" => "930"
					"[rsa][message][id1]" => "930"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 930:01
		# line in RSA:  src=<saddr> suser=<username> msg=A new certificate from '<fld1>' was added to the global trust Manager store.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "src=%{saddr} suser=%{username} msg=A new certificate from '%{fld1}' was added to the global trust Manager store." }
				id => "message-930:01"
				add_field => {
				"event_description" => "%{hevent_description}"
				"info" => " A new certificate was added to the global trust Manager store."
					"[event][id]" => "930:01"
					"[rsa][message][id1]" => "930:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "931" {
		# MESSAGE 931
		# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<fld17> fname=<obj_name> target=<hostname> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{fld17} fname=%{obj_name} target=%{hostname} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}" }
				id => "message-931"
				add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
					"[event][id]" => "931"
					"[rsa][message][id1]" => "931"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 931:01
		# line in RSA:  src=<saddr> suser=<username> msg=<info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "src=%{saddr} suser=%{username} msg=%{info}." }
				id => "message-931:01"
				add_field => {
				"event_description" => "%{hevent_description}"
					"[event][id]" => "931:01"
					"[rsa][message][id1]" => "931:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "374" {
		# MESSAGE 374
		# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<fld17> fname=<obj_name> target=<hostname> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{fld17} fname=%{obj_name} target=%{hostname} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}" }
				id => "message-374"
				add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
					"[event][id]" => "374"
					"[rsa][message][id1]" => "374"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 374:01
		# line in RSA:  src=<saddr> suser=<username> target=<daddr> msg=<info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "src=%{saddr} suser=%{username} target=%{daddr} msg=%{info}." }
				id => "message-374:01"
				add_field => {
				"event_description" => "%{hevent_description}"
					"[event][id]" => "374:01"
					"[rsa][message][id1]" => "374:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "365" {
		# MESSAGE 365
		# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<fld17> fname=<obj_name> target=<hostname> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{fld17} fname=%{obj_name} target=%{hostname} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}" }
				id => "message-365"
				add_field => {
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
					"[event][id]" => "365"
					"[rsa][message][id1]" => "365"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 365:01
		# line in RSA:  src=<saddr> suser=<username> target=<daddr> msg=<info>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "src=%{saddr} suser=%{username} target=%{daddr} msg=%{info}." }
				id => "message-365:01"
				add_field => {
				"event_description" => "%{hevent_description}"
					"[event][id]" => "365:01"
					"[rsa][message][id1]" => "365:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA: act=<action> cn1=<hostid> cn1Label=<fld1> cn2=<result> cn2Label=<fld2> cn3=<fld3> cn3Label=<fld4> cnt=<dclass_counter1> cs1=<context> cs1Label=<fld5> cs2=<fld6> cs2Label=<fld7> cs3=<fld8> cs3Label=<fld9> cs4=<fld10> cs4Label=<fld11> cs5=<fld12> cs5Label=<fld13> cs6=<fld14> cs6Label=<fld15> dmac=<dmacaddr> dpt=<dport> dst=<daddr> in=<rbytes> out=<sbytes> proto=<protocol> suser=<username> smac=<smacaddr> spt=<sport> src=<saddr> TrendMicroDsFrameType=<fld20> TrendMicroDsPacketData=<fld16> filePath=<filename> msg=<info> oldfilePath=<change_old> duser=<fld17> fname=<obj_name> target=<hostname> TrendMicroDsTenant=<fld18> TrendMicroDsTenantId=<fld19>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "act=%{action} cn1=%{hostid} cn1Label=%{fld1} cn2=%{result} cn2Label=%{fld2} cn3=%{fld3} cn3Label=%{fld4} cnt=%{dclass_counter1} cs1=%{context} cs1Label=%{fld5} cs2=%{fld6} cs2Label=%{fld7} cs3=%{fld8} cs3Label=%{fld9} cs4=%{fld10} cs4Label=%{fld11} cs5=%{fld12} cs5Label=%{fld13} cs6=%{fld14} cs6Label=%{fld15} dmac=%{dmacaddr} dpt=%{dport} dst=%{daddr} in=%{rbytes} out=%{sbytes} proto=%{protocol} suser=%{username} smac=%{smacaddr} spt=%{sport} src=%{saddr} TrendMicroDsFrameType=%{fld20} TrendMicroDsPacketData=%{fld16} filePath=%{filename} msg=%{info} oldfilePath=%{change_old} duser=%{fld17} fname=%{obj_name} target=%{hostname} TrendMicroDsTenant=%{fld18} TrendMicroDsTenantId=%{fld19}" }
			id => "msgParserId4"
			add_field => {
				"id" => "%{hid}"
				"event_description" => "%{hevent_description}"
				"change_new" => "%{filename}"
				"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[event_cat]"
		destination => "[event_cat_name]"
		dictionary => {
			"1605000000" => "System.Normal.Conditions"
			"1803000000" => "System.Normal.Conditions"
		}
		fallback => "Other.Default"
		override => true
	}
}
filter {
	translate {
		field => "[id]"
		destination => "[event_cat]"
		dictionary => {
			"2205" => "1605000000"
			"2941" => "1605000000"
		}
		fallback => "1901000000"
		override => true
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-trendmicrodsmsg.json"
#			template_name => "trendmicrods_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
