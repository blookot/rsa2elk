# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "symantecbrightmail"
			"[observer][name]" => "Symantec Brightmail"
			"[observer][type]" => "Application Firewall"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5>: [<hfld6>] (<fld7>): [<messageid>] <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^:]*):[\s]+\[(?<hfld6>[^\]]*)\][\s]+\((?<fld7>[^\)]*)\):[\s]+\[(?<messageid>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5>: [<hfld6>] <messageid>: <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^:]*):[\s]+\[(?<hfld6>[^\]]*)\][\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5>: [<hfld6>] (<messageid>: <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^:]*):[\s]+\[(?<hfld6>[^\]]*)\][\s]+\((?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hday> <htime> <hhostname> <hfld1>[<hfld2>]: <hfld3>|<fld4>|<messageid>|<!payload:$START>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+(?<hfld1>[^\[]*)\[(?<hfld2>[^\]]*)\]:[\s]+(?<hfld3>[^\|]*)\|(?<fld4>[^\|]*)\|(?<messageid>[^\|]*)\|(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth><hday><htime><hhostname> <hfld2>[<hfld3>]: <messageid>:<!payload:hmonth>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0006
	# line in RSA: <hmonth><hday><htime><hhostname> <hfld2>[<hfld3>]: [<messageid>]:<!payload:hmonth>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0007
	# line in RSA: <hmonth><hday><htime><hhostname> <hfld2>[<hfld3>]: <messageid>-<!payload:hmonth>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0008
	# line in RSA: <hmonth><hday><htime><hhostname> <hfld2>[<hfld3>]: <messageid>(<!payload:hmonth>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0011
	# line in RSA: <hmonth><hday><htime><hhostname> <hfld2>[<hfld3>]: <messageid>.<!payload:hmonth>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0009
	# line in RSA: <hmonth> <hday> <htime> <hhostname> <hfld2>[<hfld3>]: <msgIDPart1> <msgIDPart2> <msgIDPart3><!payload:hmonth>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0010
	# line in RSA: <hmonth> <hday> <htime> <hhostname> <hfld2>[<hfld3>]: <msgIDPart1> <msgIDPart2>.<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hday>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhostname>[^\s]*)[\s]+(?<hfld2>[^\[]*)\[(?<hfld3>[^\]]*)\]:[\s]+(?<msgIDPart1>[^\s]*)[\s]+(?<msgIDPart2>[^\.]*)\.(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{msgIDPart1}_%{msgIDPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-symantecbrightmailmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "27219" {
		# MESSAGE 27219
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (<fld7>): [<fld8>] A connection to the firewall from: <<<saddr>> returned Disposition: <<<disposition>> triggering filtering policy <<<policyname>> with destination <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (%{fld7}): [%{fld8}] A connection to the firewall from: <%{saddr}> returned Disposition: <%{disposition}> triggering filtering policy <%{policyname}> with destination %{info}" }
				id => "message-27219"
				add_field => {
					"[event][id]" => "27219"
					"[rsa][message][id1]" => "27219"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 27219:01
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (<fld7>): [<fld8>] A message from <<<from>> source <<<src_zone>> to <<<to>> using sender's group policy <<<fld9>> returned Disposition: <<<disposition>>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (%{fld7}): [%{fld8}] A message from <%{from}> source <%{src_zone}> to <%{to}> using sender's group policy <%{fld9}> returned Disposition: <%{disposition}>." }
				id => "message-27219:01"
				add_field => {
					"[event][id]" => "27219:01"
					"[rsa][message][id1]" => "27219:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 27219:02
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (<fld7>): [<fld8>] A message from <<<from>> source <<<src_zone>> to <<<to>> using recipient's group policy <<<fld9>> returned Disposition: <<<disposition>> triggering filtering policy <<<policyname>> with destination <<<<<action>>>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (%{fld7}): [%{fld8}] A message from <%{from}> source <%{src_zone}> to <%{to}> using recipient's group policy <%{fld9}> returned Disposition: <%{disposition}> triggering filtering policy <%{policyname}> with destination <<%{action}>>." }
				id => "message-27219:02"
				add_field => {
					"[event][id]" => "27219:02"
					"[rsa][message][id1]" => "27219:02"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE 27219:03
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (<fld7>): [<fld8>] A message from <<<from>> source <<<src_zone>> to <<<to>> using recipient's group policy <<<fld9>> returned Disposition: <<<disposition>>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (%{fld7}): [%{fld8}] A message from <%{from}> source <%{src_zone}> to <%{to}> using recipient's group policy <%{fld9}> returned Disposition: <%{disposition}>." }
				id => "message-27219:03"
				add_field => {
					"[event][id]" => "27219:03"
					"[rsa][message][id1]" => "27219:03"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (<fld7>): [<fld8>] Antivirus <event_description> because <result>
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (%{fld7}): [%{fld8}] Antivirus %{event_description} because %{result}" }
			id => "msgParserId4"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (<fld7>): [<fld8>] The lock file <filename> is currently locked by another process.
	else if [logstash][msgparser][id] == "msgParserId5" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (%{fld7}): [%{fld8}] The lock file %{filename} is currently locked by another process." }
			id => "msgParserId5"
			add_field => {
				"event_description" => "The lock file is currently locked by another process."
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ML-DELIVERY_ATTEMPT" {
		# MESSAGE ML-DELIVERY_ATTEMPT
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] ML-DELIVERY_ATTEMPT: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description>, sender: <from>, recipient: <to>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^:]*):[\s]+\[(?<fld6>[^\]]*)\][\s]+ML\-DELIVERY_ATTEMPT:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^,]*),[\s]+sender:[\s]+(?<from>[^,]*),[\s]+recipient:[\s]+(?<to>.*)$" }
				id => "message-ML-DELIVERY_ATTEMPT"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_outcome" => "Failure"
					"[event][id]" => "ML-DELIVERY_ATTEMPT"
					"[rsa][message][id1]" => "ML-DELIVERY_ATTEMPT"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ML-DELIVERY_ATTEMPT:01
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-DELIVERY_ATTEMPT: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description>, sender: <from>, recipient: <to>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<fld6>[^\]]*)\]:[\s]+ML\-DELIVERY_ATTEMPT:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^,]*),[\s]+sender:[\s]+(?<from>[^,]*),[\s]+recipient:[\s]+(?<to>.*)$" }
				id => "message-ML-DELIVERY_ATTEMPT:01"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_outcome" => "Failure"
					"[event][id]" => "ML-DELIVERY_ATTEMPT:01"
					"[rsa][message][id1]" => "ML-DELIVERY_ATTEMPT:01"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ML-DELIVERY" {
		# MESSAGE ML-DELIVERY
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] ML-DELIVERY: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description> to host: <<<daddr>:<dport>>, sender: <from>, recipient: <to>, Note: [<info>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^:]*):[\s]+\[(?<fld6>[^\]]*)\][\s]+ML\-DELIVERY:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^\s]*)[\s]+to[\s]+host:[\s]+<(?<daddr>[^:]*):(?<dport>[^>]*)>,[\s]+sender:[\s]+(?<from>[^,]*),[\s]+recipient:[\s]+(?<to>[^,]*),[\s]+Note:[\s]+\[(?<info>[^\]]*)\]$" }
				id => "message-ML-DELIVERY"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_outcome" => "Success"
					"[event][id]" => "ML-DELIVERY"
					"[rsa][message][id1]" => "ML-DELIVERY"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ML-DELIVERY:01
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-DELIVERY: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description> to host: <<<daddr>:<dport>>, sender: <from>, recipient: <to>, Note: [<info>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<fld6>[^\]]*)\]:[\s]+ML\-DELIVERY:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^\s]*)[\s]+to[\s]+host:[\s]+<(?<daddr>[^:]*):(?<dport>[^>]*)>,[\s]+sender:[\s]+(?<from>[^,]*),[\s]+recipient:[\s]+(?<to>[^,]*),[\s]+Note:[\s]+\[(?<info>[^\]]*)\]$" }
				id => "message-ML-DELIVERY:01"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_outcome" => "Success"
					"[event][id]" => "ML-DELIVERY:01"
					"[rsa][message][id1]" => "ML-DELIVERY:01"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ML-RECEIVED" {
		# MESSAGE ML-RECEIVED
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] ML-RECEIVED: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description> on:<daddr>:<dport>, from host:<saddr>:<sport>, sender: <from>, Size: <fld8>, Note: [<info>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^:]*):[\s]+\[(?<fld6>[^\]]*)\][\s]+ML\-RECEIVED:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^\s]*)[\s]+on:(?<daddr>[^:]*):(?<dport>[^,]*),[\s]+from[\s]+host:(?<saddr>[^:]*):(?<sport>[^,]*),[\s]+sender:[\s]+(?<from>[^,]*),[\s]+Size:[\s]+(?<fld8>[^,]*),[\s]+Note:[\s]+\[(?<info>[^\]]*)\]$" }
				id => "message-ML-RECEIVED"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Receive"
				"ec_outcome" => "Success"
					"[event][id]" => "ML-RECEIVED"
					"[rsa][message][id1]" => "ML-RECEIVED"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ML-RECEIVED:01
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-RECEIVED: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description> on:<daddr>:<dport>, from host:<saddr>:<sport>, sender: <from>, Size: <fld8>, Note: [<info>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<fld6>[^\]]*)\]:[\s]+ML\-RECEIVED:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^\s]*)[\s]+on:(?<daddr>[^:]*):(?<dport>[^,]*),[\s]+from[\s]+host:(?<saddr>[^:]*):(?<sport>[^,]*),[\s]+sender:[\s]+(?<from>[^,]*),[\s]+Size:[\s]+(?<fld8>[^,]*),[\s]+Note:[\s]+\[(?<info>[^\]]*)\]$" }
				id => "message-ML-RECEIVED:01"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Receive"
				"ec_outcome" => "Success"
					"[event][id]" => "ML-RECEIVED:01"
					"[rsa][message][id1]" => "ML-RECEIVED:01"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ML-RECEIVED:02
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-RECEIVED: Message ID: <fld7>, {Audit ID |Audit ID:} Not Available, <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<fld6>[^\]]*)\]:[\s]+ML\-RECEIVED:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+Not[\s]+Available,[\s]+(?<event_description>.*)$" }
				id => "message-ML-RECEIVED:02"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Receive"
				"ec_outcome" => "Success"
					"[event][id]" => "ML-RECEIVED:02"
					"[rsa][message][id1]" => "ML-RECEIVED:02"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ML-RECEIVED_RECIPIENT" {
		# MESSAGE ML-RECEIVED_RECIPIENT
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] ML-RECEIVED_RECIPIENT: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, recipient: <to>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^:]*):[\s]+\[(?<fld6>[^\]]*)\][\s]+ML\-RECEIVED_RECIPIENT:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+recipient:[\s]+(?<to>.*)$" }
				id => "message-ML-RECEIVED_RECIPIENT"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Receive"
				"ec_outcome" => "Success"
					"[event][id]" => "ML-RECEIVED_RECIPIENT"
					"[rsa][message][id1]" => "ML-RECEIVED_RECIPIENT"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ML-RECEIVED_RECIPIENT:01
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-RECEIVED_RECIPIENT: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, recipient: <to>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<fld6>[^\]]*)\]:[\s]+ML\-RECEIVED_RECIPIENT:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+recipient:[\s]+(?<to>.*)$" }
				id => "message-ML-RECEIVED_RECIPIENT:01"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Receive"
				"ec_outcome" => "Success"
					"[event][id]" => "ML-RECEIVED_RECIPIENT:01"
					"[rsa][message][id1]" => "ML-RECEIVED_RECIPIENT:01"
					"[event][categoryid]" => "1207010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ML-PERMFAIL" {
		# MESSAGE ML-PERMFAIL
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] ML-PERMFAIL: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description>, sender: <from>, recipient: <to>, Detail: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^:]*):[\s]+\[(?<fld6>[^\]]*)\][\s]+ML\-PERMFAIL:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^,]*),[\s]+sender:[\s]+(?<from>[^,]*),[\s]+recipient:[\s]+(?<to>[^,]*),[\s]+Detail:[\s]+(?<info>.*)$" }
				id => "message-ML-PERMFAIL"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_outcome" => "Failure"
					"[event][id]" => "ML-PERMFAIL"
					"[rsa][message][id1]" => "ML-PERMFAIL"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ML-PERMFAIL:01
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-PERMFAIL: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description>, sender: <from>, recipient: <to>, Detail: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<fld6>[^\]]*)\]:[\s]+ML\-PERMFAIL:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^,]*),[\s]+sender:[\s]+(?<from>[^,]*),[\s]+recipient:[\s]+(?<to>[^,]*),[\s]+Detail:[\s]+(?<info>.*)$" }
				id => "message-ML-PERMFAIL:01"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_outcome" => "Failure"
					"[event][id]" => "ML-PERMFAIL:01"
					"[rsa][message][id1]" => "ML-PERMFAIL:01"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ML-TRANSFAIL" {
		# MESSAGE ML-TRANSFAIL
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] ML-TRANSFAIL: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description>, sender: <from>, recipient: <to> Detail: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^:]*):[\s]+\[(?<fld6>[^\]]*)\][\s]+ML\-TRANSFAIL:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^,]*),[\s]+sender:[\s]+(?<from>[^,]*),[\s]+recipient:[\s]+(?<to>[^\s]*)[\s]+Detail:[\s]+(?<info>.*)$" }
				id => "message-ML-TRANSFAIL"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_outcome" => "Failure"
					"[event][id]" => "ML-TRANSFAIL"
					"[rsa][message][id1]" => "ML-TRANSFAIL"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE ML-TRANSFAIL:01
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-TRANSFAIL: Message ID: <fld7>, {Audit ID |Audit ID:} <id>, <event_description>, sender: <from>, recipient: <to> Detail: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<fld6>[^\]]*)\]:[\s]+ML\-TRANSFAIL:[\s]+Message[\s]+ID:[\s]+(?<fld7>[^,]*),[\s]+(Audit[\s]+ID[\s]+|Audit[\s]+ID:)[\s]+(?<id>[^,]*),[\s]+(?<event_description>[^,]*),[\s]+sender:[\s]+(?<from>[^,]*),[\s]+recipient:[\s]+(?<to>[^\s]*)[\s]+Detail:[\s]+(?<info>.*)$" }
				id => "message-ML-TRANSFAIL:01"
				add_field => {
				"ec_subject" => "Message"
				"ec_activity" => "Send"
				"ec_outcome" => "Failure"
					"[event][id]" => "ML-TRANSFAIL:01"
					"[rsa][message][id1]" => "ML-TRANSFAIL:01"
					"[event][categoryid]" => "1207010200"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-HOST_CONNECTED: <saddr>:<sport> connected. (ID: <sessionid>)
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}[%{fld6}]: ML-HOST_CONNECTED: %{saddr}:%{sport} connected. (ID: %{sessionid})" }
			id => "msgParserId19"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-CONNECT_TO_HOST_FAILURE: Target Host: {<saddr>:<sport>|(null)}
	else if [logstash][msgparser][id] == "msgParserId20" {
		grok {
			match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<fld6>[^\]]*)\]:[\s]+ML\-CONNECT_TO_HOST_FAILURE:[\s]+Target[\s]+Host:[\s]+((?<saddr>[^:]*):(?<sport>.*)|\(null\))$" }
			id => "msgParserId20"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-HOST_DISCONNECTED: <saddr>:<sport> disconnected. (ID <sessionid>)
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}[%{fld6}]: ML-HOST_DISCONNECTED: %{saddr}:%{sport} disconnected. (ID %{sessionid})" }
			id => "msgParserId21"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>[<fld6>]: ML-REJECT: Rejection on: <daddr>:<dport>, sent to host: <saddr>:<sport>, Audit ID <sessionid>, <resultcode> <result>
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}[%{fld6}]: ML-REJECT: Rejection on: %{daddr}:%{dport}, sent to host: %{saddr}:%{sport}, Audit ID %{sessionid}, %{resultcode} %{result}" }
			id => "msgParserId22"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (INFO:<fld7>): [<fld8>] <info>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (INFO:%{fld7}): [%{fld8}] %{info}" }
			id => "msgParserId23"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "NOTICE" {
		# MESSAGE NOTICE
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (NOTICE:<fld7>): [<fld8>] '<rulename>' were updated successfully.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (NOTICE:%{fld7}): [%{fld8}] '%{rulename}' were updated successfully." }
				id => "message-NOTICE"
				add_field => {
				"event_description" => "Rules were updated successfully"
					"[event][id]" => "NOTICE"
					"[rsa][message][id1]" => "NOTICE"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
		# MESSAGE NOTICE:01
		# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (NOTICE:<fld7>): [<fld8>] <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (NOTICE:%{fld7}): [%{fld8}] %{result}" }
				id => "message-NOTICE:01"
				add_field => {
					"[event][id]" => "NOTICE:01"
					"[rsa][message][id1]" => "NOTICE:01"
					"[event][categoryid]" => "1207000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
			}
		}
	}
	# PARSER msgParserId26
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (DEBUG:<fld7>): [<fld8>] <info>
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (DEBUG:%{fld7}): [%{fld8}] %{info}" }
			id => "msgParserId26"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s" ] }
		}
	}
	# PARSER msgParserId27
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|ACCEPT|<shost>:<sport>
	else if [logstash][msgparser][id] == "msgParserId27" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|ACCEPT|%{shost}:%{sport}" }
			id => "msgParserId27"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId28
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|SENDER|<from>
	else if [logstash][msgparser][id] == "msgParserId28" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|SENDER|%{from}" }
			id => "msgParserId28"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|FIRED|<from>|<info>
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|FIRED|%{from}|%{info}" }
			id => "msgParserId29"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId30
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|SOURCE|<info>
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|SOURCE|%{info}" }
			id => "msgParserId30"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|EHLO|<from>
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|EHLO|%{from}" }
			id => "msgParserId31"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|ORCPTS|<from>
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|ORCPTS|%{from}" }
			id => "msgParserId32"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|SUBJECT|<subject>
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|SUBJECT|%{subject}" }
			id => "msgParserId33"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|IRCPTACTION|<from>|<action>
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|IRCPTACTION|%{from}|%{action}" }
			id => "msgParserId34"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|LOGICAL_IP|<saddr>
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|LOGICAL_IP|%{saddr}" }
			id => "msgParserId35"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|MSGID|<info>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|MSGID|%{info}" }
			id => "msgParserId36"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|MSG_SIZE|<filename_size>
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|MSG_SIZE|%{filename_size}" }
			id => "msgParserId37"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|UNTESTED|<from>|<info>|<fld7>
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|UNTESTED|%{from}|%{info}|%{fld7}" }
			id => "msgParserId38"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|VERDICT|<from>|<info>|<fld7>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|VERDICT|%{from}|%{info}|%{fld7}" }
			id => "msgParserId39"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|DELIVER|<daddr>:<dport>|<to>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|DELIVER|%{daddr}:%{dport}|%{to}" }
			id => "msgParserId40"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|TRACKERID|<from>|<fld7>
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|TRACKERID|%{from}|%{fld7}" }
			id => "msgParserId41"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId42
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|TLS_RECEIVED|<result>
	else if [logstash][msgparser][id] == "msgParserId42" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|TLS_RECEIVED|%{result}" }
			id => "msgParserId42"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|ATTACH|<filename>
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|ATTACH|%{filename}" }
			id => "msgParserId43"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|ATTACHFILTER|<content_type>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|ATTACHFILTER|%{content_type}" }
			id => "msgParserId44"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|TRANS_FAILURE|<result>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|TRANS_FAILURE|%{result}" }
			id => "msgParserId45"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|TLS_DELIVERY|<result>
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|TLS_DELIVERY|%{result}" }
			id => "msgParserId46"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DELIVERY_FAILURE" {
		# MESSAGE DELIVERY_FAILURE
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|DELIVERY_FAILURE|<daddr>:<dport>|<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|DELIVERY_FAILURE|%{daddr}:%{dport}|%{result}" }
				id => "message-DELIVERY_FAILURE"
				add_field => {
					"[event][id]" => "DELIVERY_FAILURE"
					"[rsa][message][id1]" => "DELIVERY_FAILURE"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DELIVERY_FAILURE:01
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <sessionid>|<fld6>|DELIVERY_FAILURE|<result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{sessionid}|%{fld6}|DELIVERY_FAILURE|%{result}" }
				id => "message-DELIVERY_FAILURE:01"
				add_field => {
					"[event][id]" => "DELIVERY_FAILURE:01"
					"[rsa][message][id1]" => "DELIVERY_FAILURE:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: <fld7>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: %{fld7}:%{event_description}" }
			id => "msgParserId49"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "LUA" {
		# MESSAGE LUA
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: LUA: RDNS: No RDNS record found for connecting IP  <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: LUA: RDNS: No RDNS record found for connecting IP  %{saddr}" }
				id => "message-LUA"
				add_field => {
					"[event][id]" => "LUA"
					"[rsa][message][id1]" => "LUA"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LUA:01
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: LUA: ML-CONNECT-INFO: connect from  <fld6>[<saddr>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: LUA: ML-CONNECT-INFO: connect from  %{fld6}[%{saddr}]" }
				id => "message-LUA:01"
				add_field => {
					"[event][id]" => "LUA:01"
					"[rsa][message][id1]" => "LUA:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId52
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: smsrouting:<event_description>
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: smsrouting:%{event_description}" }
			id => "msgParserId52"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId53
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DKIM:<fld12>
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DKIM:%{fld12}" }
			id => "msgParserId53"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId54
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: spf_validate_mailfrom:<fld12>
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: spf_validate_mailfrom:%{fld12}" }
			id => "msgParserId54"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNS resolution failure <fld6>
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNS resolution failure %{fld6}" }
			id => "msgParserId55"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId56
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: SMTP-<fld6>
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: SMTP-%{fld6}" }
			id => "msgParserId56"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId57
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: SCHEP-<fld6>
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: SCHEP-%{fld6}" }
			id => "msgParserId57"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId58
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: MQ-<fld6>
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: MQ-%{fld6}" }
			id => "msgParserId58"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId59
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: SPOOL-<fld6>
	else if [logstash][msgparser][id] == "msgParserId59" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: SPOOL-%{fld6}" }
			id => "msgParserId59"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: ESMTP-<fld6>
	else if [logstash][msgparser][id] == "msgParserId60" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: ESMTP-%{fld6}" }
			id => "msgParserId60"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DNSDS" {
		# MESSAGE DNSDS
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNSDS-<fld6> Connection to <saddr> would be <fld12> conns.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNSDS-%{fld6} Connection to %{saddr} would be %{fld12} conns." }
				id => "message-DNSDS"
				add_field => {
					"[event][id]" => "DNSDS"
					"[rsa][message][id1]" => "DNSDS"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DNSDS:01
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNSDS-<fld6> Starting remove scan for host <saddr> binding <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNSDS-%{fld6} Starting remove scan for host %{saddr} binding %{fld12}" }
				id => "message-DNSDS:01"
				add_field => {
					"[event][id]" => "DNSDS:01"
					"[rsa][message][id1]" => "DNSDS:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DNSDS:02
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNSDS-<fld6> Ending remove scan for host <saddr> binding <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNSDS-%{fld6} Ending remove scan for host %{saddr} binding %{fld12}" }
				id => "message-DNSDS:02"
				add_field => {
					"[event][id]" => "DNSDS:02"
					"[rsa][message][id1]" => "DNSDS:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DNSDS:03
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNSDS-<fld6> Removing connection
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNSDS-%{fld6} Removing connection" }
				id => "message-DNSDS:03"
				add_field => {
					"[event][id]" => "DNSDS:03"
					"[rsa][message][id1]" => "DNSDS:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DNSDS:04
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNSDS-<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNSDS-%{fld6}" }
				id => "message-DNSDS:04"
				add_field => {
					"[event][id]" => "DNSDS:04"
					"[rsa][message][id1]" => "DNSDS:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CONN" {
		# MESSAGE CONN
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: CONN-<fld6> Connection to <saddr> would be <fld12> conns.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: CONN-%{fld6} Connection to %{saddr} would be %{fld12} conns." }
				id => "message-CONN"
				add_field => {
					"[event][id]" => "CONN"
					"[rsa][message][id1]" => "CONN"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CONN:01
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: CONN-<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: CONN-%{fld6}" }
				id => "message-CONN:01"
				add_field => {
					"[event][id]" => "CONN:01"
					"[rsa][message][id1]" => "CONN:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DNS" {
		# MESSAGE DNS
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNS-<fld6> refreshing <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNS-%{fld6} refreshing %{shost}" }
				id => "message-DNS"
				add_field => {
					"[event][id]" => "DNS"
					"[rsa][message][id1]" => "DNS"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DNS:01
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNS-<fld6> in get_As <shost> (<fld12>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNS-%{fld6} in get_As %{shost} (%{fld12})" }
				id => "message-DNS:01"
				add_field => {
					"[event][id]" => "DNS:01"
					"[rsa][message][id1]" => "DNS:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DNS:02
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNS-<fld6> increment DNS failure count for domain <domain> to <fld12>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNS-%{fld6} increment DNS failure count for domain %{domain} to %{fld12}" }
				id => "message-DNS:02"
				add_field => {
					"[event][id]" => "DNS:02"
					"[rsa][message][id1]" => "DNS:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DNS:03
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNS-<fld6> <shost> <saddr> <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNS-%{fld6} %{shost} %{saddr} %{fld7}" }
				id => "message-DNS:03"
				add_field => {
					"[event][id]" => "DNS:03"
					"[rsa][message][id1]" => "DNS:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DNS:04
		# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: DNS-<fld6>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: DNS-%{fld6}" }
				id => "message-DNS:04"
				add_field => {
					"[event][id]" => "DNS:04"
					"[rsa][message][id1]" => "DNS:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId73
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (WARNING:<fld7>): [<fld8>] <result>
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (WARNING:%{fld7}): [%{fld8}] %{result}" }
			id => "msgParserId73"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId74
	# line in RSA:  <fld1> <fld2> <fld3> <fld4> <fld5>: [<fld6>] (ERROR:<fld7>): [<fld8>] <result>
	else if [logstash][msgparser][id] == "msgParserId74" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{fld5}: [%{fld6}] (ERROR:%{fld7}): [%{fld8}] %{result}" }
			id => "msgParserId74"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId75
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: [info]: <info>
	else if [logstash][msgparser][id] == "msgParserId75" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: [info]: %{info}" }
			id => "msgParserId75"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId76
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: [error]: <result>
	else if [logstash][msgparser][id] == "msgParserId76" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: [error]: %{result}" }
			id => "msgParserId76"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: ddsn_cancel_pending(<fld12>) (<fld13>): <result>
	else if [logstash][msgparser][id] == "msgParserId77" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: ddsn_cancel_pending(%{fld12}) (%{fld13}): %{result}" }
			id => "msgParserId77"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId78
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: Connection dropped. <result>. Connection class: <fld12>, IP: <saddr> 
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: Connection dropped. %{result}. Connection class: %{fld12}, IP: %{saddr}" }
			id => "msgParserId78"
			add_field => {
				"event_description" => "Connection dropped"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: <fld1> <fld2> <fld3> <hostname> <fld4>[<fld5>]: smtp.c:<fld6>
	else if [logstash][msgparser][id] == "msgParserId79" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{hostname} %{fld4}[%{fld5}]: smtp.c:%{fld6}" }
			id => "msgParserId79"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-symantecbrightmailmsg.json"
#			template_name => "symantecbrightmail_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
