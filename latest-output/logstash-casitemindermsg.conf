# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "casiteminder"
			"[observer][name]" => "CA Siteminder"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: { %Siteminder-4: | %siteminder-4: } <messageid> <!payload>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*%Siteminder\-4:[\s]+|[\s]*%siteminder\-4:[\s]+)[\s]+(?<messageid>[^\s]*)[\s]+(?<message>.*)$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: %siteminder-4: [<hfld1>][<hfld2>][<hfld3>][<messageid>] <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^%siteminder\-4:[\s]+\[(?<message>(?<hfld1>[^\]]*)\]\[(?<hfld2>[^\]]*)\]\[(?<hfld3>[^\]]*)\]\[(?<messageid>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-casitemindermsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "AdminAuth" {
		# MESSAGE AdminAuth:02
		# line in RSA:  <hostname> [<fld20> <fld21>] " Login"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \" Login\"" }
				id => "message-AdminAuth:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "Login"
					"[event][id]" => "AdminAuth:02"
					"[rsa][message][id1]" => "AdminAuth:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AdminAuth:01
		# line in RSA:  <hostname> [<fld20> <fld21>] " Logout"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \" Logout\"" }
				id => "message-AdminAuth:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "Logout"
					"[event][id]" => "AdminAuth:01"
					"[rsa][message][id1]" => "AdminAuth:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AdminAuth
		# line in RSA:  <hostname> [<fld20> <fld21>] "<username> <action>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \"%{username} %{action}\"" }
				id => "message-AdminAuth"
				add_field => {
					"[event][id]" => "AdminAuth"
					"[rsa][message][id1]" => "AdminAuth"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId3
	# line in RSA:  <hostname> [<fld20> <fld21>] "<username>"
	else if [logstash][msgparser][id] == "msgParserId3" {
		dissect {
			mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \"%{username}\"" }
			id => "msgParserId3"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{fld20}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "AdminChange" {
		# MESSAGE AdminChange
		# line in RSA:  <hostname> [<fld20> <fld21>] "- <username>" <action> Policy '<policyname>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \"- %{username}\" %{action} Policy '%{policyname}'" }
				id => "message-AdminChange"
				add_field => {
					"[event][id]" => "AdminChange"
					"[rsa][message][id1]" => "AdminChange"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AdminChange:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "- <username>" <action> <obj_type> '<obj_name>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \"- %{username}\" %{action} %{obj_type} '%{obj_name}'" }
				id => "message-AdminChange:01"
				add_field => {
					"[event][id]" => "AdminChange:01"
					"[rsa][message][id1]" => "AdminChange:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AuthLogout" {
		# MESSAGE AuthLogout
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { CN= | cn= } <username>,{ OU= | ou= } <dn>" "<realm>" [<fld23>] [<fld1>] <space>  [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+)[\s]+(?<username>[^,]*),([\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AuthLogout"
				add_field => {
					"[event][id]" => "AuthLogout"
					"[rsa][message][id1]" => "AuthLogout"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AuthLogout:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { username= | uid= } <username>,ou=<dn>" "<realm>" [<fld23>] [<fld1>] <space>  [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*username=[\s]+|[\s]*uid=[\s]+)[\s]+(?<username>[^,]*),ou=(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AuthLogout:01"
				add_field => {
					"[event][id]" => "AuthLogout:01"
					"[rsa][message][id1]" => "AuthLogout:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> <username>" { <fld24>: LdapErr: <fld25>, comment: <info> | <info> }
	else if [logstash][msgparser][id] == "msgParserId8" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+(?<username>[^\"]*)\"[\s]+([\s]*(?<fld24>[^:]*):[\s]+LdapErr:[\s]+(?<fld25>[^,]*),[\s]+comment:[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId8"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "ManagementCommand" {
		# MESSAGE ManagementCommand
		# line in RSA:  <hostname> [<fld20> <fld21>] "- { CN= | cn= } <username>,{ OU= | ou= } <dn>" <action> { 'CN= | 'cn= } <c_username>,<fld26>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"\-[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+)[\s]+(?<username>[^,]*),([\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+(?<action>[^\s]*)[\s]+([\s]*'CN=[\s]+|[\s]*'cn=[\s]+)[\s]+(?<c_username>[^,]*),(?<fld26>[^']*)'$" }
				id => "message-ManagementCommand"
				add_field => {
					"[event][id]" => "ManagementCommand"
					"[rsa][message][id1]" => "ManagementCommand"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE ManagementCommand:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "- { UID= | uid= } <uid>,{ OU= | ou= } <dn>" <action> '<fld26>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"\-[\s]+([\s]*UID=[\s]+|[\s]*uid=[\s]+)[\s]+(?<uid>[^,]*),([\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+(?<action>[^\s]*)[\s]+'(?<fld26>[^']*)'$" }
				id => "message-ManagementCommand:01"
				add_field => {
					"[event][id]" => "ManagementCommand:01"
					"[rsa][message][id1]" => "ManagementCommand:01"
					"[event][categoryid]" => "1401040000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA:  <hostname> [<fld20> <fld21>] { "<hostip> <username>" | "<space>" }
	else if [logstash][msgparser][id] == "msgParserId11" {
		grok {
			match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+([\s]*\"(?<hostip>[^\s]*)[\s]+(?<username>[^\"]*)\"[\s]+|[\s]*\"(?<space>[^\"]*)\"[\s]+)$" }
			id => "msgParserId11"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "AuthAccept" {
		# MESSAGE AuthAccept
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { CN= | cn= } <username>,{ CN= | cn= | OU= | ou= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] [<fld1>] <space> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+)[\s]+(?<username>[^,]*),([\s]*CN=[\s]+|[\s]*cn=[\s]+|[\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AuthAccept"
				add_field => {
					"[event][id]" => "AuthAccept"
					"[rsa][message][id1]" => "AuthAccept"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AuthAccept:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { cn= | username= | uid= } <username>,{ cn= | ou= | dc= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] [<fld1>] <space> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*cn=[\s]+|[\s]*username=[\s]+|[\s]*uid=[\s]+)[\s]+(?<username>[^,]*),([\s]*cn=[\s]+|[\s]*ou=[\s]+|[\s]*dc=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AuthAccept:01"
				add_field => {
					"[event][id]" => "AuthAccept:01"
					"[rsa][message][id1]" => "AuthAccept:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AzAccept" {
		# MESSAGE AzAccept
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { CN= | cn= } <username>,{ CN= | cn= | OU= | ou= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <space> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+)[\s]+(?<username>[^,]*),([\s]*CN=[\s]+|[\s]*cn=[\s]+|[\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AzAccept"
				add_field => {
					"[event][id]" => "AzAccept"
					"[rsa][message][id1]" => "AzAccept"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AzAccept:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { cn= | username= | uid= } <username>,{ cn= | ou= | dc= }  <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <space> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*cn=[\s]+|[\s]*username=[\s]+|[\s]*uid=[\s]+)[\s]+(?<username>[^,]*),([\s]*cn=[\s]+|[\s]*ou=[\s]+|[\s]*dc=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AzAccept:01"
				add_field => {
					"[event][id]" => "AzAccept:01"
					"[rsa][message][id1]" => "AzAccept:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AzAccept:02
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { cn= | username= | uid= } <username>,{ cn= | ou= | dc= }  <dn>" "<realm> <web_method> /<webpage>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*cn=[\s]+|[\s]*username=[\s]+|[\s]*uid=[\s]+)[\s]+(?<username>[^,]*),([\s]*cn=[\s]+|[\s]*ou=[\s]+|[\s]*dc=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>.*)$" }
				id => "message-AzAccept:02"
				add_field => {
					"[event][id]" => "AzAccept:02"
					"[rsa][message][id1]" => "AzAccept:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AzReject" {
		# MESSAGE AzReject
		# line in RSA:  <hostname> [<fld20> <fld21>] " { CN= | cn= } <username>,{ CN= | cn= | OU= | ou= }<dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>]  <info> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+)[\s]+(?<username>[^,]*),([\s]*CN=[\s]+|[\s]*cn=[\s]+|[\s]*OU=[\s]+|[\s]*ou=[\s]+)(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AzReject"
				add_field => {
					"[event][id]" => "AzReject"
					"[rsa][message][id1]" => "AzReject"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AzReject:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { cn= | username= | uid= } <username>,{ cn= | ou= | dc= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>]  <info> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*cn=[\s]+|[\s]*username=[\s]+|[\s]*uid=[\s]+)[\s]+(?<username>[^,]*),([\s]*cn=[\s]+|[\s]*ou=[\s]+|[\s]*dc=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AzReject:01"
				add_field => {
					"[event][id]" => "AzReject:01"
					"[rsa][message][id1]" => "AzReject:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AuthReject" {
		# MESSAGE AuthReject
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { CN= | cn= } <username>,{ CN= | cn= | OU= | ou= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <info> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+)[\s]+(?<username>[^,]*),([\s]*CN=[\s]+|[\s]*cn=[\s]+|[\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AuthReject"
				add_field => {
					"[event][id]" => "AuthReject"
					"[rsa][message][id1]" => "AuthReject"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AuthReject:02
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { username= | uid= } <username>,{ cn= | ou= | dc= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <info> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*username=[\s]+|[\s]*uid=[\s]+)[\s]+(?<username>[^,]*),([\s]*cn=[\s]+|[\s]*ou=[\s]+|[\s]*dc=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AuthReject:02"
				add_field => {
					"[event][id]" => "AuthReject:02"
					"[rsa][message][id1]" => "AuthReject:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AuthReject:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> <username>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <info> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \"%{hostip} %{username}\" \"%{realm} %{web_method} /%{webpage}\" [%{fld23}] %{space} [%{fld1}] %{info} [%{fld2}] [%{fld3}]" }
				id => "message-AuthReject:01"
				add_field => {
					"[event][id]" => "AuthReject:01"
					"[rsa][message][id1]" => "AuthReject:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AuthReject:03
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <info> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \"%{hostip}\" \"%{realm} %{web_method} /%{webpage}\" [%{fld23}] %{space} [%{fld1}] %{info} [%{fld2}] [%{fld3}]" }
				id => "message-AuthReject:03"
				add_field => {
					"[event][id]" => "AuthReject:03"
					"[rsa][message][id1]" => "AuthReject:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ValidateReject" {
		# MESSAGE ValidateReject
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { CN= | cn= | uid= } <username>,{ CN= | cn= | OU= | ou= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <info> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+|[\s]*uid=[\s]+)[\s]+(?<username>[^,]*),([\s]*CN=[\s]+|[\s]*cn=[\s]+|[\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-ValidateReject"
				add_field => {
					"[event][id]" => "ValidateReject"
					"[rsa][message][id1]" => "ValidateReject"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE ValidateReject:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip>" "{ federation manager agent | <realm> } <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <info> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\"]*)\"[\s]+\"([\s]*federation[\s]+manager[\s]+agent[\s]+|[\s]*(?<realm>[^\s]*)[\s]+)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<info>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-ValidateReject:01"
				add_field => {
					"[event][id]" => "ValidateReject:01"
					"[rsa][message][id1]" => "ValidateReject:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "ValidateAccept" {
		# MESSAGE ValidateAccept
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { CN= | cn= } <username>,{ CN= | cn= | OU= | ou= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <space> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+)[\s]+(?<username>[^,]*),([\s]*CN=[\s]+|[\s]*cn=[\s]+|[\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-ValidateAccept"
				add_field => {
					"[event][id]" => "ValidateAccept"
					"[rsa][message][id1]" => "ValidateAccept"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE ValidateAccept:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { username= | uid= } <username>,{ cn= | ou= | dc= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <space> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*username=[\s]+|[\s]*uid=[\s]+)[\s]+(?<username>[^,]*),([\s]*cn=[\s]+|[\s]*ou=[\s]+|[\s]*dc=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-ValidateAccept:01"
				add_field => {
					"[event][id]" => "ValidateAccept:01"
					"[rsa][message][id1]" => "ValidateAccept:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "AuthAttempt" {
		# MESSAGE AuthAttempt
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> { CN= | cn= } <username>,{ OU= | ou= } <dn>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <space> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<hostname>[^\s]*)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<fld21>[^\]]*)\][\s]+\"(?<hostip>[^\s]*)[\s]+([\s]*CN=[\s]+|[\s]*cn=[\s]+)[\s]+(?<username>[^,]*),([\s]*OU=[\s]+|[\s]*ou=[\s]+)[\s]+(?<dn>[^\"]*)\"[\s]+\"(?<realm>[^\s]*)[\s]+(?<web_method>[^\s]*)[\s]+/(?<webpage>[^\"]*)\"[\s]+\[(?<fld23>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<space>[^\s]*)[\s]+\[(?<fld2>[^\]]*)\][\s]+\[(?<fld3>[^\]]*)\]$" }
				id => "message-AuthAttempt"
				add_field => {
					"[event][id]" => "AuthAttempt"
					"[rsa][message][id1]" => "AuthAttempt"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AuthAttempt:01
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> <username>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>]  <fld7>: LdapErr: <fld6>, comment: <info>, <fld4> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \"%{hostip} %{username}\" \"%{realm} %{web_method} /%{webpage}\" [%{fld23}] %{space} [%{fld1}]  %{fld7}: LdapErr: %{fld6}, comment: %{info}, %{fld4} [%{fld2}] [%{fld3}]" }
				id => "message-AuthAttempt:01"
				add_field => {
					"[event][id]" => "AuthAttempt:01"
					"[rsa][message][id1]" => "AuthAttempt:01"
					"[event][categoryid]" => "1303000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
		# MESSAGE AuthAttempt:02
		# line in RSA:  <hostname> [<fld20> <fld21>] "<hostip> <username>" "<realm> <web_method> /<webpage>" [<fld23>] <space> [<fld1>] <space> [<fld2>] [<fld3>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} [%{fld20} %{fld21}] \"%{hostip} %{username}\" \"%{realm} %{web_method} /%{webpage}\" [%{fld23}] %{space} [%{fld1}] %{space} [%{fld2}] [%{fld3}]" }
				id => "message-AuthAttempt:02"
				add_field => {
					"[event][id]" => "AuthAttempt:02"
					"[rsa][message][id1]" => "AuthAttempt:02"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{fld20}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/MMM/yyyy:H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA:  <id>][<fld19> <fld20> <fld21> <fld22> <fld23>][<application>][<severity>] <event_description>
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "%{id}][%{fld19} %{fld20} %{fld21} %{fld22} %{fld23}][%{application}][%{severity}] %{event_description}" }
			id => "msgParserId29"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20} %{fld21} %{fld22} %{fld23}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d yyyyH:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-casitemindermsg.json"
#			template_name => "casiteminder_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
