# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "nortelvpn"
			"[observer][name]" => "Nortel VPN Contivity"
			"[observer][type]" => "VPN"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <fld25> <month>/<day>/<year> <time> <hfld1> <hfld2> : <messageid> :: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld25>[^\s]*)[\s]+(?<month>[^/]*)/(?<day>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+::[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <fld25> <month>/<day>/<year> <time> <hfld1> <hfld2> : <messageid> . <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld25>[^\s]*)[\s]+(?<month>[^/]*)/(?<day>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+\.[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <fld25> <month>/<day>/<year> <time> <hfld1> <hfld2> : <messageid> [ <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld25>[^\s]*)[\s]+(?<month>[^/]*)/(?<day>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+\[[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <fld25> <month>/<day>/<year> <time> <hfld1> <hfld2> : <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld25>[^\s]*)[\s]+(?<month>[^/]*)/(?<day>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0042
	# line in RSA: <fld25> <month>/<day>/<year> <time> <hfld1> <hfld2> : Ppp0x<hfld3> [<hfld4>] <messageid>:: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld25>[^\s]*)[\s]+(?<month>[^/]*)/(?<day>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+:[\s]+Ppp0x(?<hfld3>[^\s]*)[\s]+\[(?<hfld4>[^\]]*)\][\s]+(?<message>(?<messageid>[^:]*)::[\s]+(?<payload>.*))$" }
			id => "header-0042"
			add_field => {
				"[rsa][header][id]" => "0042"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0043
	# line in RSA: <fld25> <month>/<day>/<year> <time> <hfld1> <hfld2> : Ppp0x<hfld3> [<hfld4>] <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld25>[^\s]*)[\s]+(?<month>[^/]*)/(?<day>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+:[\s]+Ppp0x(?<hfld3>[^\s]*)[\s]+\[(?<hfld4>[^\]]*)\][\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0043"
			add_field => {
				"[rsa][header][id]" => "0043"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0044
	# line in RSA: <fld25> <month>/<day>/<year> <time> <hfld1> <hfld2> : Ppp0x<hfld3> [<hfld4>] <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<fld25>[^\s]*)[\s]+(?<month>[^/]*)/(?<day>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+:[\s]+Ppp0x(?<hfld3>[^\s]*)[\s]+\[(?<hfld4>[^\]]*)\][\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0044"
			add_field => {
				"[rsa][header][id]" => "0044"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0050
	# line in RSA: Draft: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> <hfld6> <hfld7> <hfld8> [<hfld9>][<hfld10>]  <<SSL>: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Draft:[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+\[(?<hfld9>[^\]]*)\]\[(?<hfld10>[^\]]*)\][\s]+<SSL>:[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0050"
			add_field => {
				"[rsa][header][id]" => "0050"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0051
	# line in RSA: Draft: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> <hfld6> <hfld7> <hfld8> [<hfld9>][<hfld10>]  <<SSL>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Draft:[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^\s]*)[\s]+(?<hfld7>[^\s]*)[\s]+(?<hfld8>[^\s]*)[\s]+\[(?<hfld9>[^\]]*)\]\[(?<hfld10>[^\]]*)\][\s]+<SSL>:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0051"
			add_field => {
				"[rsa][header][id]" => "0051"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0052
	# line in RSA: { Error | error | Informational | info | Unknown | unknown | Warning | warning | Notice | notice } SSL <hdate>T<htime> <hfld1> <<SSL>: <messageid>= <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*Error[\s]+|[\s]*error[\s]+|[\s]*Informational[\s]+|[\s]*info[\s]+|[\s]*Unknown[\s]+|[\s]*unknown[\s]+|[\s]*Warning[\s]+|[\s]*warning[\s]+|[\s]*Notice[\s]+|[\s]*notice[\s]+)[\s]+SSL[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+<SSL>:[\s]+(?<message>(?<messageid>[^=]*)=[\s]+(?<payload>.*))$" }
			id => "header-0052"
			add_field => {
				"[rsa][header][id]" => "0052"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0053
	# line in RSA: { Error | error | Informational | info | Unknown | unknown | Warning | warning | Notice | notice } SSL <hdate>T<htime> <hfld1> <<SSL>: <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*Error[\s]+|[\s]*error[\s]+|[\s]*Informational[\s]+|[\s]*info[\s]+|[\s]*Unknown[\s]+|[\s]*unknown[\s]+|[\s]*Warning[\s]+|[\s]*warning[\s]+|[\s]*Notice[\s]+|[\s]*notice[\s]+)[\s]+SSL[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+<SSL>:[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0053"
			add_field => {
				"[rsa][header][id]" => "0053"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0054
	# line in RSA: { Error | error | Informational | info | Unknown | unknown | Warning | warning | Notice | notice } SSL <hdate>T<htime> <hfld1> <<SSL>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*Error[\s]+|[\s]*error[\s]+|[\s]*Informational[\s]+|[\s]*info[\s]+|[\s]*Unknown[\s]+|[\s]*unknown[\s]+|[\s]*Warning[\s]+|[\s]*warning[\s]+|[\s]*Notice[\s]+|[\s]*notice[\s]+)[\s]+SSL[\s]+(?<hdate>[^T]*)T(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+<SSL>:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0054"
			add_field => {
				"[rsa][header][id]" => "0054"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0055
	# line in RSA: { error | info | unknown | warning | Warning | notice } SSL <hdate>:<htime> <<SSL>: <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*error[\s]+|[\s]*info[\s]+|[\s]*unknown[\s]+|[\s]*warning[\s]+|[\s]*Warning[\s]+|[\s]*notice[\s]+)[\s]+SSL[\s]+(?<hdate>[^:]*):(?<htime>[^\s]*)[\s]+<SSL>:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0055"
			add_field => {
				"[rsa][header][id]" => "0055"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: { alert | notice } SSL <<iSD-SSL>: <messageid> { Cleared Name= | Name= } <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*alert[\s]+|[\s]*notice[\s]+)[\s]+SSL[\s]+<iSD\-SSL>:[\s]+(?<message>(?<messageid>[^\s]*)[\s]+([\s]*Cleared[\s]+Name=[\s]+|[\s]*Name=[\s]+)[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0007
	# line in RSA: { critical | error | info | unknown | warning | notice } SSL { <<iSD-SSL>: | <<SSL>: } <messageid>: <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*critical[\s]+|[\s]*error[\s]+|[\s]*info[\s]+|[\s]*unknown[\s]+|[\s]*warning[\s]+|[\s]*notice[\s]+)[\s]+SSL[\s]+([\s]*<iSD\-SSL>:[\s]+|[\s]*<SSL>:[\s]+)[\s]+(?<message>(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0007"
			add_field => {
				"[rsa][header][id]" => "0007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: { error | info | unknown | warning | notice } SSL { <<iSD-SSL>: | <<SSL>: } <messageid>=<!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*error[\s]+|[\s]*info[\s]+|[\s]*unknown[\s]+|[\s]*warning[\s]+|[\s]*notice[\s]+)[\s]+SSL[\s]+([\s]*<iSD\-SSL>:[\s]+|[\s]*<SSL>:[\s]+)[\s]+(?<message>(?<messageid>[^=]*)=(?<payload>.*))$" }
			id => "header-0008"
			add_field => {
				"[rsa][header][id]" => "0008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0009
	# line in RSA: { error | info | unknown | warning | notice  } SSL { <<iSD-SSL>: | <<SSL>: }  <messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^([\s]*error[\s]+|[\s]*info[\s]+|[\s]*unknown[\s]+|[\s]*warning[\s]+|[\s]*notice[\s]+)[\s]+SSL[\s]+([\s]*<iSD\-SSL>:[\s]+|[\s]*<SSL>:[\s]+)[\s]+(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0009"
			add_field => {
				"[rsa][header][id]" => "0009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0010
	# line in RSA: <<ISD-SSL>: <haddr> <hprotocol> <hscheme> "<messageid> <!payload:messageid>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^<ISD\-SSL>:[\s]+(?<haddr>[^\s]*)[\s]+(?<hprotocol>[^\s]*)[\s]+(?<hscheme>[^\s]*)[\s]+\"(?<message>(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0010"
			add_field => {
				"[rsa][header][id]" => "0010"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_nortelvpnmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:   _CfgName changed from '<fld1>' to '<fld2>' by user '<username>' @ '<saddr>' 
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "_CfgName changed from '%{fld1}' to '%{fld2}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId0"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "CfgName changed by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Accounting" {
		# MESSAGE 00258:00
		# line in RSA:   Accounting [<fld1>] <fld2>: No reply from server { "<saddr>(<sport>)" | <saddr>(<sport>) }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Accounting[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<fld2>[^:]*):[\s]+No[\s]+reply[\s]+from[\s]+server[\s]+([\s]*\"(?<saddr>[^\(]*)\((?<sport>[^\)]*)\)\"[\s]+|[\s]*(?<saddr>[^\(]*)\((?<sport>[^\)]*)\)[\s]+)$" }
				id => "message-00258:00"
				add_field => {
				"action" => "no reply from server"
					"[event][id]" => "00258:00"
					"[rsa][message][id1]" => "00258:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00258:01
		# line in RSA:   Accounting [<fld1>] <fld2>: Shutdown complete. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Accounting [%{fld1}] %{fld2}: Shutdown complete." }
				id => "message-00258:01"
				add_field => {
				"action" => "Shutdown complete"
					"[event][id]" => "00258:01"
					"[rsa][message][id1]" => "00258:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00258:02
		# line in RSA:    Accounting [<fld1>] <fld2>: missing Radius accounting status file: <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Accounting [%{fld1}] %{fld2}: missing Radius accounting status file: %{filename}" }
				id => "message-00258:02"
				add_field => {
				"action" => "missing Radius accounting status file"
					"[event][id]" => "00258:02"
					"[rsa][message][id1]" => "00258:02"
					"[event][categoryid]" => "1603090000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId4
	# line in RSA:    <action> changed from '<fld1>' to '<fld2>' by user '<username>' @ '<saddr>' 
	else if [logstash][msgparser][id] == "msgParserId4" {
		dissect {
			mapping => { "message" => "%{action} changed from '%{fld1}' to '%{fld2}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId4"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Alarm" {
		# MESSAGE 00415
		# line in RSA:  Alarm Name="<rulename>" Id="<id>" Sender="<dhost>" Cause="<fld1>" Extra=<info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Alarm Name=\"%{rulename}\" Id=\"%{id}\" Sender=\"%{dhost}\" Cause=\"%{fld1}\" Extra=%{info}" }
				id => "message-00415"
				add_field => {
				"action" => "Alarm"
					"[event][id]" => "00415"
					"[rsa][message][id1]" => "00415"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00415:01
		# line in RSA:  Alarm Cleared Name="<rulename>" Id="<id>" Sender="<dhost>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Alarm Cleared Name=\"%{rulename}\" Id=\"%{id}\" Sender=\"%{dhost}\"" }
				id => "message-00415:01"
				add_field => {
				"action" => "Alarm Cleared"
					"[event][id]" => "00415:01"
					"[rsa][message][id1]" => "00415:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA:  ALERT - <protocol> <info>
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "ALERT - %{protocol} %{info}" }
			id => "msgParserId7"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Alert:" {
		# MESSAGE 00433:01
		# line in RSA:  Alert: <threat_name> RECEIVED from <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Alert: %{threat_name} RECEIVED from %{shost}" }
				id => "message-00433:01"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"action" => "SUSPICIOUS FRAGMENTS RECEIVED"
					"[event][id]" => "00433:01"
					"[rsa][message][id1]" => "00433:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00433
		# line in RSA:  Alert: <threat_name> targetted at <shost>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Alert: %{threat_name} targetted at %{shost}" }
				id => "message-00433"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"action" => "LAND DENIAL OF SERVICE ATTACK on local host"
					"[event][id]" => "00433"
					"[rsa][message][id1]" => "00433"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA:  Allocated IP <saddr> to <fld1> at '<fld2>' for vpn='<fld3>'
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "Allocated IP %{saddr} to %{fld1} at '%{fld2}' for vpn='%{fld3}'" }
			id => "msgParserId10"
			add_field => {
				"action" => "Allocated IP vpn session"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "An" {
		# MESSAGE 00001:00
		# line in RSA:   An error occurred while communicating with the gateway  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "An error occurred while communicating with the gateway" }
				id => "message-00001:00"
				add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"action" => "gateway communication error"
					"[event][id]" => "00001:00"
					"[rsa][message][id1]" => "00001:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00002:00
		# line in RSA:  An error occurred while parsing the policy
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "An error occurred while parsing the policy" }
				id => "message-00002:00"
				add_field => {
				"action" => "policy parsing error"
					"[event][id]" => "00002:00"
					"[rsa][message][id1]" => "00002:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: AsyncPPP [<fld1>] <msg> 
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "AsyncPPP [%{fld1}] %{msg}" }
			id => "msgParserId13"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA: Authorization failed. Please try again. 
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "Authorization failed. Please try again." }
			id => "msgParserId14"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Authorization failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId15
	# line in RSA:  BDELETE <url>"
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "BDELETE %{url}\"" }
			id => "msgParserId15"
			add_field => {
				"action" => "BDELETE"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Boot" {
		# MESSAGE 00193:00
		# line in RSA: Boot [<fld1>] Booting in Normal mode ... 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Boot [%{fld1}] Booting in Normal mode ..." }
				id => "message-00193:00"
				add_field => {
					"[event][id]" => "00193:00"
					"[rsa][message][id1]" => "00193:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00193:01
		# line in RSA:  Boot [<fld1>] Booting version <version>, created on <month> <day> <year>, <time>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Boot [%{fld1}] Booting version %{version}, created on %{month} %{day} %{year}, %{time}" }
				id => "message-00193:01"
				add_field => {
				"action" => "Booting"
					"[event][id]" => "00193:01"
					"[rsa][message][id1]" => "00193:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA:  BMOVE <url>"
	else if [logstash][msgparser][id] == "msgParserId18" {
		dissect {
			mapping => { "message" => "BMOVE %{url}\"" }
			id => "msgParserId18"
			add_field => {
				"action" => "BMOVE"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "BoTestTunnel" {
		# MESSAGE 00416
		# line in RSA:   BoTestTunnel[<fld1>, <fld2>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BoTestTunnel[%{fld1}, %{fld2}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00416"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "Tunnel created by user"
					"[event][id]" => "00416"
					"[rsa][message][id1]" => "00416"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00416:01
		# line in RSA:   BoTestTunnel[<fld1>, <fld2>] destroyed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "BoTestTunnel[%{fld1}, %{fld2}] destroyed by user '%{username}' @ '%{saddr}'" }
				id => "message-00416:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Tunnel destroyed by user"
					"[event][id]" => "00416:01"
					"[rsa][message][id1]" => "00416:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA:  BPROPPATCH <url>"
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "BPROPPATCH %{url}\"" }
			id => "msgParserId21"
			add_field => {
				"action" => "BPROPPATCH"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Branch" {
		# MESSAGE 00237:00
		# line in RSA:   Branch Office [<fld1>] Synchronizing branch office tags 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Branch Office [%{fld1}] Synchronizing branch office tags" }
				id => "message-00237:00"
				add_field => {
					"[event][id]" => "00237:00"
					"[rsa][message][id1]" => "00237:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00237:01
		# line in RSA:   Branch Office [<fld1>] Branch office tag synchronization complete 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Branch Office [%{fld1}] Branch office tag synchronization complete" }
				id => "message-00237:01"
				add_field => {
					"[event][id]" => "00237:01"
					"[rsa][message][id1]" => "00237:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00237:02
		# line in RSA:   Branch Office [<fld1>] RemoveBOSession: <action>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Branch Office [%{fld1}] RemoveBOSession: %{action}." }
				id => "message-00237:02"
				add_field => {
				"method" => "RemoveBOSession"
					"[event][id]" => "00237:02"
					"[rsa][message][id1]" => "00237:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00237:03
		# line in RSA:   Branch Office [<fld1>] InstallBOSession: Could not find local gateway address.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Branch Office [%{fld1}] InstallBOSession: Could not find local gateway address." }
				id => "message-00237:03"
				add_field => {
				"action" => "local gateway address not found"
					"[event][id]" => "00237:03"
					"[rsa][message][id1]" => "00237:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00237:04
		# line in RSA:   Branch Office [<fld1>] InstallRoute: route for rem[<saddr>-<smask>]@<daddr> - is disabled
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Branch Office [%{fld1}] InstallRoute: route for rem[%{saddr}-%{smask}]@%{daddr} - is disabled" }
				id => "message-00237:04"
				add_field => {
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
				"action" => "route is disabled"
					"[event][id]" => "00237:04"
					"[rsa][message][id1]" => "00237:04"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00237:05
		# line in RSA:   Branch Office [<fld1>] ActivateBOSessionOnPhysIntfUp : no circuit mapping for dynamic branchOffice [<fld2>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Branch Office [%{fld1}] ActivateBOSessionOnPhysIntfUp : no circuit mapping for dynamic branchOffice [%{fld2}]" }
				id => "message-00237:05"
				add_field => {
				"action" => "no circuit mapping for dynamic branchOffice"
					"[event][id]" => "00237:05"
					"[rsa][message][id1]" => "00237:05"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00237:06
		# line in RSA:   Branch Office [<fld1>] <scheme> { Incoming Branch | Branch } office { tunnel initiation | tunnel } rejected because <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Branch[\s]+Office[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<scheme>[^\s]*)[\s]+([\s]*Incoming[\s]+Branch[\s]+|[\s]*Branch[\s]+)[\s]+office[\s]+([\s]*tunnel[\s]+initiation[\s]+|[\s]*tunnel[\s]+)[\s]+rejected[\s]+because[\s]+(?<event_description>.*)$" }
				id => "message-00237:06"
				add_field => {
				"action" => "Branch office tunnel rejected"
					"[event][id]" => "00237:06"
					"[rsa][message][id1]" => "00237:06"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId29
	# line in RSA:  Can not accept <daddr> as router id
	else if [logstash][msgparser][id] == "msgParserId29" {
		dissect {
			mapping => { "message" => "Can not accept %{daddr} as router id" }
			id => "msgParserId29"
			add_field => {
				"action" => "invalid router id"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId30
	# line in RSA:  CCP Down and encryption needed
	else if [logstash][msgparser][id] == "msgParserId30" {
		dissect {
			mapping => { "message" => "CCP Down and encryption needed" }
			id => "msgParserId30"
			add_field => {
				"action" => "CCP Down and encryption needed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA:  cfg file setting warning { '<fld1>' | <info> }
	else if [logstash][msgparser][id] == "msgParserId31" {
		grok {
			match => { "message" => "^[\s]*cfg[\s]+file[\s]+setting[\s]+warning[\s]+([\s]*'(?<fld1>[^']*)'[\s]+|[\s]*(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId31"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA:  CheckPoint[<fld1>].<fld2> update failed, please verify value: '<fld3>' by user '<username>' @ '<saddr>' 
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "CheckPoint[%{fld1}].%{fld2} update failed, please verify value: '%{fld3}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId32"
			add_field => {
				"action" => "Checkpoint update failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA:  Checking chain: invalid { child | parent } cert, <event_description> 
	else if [logstash][msgparser][id] == "msgParserId33" {
		grok {
			match => { "message" => "^[\s]*Checking[\s]+chain:[\s]+invalid[\s]+([\s]*child[\s]+|[\s]*parent[\s]+)[\s]+cert,[\s]+(?<event_description>[^\s]*)[\s]+$" }
			id => "msgParserId33"
			add_field => {
				"action" => "checking chain"
				"reason" => "invalid cert"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA:  Child cert [<result>] not valid signature by [<username>] - <event_description> 
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "Child cert [%{result}] not valid signature by [%{username}] - %{event_description}" }
			id => "msgParserId34"
			add_field => {
				"action" => "invalid child cert signature"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId35
	# line in RSA:  Cleaning Up Version <msg> 
	else if [logstash][msgparser][id] == "msgParserId35" {
		dissect {
			mapping => { "message" => "Cleaning Up Version %{msg}" }
			id => "msgParserId35"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA:  Closing <msg> 
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "Closing %{msg}" }
			id => "msgParserId36"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId37
	# line in RSA: Configuration file: <filename> 
	else if [logstash][msgparser][id] == "msgParserId37" {
		dissect {
			mapping => { "message" => "Configuration file: %{filename}" }
			id => "msgParserId37"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA:   Conn backlog reached,possible SYN attack 
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "Conn backlog reached,possible SYN attack" }
			id => "msgParserId38"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Couldn't" {
		# MESSAGE 00016:00
		# line in RSA:  Couldn't install route for <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Couldn't install route for %{info}" }
				id => "message-00016:00"
				add_field => {
					"[event][id]" => "00016:00"
					"[rsa][message][id1]" => "00016:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00016:01
		# line in RSA:   Couldn't find name in tree '<fld1>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Couldn't find name in tree '%{fld1}'" }
				id => "message-00016:01"
				add_field => {
				"action" => "name in tree not found"
					"[event][id]" => "00016:01"
					"[rsa][message][id1]" => "00016:01"
					"[event][categoryid]" => "1602020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA:  CreateFilters - cannot find filter cn=<fld1> 
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "CreateFilters - cannot find filter cn=%{fld1}" }
			id => "msgParserId41"
			add_field => {
				"action" => "CreateFilters - cannot find filter"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Cpu" {
		# MESSAGE 00321
		# line in RSA: Cpu [<fld1>] <fld2> Booting version <version>, created on <month> <date> <year>, <time>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Cpu [%{fld1}] %{fld2} Booting version %{version}, created on %{month} %{date} %{year}, %{time}." }
				id => "message-00321"
				add_field => {
					"[event][id]" => "00321"
					"[rsa][message][id1]" => "00321"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00321:01
		# line in RSA: Cpu [<fld1>] Booting <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Cpu [%{fld1}] Booting %{info}" }
				id => "message-00321:01"
				add_field => {
					"[event][id]" => "00321:01"
					"[rsa][message][id1]" => "00321:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CSFW" {
		# MESSAGE 00162:00
		# line in RSA: CSFW [<fld1>] Rule[<rule>] Firewall:  [<saddr>:<sport>-<daddr>:<dport>, proto:<protocol>], action: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CSFW [%{fld1}] Rule[%{rule}] Firewall:  [%{saddr}:%{sport}-%{daddr}:%{dport}, proto:%{protocol}], action: %{action}" }
				id => "message-00162:00"
				add_field => {
					"[event][id]" => "00162:00"
					"[rsa][message][id1]" => "00162:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00162:01
		# line in RSA: CSFW [<fld1>] conn_id[<fld2>]<msg> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "CSFW [%{fld1}] conn_id[%{fld2}]%{msg}" }
				id => "message-00162:01"
				add_field => {
					"[event][id]" => "00162:01"
					"[rsa][message][id1]" => "00162:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA:  DbAddresses.Address[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>] destroyed by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "DbAddresses.Address[cn=%{fld1}, ou=%{fld2}, ou=%{fld3}, o=%{fld4}, c=%{fld5}] destroyed by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId46"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "DbAddresses.Address destroyed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Dbaddresses" {
		# MESSAGE 00243
		# line in RSA:  Dbaddresses.Address[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dbaddresses.Address[cn=%{fld1}, ou=%{fld2}, ou=%{fld3}, o=%{fld4}, c=%{fld5}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00243"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "Dbaddresses.Address created"
					"[event][id]" => "00243"
					"[rsa][message][id1]" => "00243"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00243:01
		# line in RSA:  Dbaddresses.Address[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>] create failed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dbaddresses.Address[cn=%{fld1}, ou=%{fld2}, ou=%{fld3}, o=%{fld4}, c=%{fld5}] create failed by user '%{username}' @ '%{saddr}'" }
				id => "message-00243:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"action" => "Dbaddresses.Address create failed"
					"[event][id]" => "00243:01"
					"[rsa][message][id1]" => "00243:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00243:02
		# line in RSA:  Dbaddresses.Address[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>].{ Address | Wildcard } changed from '<shost>' to '<daddr>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Dbaddresses\.Address\[cn=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+ou=(?<fld3>[^,]*),[\s]+o=(?<fld4>[^,]*),[\s]+c=(?<fld5>[^\]]*)\]\.([\s]*Address[\s]+|[\s]*Wildcard[\s]+)[\s]+changed[\s]+from[\s]+'(?<shost>[^']*)'[\s]+to[\s]+'(?<daddr>[^']*)'[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00243:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "Dbaddresses.Address changed"
					"[event][id]" => "00243:02"
					"[rsa][message][id1]" => "00243:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA:  DbEventLog.DspSessionList[<interface>] created by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId50" {
		dissect {
			mapping => { "message" => "DbEventLog.DspSessionList[%{interface}] created by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId50"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "DbEventLog"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId51
	# line in RSA:  DbEventlog.DspSessionList[<interface>] destroyed by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "DbEventlog.DspSessionList[%{interface}] destroyed by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId51"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "DbEventlog"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DbFilters" {
		# MESSAGE 00244
		# line in RSA:   DbFilters.Filter[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].RuleRefs.RuleRef[<fld5> cn=<fld6>, ou=<fld7>, ou=<fld8>, o=<fld9>, c=<fld10>] destroyed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbFilters.Filter[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].RuleRefs.RuleRef[%{fld5} cn=%{fld6}, ou=%{fld7}, ou=%{fld8}, o=%{fld9}, c=%{fld10}] destroyed by user '%{username}' @ '%{saddr}'" }
				id => "message-00244"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "DbFilters.Filter destroyed"
					"[event][id]" => "00244"
					"[rsa][message][id1]" => "00244"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00244:01
		# line in RSA:   DbFilters.Filter[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].DNSClientEnabled changed from '<fld5>' to '<fld6>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbFilters.Filter[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].DNSClientEnabled changed from '%{fld5}' to '%{fld6}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00244:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbFilters.Filter DNSClientEnabled changed"
					"[event][id]" => "00244:01"
					"[rsa][message][id1]" => "00244:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00244:02
		# line in RSA:   DbFilters.Filter[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].RuleRefs.RuleRef[<fld5> cn=<fld6>, ou=<fld7>, ou=<fld8>, o=<fld9>, c=<fld10>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbFilters.Filter[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].RuleRefs.RuleRef[%{fld5} cn=%{fld6}, ou=%{fld7}, ou=%{fld8}, o=%{fld9}, c=%{fld10}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00244:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "DbFilters.Filter created"
					"[event][id]" => "00244:02"
					"[rsa][message][id1]" => "00244:02"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00244:03
		# line in RSA:   DbFilters.Filter[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbFilters.Filter[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00244:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "DbFilters.Filter created"
					"[event][id]" => "00244:03"
					"[rsa][message][id1]" => "00244:03"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Dbfilters" {
		# MESSAGE 00245
		# line in RSA: Dbfilters.Filter[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].RuleRefs.RuleRef[<fld5> cn=<fld6>, ou=<fld7>, ou=<fld8>, o=<fld9>, c=<fld10>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dbfilters.Filter[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].RuleRefs.RuleRef[%{fld5} cn=%{fld6}, ou=%{fld7}, ou=%{fld8}, o=%{fld9}, c=%{fld10}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00245"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "Dbfilters.Filter created by user"
					"[event][id]" => "00245"
					"[rsa][message][id1]" => "00245"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00245:02
		# line in RSA:  Dbfilters.Filter[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>] destroy failed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dbfilters.Filter[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}] destroy failed by user '%{username}' @ '%{saddr}'" }
				id => "message-00245:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"action" => "DbFilters.Filter destroy failed"
					"[event][id]" => "00245:02"
					"[rsa][message][id1]" => "00245:02"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00245:03
		# line in RSA:  Dbfilters.Filter[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>] destroyed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dbfilters.Filter[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}] destroyed by user '%{username}' @ '%{saddr}'" }
				id => "message-00245:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "DbFilters.Filter destroyed by user"
					"[event][id]" => "00245:03"
					"[rsa][message][id1]" => "00245:03"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00245:04
		# line in RSA:   Dbfilters.Filter[<fld1>].RuleRefs.RuleRef[<fld5> cn=<fld6>, ou=<fld7>, ou=<fld8>, o=<fld9>, c=<fld10>] create failed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Dbfilters.Filter[%{fld1}].RuleRefs.RuleRef[%{fld5} cn=%{fld6}, ou=%{fld7}, ou=%{fld8}, o=%{fld9}, c=%{fld10}] create failed by user '%{username}' @ '%{saddr}'" }
				id => "message-00245:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"action" => "Dbfilters.Filter create failed"
					"[event][id]" => "00245:04"
					"[rsa][message][id1]" => "00245:04"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DbNetworks" {
		# MESSAGE 00246
		# line in RSA:   { DbNetworks.Network | dbnetworks.network }[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].IpAddrMasks.IpAddrMask[<fld5>-<fld6>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*DbNetworks\.Network[\s]+|[\s]*dbnetworks\.network[\s]+)\[cn=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+o=(?<fld3>[^,]*),[\s]+c=(?<fld4>[^\]]*)\]\.IpAddrMasks\.IpAddrMask\[(?<fld5>[^\-]*)\-(?<fld6>[^\]]*)\][\s]+created[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00246"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "DbNetworks.Network created"
					"[event][id]" => "00246"
					"[rsa][message][id1]" => "00246"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00246:01
		# line in RSA:  DbNetworks.Network[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].IpAddrMasks.IpAddrMask[<fld5>-<fld6>] destroyed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbNetworks.Network[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].IpAddrMasks.IpAddrMask[%{fld5}-%{fld6}] destroyed by user '%{username}' @ '%{saddr}'" }
				id => "message-00246:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "DbNetworks.Network destroyed by user"
					"[event][id]" => "00246:01"
					"[rsa][message][id1]" => "00246:01"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00246:02
		# line in RSA:  DbNetworks.Network[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].IpAddrMasks.IpAddrMask[<fld5>] create failed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbNetworks.Network[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].IpAddrMasks.IpAddrMask[%{fld5}] create failed by user '%{username}' @ '%{saddr}'" }
				id => "message-00246:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"action" => "DbNetworks.Network create failed by user"
					"[event][id]" => "00246:02"
					"[rsa][message][id1]" => "00246:02"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00246:03
		# line in RSA:  DbNetworks.Network[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].IpAddrMasks.IpAddrMask[<fld5>-<fld6>].State changed from '<fld7>' to '<status>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbNetworks.Network[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].IpAddrMasks.IpAddrMask[%{fld5}-%{fld6}].State changed from '%{fld7}' to '%{status}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00246:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbNetworks.Network state changed"
					"[event][id]" => "00246:03"
					"[rsa][message][id1]" => "00246:03"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00246:04
		# line in RSA:  DbNetworks.Network[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].IpAddrMasks.IpAddrMask[<fld5>-<fld6>].Cost changed from '<fld7>' to '<fld8>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbNetworks.Network[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].IpAddrMasks.IpAddrMask[%{fld5}-%{fld6}].Cost changed from '%{fld7}' to '%{fld8}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00246:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbNetworks.Network cost changed"
					"[event][id]" => "00246:04"
					"[rsa][message][id1]" => "00246:04"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00246:05
		# line in RSA:   { DbNetworks.Network | dbnetworks.network }[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*DbNetworks\.Network[\s]+|[\s]*dbnetworks\.network[\s]+)\[cn=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+o=(?<fld3>[^,]*),[\s]+c=(?<fld4>[^\]]*)\][\s]+created[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00246:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "DbNetworks.Network created"
					"[event][id]" => "00246:05"
					"[rsa][message][id1]" => "00246:05"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00246:06
		# line in RSA:   { DbNetworks.Network | dbnetworks.network }[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].Local changed from '<fld7>' to '<fld8>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*DbNetworks\.Network[\s]+|[\s]*dbnetworks\.network[\s]+)\[cn=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+o=(?<fld3>[^,]*),[\s]+c=(?<fld4>[^\]]*)\]\.Local[\s]+changed[\s]+from[\s]+'(?<fld7>[^']*)'[\s]+to[\s]+'(?<fld8>[^']*)'[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00246:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbNetworks.Network local changed"
					"[event][id]" => "00246:06"
					"[rsa][message][id1]" => "00246:06"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00246:07
		# line in RSA:   { DbNetworks.Network | dbnetworks.network }[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>] destroyed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*([\s]*DbNetworks\.Network[\s]+|[\s]*dbnetworks\.network[\s]+)\[cn=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+o=(?<fld3>[^,]*),[\s]+c=(?<fld4>[^\]]*)\][\s]+destroyed[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00246:07"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "DbNetworks.Network destroyed by user"
					"[event][id]" => "00246:07"
					"[rsa][message][id1]" => "00246:07"
					"[event][categoryid]" => "1701030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "dbnetworks" {
		# MESSAGE 00407
		# line in RSA:  dbnetworks.network[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].IpAddrMasks.IpAddrMask[<fld5>-<fld6>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dbnetworks.network[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].IpAddrMasks.IpAddrMask[%{fld5}-%{fld6}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00407"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "dbnetworks.network created"
					"[event][id]" => "00407"
					"[rsa][message][id1]" => "00407"
					"[event][categoryid]" => "1701010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00407:01
		# line in RSA:  dbnetworks.network[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].IpAddrMasks.IpAddrMask[<fld5>-<fld6>].State changed from '<fld7>' to '<status>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dbnetworks.network[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].IpAddrMasks.IpAddrMask[%{fld5}-%{fld6}].State changed from '%{fld7}' to '%{status}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00407:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "dbnetworks.network state changed"
					"[event][id]" => "00407:01"
					"[rsa][message][id1]" => "00407:01"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00407:02
		# line in RSA:  dbnetworks.network[cn=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].IpAddrMasks.IpAddrMask[<fld5>-<fld6>].Cost changed from '<fld7>' to '<fld8>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dbnetworks.network[cn=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].IpAddrMasks.IpAddrMask[%{fld5}-%{fld6}].Cost changed from '%{fld7}' to '%{fld8}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00407:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "dbnetworks.network cost changed"
					"[event][id]" => "00407:02"
					"[rsa][message][id1]" => "00407:02"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId71
	# line in RSA:  Dbports.Port[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>].Port changed from '<fld6>' to '<fld7>' by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId71" {
		dissect {
			mapping => { "message" => "Dbports.Port[cn=%{fld1}, ou=%{fld2}, ou=%{fld3}, o=%{fld4}, c=%{fld5}].Port changed from '%{fld6}' to '%{fld7}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId71"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "Dbports.Port changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DbRadiusAcctServers" {
		# MESSAGE 00249
		# line in RSA:  DbRadiusAcctServers.RadiusAcctServer[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>].HostEnabled changed from '<fld6>' to '<fld7>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbRadiusAcctServers.RadiusAcctServer[cn=%{fld1}, ou=%{fld2}, ou=%{fld3}, o=%{fld4}, c=%{fld5}].HostEnabled changed from '%{fld6}' to '%{fld7}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00249"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbRadiusAcctServers.RadiusAcctServer changed"
					"[event][id]" => "00249"
					"[rsa][message][id1]" => "00249"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00249:01
		# line in RSA:  DbRadiusAcctServers.RadiusAcctServer[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>].Host changed from '<shost>' to '<dhost>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbRadiusAcctServers.RadiusAcctServer[cn=%{fld1}, ou=%{fld2}, ou=%{fld3}, o=%{fld4}, c=%{fld5}].Host changed from '%{shost}' to '%{dhost}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00249:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbRadiusAcctServers.RadiusAcctServer host changed"
					"[event][id]" => "00249:01"
					"[rsa][message][id1]" => "00249:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00249:02
		# line in RSA:  DbRadiusAcctServers.RadiusAcctServer[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>].HostPort changed from '<fld6>' to '<fld7>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbRadiusAcctServers.RadiusAcctServer[cn=%{fld1}, ou=%{fld2}, ou=%{fld3}, o=%{fld4}, c=%{fld5}].HostPort changed from '%{fld6}' to '%{fld7}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00249:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbRadiusAcctServers.RadiusAcctServer hostPort changed"
					"[event][id]" => "00249:02"
					"[rsa][message][id1]" => "00249:02"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00249:03
		# line in RSA:  DbRadiusAcctServers.RadiusAcctServer[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>].HostPassword changed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbRadiusAcctServers.RadiusAcctServer[cn=%{fld1}, ou=%{fld2}, ou=%{fld3}, o=%{fld4}, c=%{fld5}].HostPassword changed by user '%{username}' @ '%{saddr}'" }
				id => "message-00249:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbRadiusAcctServers.RadiusAcctServer hostpassword changed"
					"[event][id]" => "00249:03"
					"[rsa][message][id1]" => "00249:03"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DbRules" {
		# MESSAGE 00247
		# line in RSA:  DbRules.Rule[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>] { create failed | created } by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DbRules\.Rule\[cn=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+ou=(?<fld3>[^,]*),[\s]+o=(?<fld4>[^,]*),[\s]+c=(?<fld5>[^\]]*)\][\s]+([\s]*create[\s]+failed[\s]+|[\s]*created[\s]+)[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00247"
				add_field => {
				"action" => "DbRules.Rule created"
					"[event][id]" => "00247"
					"[rsa][message][id1]" => "00247"
					"[event][categoryid]" => "1502030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00247:02
		# line in RSA:  DbRules.Rule[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>] { destroyed | destroy failed } by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DbRules\.Rule\[cn=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+ou=(?<fld3>[^,]*),[\s]+o=(?<fld4>[^,]*),[\s]+c=(?<fld5>[^\]]*)\][\s]+([\s]*destroyed[\s]+|[\s]*destroy[\s]+failed[\s]+)[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00247:02"
				add_field => {
				"action" => "DbRules.Rule destroyed"
					"[event][id]" => "00247:02"
					"[rsa][message][id1]" => "00247:02"
					"[event][categoryid]" => "1502040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00247:01
		# line in RSA:  DbRules.Rule[cn=<fld1>, ou=<fld2>, ou=<fld3>, o=<fld4>, c=<fld5>].{ SrcPortOperand | DestPortOperand | Protocol | SrcPort | AckBit | Direction | DestPort | DestAddress | Action } changed from '<fld6>' to '<fld7>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DbRules\.Rule\[cn=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+ou=(?<fld3>[^,]*),[\s]+o=(?<fld4>[^,]*),[\s]+c=(?<fld5>[^\]]*)\]\.([\s]*SrcPortOperand[\s]+|[\s]*DestPortOperand[\s]+|[\s]*Protocol[\s]+|[\s]*SrcPort[\s]+|[\s]*AckBit[\s]+|[\s]*Direction[\s]+|[\s]*DestPort[\s]+|[\s]*DestAddress[\s]+|[\s]*Action[\s]+)[\s]+changed[\s]+from[\s]+'(?<fld6>[^']*)'[\s]+to[\s]+'(?<fld7>[^']*)'[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00247:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "DbRules.Rule changed"
					"[event][id]" => "00247:01"
					"[rsa][message][id1]" => "00247:01"
					"[event][categoryid]" => "1502050000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA:  DC.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<fld4>'
	else if [logstash][msgparser][id] == "msgParserId79" {
		dissect {
			mapping => { "message" => "DC.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{fld4}'" }
			id => "msgParserId79"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId80
	# line in RSA: DCLog [<fld1>] appended entries for date <month>/<day>/<year> to <event_description>
	else if [logstash][msgparser][id] == "msgParserId80" {
		dissect {
			mapping => { "message" => "DCLog [%{fld1}] appended entries for date %{month}/%{day}/%{year} to %{event_description}" }
			id => "msgParserId80"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: DCManager <msg> 
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "DCManager %{msg}" }
			id => "msgParserId81"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DHCP" {
		# MESSAGE 00232:00
		# line in RSA:  DHCP Pool Task [<fld1>] tDhcpPool: DHCP-based IP address pool disabled in database.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DHCP Pool Task [%{fld1}] tDhcpPool: DHCP-based IP address pool disabled in database." }
				id => "message-00232:00"
				add_field => {
				"ec_activity" => "Disable"
					"[event][id]" => "00232:00"
					"[rsa][message][id1]" => "00232:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00232:01
		# line in RSA:  DHCP Pool Task [<fld1>] tDhcpPool: Shutdown complete.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DHCP Pool Task [%{fld1}] tDhcpPool: Shutdown complete." }
				id => "message-00232:01"
				add_field => {
					"[event][id]" => "00232:01"
					"[rsa][message][id1]" => "00232:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00233:00
		# line in RSA:  DHCP { Demux | Pool Task } [<fld1>] Starting DHCP Relay agent task
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DHCP[\s]+([\s]*Demux[\s]+|[\s]*Pool[\s]+Task[\s]+)[\s]+\[(?<fld1>[^\]]*)\][\s]+Starting[\s]+DHCP[\s]+Relay[\s]+agent[\s]+task$" }
				id => "message-00233:00"
				add_field => {
					"[event][id]" => "00233:00"
					"[rsa][message][id1]" => "00233:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00233:01
		# line in RSA:  DHCP Demux [<fld1>] DHCP Demux: Finished Starting Relay !
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DHCP Demux [%{fld1}] DHCP Demux: Finished Starting Relay !" }
				id => "message-00233:01"
				add_field => {
					"[event][id]" => "00233:01"
					"[rsa][message][id1]" => "00233:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00234:00
		# line in RSA:  DHCP { Arp Task | Pool Task } [<fld1>] tDhcpArp: Shutdown complete.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DHCP[\s]+([\s]*Arp[\s]+Task[\s]+|[\s]*Pool[\s]+Task[\s]+)[\s]+\[(?<fld1>[^\]]*)\][\s]+tDhcpArp:[\s]+Shutdown[\s]+complete\.$" }
				id => "message-00234:00"
				add_field => {
					"[event][id]" => "00234:00"
					"[rsa][message][id1]" => "00234:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DNS" {
		# MESSAGE 00200:00
		# line in RSA:   DNS.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DNS.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00200:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00200:00"
					"[rsa][message][id1]" => "00200:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00200:01
		# line in RSA:  DNS.<fld1> update failed, please verify value: '<fld2>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DNS.%{fld1} update failed, please verify value: '%{fld2}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00200:01"
				add_field => {
					"[event][id]" => "00200:01"
					"[rsa][message][id1]" => "00200:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00200:02
		# line in RSA:  DNS Proxy started 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DNS Proxy started" }
				id => "message-00200:02"
				add_field => {
					"[event][id]" => "00200:02"
					"[rsa][message][id1]" => "00200:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DNS_PROXY" {
		# MESSAGE 00217:00
		# line in RSA:  DNS_PROXY [<fld1>] getIntfIp: Could not find interface for outgoing <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DNS_PROXY [%{fld1}] getIntfIp: Could not find interface for outgoing %{saddr}" }
				id => "message-00217:00"
				add_field => {
					"[event][id]" => "00217:00"
					"[rsa][message][id1]" => "00217:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00217:02
		# line in RSA:  DNS_PROXY [<fld1>] RelayTask {configured | deconfigured}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DNS_PROXY[\s]+\[(?<fld1>[^\]]*)\][\s]+RelayTask[\s]+(configured[\s]+|[\s]*deconfigured)$" }
				id => "message-00217:02"
				add_field => {
				"action" => "DNS_PROXY - RelayTask configuration"
					"[event][id]" => "00217:02"
					"[rsa][message][id1]" => "00217:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00217:01
		# line in RSA:  DNS_PROXY [<fld1>] <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DNS_PROXY [%{fld1}] %{action}" }
				id => "message-00217:01"
				add_field => {
					"[event][id]" => "00217:01"
					"[rsa][message][id1]" => "00217:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId93
	# line in RSA:   dns_alarm: (default) { all dns servers | dns server(s) } are <fld7> 
	else if [logstash][msgparser][id] == "msgParserId93" {
		grok {
			match => { "message" => "^[\s]*dns_alarm:[\s]+\(default\)[\s]+([\s]*all[\s]+dns[\s]+servers[\s]+|[\s]*dns[\s]+server\(s\)[\s]+)[\s]+are[\s]+(?<fld7>[^\s]*)[\s]+$" }
			id => "msgParserId93"
			add_field => {
				"action" => "dns server status"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId94
	# line in RSA: DST <msg>
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "DST %{msg}" }
			id => "msgParserId94"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId95
	# line in RSA:    DbCaAuthServers.Enabled changed from '<fld1>' to '<fld2>' by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId95" {
		dissect {
			mapping => { "message" => "DbCaAuthServers.Enabled changed from '%{fld1}' to '%{fld2}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId95"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId96
	# line in RSA:  DbGatewayGroups.Group[ou=<group>, ou=<fld1>, o=<fld2>, c=<fld3>].Gateways.Gateway[cn=<fld4>, ou=<fld5>, ou=<fld6>, o=<fld7>, c=<fld8>] destroyed by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "DbGatewayGroups.Group[ou=%{group}, ou=%{fld1}, o=%{fld2}, c=%{fld3}].Gateways.Gateway[cn=%{fld4}, ou=%{fld5}, ou=%{fld6}, o=%{fld7}, c=%{fld8}] destroyed by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId96"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId97
	# line in RSA:  DbGroups.Group[ou=<group>, o=<fld1> c=<fld2>::<fld3>].Accounts.Account[<fld4>,-::<fld5>].UID chanaged from '<fld6>' to '<fld7>' by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId97" {
		dissect {
			mapping => { "message" => "DbGroups.Group[ou=%{group}, o=%{fld1} c=%{fld2}::%{fld3}].Accounts.Account[%{fld4},-::%{fld5}].UID chanaged from '%{fld6}' to '%{fld7}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId97"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId98
	# line in RSA:  Dbgroups.Group[o=<fld1> c=<fld2>::<fld3>].Switches.Switch[cn=<fld4>, o=<fld5>, c=<fld6>::<fld7>].Accounts.Account[<fld8>,<fld9>].ServerCertRef changed from '<fld10>' to '<fld11>' by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId98" {
		dissect {
			mapping => { "message" => "Dbgroups.Group[o=%{fld1} c=%{fld2}::%{fld3}].Switches.Switch[cn=%{fld4}, o=%{fld5}, c=%{fld6}::%{fld7}].Accounts.Account[%{fld8},%{fld9}].ServerCertRef changed from '%{fld10}' to '%{fld11}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId98"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId99
	# line in RSA: dbgroups.group[ou=<fld1>, o=<fld2>, c=<fld3>].Accounts.Account[<fld4>,<fld5>] created by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId99" {
		dissect {
			mapping => { "message" => "dbgroups.group[ou=%{fld1}, o=%{fld2}, c=%{fld3}].Accounts.Account[%{fld4},%{fld5}] created by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId99"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DbRadiusAuthServers" {
		# MESSAGE 00291:00
		# line in RSA:  DbRadiusAuthServers.RadiusAuthServer[cn=<fld>, ou=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].<fld5> changed from '<shost>' to '<dhost>' by user '<username>' @ { '<saddr>' | '<saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DbRadiusAuthServers\.RadiusAuthServer\[cn=(?<fld>[^,]*),[\s]+ou=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+o=(?<fld3>[^,]*),[\s]+c=(?<fld4>[^\]]*)\]\.(?<fld5>[^\s]*)[\s]+changed[\s]+from[\s]+'(?<shost>[^']*)'[\s]+to[\s]+'(?<dhost>[^']*)'[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+([\s]*'(?<saddr>[^']*)'[\s]+|[\s]*'(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-00291:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "config param  changed"
					"[event][id]" => "00291:00"
					"[rsa][message][id1]" => "00291:00"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00291:01
		# line in RSA:   DbRadiusAuthServers.RadiusAuthServer[cn=<fld>, ou=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>] { create | destroy } failed by user '<username>' @ '<saddr>' 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*DbRadiusAuthServers\.RadiusAuthServer\[cn=(?<fld>[^,]*),[\s]+ou=(?<fld1>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+o=(?<fld3>[^,]*),[\s]+c=(?<fld4>[^\]]*)\][\s]+([\s]*create[\s]+|[\s]*destroy[\s]+)[\s]+failed[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'[\s]+$" }
				id => "message-00291:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"action" => "DbRadiusAuthServers - create/destroy failed by user"
					"[event][id]" => "00291:01"
					"[rsa][message][id1]" => "00291:01"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00291:02
		# line in RSA:   DbRadiusAuthServers.RadiusAuthServer[cn=<fld>, ou=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>] created by user '<username>' @ '<saddr>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbRadiusAuthServers.RadiusAuthServer[cn=%{fld}, ou=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00291:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"action" => "DbRadiusAuthServers - created by user"
					"[event][id]" => "00291:02"
					"[rsa][message][id1]" => "00291:02"
					"[event][categoryid]" => "1402020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00291:03
		# line in RSA:  DbRadiusAuthServers.RadiusAuthServer[cn=<fld>, ou=<fld1>, ou=<fld2>, o=<fld3>, c=<fld4>].<fld5> changed by user '<username>' @ '<saddr>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbRadiusAuthServers.RadiusAuthServer[cn=%{fld}, ou=%{fld1}, ou=%{fld2}, o=%{fld3}, c=%{fld4}].%{fld5} changed by user '%{username}' @ '%{saddr}'" }
				id => "message-00291:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "PrimaryHost Password changed"
					"[event][id]" => "00291:03"
					"[rsa][message][id1]" => "00291:03"
					"[event][categoryid]" => "1402020300"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "DbSysLog" {
		# MESSAGE 00195:00
		# line in RSA:  DbSysLog.<fld1> created by user '<username>' @ '<fld2>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbSysLog.%{fld1} created by user '%{username}' @ '%{fld2}'" }
				id => "message-00195:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "00195:00"
					"[rsa][message][id1]" => "00195:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00195:01
		# line in RSA:  DbSysLog.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<fld4>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DbSysLog.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{fld4}'" }
				id => "message-00195:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00195:01"
					"[rsa][message][id1]" => "00195:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId106
	# line in RSA:  DELETE <url>"
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "DELETE %{url}\"" }
			id => "msgParserId106"
			add_field => {
				"action" => "DELETE"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DhcpGlobal" {
		# MESSAGE 00197:00
		# line in RSA:   DhcpGlobal.<fld1> created by user '<username>' @ '<fld2>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DhcpGlobal.%{fld1} created by user '%{username}' @ '%{fld2}'" }
				id => "message-00197:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
					"[event][id]" => "00197:00"
					"[rsa][message][id1]" => "00197:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00197:01
		# line in RSA: DhcpGlobal.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<fld4>'  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "DhcpGlobal.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{fld4}'" }
				id => "message-00197:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00197:01"
					"[rsa][message][id1]" => "00197:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId109
	# line in RSA:  DhcpServer[<fld1>] created by user '<username>' @ '<fld2>'
	else if [logstash][msgparser][id] == "msgParserId109" {
		dissect {
			mapping => { "message" => "DhcpServer[%{fld1}] created by user '%{username}' @ '%{fld2}'" }
			id => "msgParserId109"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId110
	# line in RSA:   DirBackup.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<fld4>' 
	else if [logstash][msgparser][id] == "msgParserId110" {
		dissect {
			mapping => { "message" => "DirBackup.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{fld4}'" }
			id => "msgParserId110"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "dcTask" {
		# MESSAGE 00230:00
		# line in RSA: dcTask initialization 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dcTask initialization" }
				id => "message-00230:00"
				add_field => {
					"[event][id]" => "00230:00"
					"[rsa][message][id1]" => "00230:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00230:01
		# line in RSA:  dcTask { '<fld1>' successfully | <service>} started. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*dcTask[\s]+([\s]*'(?<fld1>[^']*)'[\s]+successfully[\s]+|[\s]*(?<service>[^\s]*))[\s]+started\.[\s]+$" }
				id => "message-00230:01"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
					"[event][id]" => "00230:01"
					"[rsa][message][id1]" => "00230:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00230:02
		# line in RSA:   dcTask running interval is <fld1> minutes. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "dcTask running interval is %{fld1} minutes." }
				id => "message-00230:02"
				add_field => {
					"[event][id]" => "00230:02"
					"[rsa][message][id1]" => "00230:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId114
	# line in RSA: directory[<fld1>].entry[<fld2>] destroyed by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId114" {
		dissect {
			mapping => { "message" => "directory[%{fld1}].entry[%{fld2}] destroyed by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId114"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId115
	# line in RSA:  ds1 MIB was successfully added 
	else if [logstash][msgparser][id] == "msgParserId115" {
		dissect {
			mapping => { "message" => "ds1 MIB was successfully added" }
			id => "msgParserId115"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId116
	# line in RSA: Empty <msg> 
	else if [logstash][msgparser][id] == "msgParserId116" {
		dissect {
			mapping => { "message" => "Empty %{msg}" }
			id => "msgParserId116"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId117
	# line in RSA:  Encryption needed but couldn't be negotiated 
	else if [logstash][msgparser][id] == "msgParserId117" {
		dissect {
			mapping => { "message" => "Encryption needed but couldn't be negotiated" }
			id => "msgParserId117"
			add_field => {
				"action" => "Encryptio not negotiated but required"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId118
	# line in RSA: Entry <month>/<day>/<year>, cliffdate <fld1>/<fld2>/<fld3>, today <fld4>/<fld5>/<fld6> - purged from summaries file 
	else if [logstash][msgparser][id] == "msgParserId118" {
		dissect {
			mapping => { "message" => "Entry %{month}/%{day}/%{year}, cliffdate %{fld1}/%{fld2}/%{fld3}, today %{fld4}/%{fld5}/%{fld6} - purged from summaries file" }
			id => "msgParserId118"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Error" {
		# MESSAGE 00205:00
		# line in RSA:  Error in cfg file { setting | validating | creating} '<fld1>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Error[\s]+in[\s]+cfg[\s]+file[\s]+([\s]*setting[\s]+|[\s]*validating[\s]+|[\s]*creating)[\s]+'(?<fld1>[^']*)'$" }
				id => "message-00205:00"
				add_field => {
					"[event][id]" => "00205:00"
					"[rsa][message][id1]" => "00205:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00205:01
		# line in RSA: Error converting RemoteGatewayAddress
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Error converting RemoteGatewayAddress" }
				id => "message-00205:01"
				add_field => {
				"action" => "RemoteGatewayAddress conversion error"
					"[event][id]" => "00205:01"
					"[rsa][message][id1]" => "00205:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Ethernet" {
		# MESSAGE 00223:00
		# line in RSA:   Ethernet [<fld1>] Interface { enabled | disabled } on card <fld2> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Ethernet[\s]+\[(?<fld1>[^\]]*)\][\s]+Interface[\s]+([\s]*enabled[\s]+|[\s]*disabled[\s]+)[\s]+on[\s]+card[\s]+(?<fld2>[^\s]*)[\s]+$" }
				id => "message-00223:00"
				add_field => {
					"[event][id]" => "00223:00"
					"[rsa][message][id1]" => "00223:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00223:01
		# line in RSA:  Ethernet [<fld1>] No IP address configured for devLoc <fld2> in cfg { file. | file }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Ethernet[\s]+\[(?<fld1>[^\]]*)\][\s]+No[\s]+IP[\s]+address[\s]+configured[\s]+for[\s]+devLoc[\s]+(?<fld2>[^\s]*)[\s]+in[\s]+cfg[\s]+([\s]*file\.[\s]+|[\s]*file[\s]+)$" }
				id => "message-00223:01"
				add_field => {
					"[event][id]" => "00223:01"
					"[rsa][message][id1]" => "00223:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId123
	# line in RSA:  Event Name="<action>" Sender="<username>" Extra=<fld1> 
	else if [logstash][msgparser][id] == "msgParserId123" {
		dissect {
			mapping => { "message" => "Event Name=\"%{action}\" Sender=\"%{username}\" Extra=%{fld1}" }
			id => "msgParserId123"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId124
	# line in RSA:  failed to parse Set-Cookie <fld1>,CFC,GFC; path=/
	else if [logstash][msgparser][id] == "msgParserId124" {
		dissect {
			mapping => { "message" => "failed to parse Set-Cookie %{fld1},CFC,GFC; path=/" }
			id => "msgParserId124"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId125
	# line in RSA:  FIPS [<fld1>] FIPS mode disabled.
	else if [logstash][msgparser][id] == "msgParserId125" {
		dissect {
			mapping => { "message" => "FIPS [%{fld1}] FIPS mode disabled." }
			id => "msgParserId125"
			add_field => {
				"ec_activity" => "Disable"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId126
	# line in RSA: FTP Backup [<fld1>] Primary Server started monitoring directory <directory>
	else if [logstash][msgparser][id] == "msgParserId126" {
		dissect {
			mapping => { "message" => "FTP Backup [%{fld1}] Primary Server started monitoring directory %{directory}" }
			id => "msgParserId126"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId127
	# line in RSA:   FWPolicies.FWScope[cn=<username>, ou=<fld1>, o=<fld2> c=<fld3>].Scope changed from '<fld4>' to '<fld5>
	else if [logstash][msgparser][id] == "msgParserId127" {
		dissect {
			mapping => { "message" => "FWPolicies.FWScope[cn=%{username}, ou=%{fld1}, o=%{fld2} c=%{fld3}].Scope changed from '%{fld4}' to '%{fld5}" }
			id => "msgParserId127"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Failed" {
		# MESSAGE 00019:00
		# line in RSA:  Failed Login Attempt: Username=cn=nortel vpn (<username>) <fld1>: Date/Time=<month>/<date>/<year> <time> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Login Attempt: Username=cn=nortel vpn (%{username}) %{fld1}: Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login Attempt"
					"[event][id]" => "00019:00"
					"[rsa][message][id1]" => "00019:00"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:01
		# line in RSA:  Failed Login Attempt: Username=cn=<username>(vpn), <fld1>: Date/Time=<month>/<date>/<year> <time> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Login Attempt: Username=cn=%{username}(vpn), %{fld1}: Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login Attempt"
					"[event][id]" => "00019:01"
					"[rsa][message][id1]" => "00019:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:02
		# line in RSA:  Failed Login Attempt: Username=cn=<username>, <fld1>: Date/Time=<month>/<date>/<year> <time> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Login Attempt: Username=cn=%{username}, %{fld1}: Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login Attempt"
					"[event][id]" => "00019:02"
					"[rsa][message][id1]" => "00019:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:03
		# line in RSA:  Failed Login Attempt: Username=cn=<username>: Date/Time=<month>/<date>/<year> <time> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Login Attempt: Username=cn=%{username}: Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login Attempt"
					"[event][id]" => "00019:03"
					"[rsa][message][id1]" => "00019:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:04
		# line in RSA:  Failed Login Attempt: Username=serialnumber=<serial_number>, cn=<username>, ou=<group>, <fld2>: Date/Time=<month>/<date>/<year> <time> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Login Attempt: Username=serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, %{fld2}: Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login Attempt"
					"[event][id]" => "00019:04"
					"[rsa][message][id1]" => "00019:04"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:05
		# line in RSA:  Failed Login Attempt: Username=<scheme>, cn=<username>: Date/Time=<month>/<date>/<year> <time> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Login Attempt: Username=%{scheme}, cn=%{username}: Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login Attempt"
					"[event][id]" => "00019:05"
					"[rsa][message][id1]" => "00019:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:06
		# line in RSA:  Failed Login Attempt: Username=<username>: Date/Time=<month>/<date>/<year> <time> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Login Attempt: Username=%{username}: Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login Attempt"
					"[event][id]" => "00019:06"
					"[rsa][message][id1]" => "00019:06"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:07
		# line in RSA:  Failed Login Attempt.  Invalid Account: Username=<username> { Encrypted: Date/Time=<month>/<date>/<year> <time> | Date/Time=<month>/<date>/<year> <time> } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Failed[\s]+Login[\s]+Attempt\.[\s]+Invalid[\s]+Account:[\s]+Username=(?<username>[^\s]*)[\s]+([\s]*Encrypted:[\s]+Date/Time=(?<month>[^/]*)/(?<date>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+|[\s]*Date/Time=(?<month>[^/]*)/(?<date>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+)[\s]+$" }
				id => "message-00019:07"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login"
				"reason" => "Invalid Account"
					"[event][id]" => "00019:07"
					"[rsa][message][id1]" => "00019:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:09
		# line in RSA:  Failed Login Attempt.  Account disabled: Username=<username> Date/Time=<month>/<date>/<year> <time>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Login Attempt.  Account disabled: Username=%{username} Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:09"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Login"
				"reason" => "Account disabled"
					"[event][id]" => "00019:09"
					"[rsa][message][id1]" => "00019:09"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:08
		# line in RSA: Failed Remote Network Login: Username=<username>: Date/Time=<month>/<date>/<year> <time>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed Remote Network Login: Username=%{username}: Date/Time=%{month}/%{date}/%{year} %{time}" }
				id => "message-00019:08"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed Remote Network Login"
					"[event][id]" => "00019:08"
					"[rsa][message][id1]" => "00019:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:10
		# line in RSA: Failed to allocate IP addr from empty pool: VPN='<fld7>' IpPool='<fld1>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to allocate IP addr from empty pool: VPN='%{fld7}' IpPool='%{fld1}'" }
				id => "message-00019:10"
				add_field => {
					"[event][id]" => "00019:10"
					"[rsa][message][id1]" => "00019:10"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:11
		# line in RSA:  Failed to start 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Failed to start" }
				id => "message-00019:11"
				add_field => {
				"ec_activity" => "Start"
				"ec_outcome" => "Failure"
					"[event][id]" => "00019:11"
					"[rsa][message][id1]" => "00019:11"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00019:12
		# line in RSA: Failed Login Attempt from { <<NULL>: | <dhost>: } Username=<username>: Date/Time=<month>/<date>/<year> <time>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Failed[\s]+Login[\s]+Attempt[\s]+from[\s]+([\s]*<NULL>:[\s]+|[\s]*(?<dhost>[^:]*):[\s]+)[\s]+Username=(?<username>[^:]*):[\s]+Date/Time=(?<month>[^/]*)/(?<date>[^/]*)/(?<year>[^\s]*)[\s]+(?<time>.*)$" }
				id => "message-00019:12"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "login failure"
					"[event][id]" => "00019:12"
					"[rsa][message][id1]" => "00019:12"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId141
	# line in RSA: FEI Driver [<fld1>] No IP address configured for unit <fld2> devLoc 
	else if [logstash][msgparser][id] == "msgParserId141" {
		dissect {
			mapping => { "message" => "FEI Driver [%{fld1}] No IP address configured for unit %{fld2} devLoc" }
			id => "msgParserId141"
			add_field => {
				"action" => "No IP address configured for unit"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "FireWall" {
		# MESSAGE 00220:00
		# line in RSA:  FireWall [<fld1>] Contivity firewall initializing ... 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FireWall [%{fld1}] Contivity firewall initializing ..." }
				id => "message-00220:00"
				add_field => {
					"[event][id]" => "00220:00"
					"[rsa][message][id1]" => "00220:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00220:01
		# line in RSA:  FireWall [<fld1>] Contivity Firewall deployed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "FireWall [%{fld1}] Contivity Firewall deployed" }
				id => "message-00220:01"
				add_field => {
					"[event][id]" => "00220:01"
					"[rsa][message][id1]" => "00220:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId144
	# line in RSA: FixSummaries <msg>
	else if [logstash][msgparser][id] == "msgParserId144" {
		dissect {
			mapping => { "message" => "FixSummaries %{msg}" }
			id => "msgParserId144"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Flush" {
		# MESSAGE 00251:00
		# line in RSA:  Flush Accounting [<fld1>] Restoring record with sessionId=<sessionid> to the accounting log file
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Flush Accounting [%{fld1}] Restoring record with sessionId=%{sessionid} to the accounting log file" }
				id => "message-00251:00"
				add_field => {
					"[event][id]" => "00251:00"
					"[rsa][message][id1]" => "00251:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00251:01
		# line in RSA:   Flush Accounting [<fld1>] {Error in openning file | FlushAcctGetStopTimeStamp: Can't open} <filename> Error: errno = <fld2> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Flush[\s]+Accounting[\s]+\[(?<fld1>[^\]]*)\][\s]+(Error[\s]+in[\s]+openning[\s]+file[\s]+|[\s]*FlushAcctGetStopTimeStamp:[\s]+Can't[\s]+open)[\s]+(?<filename>[^\s]*)[\s]+Error:[\s]+errno[\s]+=[\s]+(?<fld2>[^\s]*)[\s]+$" }
				id => "message-00251:01"
				add_field => {
					"[event][id]" => "00251:01"
					"[rsa][message][id1]" => "00251:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00251:02
		# line in RSA:   Flush Accounting [<fld1>] FlushAcctGetStopRecord: uninitialized meter record detected. Record ignored
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Flush Accounting [%{fld1}] FlushAcctGetStopRecord: uninitialized meter record detected. Record ignored" }
				id => "message-00251:02"
				add_field => {
				"action" => "FlushAcctGetStopRecord error"
					"[event][id]" => "00251:02"
					"[rsa][message][id1]" => "00251:02"
					"[event][categoryid]" => "1602020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00251:03
		# line in RSA:  Flush Accounting [<fld1>] tFlush: Shutdown complete.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Flush Accounting [%{fld1}] tFlush: Shutdown complete." }
				id => "message-00251:03"
				add_field => {
				"action" => "Shutdown complete"
					"[event][id]" => "00251:03"
					"[rsa][message][id1]" => "00251:03"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00251:04
		# line in RSA:   Flush Accounting [<fld1>] FlushAcctMarkObsolete: Couldn't open <filename>  Error: errno = <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Flush Accounting [%{fld1}] FlushAcctMarkObsolete: Couldn't open %{filename}  Error: errno = %{fld2}" }
				id => "message-00251:04"
				add_field => {
				"action" => "Couldn't open file"
					"[event][id]" => "00251:04"
					"[rsa][message][id1]" => "00251:04"
					"[event][categoryid]" => "1603050000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00251:05
		# line in RSA:  Flush Accounting [<fld1>] FlushAcctWriteToJournalFile: Update StopRecord Failed sessionID <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Flush Accounting [%{fld1}] FlushAcctWriteToJournalFile: Update StopRecord Failed sessionID %{sessionid}" }
				id => "message-00251:05"
				add_field => {
				"action" => "Update StopRecord Failed"
					"[event][id]" => "00251:05"
					"[rsa][message][id1]" => "00251:05"
					"[event][categoryid]" => "1603050000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId151
	# line in RSA:  Found symbol {type | value }=[<fld1>] 
	else if [logstash][msgparser][id] == "msgParserId151" {
		grok {
			match => { "message" => "^[\s]*Found[\s]+symbol[\s]+(type[\s]+|[\s]*value[\s]+)=\[(?<fld1>[^\]]*)\][\s]+$" }
			id => "msgParserId151"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId152
	# line in RSA:    FwLogObject.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId152" {
		dissect {
			mapping => { "message" => "FwLogObject.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId152"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId153
	# line in RSA:  FwPolicies.FwPolicy[cn=<username>, ou=<fld1>, o=<fld2> c=<fld3>].Rule changed from '<fld4>' to '<fld5>
	else if [logstash][msgparser][id] == "msgParserId153" {
		dissect {
			mapping => { "message" => "FwPolicies.FwPolicy[cn=%{username}, ou=%{fld1}, o=%{fld2} c=%{fld3}].Rule changed from '%{fld4}' to '%{fld5}" }
			id => "msgParserId153"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId154
	# line in RSA:  FwPolicies.NATPolicy[cn=<username>, ou=<fld1>, o=<fld2> c=<fld3>].Rule changed from '<fld4>' to '<fld5>
	else if [logstash][msgparser][id] == "msgParserId154" {
		dissect {
			mapping => { "message" => "FwPolicies.NATPolicy[cn=%{username}, ou=%{fld1}, o=%{fld2} c=%{fld3}].Rule changed from '%{fld4}' to '%{fld5}" }
			id => "msgParserId154"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "FwPolicies.NATPolicy rule changed "
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId155
	# line in RSA:  GET <url>"
	else if [logstash][msgparser][id] == "msgParserId155" {
		dissect {
			mapping => { "message" => "GET %{url}\"" }
			id => "msgParserId155"
			add_field => {
				"action" => "GET"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId156
	# line in RSA:  GlobalIp.ProxyArpBranchOffice changed from '<fld1>' to '<fld2>' by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId156" {
		dissect {
			mapping => { "message" => "GlobalIp.ProxyArpBranchOffice changed from '%{fld1}' to '%{fld2}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId156"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "gzip" {
		# MESSAGE 00265:00
		# line in RSA:  <service> error: gz_fsm:zlib(<fld1>):<event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{service} error: gz_fsm:zlib(%{fld1}):%{event_description}" }
				id => "message-00265:00"
				add_field => {
					"[event][id]" => "00265:00"
					"[rsa][message][id1]" => "00265:00"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00265:01
		# line in RSA:  gzip error: gz_fsm:bad magic Lo
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "gzip error: gz_fsm:bad magic Lo" }
				id => "message-00265:01"
				add_field => {
					"[event][id]" => "00265:01"
					"[rsa][message][id1]" => "00265:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId159
	# line in RSA:  host rebooted by <username>
	else if [logstash][msgparser][id] == "msgParserId159" {
		dissect {
			mapping => { "message" => "host rebooted by %{username}" }
			id => "msgParserId159"
			add_field => {
				"action" => "host rebooted"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "http" {
		# MESSAGE 00175
		# line in RSA:  <protocol> header warning <fld1>: Badly formatted HTTP header key 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{protocol} header warning %{fld1}: Badly formatted HTTP header key" }
				id => "message-00175"
				add_field => {
				"action" => "http header warning - Badly formatted header key"
					"[event][id]" => "00175"
					"[rsa][message][id1]" => "00175"
					"[event][categoryid]" => "1001020305"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00175:01
		# line in RSA:   <protocol> error: missing request method, Request="<web_method>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{protocol} error: missing request method, Request=\"%{web_method}\"" }
				id => "message-00175:01"
				add_field => {
				"action" => "http error - missing request method"
					"[event][id]" => "00175:01"
					"[rsa][message][id1]" => "00175:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00175:02
		# line in RSA:  <protocol> error: chunk length badly formatted, Request="<web_method>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{protocol} error: chunk length badly formatted, Request=\"%{web_method}\"" }
				id => "message-00175:02"
				add_field => {
				"action" => "http error - chunk length badly formatted"
					"[event][id]" => "00175:02"
					"[rsa][message][id1]" => "00175:02"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00175:03
		# line in RSA:  <protocol> error: chunk length badly formatted 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{protocol} error: chunk length badly formatted" }
				id => "message-00175:03"
				add_field => {
				"action" => "http error - chunk length badly formatted"
					"[event][id]" => "00175:03"
					"[rsa][message][id1]" => "00175:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00175:04
		# line in RSA:  http error: missing request http version '<fld1>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "http error: missing request http version '%{fld1}'" }
				id => "message-00175:04"
				add_field => {
				"action" => "http error - missing request http version"
					"[event][id]" => "00175:04"
					"[rsa][message][id1]" => "00175:04"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "HTTP" {
		# MESSAGE 00280:00
		# line in RSA:  <protocol> Rejected NotLoggedIn Vpn="<fld2>" Host="<shost>"SrcIP="<saddr>" Request="<web_method>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{protocol} Rejected NotLoggedIn Vpn=\"%{fld2}\" Host=\"%{shost}\"SrcIP=\"%{saddr}\" Request=\"%{web_method}\"" }
				id => "message-00280:00"
				add_field => {
				"reason" => "HTTP Rejected NotLoggedIn"
					"[event][id]" => "00280:00"
					"[rsa][message][id1]" => "00280:00"
					"[event][categoryid]" => "1803020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00280:01
		# line in RSA:  <protocol> Vpn="<fld7>" Host="<shost>" User="<username>"SrcIP="<saddr>" Request="<web_method>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{protocol} Vpn=\"%{fld7}\" Host=\"%{shost}\" User=\"%{username}\"SrcIP=\"%{saddr}\" Request=\"%{web_method}\"" }
				id => "message-00280:01"
				add_field => {
					"[event][id]" => "00280:01"
					"[rsa][message][id1]" => "00280:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId167
	# line in RSA: HWAccel <msg> 
	else if [logstash][msgparser][id] == "msgParserId167" {
		dissect {
			mapping => { "message" => "HWAccel %{msg}" }
			id => "msgParserId167"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId168
	# line in RSA:  Host Resources MIB was successfully added.
	else if [logstash][msgparser][id] == "msgParserId168" {
		dissect {
			mapping => { "message" => "Host Resources MIB was successfully added." }
			id => "msgParserId168"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId169
	# line in RSA: Hw <msg>
	else if [logstash][msgparser][id] == "msgParserId169" {
		dissect {
			mapping => { "message" => "Hw %{msg}" }
			id => "msgParserId169"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId170
	# line in RSA: HwMon <msg>
	else if [logstash][msgparser][id] == "msgParserId170" {
		dissect {
			mapping => { "message" => "HwMon %{msg}" }
			id => "msgParserId170"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "ike" {
		# MESSAGE 00042
		# line in RSA:  ike: Session setup failed: No VPN matching VIP <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: Session setup failed: No VPN matching VIP %{saddr}" }
				id => "message-00042"
				add_field => {
				"action" => "Session setup failed"
				"reason" => "No VPN matching VIP"
					"[event][id]" => "00042"
					"[rsa][message][id1]" => "00042"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:01
		# line in RSA:  ike: CreateSession Failed with sessionId <sessionid>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: CreateSession Failed with sessionId %{sessionid}" }
				id => "message-00042:01"
				add_field => {
				"action" => "CreateSession Failed"
					"[event][id]" => "00042:01"
					"[rsa][message][id1]" => "00042:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:02
		# line in RSA:  ike: Loaded VIP <saddr> for VPN <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: Loaded VIP %{saddr} for VPN %{fld1}" }
				id => "message-00042:02"
				add_field => {
				"action" => "Loaded VIP for VPN"
					"[event][id]" => "00042:02"
					"[rsa][message][id1]" => "00042:02"
					"[event][categoryid]" => "1801020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:03
		# line in RSA:  ike: Starting IKE With Following Configuration Parameters 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: Starting IKE With Following Configuration Parameters" }
				id => "message-00042:03"
				add_field => {
				"action" => "Starting IKE"
					"[event][id]" => "00042:03"
					"[rsa][message][id1]" => "00042:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:05
		# line in RSA: ike: IsIsakmpProposalAcceptable: No transform picked
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: IsIsakmpProposalAcceptable: No transform picked" }
				id => "message-00042:05"
				add_field => {
				"action" => "No transform picked"
					"[event][id]" => "00042:05"
					"[rsa][message][id1]" => "00042:05"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:06
		# line in RSA:  ike: Received errno notify message Authentication failure from <fld1> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: Received errno notify message Authentication failure from %{fld1} (%{saddr})" }
				id => "message-00042:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Received errno notify message"
				"reason" => "Authentication failure"
					"[event][id]" => "00042:06"
					"[rsa][message][id1]" => "00042:06"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:07
		# line in RSA:  ike: <fld1> (<saddr>) rejected connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: %{fld1} (%{saddr}) rejected connection attempt" }
				id => "message-00042:07"
				add_field => {
				"ec_activity" => "Deny"
				"action" => "rejected connection attempt"
					"[event][id]" => "00042:07"
					"[rsa][message][id1]" => "00042:07"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:08
		# line in RSA:  ike: IKE port float detected from peer <fld1>, old port: <dport>, new port: <sport>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: IKE port float detected from peer %{fld1}, old port: %{dport}, new port: %{sport}" }
				id => "message-00042:08"
				add_field => {
				"action" => "IKE port float detected from peer"
					"[event][id]" => "00042:08"
					"[rsa][message][id1]" => "00042:08"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:09
		# line in RSA:   ike: IPSec SA Established with { <fld1> (<saddr>), | <saddr>, }IPComp <fld2>, inbound CPI <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*ike:[\s]+IPSec[\s]+SA[\s]+Established[\s]+with[\s]+([\s]*(?<fld1>[^\s]*)[\s]+\((?<saddr>[^\)]*)\),[\s]+|[\s]*(?<saddr>[^,]*),[\s]+)IPComp[\s]+(?<fld2>[^,]*),[\s]+inbound[\s]+CPI[\s]+(?<fld3>.*)$" }
				id => "message-00042:09"
				add_field => {
					"[event][id]" => "00042:09"
					"[rsa][message][id1]" => "00042:09"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:10
		# line in RSA:  ike: ISAKMP SA Established with { <fld1> (<saddr>) | <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*ike:[\s]+ISAKMP[\s]+SA[\s]+Established[\s]+with[\s]+([\s]*(?<fld1>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-00042:10"
				add_field => {
				"action" => "ISAKMP SA Established"
					"[event][id]" => "00042:10"
					"[rsa][message][id1]" => "00042:10"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:11
		# line in RSA:   <protocol>: Received Delete ISAKMP SA message from { <shost> (<saddr>) | <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<protocol>[^:]*):[\s]+Received[\s]+Delete[\s]+ISAKMP[\s]+SA[\s]+message[\s]+from[\s]+([\s]*(?<shost>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-00042:11"
				add_field => {
					"[event][id]" => "00042:11"
					"[rsa][message][id1]" => "00042:11"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:12
		# line in RSA:  <protocol>: Dropping keep alive from unknown client <daddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{protocol}: Dropping keep alive from unknown client %{daddr}" }
				id => "message-00042:12"
				add_field => {
				"action" => "Dropping keep alive from unknown client"
					"[event][id]" => "00042:12"
					"[rsa][message][id1]" => "00042:12"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:13
		# line in RSA:  ike: Kicking session <fld30>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike: Kicking session %{fld30}" }
				id => "message-00042:13"
				add_field => {
				"action" => "Kicking session"
					"[event][id]" => "00042:13"
					"[rsa][message][id1]" => "00042:13"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00042:04
		# line in RSA:  ike:  HW Acceleration for DH : Enabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ike:  HW Acceleration for DH : Enabled" }
				id => "message-00042:04"
				add_field => {
					"[event][id]" => "00042:04"
					"[rsa][message][id1]" => "00042:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId185
	# line in RSA:  Ike not started due: No license
	else if [logstash][msgparser][id] == "msgParserId185" {
		dissect {
			mapping => { "message" => "Ike not started due: No license" }
			id => "msgParserId185"
			add_field => {
				"action" => "Ike not started - no license"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId186
	# line in RSA:   Incompatible IP address/mask: <saddr>/<fld1>
	else if [logstash][msgparser][id] == "msgParserId186" {
		dissect {
			mapping => { "message" => "Incompatible IP address/mask: %{saddr}/%{fld1}" }
			id => "msgParserId186"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Inbound" {
		# MESSAGE 00169:00
		# line in RSA: Inbound ESP from <saddr> to <daddr> SPI <fld1> [<fld18>] authentication failure detected--<fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Inbound ESP from %{saddr} to %{daddr} SPI %{fld1} [%{fld18}] authentication failure detected--%{fld2}" }
				id => "message-00169:00"
				add_field => {
				"ec_activity" => "Detect"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00169:00"
					"[rsa][message][id1]" => "00169:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00169:01
		# line in RSA: Inbound ESP from <saddr> to <daddr> SPI <fld1> [<fld28>] corrupt packet detected npbuf <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Inbound ESP from %{saddr} to %{daddr} SPI %{fld1} [%{fld28}] corrupt packet detected npbuf %{fld2}" }
				id => "message-00169:01"
				add_field => {
				"action" => "corrupt packet detected"
					"[event][id]" => "00169:01"
					"[rsa][message][id1]" => "00169:01"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId189
	# line in RSA: Index file for attribute <fld1> from file <filename> could not be created  
	else if [logstash][msgparser][id] == "msgParserId189" {
		dissect {
			mapping => { "message" => "Index file for attribute %{fld1} from file %{filename} could not be created" }
			id => "msgParserId189"
			add_field => {
				"action" => "Index file could not be created"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId190
	# line in RSA: Indicated <msg>
	else if [logstash][msgparser][id] == "msgParserId190" {
		dissect {
			mapping => { "message" => "Indicated %{msg}" }
			id => "msgParserId190"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId191
	# line in RSA: Installed new CA certificate from file: <filename>
	else if [logstash][msgparser][id] == "msgParserId191" {
		dissect {
			mapping => { "message" => "Installed new CA certificate from file: %{filename}" }
			id => "msgParserId191"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Interface" {
		# MESSAGE 00202:00
		# line in RSA:   Interface[<fld18>] created by user '<username>' @ '<fld1>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface[%{fld18}] created by user '%{username}' @ '%{fld1}'" }
				id => "message-00202:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00202:00"
					"[rsa][message][id1]" => "00202:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00202:01
		# line in RSA:  Interface[<fld18>].<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<fld4>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface[%{fld18}].%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{fld4}'" }
				id => "message-00202:01"
				add_field => {
					"[event][id]" => "00202:01"
					"[rsa][message][id1]" => "00202:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00227:00
		# line in RSA:  Interface [<fld18>] { Inbound | Outbound } filter for interface devLoc[<interface>]
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Interface[\s]+\[(?<fld18>[^\]]*)\][\s]+([\s]*Inbound[\s]+|[\s]*Outbound[\s]+)[\s]+filter[\s]+for[\s]+interface[\s]+devLoc\[(?<interface>[^\]]*)\]$" }
				id => "message-00227:00"
				add_field => {
					"[event][id]" => "00227:00"
					"[rsa][message][id1]" => "00227:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00227:01
		# line in RSA:  Interface [<fld18>] IntfFilter: rule[1] FILTER 1 deny IP any any
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface [%{fld18}] IntfFilter: rule[1] FILTER 1 deny IP any any" }
				id => "message-00227:01"
				add_field => {
					"[event][id]" => "00227:01"
					"[rsa][message][id1]" => "00227:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00037:00
		# line in RSA: Interface <msg> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Interface %{msg}" }
				id => "message-00037:00"
				add_field => {
					"[event][id]" => "00037:00"
					"[rsa][message][id1]" => "00037:00"
					"[event][categoryid]" => "1603030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId197
	# line in RSA: internal error <fld1> { (<info>, <saddr>:<sport>) | <info> }
	else if [logstash][msgparser][id] == "msgParserId197" {
		grok {
			match => { "message" => "^internal[\s]+error[\s]+(?<fld1>[^\s]*)[\s]+([\s]*\((?<info>[^,]*),[\s]+(?<saddr>[^:]*):(?<sport>[^\)]*)\)[\s]+|[\s]*(?<info>[^\s]*)[\s]+)$" }
			id => "msgParserId197"
			add_field => {
				"action" => "internal error"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId198
	# line in RSA: Intruder: Source <saddr>, Destination <daddr>
	else if [logstash][msgparser][id] == "msgParserId198" {
		dissect {
			mapping => { "message" => "Intruder: Source %{saddr}, Destination %{daddr}" }
			id => "msgParserId198"
			add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Invalid" {
		# MESSAGE 00038:00
		# line in RSA:  Invalid key '<info>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Invalid key '%{info}'" }
				id => "message-00038:00"
				add_field => {
				"action" => "Invalid key"
					"[event][id]" => "00038:00"
					"[rsa][message][id1]" => "00038:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00039:00
		# line in RSA:  Invalid reply digest from server, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Invalid reply digest from server, %{info}" }
				id => "message-00039:00"
				add_field => {
				"action" => "Invalid reply digest from server"
					"[event][id]" => "00039:00"
					"[rsa][message][id1]" => "00039:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00040:00
		# line in RSA:  Invalid root cert, <msg> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Invalid root cert, %{msg}" }
				id => "message-00040:00"
				add_field => {
				"action" => "Invalid root cert"
					"[event][id]" => "00040:00"
					"[rsa][message][id1]" => "00040:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00215:00
		# line in RSA:  Invalid {host IP | IP} address: <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Invalid[\s]+(host[\s]+IP[\s]+|[\s]*IP)[\s]+address:[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-00215:00"
				add_field => {
				"action" => "Invalid host IP address"
					"[event][id]" => "00215:00"
					"[rsa][message][id1]" => "00215:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00215:01
		# line in RSA:  Invalid set member '[<fld1>]<fld2>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Invalid set member '[%{fld1}]%{fld2}'" }
				id => "message-00215:01"
				add_field => {
				"action" => "Invalid set member"
					"[event][id]" => "00215:01"
					"[rsa][message][id1]" => "00215:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId204
	# line in RSA: IP Redirector [<fld1>] ValidGWOnSameSubnet: ip <saddr> mask <smask> gw <gateway> not directly reachable
	else if [logstash][msgparser][id] == "msgParserId204" {
		dissect {
			mapping => { "message" => "IP Redirector [%{fld1}] ValidGWOnSameSubnet: ip %{saddr} mask %{smask} gw %{gateway} not directly reachable" }
			id => "msgParserId204"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "IpAddrPool" {
		# MESSAGE 00276:00
		# line in RSA:  IpAddrPool[<fld1>-<fld2>].{ mask | name } changed from '<fld3> to '<fld4>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*IpAddrPool\[(?<fld1>[^\-]*)\-(?<fld2>[^\]]*)\]\.([\s]*mask[\s]+|[\s]*name[\s]+)[\s]+changed[\s]+from[\s]+'(?<fld3>[^\s]*)[\s]+to[\s]+'(?<fld4>[^']*)'[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'$" }
				id => "message-00276:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "IpAddrPool changed by user"
					"[event][id]" => "00276:00"
					"[rsa][message][id1]" => "00276:00"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00276:01
		# line in RSA:  IpAddrPool[<fld1>-<fld2>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IpAddrPool[%{fld1}-%{fld2}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00276:01"
				add_field => {
				"action" => "IpAddrPool created by user"
					"[event][id]" => "00276:01"
					"[rsa][message][id1]" => "00276:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00276:02
		# line in RSA:  IpAddrPool[<fld1>-<fld2>] destroyed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IpAddrPool[%{fld1}-%{fld2}] destroyed by user '%{username}' @ '%{saddr}'" }
				id => "message-00276:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Authentication"
				"action" => "ipaddrpool destroyed by user"
					"[event][id]" => "00276:02"
					"[rsa][message][id1]" => "00276:02"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00276:03
		# line in RSA:  IpAddrPool[<fld1>-<fld2>] create failed by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IpAddrPool[%{fld1}-%{fld2}] create failed by user '%{username}' @ '%{saddr}'" }
				id => "message-00276:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "ipaddrpool create failed by user"
					"[event][id]" => "00276:03"
					"[rsa][message][id1]" => "00276:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "IpIntf" {
		# MESSAGE 00203:00
		# line in RSA:  IpIntf[<fld1>] { created | destroyed } by user '<username>' @ '<saddr>' 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*IpIntf\[(?<fld1>[^\]]*)\][\s]+([\s]*created[\s]+|[\s]*destroyed[\s]+)[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<saddr>[^']*)'[\s]+$" }
				id => "message-00203:00"
				add_field => {
					"[event][id]" => "00203:00"
					"[rsa][message][id1]" => "00203:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00203:01
		# line in RSA:    IpIntf[<fld1>].<fld2> changed from '<fld3>' to '<fld4>' by user '<username>' @ '<fld5>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IpIntf[%{fld1}].%{fld2} changed from '%{fld3}' to '%{fld4}' by user '%{username}' @ '%{fld5}'" }
				id => "message-00203:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00203:01"
					"[rsa][message][id1]" => "00203:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId211
	# line in RSA:  IprOm [<fld1>] <fld2>: ip <daddr> mask <dmask> gw <gateway> not directly reachable
	else if [logstash][msgparser][id] == "msgParserId211" {
		dissect {
			mapping => { "message" => "IprOm [%{fld1}] %{fld2}: ip %{daddr} mask %{dmask} gw %{gateway} not directly reachable" }
			id => "msgParserId211"
			add_field => {
				"action" => "ip not directly reachable"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "IpRoutingTable" {
		# MESSAGE 00272:00
		# line in RSA: IpRoutingTable[<fld1>] create failed by user '<username>' @ '<saddr>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IpRoutingTable[%{fld1}] create failed by user '%{username}' @ '%{saddr}'" }
				id => "message-00272:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00272:00"
					"[rsa][message][id1]" => "00272:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00272:01
		# line in RSA: IpRoutingTable[<fld1>, <fld2>].Physical update failed, please verify value: '<fld3>' by user '<username>' @ '<fld4>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IpRoutingTable[%{fld1}, %{fld2}].Physical update failed, please verify value: '%{fld3}' by user '%{username}' @ '%{fld4}'" }
				id => "message-00272:01"
				add_field => {
					"[event][id]" => "00272:01"
					"[rsa][message][id1]" => "00272:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "IPvfy" {
		# MESSAGE 00434
		# line in RSA:  IPvfy.<fld1>[<fld7>] <fld8>: <interface>::Lookup <fld9>, <fld10> failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IPvfy.%{fld1}[%{fld7}] %{fld8}: %{interface}::Lookup %{fld9}, %{fld10} failed" }
				id => "message-00434"
				add_field => {
				"action" => "Lookup failed"
					"[event][id]" => "00434"
					"[rsa][message][id1]" => "00434"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:01
		# line in RSA:  IPvfy.<fld1>[<fld7>] <fld8>: ip <daddr> mask <dmask> gw <gateway> not directly reachable
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IPvfy.%{fld1}[%{fld7}] %{fld8}: ip %{daddr} mask %{dmask} gw %{gateway} not directly reachable" }
				id => "message-00434:01"
				add_field => {
				"action" => "ip not directly reachable"
					"[event][id]" => "00434:01"
					"[rsa][message][id1]" => "00434:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00434:02
		# line in RSA:  IPvfy.<fld1>[<fld7>] <event_type>: ip <daddr> mask <dmask> deleting old rt <fld2> flags <fld3> pr <fld4> prio <fld5>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IPvfy.%{fld1}[%{fld7}] %{event_type}: ip %{daddr} mask %{dmask} deleting old rt %{fld2} flags %{fld3} pr %{fld4} prio %{fld5}" }
				id => "message-00434:02"
				add_field => {
					"[event][id]" => "00434:02"
					"[rsa][message][id1]" => "00434:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId217
	# line in RSA:   IPX Redirector [<fld1>] <fld2>: Shutdown complete
	else if [logstash][msgparser][id] == "msgParserId217" {
		dissect {
			mapping => { "message" => "IPX Redirector [%{fld1}] %{fld2}: Shutdown complete" }
			id => "msgParserId217"
			add_field => {
				"action" => "Shutdown complete"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "IpxIntfOmCls" {
		# MESSAGE 00204:00
		# line in RSA:  IpxIntfOmCls.<fld1> created by user '<username>' @ '<fld2>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IpxIntfOmCls.%{fld1} created by user '%{username}' @ '%{fld2}'" }
				id => "message-00204:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
					"[event][id]" => "00204:00"
					"[rsa][message][id1]" => "00204:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00204:01
		# line in RSA:  IpxIntfOmCls.<fld1> update failed, please verify value: '<fld2>' by user '<username>' @ '<fld3>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "IpxIntfOmCls.%{fld1} update failed, please verify value: '%{fld2}' by user '%{username}' @ '%{fld3}'" }
				id => "message-00204:01"
				add_field => {
					"[event][id]" => "00204:01"
					"[rsa][message][id1]" => "00204:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "ISAKMP" {
		# MESSAGE 00024:00
		# line in RSA: ISAKMP [<fld1>] cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>) has exceeded idle timeout - logging out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00024:00"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00024:00"
					"[rsa][message][id1]" => "00024:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:01
		# line in RSA: ISAKMP [<fld1>] cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>) has exceeded idle timeout - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00024:01"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00024:01"
					"[rsa][message][id1]" => "00024:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:02
		# line in RSA: ISAKMP [<fld1>] cn=<username>, mail=<user_address> (<saddr>) has exceeded idle timeout - logging out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] cn=%{username}, mail=%{user_address} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00024:02"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00024:02"
					"[rsa][message][id1]" => "00024:02"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:03
		# line in RSA: ISAKMP [<fld1>] cn=<username> (<saddr>) has exceeded idle timeout - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] cn=%{username} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00024:03"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00024:03"
					"[rsa][message][id1]" => "00024:03"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:04
		# line in RSA: ISAKMP [<fld1>] <fld2>, cn=<username>, mail=<fld3> (<saddr>) has exceeded idle timeout - logging out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] %{fld2}, cn=%{username}, mail=%{fld3} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00024:04"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00024:04"
					"[rsa][message][id1]" => "00024:04"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:05
		# line in RSA: ISAKMP [<fld1>] <fld2>, cn=<username> (<saddr>) has exceeded idle timeout - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] %{fld2}, cn=%{username} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00024:05"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00024:05"
					"[rsa][message][id1]" => "00024:05"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00024:06
		# line in RSA: ISAKMP [<fld1>] { (<saddr>) | <saddr> } has exceeded idle timeout - logging out 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^ISAKMP[\s]+\[(?<fld1>[^\]]*)\][\s]+([\s]*\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+has[\s]+exceeded[\s]+idle[\s]+timeout[\s]+\-[\s]+logging[\s]+out[\s]+$" }
				id => "message-00024:06"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00024:06"
					"[rsa][message][id1]" => "00024:06"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:00
		# line in RSA: ISAKMP [<fld1>] Authentication failure in message from cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})" }
				id => "message-00025:00"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "message authentication failure"
					"[event][id]" => "00025:00"
					"[rsa][message][id1]" => "00025:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:01
		# line in RSA: ISAKMP [<fld1>] Authentication failure in message from cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})" }
				id => "message-00025:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "message authentication failure"
					"[event][id]" => "00025:01"
					"[rsa][message][id1]" => "00025:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:02
		# line in RSA: ISAKMP [<fld1>] Authentication failure in message from cn=<username>, mail=<user_address> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from cn=%{username}, mail=%{user_address} (%{saddr})" }
				id => "message-00025:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "message authentication failure"
					"[event][id]" => "00025:02"
					"[rsa][message][id1]" => "00025:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:03
		# line in RSA: ISAKMP [<fld1>] Authentication failure in message from cn=<username> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from cn=%{username} (%{saddr})" }
				id => "message-00025:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "message authentication failure"
					"[event][id]" => "00025:03"
					"[rsa][message][id1]" => "00025:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:04
		# line in RSA:  ISAKMP [<fld1>] Authentication failure in message from serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld2>, c=<fld3> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld2}, c=%{fld3} (%{saddr})" }
				id => "message-00025:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "message authentication failure"
					"[event][id]" => "00025:04"
					"[rsa][message][id1]" => "00025:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:05
		# line in RSA: ISAKMP [<fld1>] Authentication failure in message from <fld2>, cn=<username>, mail=<user_address> (<fld3>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from %{fld2}, cn=%{username}, mail=%{user_address} (%{fld3})" }
				id => "message-00025:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "message authentication failure"
					"[event][id]" => "00025:05"
					"[rsa][message][id1]" => "00025:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:06
		# line in RSA: ISAKMP [<fld1>] Authentication failure in message from <fld2>, cn=<username> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from %{fld2}, cn=%{username} (%{saddr})" }
				id => "message-00025:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "message authentication failure"
					"[event][id]" => "00025:06"
					"[rsa][message][id1]" => "00025:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:07
		# line in RSA: ISAKMP [<fld1>] Authentication failure in message from (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from (%{saddr})" }
				id => "message-00025:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00025:07"
					"[rsa][message][id1]" => "00025:07"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00025:08
		# line in RSA: ISAKMP [<fld1>] Authentication failure in message from <user_address> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Authentication failure in message from %{user_address} (%{saddr})" }
				id => "message-00025:08"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "message authentication failure"
					"[event][id]" => "00025:08"
					"[rsa][message][id1]" => "00025:08"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:00
		# line in RSA: ISAKMP [<fld1>] Diffie-Hellman group mismatch for cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>)  - terminating connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Diffie-Hellman group mismatch for cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})  - terminating connection attempt" }
				id => "message-00026:00"
				add_field => {
				"action" => "Diffie-Hellman group mismatch"
					"[event][id]" => "00026:00"
					"[rsa][message][id1]" => "00026:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:01
		# line in RSA: ISAKMP [<fld1>] Diffie-Hellman group mismatch for cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>) - terminating connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Diffie-Hellman group mismatch for cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr}) - terminating connection attempt" }
				id => "message-00026:01"
				add_field => {
				"action" => "Diffie-Hellman group mismatch"
					"[event][id]" => "00026:01"
					"[rsa][message][id1]" => "00026:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:02
		# line in RSA: ISAKMP [<fld1>] Diffie-Hellman group mismatch for cn=<username>, mail=<user_address> (<saddr>) - terminating connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Diffie-Hellman group mismatch for cn=%{username}, mail=%{user_address} (%{saddr}) - terminating connection attempt" }
				id => "message-00026:02"
				add_field => {
				"action" => "Diffie-Hellman group mismatch"
					"[event][id]" => "00026:02"
					"[rsa][message][id1]" => "00026:02"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:03
		# line in RSA: ISAKMP [<fld1>] Diffie-Hellman group mismatch for cn=<username> (<saddr>) - terminating connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Diffie-Hellman group mismatch for cn=%{username} (%{saddr}) - terminating connection attempt" }
				id => "message-00026:03"
				add_field => {
				"action" => "Diffie-Hellman group mismatch"
					"[event][id]" => "00026:03"
					"[rsa][message][id1]" => "00026:03"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:04
		# line in RSA: ISAKMP [<fld1>] Diffie-Hellman group mismatch for <fld2>, cn=<username>, <fld3>(<saddr>) - terminating connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Diffie-Hellman group mismatch for %{fld2}, cn=%{username}, %{fld3}(%{saddr}) - terminating connection attempt" }
				id => "message-00026:04"
				add_field => {
				"action" => "Diffie-Hellman group mismatch"
					"[event][id]" => "00026:04"
					"[rsa][message][id1]" => "00026:04"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:05
		# line in RSA: ISAKMP [<fld1>] Diffie-Hellman group mismatch for <fld2>, cn=<username> (<saddr>) - terminating connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Diffie-Hellman group mismatch for %{fld2}, cn=%{username} (%{saddr}) - terminating connection attempt" }
				id => "message-00026:05"
				add_field => {
				"action" => "Diffie-Hellman group mismatch"
					"[event][id]" => "00026:05"
					"[rsa][message][id1]" => "00026:05"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:06
		# line in RSA: ISAKMP [<fld1>] Diffie-Hellman group mismatch for {(<saddr>) | <saddr> - terminating connection attempt}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^ISAKMP[\s]+\[(?<fld1>[^\]]*)\][\s]+Diffie\-Hellman[\s]+group[\s]+mismatch[\s]+for[\s]+(\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+\-[\s]+terminating[\s]+connection[\s]+attempt)$" }
				id => "message-00026:06"
				add_field => {
				"action" => "Diffie-Hellman group mismatch"
					"[event][id]" => "00026:06"
					"[rsa][message][id1]" => "00026:06"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:07
		# line in RSA: ISAKMP [<fld1>] Diffie-Hellman group mismatch saDHGroup=<group>, DHelmmanGroup=<fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Diffie-Hellman group mismatch saDHGroup=%{group}, DHelmmanGroup=%{fld2}" }
				id => "message-00026:07"
				add_field => {
					"[event][id]" => "00026:07"
					"[rsa][message][id1]" => "00026:07"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00026:08
		# line in RSA: ISAKMP [<fld1>] Created HwAppCtxt, using hardware for Diffie Hellman generation..
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Created HwAppCtxt, using hardware for Diffie Hellman generation.." }
				id => "message-00026:08"
				add_field => {
				"action" => "using hardware for Diffie-Hellman generation"
					"[event][id]" => "00026:08"
					"[rsa][message][id1]" => "00026:08"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:00
		# line in RSA:  ISAKMP [<fld1>] Error notification (Authentication failure) received from cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Authentication failure) received from cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})" }
				id => "message-00027:00"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:00"
					"[rsa][message][id1]" => "00027:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:01
		# line in RSA:  ISAKMP [<fld1>] Error notification (Authentication failure) received from cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Authentication failure) received from cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})" }
				id => "message-00027:01"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:01"
					"[rsa][message][id1]" => "00027:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00172:00
		# line in RSA:  ISAKMP [<fld1>] Error notification (Invalid protocol major version number) received from cn=<username>, serialnumber=<serial_number>, o=<fld2>, c=<fld3> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Invalid protocol major version number) received from cn=%{username}, serialnumber=%{serial_number}, o=%{fld2}, c=%{fld3} (%{saddr})" }
				id => "message-00172:00"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00172:00"
					"[rsa][message][id1]" => "00172:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:02
		# line in RSA:  ISAKMP [<fld1>] Error notification (Authentication failure) received from cn=<username>, mail=<user_address> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Authentication failure) received from cn=%{username}, mail=%{user_address} (%{saddr})" }
				id => "message-00027:02"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:02"
					"[rsa][message][id1]" => "00027:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:03
		# line in RSA:  ISAKMP [<fld1>] Error notification (Authentication failure) received from cn=<username> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Authentication failure) received from cn=%{username} (%{saddr})" }
				id => "message-00027:03"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:03"
					"[rsa][message][id1]" => "00027:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:04
		# line in RSA:  ISAKMP [<fld1>] Error notification (Authentication failure) received from <fld2>, cn=<username>, mail=<user_address> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Authentication failure) received from %{fld2}, cn=%{username}, mail=%{user_address} (%{saddr})" }
				id => "message-00027:04"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:04"
					"[rsa][message][id1]" => "00027:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:05
		# line in RSA:  ISAKMP [<fld1>] Error notification (Authentication failure) received from <fld2>, cn=<username> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Authentication failure) received from %{fld2}, cn=%{username} (%{saddr})" }
				id => "message-00027:05"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:05"
					"[rsa][message][id1]" => "00027:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:06
		# line in RSA:  ISAKMP [<fld1>] Error notification (Invalid protocol major version number) received from (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Invalid protocol major version number) received from (%{saddr})" }
				id => "message-00027:06"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:06"
					"[rsa][message][id1]" => "00027:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:07
		# line in RSA:  ISAKMP [<fld1>] Error notification (Authentication failure) received from <username> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Authentication failure) received from %{username} (%{saddr})" }
				id => "message-00027:07"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:07"
					"[rsa][message][id1]" => "00027:07"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00027:08
		# line in RSA:  ISAKMP [<fld1>] Error notification (Invalid cookie) received from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Error notification (Invalid cookie) received from %{saddr}" }
				id => "message-00027:08"
				add_field => {
				"action" => "Error Notification received"
					"[event][id]" => "00027:08"
					"[rsa][message][id1]" => "00027:08"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:00
		# line in RSA:  ISAKMP [<fld1>] Invalid ID information in message from cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid ID information in message from cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})" }
				id => "message-00030:00"
				add_field => {
				"action" => "Invalid ID information in message"
					"[event][id]" => "00030:00"
					"[rsa][message][id1]" => "00030:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:01
		# line in RSA:  ISAKMP [<fld1>] Invalid ID information in message from cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid ID information in message from cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})" }
				id => "message-00030:01"
				add_field => {
				"action" => "Invalid ID information in message"
					"[event][id]" => "00030:01"
					"[rsa][message][id1]" => "00030:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:02
		# line in RSA:  ISAKMP [<fld1>] Invalid ID information in message from cn=<username>, mail=<user_address> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid ID information in message from cn=%{username}, mail=%{user_address} (%{saddr})" }
				id => "message-00030:02"
				add_field => {
				"action" => "Invalid ID information in message"
					"[event][id]" => "00030:02"
					"[rsa][message][id1]" => "00030:02"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:03
		# line in RSA:  ISAKMP [<fld1>] Invalid ID information in message from cn=<username> {(<saddr>)| <saddr>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*ISAKMP[\s]+\[(?<fld1>[^\]]*)\][\s]+Invalid[\s]+ID[\s]+information[\s]+in[\s]+message[\s]+from[\s]+cn=(?<username>[^\s]*)[\s]+(\((?<saddr>[^\)]*)\)|[\s]*(?<saddr>.*))$" }
				id => "message-00030:03"
				add_field => {
					"[event][id]" => "00030:03"
					"[rsa][message][id1]" => "00030:03"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:04
		# line in RSA:  ISAKMP [<fld1>] Invalid ID information in message from <fld2>, cn=<username>, mail=<user_address> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid ID information in message from %{fld2}, cn=%{username}, mail=%{user_address} (%{saddr})" }
				id => "message-00030:04"
				add_field => {
					"[event][id]" => "00030:04"
					"[rsa][message][id1]" => "00030:04"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:05
		# line in RSA:  ISAKMP [<fld1>] Invalid ID information in message from <fld2>, cn=<username> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid ID information in message from %{fld2}, cn=%{username} (%{saddr})" }
				id => "message-00030:05"
				add_field => {
					"[event][id]" => "00030:05"
					"[rsa][message][id1]" => "00030:05"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:06
		# line in RSA:  ISAKMP [<fld1>] Invalid ID information in message from (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid ID information in message from (%{saddr})" }
				id => "message-00030:06"
				add_field => {
					"[event][id]" => "00030:06"
					"[rsa][message][id1]" => "00030:06"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:07
		# line in RSA:  ISAKMP [<fld1>] Unknown Notify message (<fld2>) received from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Unknown Notify message (%{fld2}) received from %{saddr}" }
				id => "message-00030:07"
				add_field => {
					"[event][id]" => "00030:07"
					"[rsa][message][id1]" => "00030:07"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:08
		# line in RSA:  ISAKMP [<fld1>] invalid id! <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] invalid id! %{info}" }
				id => "message-00030:08"
				add_field => {
				"action" => "invalid id"
					"[event][id]" => "00030:08"
					"[rsa][message][id1]" => "00030:08"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:09
		# line in RSA:  ISAKMP [<fld1>] Invalid key information in message from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid key information in message from %{saddr}" }
				id => "message-00030:09"
				add_field => {
					"[event][id]" => "00030:09"
					"[rsa][message][id1]" => "00030:09"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00030:10
		# line in RSA:  ISAKMP [<fld1>] Invalid message ID in message from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid message ID in message from %{saddr}" }
				id => "message-00030:10"
				add_field => {
					"[event][id]" => "00030:10"
					"[rsa][message][id1]" => "00030:10"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00031:00
		# line in RSA:  ISAKMP [<fld1>] No proposal chosen in message from cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] No proposal chosen in message from cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})" }
				id => "message-00031:00"
				add_field => {
					"[event][id]" => "00031:00"
					"[rsa][message][id1]" => "00031:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00031:01
		# line in RSA:  ISAKMP [<fld1>] No proposal chosen in message from cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] No proposal chosen in message from cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5} (%{saddr})" }
				id => "message-00031:01"
				add_field => {
					"[event][id]" => "00031:01"
					"[rsa][message][id1]" => "00031:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00031:02
		# line in RSA:  ISAKMP [<fld1>] No proposal chosen in message from cn=<username>, mail=<user_address> (<saddr>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] No proposal chosen in message from cn=%{username}, mail=%{user_address} (%{saddr})" }
				id => "message-00031:02"
				add_field => {
					"[event][id]" => "00031:02"
					"[rsa][message][id1]" => "00031:02"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00031:03
		# line in RSA:  ISAKMP [<fld1>] No proposal chosen in message from cn=<username> { (<saddr>) | <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*ISAKMP[\s]+\[(?<fld1>[^\]]*)\][\s]+No[\s]+proposal[\s]+chosen[\s]+in[\s]+message[\s]+from[\s]+cn=(?<username>[^\s]*)[\s]+([\s]*\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-00031:03"
				add_field => {
					"[event][id]" => "00031:03"
					"[rsa][message][id1]" => "00031:03"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00031:04
		# line in RSA:  ISAKMP [<fld1>] No proposal chosen in message from <fld2>, cn=<username>, mail=<user_address> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] No proposal chosen in message from %{fld2}, cn=%{username}, mail=%{user_address} (%{saddr})" }
				id => "message-00031:04"
				add_field => {
					"[event][id]" => "00031:04"
					"[rsa][message][id1]" => "00031:04"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00031:05
		# line in RSA:  ISAKMP [<fld1>] No proposal chosen in message from <fld2>, cn=<username> (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] No proposal chosen in message from %{fld2}, cn=%{username} (%{saddr})" }
				id => "message-00031:05"
				add_field => {
					"[event][id]" => "00031:05"
					"[rsa][message][id1]" => "00031:05"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00031:06
		# line in RSA:  ISAKMP [<fld1>] No proposal chosen in message from (<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] No proposal chosen in message from (%{saddr})" }
				id => "message-00031:06"
				add_field => {
					"[event][id]" => "00031:06"
					"[rsa][message][id1]" => "00031:06"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00031:07
		# line in RSA:   ISAKMP [<fld1>] No response from <saddr> - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] No response from %{saddr} - logging out" }
				id => "message-00031:07"
				add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00031:07"
					"[rsa][message][id1]" => "00031:07"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00171:01
		# line in RSA:   ISAKMP [<fld1>] Invalid cookie in message from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid cookie in message from %{saddr}" }
				id => "message-00171:01"
				add_field => {
				"action" => "invalid coookie in message"
					"[event][id]" => "00171:01"
					"[rsa][message][id1]" => "00171:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00173:00
		# line in RSA:   ISAKMP [<fld1>] Oakley Main Mode proposal accepted from <daddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Oakley Main Mode proposal accepted from %{daddr}" }
				id => "message-00173:00"
				add_field => {
				"action" => "Oakley Main Mode proposal accepted"
					"[event][id]" => "00173:00"
					"[rsa][message][id1]" => "00173:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00174:00
		# line in RSA:  ISAKMP [<fld1>] cn=<username>, serialnumber=<serial_number>, o=<fld2>, c=<fld3> (<saddr>) rejected or aborted connection attempt 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] cn=%{username}, serialnumber=%{serial_number}, o=%{fld2}, c=%{fld3} (%{saddr}) rejected or aborted connection attempt" }
				id => "message-00174:00"
				add_field => {
				"ec_activity" => "Deny"
				"action" => "rejected or aborted connection attempt"
					"[event][id]" => "00174:00"
					"[rsa][message][id1]" => "00174:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00174:01
		# line in RSA:   ISAKMP [<fld1>] <username> (<saddr>) rejected or aborted connection attempt 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] %{username} (%{saddr}) rejected or aborted connection attempt" }
				id => "message-00174:01"
				add_field => {
				"ec_activity" => "Deny"
				"action" => "rejected or aborted connection attempt"
					"[event][id]" => "00174:01"
					"[rsa][message][id1]" => "00174:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00174:03
		# line in RSA:  ISAKMP [<fld1>] <saddr> rejected or aborted connection attempt 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] %{saddr} rejected or aborted connection attempt" }
				id => "message-00174:03"
				add_field => {
				"ec_activity" => "Deny"
				"action" => "rejected or aborted connection attempt"
					"[event][id]" => "00174:03"
					"[rsa][message][id1]" => "00174:03"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00174:02
		# line in RSA:  ISAKMP [<fld1>] <saddr> logged off by administrator 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] %{saddr} logged off by administrator" }
				id => "message-00174:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "User Logged Off"
					"[event][id]" => "00174:02"
					"[rsa][message][id1]" => "00174:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00176:00
		# line in RSA: ISAKMP [<fld1>] Protocol not recognized - <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Protocol not recognized - %{info}" }
				id => "message-00176:00"
				add_field => {
					"[event][id]" => "00176:00"
					"[rsa][message][id1]" => "00176:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00177:00
		# line in RSA:  ISAKMP [<fld1>] Unprotected Delete message from cn=<username>, serialnumber=<serial_number>, o=<fld2>, c=<fld3> (<saddr>) being dropped 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Unprotected Delete message from cn=%{username}, serialnumber=%{serial_number}, o=%{fld2}, c=%{fld3} (%{saddr}) being dropped" }
				id => "message-00177:00"
				add_field => {
					"[event][id]" => "00177:00"
					"[rsa][message][id1]" => "00177:00"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00177:01
		# line in RSA:  ISAKMP [<fld1>] Could not find SPI - <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Could not find SPI - %{info}" }
				id => "message-00177:01"
				add_field => {
				"action" => "Could not find SPI"
					"[event][id]" => "00177:01"
					"[rsa][message][id1]" => "00177:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00177:02
		# line in RSA: ISAKMP [<fld1>] Invalid payload type in message from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid payload type in message from %{saddr}" }
				id => "message-00177:02"
				add_field => {
					"[event][id]" => "00177:02"
					"[rsa][message][id1]" => "00177:02"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00177:03
		# line in RSA: ISAKMP [<fld1>] Invalid SPI in proposal in message from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] Invalid SPI in proposal in message from %{saddr}" }
				id => "message-00177:03"
				add_field => {
					"[event][id]" => "00177:03"
					"[rsa][message][id1]" => "00177:03"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00177:04
		# line in RSA:  ISAKMP [<fld1>] No SPI on Notify message after Phase <fld2> - <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] No SPI on Notify message after Phase %{fld2} - %{info}" }
				id => "message-00177:04"
				add_field => {
				"action" => "No SPI on Notify message after Phase"
					"[event][id]" => "00177:04"
					"[rsa][message][id1]" => "00177:04"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00177:05
		# line in RSA:  ISAKMP [<fld1>] R-U-THERE Notify message (<fld2>) received from <saddr>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "ISAKMP [%{fld1}] R-U-THERE Notify message (%{fld2}) received from %{saddr}, %{info}" }
				id => "message-00177:05"
				add_field => {
					"[event][id]" => "00177:05"
					"[rsa][message][id1]" => "00177:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId287
	# line in RSA: IspDnsServers.ServerRecord[<saddr>]{ .DnsServer[<fld18>] destroyed | .DnsServer[<fld18>] created | destroyed | created } by user '<username>' @ '<fld1>'
	else if [logstash][msgparser][id] == "msgParserId287" {
		grok {
			match => { "message" => "^IspDnsServers\.ServerRecord\[(?<saddr>[^\]]*)\]([\s]*\.DnsServer\[(?<fld18>[^\]]*)\][\s]+destroyed[\s]+|[\s]*\.DnsServer\[(?<fld18>[^\]]*)\][\s]+created[\s]+|[\s]*destroyed[\s]+|[\s]*created[\s]+)[\s]+by[\s]+user[\s]+'(?<username>[^']*)'[\s]+@[\s]+'(?<fld1>[^']*)'$" }
			id => "msgParserId287"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId288
	# line in RSA:   iterateFirst: failure, vcid =<fld1> 
	else if [logstash][msgparser][id] == "msgParserId288" {
		dissect {
			mapping => { "message" => "iterateFirst: failure, vcid =%{fld1}" }
			id => "msgParserId288"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId289
	# line in RSA:  javascript error: <info> 
	else if [logstash][msgparser][id] == "msgParserId289" {
		dissect {
			mapping => { "message" => "javascript error: %{info}" }
			id => "msgParserId289"
			add_field => {
				"action" => "javascript error"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "L2Fd" {
		# MESSAGE 00228:00
		# line in RSA:   L2Fd [<fld18>] { l2fD Started | Started }. 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*L2Fd[\s]+\[(?<fld18>[^\]]*)\][\s]+([\s]*l2fD[\s]+Started[\s]+|[\s]*Started[\s]+)\.[\s]+$" }
				id => "message-00228:00"
				add_field => {
					"[event][id]" => "00228:00"
					"[rsa][message][id1]" => "00228:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00228:01
		# line in RSA:   L2Fd [<fld18>] Success getting <fld1> default <fld2> options
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "L2Fd [%{fld18}] Success getting %{fld1} default %{fld2} options" }
				id => "message-00228:01"
				add_field => {
					"[event][id]" => "00228:01"
					"[rsa][message][id1]" => "00228:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId292
	# line in RSA:   L2TPd [<fld18>] Success getting L2TP default PPP options 
	else if [logstash][msgparser][id] == "msgParserId292" {
		dissect {
			mapping => { "message" => "L2TPd [%{fld18}] Success getting L2TP default PPP options" }
			id => "msgParserId292"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId293
	# line in RSA:  L3if [<fld7>] L3ifCls Route not installed because <info>
	else if [logstash][msgparser][id] == "msgParserId293" {
		dissect {
			mapping => { "message" => "L3if [%{fld7}] L3ifCls Route not installed because %{info}" }
			id => "msgParserId293"
			add_field => {
				"action" => " L3ifCls Route not installed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId294
	# line in RSA: LDIF file: <filename> 
	else if [logstash][msgparser][id] == "msgParserId294" {
		dissect {
			mapping => { "message" => "LDIF file: %{filename}" }
			id => "msgParserId294"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId295
	# line in RSA:   LMMInit::ping MIB(<fld1>) was successfully loaded and initialized. 
	else if [logstash][msgparser][id] == "msgParserId295" {
		dissect {
			mapping => { "message" => "LMMInit::ping MIB(%{fld1}) was successfully loaded and initialized." }
			id => "msgParserId295"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId296
	# line in RSA:  LMMLoadModule::<filename>, <result>. 
	else if [logstash][msgparser][id] == "msgParserId296" {
		dissect {
			mapping => { "message" => "LMMLoadModule::%{filename}, %{result}." }
			id => "msgParserId296"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId297
	# line in RSA:   LdapProfileServer[<fld18>] created by user '<username>' @ '<fld2>' 
	else if [logstash][msgparser][id] == "msgParserId297" {
		dissect {
			mapping => { "message" => "LdapProfileServer[%{fld18}] created by user '%{username}' @ '%{fld2}'" }
			id => "msgParserId297"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId298
	# line in RSA:  LoadOspfAreas <msg> 
	else if [logstash][msgparser][id] == "msgParserId298" {
		dissect {
			mapping => { "message" => "LoadOspfAreas %{msg}" }
			id => "msgParserId298"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId299
	# line in RSA:  LoadOspfIntf <msg> 
	else if [logstash][msgparser][id] == "msgParserId299" {
		dissect {
			mapping => { "message" => "LoadOspfIntf %{msg}" }
			id => "msgParserId299"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId300
	# line in RSA:  Loaded { configuration file <filename> | (<fld1>) <saddr>:<sport> }
	else if [logstash][msgparser][id] == "msgParserId300" {
		grok {
			match => { "message" => "^[\s]*Loaded[\s]+([\s]*configuration[\s]+file[\s]+(?<filename>[^\s]*)[\s]+|[\s]*\((?<fld1>[^\)]*)\)[\s]+(?<saddr>[^:]*):(?<sport>[^\s]*)[\s]+)$" }
			id => "msgParserId300"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId301
	# line in RSA: Login failure due to: Server network connection failure 
	else if [logstash][msgparser][id] == "msgParserId301" {
		dissect {
			mapping => { "message" => "Login failure due to: Server network connection failure" }
			id => "msgParserId301"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Login failure"
				"reason" => "Server network connection failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId302
	# line in RSA:  Looking up [<fld1>]
	else if [logstash][msgparser][id] == "msgParserId302" {
		dissect {
			mapping => { "message" => "Looking up [%{fld1}]" }
			id => "msgParserId302"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId303
	# line in RSA:  Management.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<saddr>' 
	else if [logstash][msgparser][id] == "msgParserId303" {
		dissect {
			mapping => { "message" => "Management.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId303"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId304
	# line in RSA:   McRelay [<fld18>] MulticastRelay globally disabled 
	else if [logstash][msgparser][id] == "msgParserId304" {
		dissect {
			mapping => { "message" => "McRelay [%{fld18}] MulticastRelay globally disabled" }
			id => "msgParserId304"
			add_field => {
				"ec_activity" => "Disable"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId305
	# line in RSA:  MKCOL <url>"
	else if [logstash][msgparser][id] == "msgParserId305" {
		dissect {
			mapping => { "message" => "MKCOL %{url}\"" }
			id => "msgParserId305"
			add_field => {
				"action" => "MKCOL"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId306
	# line in RSA:  NTP <msg> 
	else if [logstash][msgparser][id] == "msgParserId306" {
		dissect {
			mapping => { "message" => "NTP %{msg}" }
			id => "msgParserId306"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId307
	# line in RSA:  NtpGlobal.ApplyChange changed from '<fld1>' to '<fld2>' by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId307" {
		dissect {
			mapping => { "message" => "NtpGlobal.ApplyChange changed from '%{fld1}' to '%{fld2}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId307"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "NtpGlobal Apply changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId308
	# line in RSA:  NTPGlobal.Broadcast changed from '<fld1>' to '<fld2>' by user '<username>' @ '<saddr>'
	else if [logstash][msgparser][id] == "msgParserId308" {
		dissect {
			mapping => { "message" => "NTPGlobal.Broadcast changed from '%{fld1}' to '%{fld2}' by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId308"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "NTPGlobal Broadcast changed"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "NtpServer" {
		# MESSAGE 00288:00
		# line in RSA:  NtpServer[<fld1>] created by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NtpServer[%{fld1}] created by user '%{username}' @ '%{saddr}'" }
				id => "message-00288:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
				"action" => "NTP Server created by user"
					"[event][id]" => "00288:00"
					"[rsa][message][id1]" => "00288:00"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00288:01
		# line in RSA:   NtpServer[<fld1>].Version changed from '<fld2>' to '<fld3>' by user '<username>' @ '<saddr>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "NtpServer[%{fld1}].Version changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00288:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"action" => "NTP Server Version changed by user"
					"[event][id]" => "00288:01"
					"[rsa][message][id1]" => "00288:01"
					"[event][categoryid]" => "1401050100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId311
	# line in RSA:  NTPserver[<fld1>] destroyed by user '<username>' @ '<saddr>' 
	else if [logstash][msgparser][id] == "msgParserId311" {
		dissect {
			mapping => { "message" => "NTPserver[%{fld1}] destroyed by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId311"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_theme" => "Authentication"
				"action" => "Server destroyed by user"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId312
	# line in RSA:  No response from client - <result> 
	else if [logstash][msgparser][id] == "msgParserId312" {
		dissect {
			mapping => { "message" => "No response from client - %{result}" }
			id => "msgParserId312"
			add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId313
	# line in RSA:  Non-matching <msg> 
	else if [logstash][msgparser][id] == "msgParserId313" {
		dissect {
			mapping => { "message" => "Non-matching %{msg}" }
			id => "msgParserId313"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId314
	# line in RSA:  OPTIONS <url>"
	else if [logstash][msgparser][id] == "msgParserId314" {
		dissect {
			mapping => { "message" => "OPTIONS %{url}\"" }
			id => "msgParserId314"
			add_field => {
				"action" => "OPTIONS"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId315
	# line in RSA:  OSPF Disabled
	else if [logstash][msgparser][id] == "msgParserId315" {
		dissect {
			mapping => { "message" => "OSPF Disabled" }
			id => "msgParserId315"
			add_field => {
				"ec_activity" => "Disable"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId316
	# line in RSA:  Ospf [<fld1>] State change rtid=<saddr> ipa=<daddr> <info>
	else if [logstash][msgparser][id] == "msgParserId316" {
		dissect {
			mapping => { "message" => "Ospf [%{fld1}] State change rtid=%{saddr} ipa=%{daddr} %{info}" }
			id => "msgParserId316"
			add_field => {
				"action" => "Ospf state change"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId317
	# line in RSA:  ObjMgrCls::WriteConfigFile() new configuration file <filename>
	else if [logstash][msgparser][id] == "msgParserId317" {
		dissect {
			mapping => { "message" => "ObjMgrCls::WriteConfigFile() new configuration file %{filename}" }
			id => "msgParserId317"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId318
	# line in RSA:  Opened <msg> 
	else if [logstash][msgparser][id] == "msgParserId318" {
		dissect {
			mapping => { "message" => "Opened %{msg}" }
			id => "msgParserId318"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId319
	# line in RSA:   Ospf_Area[<fld1>] created by user '<username> @ '<saddr>' 
	else if [logstash][msgparser][id] == "msgParserId319" {
		dissect {
			mapping => { "message" => "Ospf_Area[%{fld1}] created by user '%{username} @ '%{saddr}'" }
			id => "msgParserId319"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Ospf_Global" {
		# MESSAGE 00053:00
		# line in RSA:   Ospf_Global.State changed from DISABLED to Enabled by user '<username>' @ <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Ospf_Global.State changed from DISABLED to Enabled by user '%{username}' @ %{saddr}" }
				id => "message-00053:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00053:00"
					"[rsa][message][id1]" => "00053:00"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00054:00
		# line in RSA:  Ospf_Global.State changed from ENABLED to DISABLED by user '<username>' @ <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Ospf_Global.State changed from ENABLED to DISABLED by user '%{username}' @ %{saddr}" }
				id => "message-00054:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00054:00"
					"[rsa][message][id1]" => "00054:00"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00208:00
		# line in RSA:   Ospf_Global.Ospf_RtId changed from '<fld1>' to '<fld2>' by user '<username>' @ '<fld3>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Ospf_Global.Ospf_RtId changed from '%{fld1}' to '%{fld2}' by user '%{username}' @ '%{fld3}'" }
				id => "message-00208:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00208:00"
					"[rsa][message][id1]" => "00208:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId323
	# line in RSA:   POLL <url>"
	else if [logstash][msgparser][id] == "msgParserId323" {
		dissect {
			mapping => { "message" => "POLL %{url}\"" }
			id => "msgParserId323"
			add_field => {
				"action" => "POLL"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId324
	# line in RSA:   POST <url>"
	else if [logstash][msgparser][id] == "msgParserId324" {
		dissect {
			mapping => { "message" => "POST %{url}\"" }
			id => "msgParserId324"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "PPP" {
		# MESSAGE 00422
		# line in RSA:  PPP input: Unknown protocol (<fld30>) received!
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPP input: Unknown protocol (%{fld30}) received!" }
				id => "message-00422"
				add_field => {
				"action" => "Unknown protocol received"
					"[event][id]" => "00422"
					"[rsa][message][id1]" => "00422"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00422:01
		# line in RSA:  PPP::cifaddr(), ipr->TunnelAddrDereg() <fld1> failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPP::cifaddr(), ipr->TunnelAddrDereg() %{fld1} failed" }
				id => "message-00422:01"
				add_field => {
				"action" => "TunnelAddrDereg() failure"
					"[event][id]" => "00422:01"
					"[rsa][message][id1]" => "00422:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId327
	# line in RSA: PppCtxtCls::DemuxProtRej: Unrecognized Protocol-Reject for protocol <fld1> 
	else if [logstash][msgparser][id] == "msgParserId327" {
		dissect {
			mapping => { "message" => "PppCtxtCls::DemuxProtRej: Unrecognized Protocol-Reject for protocol %{fld1}" }
			id => "msgParserId327"
			add_field => {
				"action" => "Unrecognized Protocol-Reject"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "PPTP" {
		# MESSAGE 00303
		# line in RSA:  PPTP [<fld7>] Control Timeout (closing) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPTP [%{fld7}] Control Timeout (closing)" }
				id => "message-00303"
				add_field => {
				"action" => "Control Timeout - closing"
					"[event][id]" => "00303"
					"[rsa][message][id1]" => "00303"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00303:01
		# line in RSA:  PPTP [<fld7>] duplicate tunnel attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPTP [%{fld7}] duplicate tunnel attempt" }
				id => "message-00303:01"
				add_field => {
				"action" => "duplicate tunnel attempt"
					"[event][id]" => "00303:01"
					"[rsa][message][id1]" => "00303:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PPTPcall" {
		# MESSAGE 00308:01
		# line in RSA:  PPTPcall [<fld7>] duplicate tunnel attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPTPcall [%{fld7}] duplicate tunnel attempt" }
				id => "message-00308:01"
				add_field => {
				"action" => "duplicate tunnel attempt"
					"[event][id]" => "00308:01"
					"[rsa][message][id1]" => "00308:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00308
		# line in RSA:  PPTPcall [<fld7>] Control Timeout (closing) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPTPcall [%{fld7}] Control Timeout (closing)" }
				id => "message-00308"
				add_field => {
				"action" => "Control Timeout - closing"
					"[event][id]" => "00308"
					"[rsa][message][id1]" => "00308"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PPTPd" {
		# MESSAGE 00229:00
		# line in RSA:   PPTPd [<fld18>] Started.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPTPd [%{fld18}] Started." }
				id => "message-00229:00"
				add_field => {
					"[event][id]" => "00229:00"
					"[rsa][message][id1]" => "00229:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00229:01
		# line in RSA:   PPTPd [<fld18>] Success getting <fld1> default <fld2> options
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPTPd [%{fld18}] Success getting %{fld1} default %{fld2} options" }
				id => "message-00229:01"
				add_field => {
					"[event][id]" => "00229:01"
					"[rsa][message][id1]" => "00229:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00229:02
		# line in RSA:  PPTPd [<fld7>] duplicate tunnel attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PPTPd [%{fld7}] duplicate tunnel attempt" }
				id => "message-00229:02"
				add_field => {
				"action" => "duplicate tunnel attempt"
					"[event][id]" => "00229:02"
					"[rsa][message][id1]" => "00229:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Policy" {
		# MESSAGE 00209:00
		# line in RSA:   Policy[<protocol>:<fld1>:<fld2>] created by user '<username>' @ '<fld3>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy[%{protocol}:%{fld1}:%{fld2}] created by user '%{username}' @ '%{fld3}'" }
				id => "message-00209:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
					"[event][id]" => "00209:00"
					"[rsa][message][id1]" => "00209:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00209:01
		# line in RSA:   Policy[<protocol>:<fld1>:<fld2>].<fld3> changed from '<fld4>' to '<fld5>' by user '<username>' @ '<fld6>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy[%{protocol}:%{fld1}:%{fld2}].%{fld3} changed from '%{fld4}' to '%{fld5}' by user '%{username}' @ '%{fld6}'" }
				id => "message-00209:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00209:01"
					"[rsa][message][id1]" => "00209:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00209:02
		# line in RSA:   Policy Based Firewall disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Policy Based Firewall disabled" }
				id => "message-00209:02"
				add_field => {
				"ec_activity" => "Disable"
					"[event][id]" => "00209:02"
					"[rsa][message][id1]" => "00209:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PppIntf" {
		# MESSAGE 00210:00
		# line in RSA:   PppIntf[<fld1>] created by user '<username>' @ '<fld2>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PppIntf[%{fld1}] created by user '%{username}' @ '%{fld2}'" }
				id => "message-00210:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
					"[event][id]" => "00210:00"
					"[rsa][message][id1]" => "00210:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00210:01
		# line in RSA:   PppIntf[<fld1>].<fld2> changed from '<fld3>' to '<fld4>' by user '<username>' @ '<fld5>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "PppIntf[%{fld1}].%{fld2} changed from '%{fld3}' to '%{fld4}' by user '%{username}' @ '%{fld5}'" }
				id => "message-00210:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00210:01"
					"[rsa][message][id1]" => "00210:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId340
	# line in RSA:  Pwd Server: Connect with no recieve. 
	else if [logstash][msgparser][id] == "msgParserId340" {
		dissect {
			mapping => { "message" => "Pwd Server: Connect with no recieve." }
			id => "msgParserId340"
			add_field => {
				"action" => "Connect with no recieve"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId341
	# line in RSA:   PROPFIND <url>"
	else if [logstash][msgparser][id] == "msgParserId341" {
		dissect {
			mapping => { "message" => "PROPFIND %{url}\"" }
			id => "msgParserId341"
			add_field => {
				"action" => "PROPFIND"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId342
	# line in RSA:  PROPPATCH <url>"
	else if [logstash][msgparser][id] == "msgParserId342" {
		dissect {
			mapping => { "message" => "PROPPATCH %{url}\"" }
			id => "msgParserId342"
			add_field => {
				"action" => "PROPPATCH"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId343
	# line in RSA:  RADIUS Server Task [<fld1>] tRadiusServer: Shutting down RADIUS Service.
	else if [logstash][msgparser][id] == "msgParserId343" {
		dissect {
			mapping => { "message" => "RADIUS Server Task [%{fld1}] tRadiusServer: Shutting down RADIUS Service." }
			id => "msgParserId343"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId344
	# line in RSA:  RIP <msg> 
	else if [logstash][msgparser][id] == "msgParserId344" {
		dissect {
			mapping => { "message" => "RIP %{msg}" }
			id => "msgParserId344"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "RTM" {
		# MESSAGE 00218:00
		# line in RSA:  RTM [<fld18>] RTM Component Initialization Complete 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RTM [%{fld18}] RTM Component Initialization Complete" }
				id => "message-00218:00"
				add_field => {
					"[event][id]" => "00218:00"
					"[rsa][message][id1]" => "00218:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00218:01
		# line in RSA:  RTM [<fld18>] { RTM | FEM Update | Garbage Collection } Task Initialization Complete 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*RTM[\s]+\[(?<fld18>[^\]]*)\][\s]+([\s]*RTM[\s]+|[\s]*FEM[\s]+Update[\s]+|[\s]*Garbage[\s]+Collection[\s]+)[\s]+Task[\s]+Initialization[\s]+Complete[\s]+$" }
				id => "message-00218:01"
				add_field => {
					"[event][id]" => "00218:01"
					"[rsa][message][id1]" => "00218:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00159:00
		# line in RSA:  RTM <msg>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RTM %{msg}" }
				id => "message-00159:00"
				add_field => {
					"[event][id]" => "00159:00"
					"[rsa][message][id1]" => "00159:00"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "RadiusServerTaskAlarm:" {
		# MESSAGE 00235:00
		# line in RSA:   RadiusServerTaskAlarm: RadiusServerTaskAlarm. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RadiusServerTaskAlarm: RadiusServerTaskAlarm." }
				id => "message-00235:00"
				add_field => {
					"[event][id]" => "00235:00"
					"[rsa][message][id1]" => "00235:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00235:01
		# line in RSA:   RadiusServerTaskAlarm: SysInitCls Init Complete.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "RadiusServerTaskAlarm: SysInitCls Init Complete." }
				id => "message-00235:01"
				add_field => {
					"[event][id]" => "00235:01"
					"[rsa][message][id1]" => "00235:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId350
	# line in RSA:  Reboots.Reason[<fld1>] created by user '<username>' @ '<saddr>' 
	else if [logstash][msgparser][id] == "msgParserId350" {
		dissect {
			mapping => { "message" => "Reboots.Reason[%{fld1}] created by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId350"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Authentication"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId351
	# line in RSA:  Received <msg> 
	else if [logstash][msgparser][id] == "msgParserId351" {
		dissect {
			mapping => { "message" => "Received %{msg}" }
			id => "msgParserId351"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId352
	# line in RSA:  Renamed configuration file <filename> 
	else if [logstash][msgparser][id] == "msgParserId352" {
		dissect {
			mapping => { "message" => "Renamed configuration file %{filename}" }
			id => "msgParserId352"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Rip" {
		# MESSAGE 00231:00
		# line in RSA:   Rip [<fld7>] Initialization Memory for <fld1> routes 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rip [%{fld7}] Initialization Memory for %{fld1} routes" }
				id => "message-00231:00"
				add_field => {
					"[event][id]" => "00231:00"
					"[rsa][message][id1]" => "00231:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00231:01
		# line in RSA:  Rip [<fld1>] Circuit[<fld2>] { marked for delete |  created. | deleted } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Rip[\s]+\[(?<fld1>[^\]]*)\][\s]+Circuit\[(?<fld2>[^\]]*)\][\s]+([\s]*marked[\s]+for[\s]+delete[\s]+|[\s]*created\.[\s]+|[\s]*deleted[\s]+)[\s]+$" }
				id => "message-00231:01"
				add_field => {
				"action" => "Circuit marked create/deleted/marked for delete"
					"[event][id]" => "00231:01"
					"[rsa][message][id1]" => "00231:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00231:02
		# line in RSA: Rip [<fld1>] Rcv UP event from cid[<fld2>], ip:[<saddr>], mask:[<smask> rip enabled <fld41>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Rip [%{fld1}] Rcv UP event from cid[%{fld2}], ip:[%{saddr}], mask:[%{smask} rip enabled %{fld41}" }
				id => "message-00231:02"
				add_field => {
				"action" => "Rip Rcv UP event - rip enabled"
					"[event][id]" => "00231:02"
					"[rsa][message][id1]" => "00231:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId355
	# line in RSA: Response OK 
	else if [logstash][msgparser][id] == "msgParserId355" {
		dissect {
			mapping => { "message" => "Response OK" }
			id => "msgParserId355"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId357
	# line in RSA:   SEARCH <url>"
	else if [logstash][msgparser][id] == "msgParserId357" {
		dissect {
			mapping => { "message" => "SEARCH %{url}\"" }
			id => "msgParserId357"
			add_field => {
				"action" => "SEARCH"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SNMP" {
		# MESSAGE 00187:00
		# line in RSA: <fld1>  SNMP Authentication Failure on { Get Next | Get } request from host <saddr> using community string 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+SNMP[\s]+Authentication[\s]+Failure[\s]+on[\s]+([\s]*Get[\s]+Next[\s]+|[\s]*Get[\s]+)[\s]+request[\s]+from[\s]+host[\s]+(?<saddr>[^\s]*)[\s]+using[\s]+community[\s]+string[\s]+$" }
				id => "message-00187:00"
				add_field => {
					"[event][id]" => "00187:00"
					"[rsa][message][id1]" => "00187:00"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00187:01
		# line in RSA:  SNMP Cold Start Trap issued. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMP Cold Start Trap issued." }
				id => "message-00187:01"
				add_field => {
					"[event][id]" => "00187:01"
					"[rsa][message][id1]" => "00187:01"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00187:02
		# line in RSA:  SNMP Sent Link { Up | Down } trap for interface <interface> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*SNMP[\s]+Sent[\s]+Link[\s]+([\s]*Up[\s]+|[\s]*Down[\s]+)[\s]+trap[\s]+for[\s]+interface[\s]+(?<interface>[^\s]*)[\s]+$" }
				id => "message-00187:02"
				add_field => {
					"[event][id]" => "00187:02"
					"[rsa][message][id1]" => "00187:02"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00187:03
		# line in RSA:   SNMP Power Up Trap issued.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMP Power Up Trap issued." }
				id => "message-00187:03"
				add_field => {
				"action" => "SNMP Power Up Trap issued"
					"[event][id]" => "00187:03"
					"[rsa][message][id1]" => "00187:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SNMPTraps" {
		# MESSAGE 00188:00
		# line in RSA:  SNMPTraps [<fld1>] Server Down.  <info>. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] Server Down.  %{info}." }
				id => "message-00188:00"
				add_field => {
				"scheme" => "Server down"
					"[event][id]" => "00188:00"
					"[rsa][message][id1]" => "00188:00"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:01
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Hard Disk <fld30>: Utilization exceeds <fld7> on <fld8> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} Hard Disk %{fld30}: Utilization exceeds %{fld7} on %{fld8}" }
				id => "message-00188:01"
				add_field => {
					"[event][id]" => "00188:01"
					"[rsa][message][id1]" => "00188:01"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:02
		# line in RSA:  SNMPTraps [<fld1>] <fld2> RADIUS Authentication Servers: { One/more Radius Servers |  Radius Servers } are not available 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*SNMPTraps[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<fld2>[^\s]*)[\s]+RADIUS[\s]+Authentication[\s]+Servers:[\s]+([\s]*One/more[\s]+Radius[\s]+Servers[\s]+|[\s]*Radius[\s]+Servers[\s]+)[\s]+are[\s]+not[\s]+available[\s]+$" }
				id => "message-00188:02"
				add_field => {
				"action" => "Radius Servers are not available"
					"[event][id]" => "00188:02"
					"[rsa][message][id1]" => "00188:02"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:03
		# line in RSA: SNMPTraps [<fld1>] <fld2> Anti-Spoofing:  Anti-Spoofing Disabled <fld3>; 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} Anti-Spoofing:  Anti-Spoofing Disabled %{fld3};" }
				id => "message-00188:03"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "Anti-Spoofing Disabled"
					"[event][id]" => "00188:03"
					"[rsa][message][id1]" => "00188:03"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:04
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Certificates Validity: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} Certificates Validity: %{info}" }
				id => "message-00188:04"
				add_field => {
				"action" => "No certificate defined"
					"[event][id]" => "00188:04"
					"[rsa][message][id1]" => "00188:04"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:05
		# line in RSA:  SNMPTraps [<fld1>] <fld2> SNMP Servers: Server(s) Unavailable; 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} SNMP Servers: Server(s) Unavailable;" }
				id => "message-00188:05"
				add_field => {
				"action" => "Server(s) Unavailable;"
					"[event][id]" => "00188:05"
					"[rsa][message][id1]" => "00188:05"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:06
		# line in RSA:  SNMPTraps [<fld1>] <fld2> LAN on Slot <fld3> Interface <interface>: Device fei1 disabled; 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} LAN on Slot %{fld3} Interface %{interface}: Device fei1 disabled;" }
				id => "message-00188:06"
				add_field => {
				"ec_activity" => "Disable"
					"[event][id]" => "00188:06"
					"[rsa][message][id1]" => "00188:06"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:07
		# line in RSA:   SNMPTraps [<fld1>] <fld2> DHCP Server: DHCP Server Disabled; 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} DHCP Server: DHCP Server Disabled;" }
				id => "message-00188:07"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "Server(s) Unavailable;"
					"[event][id]" => "00188:07"
					"[rsa][message][id1]" => "00188:07"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:08
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Internal LDAP Server: {Server is down; | Backup in progress;} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*SNMPTraps[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<fld2>[^\s]*)[\s]+Internal[\s]+LDAP[\s]+Server:[\s]+(Server[\s]+is[\s]+down;[\s]+|[\s]*Backup[\s]+in[\s]+progress;)[\s]+$" }
				id => "message-00188:08"
				add_field => {
					"[event][id]" => "00188:08"
					"[rsa][message][id1]" => "00188:08"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:09
		# line in RSA:  SNMPTraps [<fld1>] <fld2> DNS Servers: <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} DNS Servers: %{info}" }
				id => "message-00188:09"
				add_field => {
					"[event][id]" => "00188:09"
					"[rsa][message][id1]" => "00188:09"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:10
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Firewall: Firewall disabled;  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} Firewall: Firewall disabled;" }
				id => "message-00188:10"
				add_field => {
					"[event][id]" => "00188:10"
					"[rsa][message][id1]" => "00188:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:11
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Auto Backup Servers: { Can't backup to <daddr> | Backup in progress.; } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*SNMPTraps[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<fld2>[^\s]*)[\s]+Auto[\s]+Backup[\s]+Servers:[\s]+([\s]*Can't[\s]+backup[\s]+to[\s]+(?<daddr>[^\s]*)[\s]+|[\s]*Backup[\s]+in[\s]+progress\.;[\s]+)[\s]+$" }
				id => "message-00188:11"
				add_field => {
				"action" => "cannot backup"
					"[event][id]" => "00188:11"
					"[rsa][message][id1]" => "00188:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:12
		# line in RSA:  SNMPTraps [<fld1>] <fld2> RADIUS Accounting Server: Radius Accounting server unavailable 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} RADIUS Accounting Server: Radius Accounting server unavailable" }
				id => "message-00188:12"
				add_field => {
				"action" => "Radius Accounting server unavailable"
					"[event][id]" => "00188:12"
					"[rsa][message][id1]" => "00188:12"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:19
		# line in RSA:  SNMPTraps [<fld1>] <fld2> RADIUS Accounting Server: Configured; 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} RADIUS Accounting Server: Configured;" }
				id => "message-00188:19"
				add_field => {
				"action" => "Server(s) Configured"
					"[event][id]" => "00188:19"
					"[rsa][message][id1]" => "00188:19"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:13
		# line in RSA:  SNMPTraps [<fld1>] <fld2> External LDAP Servers: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} External LDAP Servers: %{info}" }
				id => "message-00188:13"
				add_field => {
					"[event][id]" => "00188:13"
					"[rsa][message][id1]" => "00188:13"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:14
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Memory Usage: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} Memory Usage: %{info}" }
				id => "message-00188:14"
				add_field => {
					"[event][id]" => "00188:14"
					"[rsa][message][id1]" => "00188:14"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:15
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Internal LDAP Server: Operational; 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} Internal LDAP Server: Operational;" }
				id => "message-00188:15"
				add_field => {
					"[event][id]" => "00188:15"
					"[rsa][message][id1]" => "00188:15"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:16
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Network Time Protocol: Time set;
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} Network Time Protocol: Time set;" }
				id => "message-00188:16"
				add_field => {
					"[event][id]" => "00188:16"
					"[rsa][message][id1]" => "00188:16"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:17
		# line in RSA:  SNMPTraps [<fld1>] <fld2> Bulk Accelerator in slot <fld3>: Unit <fld4> Status <status> - DISABLED;
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] %{fld2} Bulk Accelerator in slot %{fld3}: Unit %{fld4} Status %{status} - DISABLED;" }
				id => "message-00188:17"
				add_field => {
					"[event][id]" => "00188:17"
					"[rsa][message][id1]" => "00188:17"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:18
		# line in RSA:  SNMPTraps [<fld1>] <fld2> { RADIUS Authentication | SNMP } Servers: Operational 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*SNMPTraps[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<fld2>[^\s]*)[\s]+([\s]*RADIUS[\s]+Authentication[\s]+|[\s]*SNMP[\s]+)[\s]+Servers:[\s]+Operational[\s]+$" }
				id => "message-00188:18"
				add_field => {
				"action" => "Server(s) Operational"
					"[event][id]" => "00188:18"
					"[rsa][message][id1]" => "00188:18"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:20
		# line in RSA:  SNMPTraps [<fld1>] Server back up 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}] Server back up" }
				id => "message-00188:20"
				add_field => {
				"scheme" => "Server back up"
					"[event][id]" => "00188:20"
					"[rsa][message][id1]" => "00188:20"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:21
		# line in RSA:  SNMPTraps [<fld1>]  Sending a ospf trap with oid as: <fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}]  Sending a ospf trap with oid as: %{fld2}" }
				id => "message-00188:21"
				add_field => {
					"[event][id]" => "00188:21"
					"[rsa][message][id1]" => "00188:21"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00188:22
		# line in RSA:  SNMPTraps [<fld1>]  <fld2> <fld3> <fld4> RADIUS Authentication Servers: <action> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SNMPTraps [%{fld1}]  %{fld2} %{fld3} %{fld4} RADIUS Authentication Servers: %{action}" }
				id => "message-00188:22"
				add_field => {
				"ec_activity" => "Enable"
					"[event][id]" => "00188:22"
					"[rsa][message][id1]" => "00188:22"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "SOCKS" {
		# MESSAGE 00410:01
		# line in RSA:  SOCKS Rejected Vpn="<fld1>" User="<username>"SrcIP="<saddr>" Request="<web_method> <url>:<sport>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SOCKS Rejected Vpn=\"%{fld1}\" User=\"%{username}\"SrcIP=\"%{saddr}\" Request=\"%{web_method} %{url}:%{sport}\"" }
				id => "message-00410:01"
				add_field => {
				"ec_activity" => "Deny"
				"action" => "SOCKS rejected Vpn session"
					"[event][id]" => "00410:01"
					"[rsa][message][id1]" => "00410:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00410
		# line in RSA:  SOCKS Vpn="<fld1>" User="<username>" SrcIP="<saddr>" Request="<web_method> <url>:<sport>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SOCKS Vpn=\"%{fld1}\" User=\"%{username}\" SrcIP=\"%{saddr}\" Request=\"%{web_method} %{url}:%{sport}\"" }
				id => "message-00410"
				add_field => {
				"action" => "SOCKS accepted Vpn session"
					"[event][id]" => "00410"
					"[rsa][message][id1]" => "00410"
					"[event][categoryid]" => "1801020100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00410:02
		# line in RSA:  SOCKS Vpn="<fld1>" User="<username>" SrcIP="<saddr>" Request="<web_method> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SOCKS Vpn=\"%{fld1}\" User=\"%{username}\" SrcIP=\"%{saddr}\" Request=\"%{web_method}" }
				id => "message-00410:02"
				add_field => {
				"action" => "SOCKS accepted Vpn session"
					"[event][id]" => "00410:02"
					"[rsa][message][id1]" => "00410:02"
					"[event][categoryid]" => "1801020100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId387
	# line in RSA:   SUBSCRIBE <url>"
	else if [logstash][msgparser][id] == "msgParserId387" {
		dissect {
			mapping => { "message" => "SUBSCRIBE %{url}\"" }
			id => "msgParserId387"
			add_field => {
				"action" => "SUBSCRIBE"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Security" {
		# MESSAGE 00069:00
		# line in RSA:   Security [<fld18>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld1>, l=<fld2>, st=<fld3>, c=<fld4>] attempting login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld1}, l=%{fld2}, st=%{fld3}, c=%{fld4}] attempting login" }
				id => "message-00069:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user attempting login"
					"[event][id]" => "00069:00"
					"[rsa][message][id1]" => "00069:00"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:01
		# line in RSA:  Security [<fld18>] Session: <protocol>[cn=<username>(vpn), o=<fld1>, l=<fld2>, st=<fld3>, c=<fld4>] attempting login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld1}, l=%{fld2}, st=%{fld3}, c=%{fld4}] attempting login" }
				id => "message-00069:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user attempting login"
					"[event][id]" => "00069:01"
					"[rsa][message][id1]" => "00069:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:02
		# line in RSA:   Security [<fld1>] Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld2>, c=<fld3>] attempting login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld2}, c=%{fld3}] attempting login" }
				id => "message-00069:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user attempting login"
					"[event][id]" => "00069:02"
					"[rsa][message][id1]" => "00069:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:03
		# line in RSA:   Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>] attempting login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}] attempting login" }
				id => "message-00069:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user attempting login"
					"[event][id]" => "00069:03"
					"[rsa][message][id1]" => "00069:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>] attempting login
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}] attempting login" }
				id => "message-00069:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user attempting login"
					"[event][id]" => "00069:04"
					"[rsa][message][id1]" => "00069:04"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>] attempting login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}] attempting login" }
				id => "message-00069:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user attempting login"
					"[event][id]" => "00069:05"
					"[rsa][message][id1]" => "00069:05"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>] attempting login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}] attempting login" }
				id => "message-00069:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user attempting login"
					"[event][id]" => "00069:06"
					"[rsa][message][id1]" => "00069:06"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:07
		# line in RSA: Security [<fld1>] Session: <protocol>[<saddr>-<mask>] { attempting login | logged in from gateway [<daddr>] } 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+Session:[\s]+(?<protocol>[^\[]*)\[(?<saddr>[^\-]*)\-(?<mask>[^\]]*)\][\s]+([\s]*attempting[\s]+login[\s]+|[\s]*logged[\s]+in[\s]+from[\s]+gateway[\s]+\[(?<daddr>[^\]]*)\][\s]+)[\s]+$" }
				id => "message-00069:07"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "attempting login"
					"[event][id]" => "00069:07"
					"[rsa][message][id1]" => "00069:07"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:08
		# line in RSA:  Security [<fld18>] Session: <protocol>[<fld1>] logged into group <group> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}] logged into group %{group}" }
				id => "message-00069:08"
				add_field => {
					"[event][id]" => "00069:08"
					"[rsa][message][id1]" => "00069:08"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:09
		# line in RSA:  Security [<fld18>] Session: <protocol>[<username>] attempting login 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{username}] attempting login" }
				id => "message-00069:09"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00069:09"
					"[rsa][message][id1]" => "00069:09"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00069:10
		# line in RSA:  Security [<fld18>] Session: <protocol>[<username>]:<fld1> login by using <fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{username}]:%{fld1} login by using %{fld2}" }
				id => "message-00069:10"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00069:10"
					"[rsa][message][id1]" => "00069:10"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> authenticated using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} authenticated using %{authmethod}" }
				id => "message-00070:00"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00070:00"
					"[rsa][message][id1]" => "00070:00"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> authenticated using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} authenticated using %{authmethod}" }
				id => "message-00070:01"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00070:01"
					"[rsa][message][id1]" => "00070:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld2>, c=<fld3>]: <fld4> authenticated using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld2}, c=%{fld3}]: %{fld4} authenticated using %{authmethod}" }
				id => "message-00070:02"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00070:02"
					"[rsa][message][id1]" => "00070:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> authenticated using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} authenticated using %{authmethod}" }
				id => "message-00070:03"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00070:03"
					"[rsa][message][id1]" => "00070:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> authenticated using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} authenticated using %{authmethod}" }
				id => "message-00070:04"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00070:04"
					"[rsa][message][id1]" => "00070:04"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:05
		# line in RSA:   Security [<fld1>] Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld2>, c=<fld3>]: <fld4> authenticated using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld2}, c=%{fld3}]: %{fld4} authenticated using %{authmethod}" }
				id => "message-00070:05"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"action" => "user authenticated"
					"[event][id]" => "00070:05"
					"[rsa][message][id1]" => "00070:05"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> authenticated using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} authenticated using %{authmethod}" }
				id => "message-00070:06"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00070:06"
					"[rsa][message][id1]" => "00070:06"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:07
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld10> authenticated using <authmethod>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld10} authenticated using %{authmethod}" }
				id => "message-00070:07"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00070:07"
					"[rsa][message][id1]" => "00070:07"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:08
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld10> authenticated using <authmethod>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld10} authenticated using %{authmethod}" }
				id => "message-00070:08"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00070:08"
					"[rsa][message][id1]" => "00070:08"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00070:09
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>]:<fld10> authentication challenge received from <authmethod>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}]:%{fld10} authentication challenge received from %{authmethod}" }
				id => "message-00070:09"
				add_field => {
					"[event][id]" => "00070:09"
					"[rsa][message][id1]" => "00070:09"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:00
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld1>, l=<fld2>, st=<fld3>, c=<fld4>]: <fld5> authorized 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld1}, l=%{fld2}, st=%{fld3}, c=%{fld4}]: %{fld5} authorized" }
				id => "message-00071:00"
				add_field => {
					"[event][id]" => "00071:00"
					"[rsa][message][id1]" => "00071:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:01
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>(vpn), o=<fld1>, l=<fld2>, st=<fld3>, c=<fld4>] <fld5> authorized 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld1}, l=%{fld2}, st=%{fld3}, c=%{fld4}] %{fld5} authorized" }
				id => "message-00071:01"
				add_field => {
					"[event][id]" => "00071:01"
					"[rsa][message][id1]" => "00071:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld2>, c=<fld3>]: <fld4> authorized 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld2}, c=%{fld3}]: %{fld4} authorized" }
				id => "message-00071:02"
				add_field => {
					"[event][id]" => "00071:02"
					"[rsa][message][id1]" => "00071:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> authorized 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} authorized" }
				id => "message-00071:03"
				add_field => {
					"[event][id]" => "00071:03"
					"[rsa][message][id1]" => "00071:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> authorized 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} authorized" }
				id => "message-00071:04"
				add_field => {
					"[event][id]" => "00071:04"
					"[rsa][message][id1]" => "00071:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:05
		# line in RSA: Security [<fld1>] Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld2>, c=<fld3>]: <fld4> authorized 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld2}, c=%{fld3}]: %{fld4} authorized" }
				id => "message-00071:05"
				add_field => {
				"action" => "user authorized"
					"[event][id]" => "00071:05"
					"[rsa][message][id1]" => "00071:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> authorized 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} authorized" }
				id => "message-00071:06"
				add_field => {
					"[event][id]" => "00071:06"
					"[rsa][message][id1]" => "00071:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:07
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> authorized
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} authorized" }
				id => "message-00071:07"
				add_field => {
					"[event][id]" => "00071:07"
					"[rsa][message][id1]" => "00071:07"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00071:08
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> authorized
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} authorized" }
				id => "message-00071:08"
				add_field => {
					"[event][id]" => "00071:08"
					"[rsa][message][id1]" => "00071:08"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} bound to group %{info}" }
				id => "message-00072:00"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:00"
					"[rsa][message][id1]" => "00072:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} bound to group %{info}" }
				id => "message-00072:01"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:01"
					"[rsa][message][id1]" => "00072:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:02
		# line in RSA:   Security [<fld1>] Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld2>, c=<fld3>]: <fld4> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld2}, c=%{fld3}]: %{fld4} bound to group %{info}" }
				id => "message-00072:02"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:02"
					"[rsa][message][id1]" => "00072:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} bound to group %{info}" }
				id => "message-00072:03"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:03"
					"[rsa][message][id1]" => "00072:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} bound to group %{info}" }
				id => "message-00072:04"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:04"
					"[rsa][message][id1]" => "00072:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld2>, c=<fld3>]: <fld4> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld2}, c=%{fld3}]: %{fld4} bound to group %{info}" }
				id => "message-00072:05"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:05"
					"[rsa][message][id1]" => "00072:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} bound to group %{info}" }
				id => "message-00072:06"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:06"
					"[rsa][message][id1]" => "00072:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:07
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} bound to group %{info}" }
				id => "message-00072:07"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:07"
					"[rsa][message][id1]" => "00072:07"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00072:08
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld2> bound to group <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} bound to group %{info}" }
				id => "message-00072:08"
				add_field => {
				"action" => "user bound to group"
					"[event][id]" => "00072:08"
					"[rsa][message][id1]" => "00072:08"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00073:00
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=nortel vpn (<username>) <fld1>]: <fld10> server right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=nortel vpn (%{username}) %{fld1}]: %{fld10} server right: %{result}" }
				id => "message-00073:00"
				add_field => {
					"[event][id]" => "00073:00"
					"[rsa][message][id1]" => "00073:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00073:01
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>(vpn), <fld1>]: <fld10> server right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}(vpn), %{fld1}]: %{fld10} server right: %{result}" }
				id => "message-00073:01"
				add_field => {
					"[event][id]" => "00073:01"
					"[rsa][message][id1]" => "00073:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00073:02
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>, <fld1>]: <fld10> server right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}, %{fld1}]: %{fld10} server right: %{result}" }
				id => "message-00073:02"
				add_field => {
					"[event][id]" => "00073:02"
					"[rsa][message][id1]" => "00073:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00073:03
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>]: <fld10> server right: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}]: %{fld10} server right: %{result}" }
				id => "message-00073:03"
				add_field => {
					"[event][id]" => "00073:03"
					"[rsa][message][id1]" => "00073:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00073:04
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>, <fld2>]: <fld10> server right: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}, %{fld2}]: %{fld10} server right: %{result}" }
				id => "message-00073:04"
				add_field => {
					"[event][id]" => "00073:04"
					"[rsa][message][id1]" => "00073:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00073:05
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>]: <fld10> server right: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}]: %{fld10} server right: %{result}" }
				id => "message-00073:05"
				add_field => {
					"[event][id]" => "00073:05"
					"[rsa][message][id1]" => "00073:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00073:06
		# line in RSA: Security [<fld18>] Session: <protocol>[<username>]: <fld10> server right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{username}]: %{fld10} server right: %{result}" }
				id => "message-00073:06"
				add_field => {
					"[event][id]" => "00073:06"
					"[rsa][message][id1]" => "00073:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00074:00
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=nortel vpn (<username>) <fld1>]: <fld10> user/group right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=nortel vpn (%{username}) %{fld1}]: %{fld10} user/group right: %{result}" }
				id => "message-00074:00"
				add_field => {
					"[event][id]" => "00074:00"
					"[rsa][message][id1]" => "00074:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00074:01
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>(vpn), <fld1>]: <fld10> user/group right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}(vpn), %{fld1}]: %{fld10} user/group right: %{result}" }
				id => "message-00074:01"
				add_field => {
					"[event][id]" => "00074:01"
					"[rsa][message][id1]" => "00074:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00074:02
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>, <fld1>]: <fld10> user/group right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}, %{fld1}]: %{fld10} user/group right: %{result}" }
				id => "message-00074:02"
				add_field => {
					"[event][id]" => "00074:02"
					"[rsa][message][id1]" => "00074:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00074:03
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>]: <fld10> user/group right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}]: %{fld10} user/group right: %{result}" }
				id => "message-00074:03"
				add_field => {
					"[event][id]" => "00074:03"
					"[rsa][message][id1]" => "00074:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00074:04
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>, <fld2>]: <fld10> user/group right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}, %{fld2}]: %{fld10} user/group right: %{result}" }
				id => "message-00074:04"
				add_field => {
					"[event][id]" => "00074:04"
					"[rsa][message][id1]" => "00074:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00074:05
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>]: <fld10> user/group right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}]: %{fld10} user/group right: %{result}" }
				id => "message-00074:05"
				add_field => {
					"[event][id]" => "00074:05"
					"[rsa][message][id1]" => "00074:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00074:06
		# line in RSA: Security [<fld18>] Session: <protocol>[<username>]: <fld10> user/group right: <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{username}]: %{fld10} user/group right: %{result}" }
				id => "message-00074:06"
				add_field => {
					"[event][id]" => "00074:06"
					"[rsa][message][id1]" => "00074:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00075:00
		# line in RSA: Security [<fld18>] RADIUS: <username> access DENIED by server <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] RADIUS: %{username} access DENIED by server %{saddr}" }
				id => "message-00075:00"
				add_field => {
					"[event][id]" => "00075:00"
					"[rsa][message][id1]" => "00075:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:00
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=nortel vpn (<username>) <fld1>]: <fld10> IP address assignment failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=nortel vpn (%{username}) %{fld1}]: %{fld10} IP address assignment failed" }
				id => "message-00076:00"
				add_field => {
					"[event][id]" => "00076:00"
					"[rsa][message][id1]" => "00076:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:01
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>(vpn), <fld1>]: <fld10> IP address assignment failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}(vpn), %{fld1}]: %{fld10} IP address assignment failed" }
				id => "message-00076:01"
				add_field => {
					"[event][id]" => "00076:01"
					"[rsa][message][id1]" => "00076:01"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:02
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>, <fld1>]: <fld10> IP address assignment failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}, %{fld1}]: %{fld10} IP address assignment failed" }
				id => "message-00076:02"
				add_field => {
					"[event][id]" => "00076:02"
					"[rsa][message][id1]" => "00076:02"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:03
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>]: <fld10> IP address assignment failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}]: %{fld10} IP address assignment failed" }
				id => "message-00076:03"
				add_field => {
					"[event][id]" => "00076:03"
					"[rsa][message][id1]" => "00076:03"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:04
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>, <fld2>]: <fld10> IP address assignment failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}, %{fld2}]: %{fld10} IP address assignment failed" }
				id => "message-00076:04"
				add_field => {
					"[event][id]" => "00076:04"
					"[rsa][message][id1]" => "00076:04"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:05
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>]: <fld10> IP address assignment failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}]: %{fld10} IP address assignment failed" }
				id => "message-00076:05"
				add_field => {
					"[event][id]" => "00076:05"
					"[rsa][message][id1]" => "00076:05"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00076:06
		# line in RSA: Security [<fld18>] Session: <protocol>[<username>]: <fld10> IP address assignment failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{username}]: %{fld10} IP address assignment failed" }
				id => "message-00076:06"
				add_field => {
					"[event][id]" => "00076:06"
					"[rsa][message][id1]" => "00076:06"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00077:00
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=nortel vpn (<username>) <fld1>]: <fld10> Management: logged in from <saddr> Server Rights: <fld2> User Rights: <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=nortel vpn (%{username}) %{fld1}]: %{fld10} Management: logged in from %{saddr} Server Rights: %{fld2} User Rights: %{fld3}" }
				id => "message-00077:00"
				add_field => {
					"[event][id]" => "00077:00"
					"[rsa][message][id1]" => "00077:00"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00077:01
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>(vpn), <fld1>]: <fld10> Management: logged in from <saddr> Server Rights: <fld2> User Rights: <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}(vpn), %{fld1}]: %{fld10} Management: logged in from %{saddr} Server Rights: %{fld2} User Rights: %{fld3}" }
				id => "message-00077:01"
				add_field => {
					"[event][id]" => "00077:01"
					"[rsa][message][id1]" => "00077:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00077:02
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>, <fld1>]: <fld10> Management: logged in from <saddr> Server Rights: <fld2> User Rights: <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}, %{fld1}]: %{fld10} Management: logged in from %{saddr} Server Rights: %{fld2} User Rights: %{fld3}" }
				id => "message-00077:02"
				add_field => {
					"[event][id]" => "00077:02"
					"[rsa][message][id1]" => "00077:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00077:03
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>]: <fld10> Management: logged in from <saddr> Server Rights: <fld1> User Rights: <fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}]: %{fld10} Management: logged in from %{saddr} Server Rights: %{fld1} User Rights: %{fld2}" }
				id => "message-00077:03"
				add_field => {
					"[event][id]" => "00077:03"
					"[rsa][message][id1]" => "00077:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00077:04
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>, <fld2>]: <fld10> Management: logged in from <saddr> Server Rights: <fld3> User Rights: <fld4> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}, %{fld2}]: %{fld10} Management: logged in from %{saddr} Server Rights: %{fld3} User Rights: %{fld4}" }
				id => "message-00077:04"
				add_field => {
					"[event][id]" => "00077:04"
					"[rsa][message][id1]" => "00077:04"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00077:05
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>]: <fld10> Management: logged in from <saddr> Server Rights: <fld2> User Rights: <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}]: %{fld10} Management: logged in from %{saddr} Server Rights: %{fld2} User Rights: %{fld3}" }
				id => "message-00077:05"
				add_field => {
					"[event][id]" => "00077:05"
					"[rsa][message][id1]" => "00077:05"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00077:06
		# line in RSA: Security [<fld18>] Session: <protocol>[<username>]: <fld10> Management: logged in from <saddr> Server Rights: <fld1> User Rights: <fld2> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{username}]: %{fld10} Management: logged in from %{saddr} Server Rights: %{fld1} User Rights: %{fld2}" }
				id => "message-00077:06"
				add_field => {
					"[event][id]" => "00077:06"
					"[rsa][message][id1]" => "00077:06"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:00
		# line in RSA:  Security [<fld18>] Session: <protocol>[cn=nortel vpn (<username>) <fld1>]: <fld10> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=nortel vpn (%{username}) %{fld1}]: %{fld10} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:00"
				add_field => {
					"[event][id]" => "00078:00"
					"[rsa][message][id1]" => "00078:00"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:01
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>(vpn), <fld1>]: <fld10> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}(vpn), %{fld1}]: %{fld10} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:01"
				add_field => {
					"[event][id]" => "00078:01"
					"[rsa][message][id1]" => "00078:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:02
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, <fld1>]: <fld10> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, %{fld1}]: %{fld10} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:02"
				add_field => {
					"[event][id]" => "00078:02"
					"[rsa][message][id1]" => "00078:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, <fld2>]: <fld10> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, %{fld2}]: %{fld10} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:03"
				add_field => {
					"[event][id]" => "00078:03"
					"[rsa][message][id1]" => "00078:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:04
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld10> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld10} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:04"
				add_field => {
					"[event][id]" => "00078:04"
					"[rsa][message][id1]" => "00078:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:05"
				add_field => {
				"action" => "user assigned IP address"
					"[event][id]" => "00078:05"
					"[rsa][message][id1]" => "00078:05"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:06"
				add_field => {
					"[event][id]" => "00078:06"
					"[rsa][message][id1]" => "00078:06"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:07
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:07"
				add_field => {
					"[event][id]" => "00078:07"
					"[rsa][message][id1]" => "00078:07"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00078:08
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld3> assigned IP address <saddr>, mask <smask> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld3} assigned IP address %{saddr}, mask %{smask}" }
				id => "message-00078:08"
				add_field => {
				"saddr" => "%{saddr}"
					"[event][id]" => "00078:08"
					"[rsa][message][id1]" => "00078:08"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} logged out" }
				id => "message-00079:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:00"
					"[rsa][message][id1]" => "00079:00"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} logged out" }
				id => "message-00079:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:01"
					"[rsa][message][id1]" => "00079:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:02
		# line in RSA: Security [<fld1>] Session <fld2>: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> sib <fld6> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session %{fld2}: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} sib %{fld6} logged out" }
				id => "message-00079:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:02"
					"[rsa][message][id1]" => "00079:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld10> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld10} logged out" }
				id => "message-00079:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:03"
					"[rsa][message][id1]" => "00079:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:04
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld10> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld10} logged out" }
				id => "message-00079:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:04"
					"[rsa][message][id1]" => "00079:04"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:05
		# line in RSA:  Security [<fld1>] Session <fld2>: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> <fld6> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session %{fld2}: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} %{fld6} logged out" }
				id => "message-00079:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:05"
					"[rsa][message][id1]" => "00079:05"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} logged out" }
				id => "message-00079:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:06"
					"[rsa][message][id1]" => "00079:06"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:07
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld3>, cn=<username>]: <fld4> logged out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld3}, cn=%{username}]: %{fld4} logged out" }
				id => "message-00079:07"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:07"
					"[rsa][message][id1]" => "00079:07"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00079:08
		# line in RSA:  Security [<fld1>] Session <fld2>:  <protocol>[<username>]:<fld3> sib <fld4> logged out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session %{fld2}:  %{protocol}[%{username}]:%{fld3} sib %{fld4} logged out" }
				id => "message-00079:08"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logged out"
					"[event][id]" => "00079:08"
					"[rsa][message][id1]" => "00079:08"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00080:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> master admin authenticated 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} master admin authenticated" }
				id => "message-00080:00"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "00080:00"
					"[rsa][message][id1]" => "00080:00"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00080:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> master admin authenticated 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} master admin authenticated" }
				id => "message-00080:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "00080:01"
					"[rsa][message][id1]" => "00080:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00080:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> master admin authenticated 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} master admin authenticated" }
				id => "message-00080:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "00080:02"
					"[rsa][message][id1]" => "00080:02"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00080:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> master admin authenticated 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} master admin authenticated" }
				id => "message-00080:03"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "00080:03"
					"[rsa][message][id1]" => "00080:03"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00080:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> master admin authenticated 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} master admin authenticated" }
				id => "message-00080:04"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "00080:04"
					"[rsa][message][id1]" => "00080:04"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00080:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> master admin authenticated 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} master admin authenticated" }
				id => "message-00080:05"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "00080:05"
					"[rsa][message][id1]" => "00080:05"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00080:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> master admin authenticated 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} master admin authenticated" }
				id => "message-00080:06"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
					"[event][id]" => "00080:06"
					"[rsa][message][id1]" => "00080:06"
					"[event][categoryid]" => "1302000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> physical addresses: remote <daddr> local <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:00"
				add_field => {
					"[event][id]" => "00081:00"
					"[rsa][message][id1]" => "00081:00"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> physical addresses: remote <daddr> local <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:01"
				add_field => {
					"[event][id]" => "00081:01"
					"[rsa][message][id1]" => "00081:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld2>, c=<fld3>]: <fld4> physical addresses: remote <daddr> local <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld2}, c=%{fld3}]: %{fld4} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:02"
				add_field => {
					"[event][id]" => "00081:02"
					"[rsa][message][id1]" => "00081:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> physical addresses: remote <daddr> local <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:03"
				add_field => {
					"[event][id]" => "00081:03"
					"[rsa][message][id1]" => "00081:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:04
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> physical addresses: remote <daddr> local <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:04"
				add_field => {
					"[event][id]" => "00081:04"
					"[rsa][message][id1]" => "00081:04"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> physical addresses: remote <daddr> local <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:05"
				add_field => {
				"action" => "user connection"
					"[event][id]" => "00081:05"
					"[rsa][message][id1]" => "00081:05"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> physical addresses: remote <daddr> local <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:06"
				add_field => {
					"[event][id]" => "00081:06"
					"[rsa][message][id1]" => "00081:06"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:07
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> physical addresses: remote <daddr> local <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:07"
				add_field => {
					"[event][id]" => "00081:07"
					"[rsa][message][id1]" => "00081:07"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00081:08
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld3> physical addresses: remote <daddr> local <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld3} physical addresses: remote %{daddr} local %{saddr}" }
				id => "message-00081:08"
				add_field => {
					"[event][id]" => "00081:08"
					"[rsa][message][id1]" => "00081:08"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> invalid password - master admin authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} invalid password - master admin authentication failed" }
				id => "message-00082:00"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "invalid password"
					"[event][id]" => "00082:00"
					"[rsa][message][id1]" => "00082:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> invalid password - master admin authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} invalid password - master admin authentication failed" }
				id => "message-00082:01"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "invalid password"
					"[event][id]" => "00082:01"
					"[rsa][message][id1]" => "00082:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> invalid password - master admin authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} invalid password - master admin authentication failed" }
				id => "message-00082:02"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "invalid password"
					"[event][id]" => "00082:02"
					"[rsa][message][id1]" => "00082:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> invalid password - master admin authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} invalid password - master admin authentication failed" }
				id => "message-00082:03"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "invalid password"
					"[event][id]" => "00082:03"
					"[rsa][message][id1]" => "00082:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> invalid password - master admin authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} invalid password - master admin authentication failed" }
				id => "message-00082:04"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "invalid password"
					"[event][id]" => "00082:04"
					"[rsa][message][id1]" => "00082:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld4> invalid password - master admin authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld4} invalid password - master admin authentication failed" }
				id => "message-00082:05"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "invalid password"
					"[event][id]" => "00082:05"
					"[rsa][message][id1]" => "00082:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00082:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld10> invalid password - master admin authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld10} invalid password - master admin authentication failed" }
				id => "message-00082:06"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00082:06"
					"[rsa][message][id1]" => "00082:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00083:00
		# line in RSA: Security [<fld18>] Management: Forced Admin User Off Due to Timeout: <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Management: Forced Admin User Off Due to Timeout: %{fld1}" }
				id => "message-00083:00"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00083:00"
					"[rsa][message][id1]" => "00083:00"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00084:00
		# line in RSA: Security [<fld18>] Management: Forcing admin to re-supply userid 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Management: Forcing admin to re-supply userid" }
				id => "message-00084:00"
				add_field => {
					"[event][id]" => "00084:00"
					"[rsa][message][id1]" => "00084:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00084:01
		# line in RSA: Security [<fld18>] Management: Forcing <username> to re-supply userid 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Management: Forcing %{username} to re-supply userid" }
				id => "message-00084:01"
				add_field => {
					"[event][id]" => "00084:01"
					"[rsa][message][id1]" => "00084:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld> No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld} No response from client - logging out" }
				id => "message-00085:00"
				add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00085:00"
					"[rsa][message][id1]" => "00085:00"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} No response from client - logging out" }
				id => "message-00085:01"
				add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00085:01"
					"[rsa][message][id1]" => "00085:01"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} No response from client - logging out" }
				id => "message-00085:02"
				add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00085:02"
					"[rsa][message][id1]" => "00085:02"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} No response from client - logging out" }
				id => "message-00085:03"
				add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00085:03"
					"[rsa][message][id1]" => "00085:03"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:04
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} No response from client - logging out" }
				id => "message-00085:04"
				add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00085:04"
					"[rsa][message][id1]" => "00085:04"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> <event_description> - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} %{event_description} - logging out" }
				id => "message-00085:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user logout"
					"[event][id]" => "00085:05"
					"[rsa][message][id1]" => "00085:05"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} No response from client - logging out" }
				id => "message-00085:06"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00085:06"
					"[rsa][message][id1]" => "00085:06"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:07
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} No response from client - logging out" }
				id => "message-00085:07"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00085:07"
					"[rsa][message][id1]" => "00085:07"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00085:08
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} No response from client - logging out" }
				id => "message-00085:08"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00085:08"
					"[rsa][message][id1]" => "00085:08"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00086:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> account has max links (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} account has max links (%{result})" }
				id => "message-00086:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00086:00"
					"[rsa][message][id1]" => "00086:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00086:01
		# line in RSA: Security [<fld1>] Session: <protocol>cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> account has max links (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} account has max links (%{result})" }
				id => "message-00086:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00086:01"
					"[rsa][message][id1]" => "00086:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00086:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> account has max links (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} account has max links (%{result})" }
				id => "message-00086:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00086:02"
					"[rsa][message][id1]" => "00086:02"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00086:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> account has max links (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} account has max links (%{result})" }
				id => "message-00086:03"
				add_field => {
					"[event][id]" => "00086:03"
					"[rsa][message][id1]" => "00086:03"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00086:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> account has max links (<fld4>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} account has max links (%{fld4})" }
				id => "message-00086:04"
				add_field => {
					"[event][id]" => "00086:04"
					"[rsa][message][id1]" => "00086:04"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00086:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> account has max links (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} account has max links (%{result})" }
				id => "message-00086:05"
				add_field => {
					"[event][id]" => "00086:05"
					"[rsa][message][id1]" => "00086:05"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00086:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> account has max links (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} account has max links (%{result})" }
				id => "message-00086:06"
				add_field => {
					"[event][id]" => "00086:06"
					"[rsa][message][id1]" => "00086:06"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00086:07
		# line in RSA:  Security [<fld1>] Session: <protocol>[No Access Network]:Access Network Passed - <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[No Access Network]:Access Network Passed - %{saddr}" }
				id => "message-00086:07"
				add_field => {
				"action" => "user Access Network Passed"
				"reason" => "No Access Network"
					"[event][id]" => "00086:07"
					"[rsa][message][id1]" => "00086:07"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00087:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>) <fld2>]: <fld3> account has max sessions (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}) %{fld2}]: %{fld3} account has max sessions (%{result})" }
				id => "message-00087:00"
				add_field => {
					"[event][id]" => "00087:00"
					"[rsa][message][id1]" => "00087:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00087:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), <fld2>]: <fld3> account has max sessions (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), %{fld2}]: %{fld3} account has max sessions (%{result})" }
				id => "message-00087:01"
				add_field => {
					"[event][id]" => "00087:01"
					"[rsa][message][id1]" => "00087:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00087:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, <fld2>]: <fld3> account has max sessions (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, %{fld2}]: %{fld3} account has max sessions (%{result})" }
				id => "message-00087:02"
				add_field => {
					"[event][id]" => "00087:02"
					"[rsa][message][id1]" => "00087:02"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00087:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> account has max sessions (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} account has max sessions (%{result})" }
				id => "message-00087:03"
				add_field => {
					"[event][id]" => "00087:03"
					"[rsa][message][id1]" => "00087:03"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00087:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> account has max sessions (<result>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} account has max sessions (%{result})" }
				id => "message-00087:04"
				add_field => {
					"[event][id]" => "00087:04"
					"[rsa][message][id1]" => "00087:04"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00087:05
		# line in RSA: Security [<fld18>] Session: <protocol>[<fld1>, cn=<username>]: <fld10> account has max sessions (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[%{fld1}, cn=%{username}]: %{fld10} account has max sessions (%{result})" }
				id => "message-00087:05"
				add_field => {
					"[event][id]" => "00087:05"
					"[rsa][message][id1]" => "00087:05"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00087:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> account has max sessions (<result>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} account has max sessions (%{result})" }
				id => "message-00087:06"
				add_field => {
					"[event][id]" => "00087:06"
					"[rsa][message][id1]" => "00087:06"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00088:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> - authentication failed using all authservers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} - authentication failed using all authservers" }
				id => "message-00088:00"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00088:00"
					"[rsa][message][id1]" => "00088:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00088:01
		# line in RSA: Security [<fld18>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> - authentication failed using all authservers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} - authentication failed using all authservers" }
				id => "message-00088:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00088:01"
					"[rsa][message][id1]" => "00088:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00088:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> - authentication failed using all authservers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} - authentication failed using all authservers" }
				id => "message-00088:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00088:02"
					"[rsa][message][id1]" => "00088:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00088:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> - authentication failed using all authservers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} - authentication failed using all authservers" }
				id => "message-00088:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00088:03"
					"[rsa][message][id1]" => "00088:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00088:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> - authentication failed using all authservers
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} - authentication failed using all authservers" }
				id => "message-00088:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failed"
					"[event][id]" => "00088:04"
					"[rsa][message][id1]" => "00088:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00088:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> - authentication failed using all authservers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} - authentication failed using all authservers" }
				id => "message-00088:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00088:05"
					"[rsa][message][id1]" => "00088:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00088:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> - authentication failed using all authservers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} - authentication failed using all authservers" }
				id => "message-00088:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00088:06"
					"[rsa][message][id1]" => "00088:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00088:07
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> - authentication failed using all authservers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} - authentication failed using all authservers" }
				id => "message-00088:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00088:07"
					"[rsa][message][id1]" => "00088:07"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00089:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> account is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} account is disabled" }
				id => "message-00089:00"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "connection failure"
				"reason" => "account is disabled"
					"[event][id]" => "00089:00"
					"[rsa][message][id1]" => "00089:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00089:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> account is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} account is disabled" }
				id => "message-00089:01"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "connection failure"
				"reason" => "account is disabled"
					"[event][id]" => "00089:01"
					"[rsa][message][id1]" => "00089:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00089:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld6> account is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld6} account is disabled" }
				id => "message-00089:02"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "connection failure"
				"reason" => "account is disabled"
					"[event][id]" => "00089:02"
					"[rsa][message][id1]" => "00089:02"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00089:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> account is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} account is disabled" }
				id => "message-00089:03"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "connection failure"
				"reason" => "account is disabled"
					"[event][id]" => "00089:03"
					"[rsa][message][id1]" => "00089:03"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00089:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> account is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} account is disabled" }
				id => "message-00089:04"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "connection failure"
				"reason" => "account is disabled"
					"[event][id]" => "00089:04"
					"[rsa][message][id1]" => "00089:04"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00089:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> account is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} account is disabled" }
				id => "message-00089:05"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "connection failure"
				"reason" => "account is disabled"
					"[event][id]" => "00089:05"
					"[rsa][message][id1]" => "00089:05"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00089:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> account is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} account is disabled" }
				id => "message-00089:06"
				add_field => {
				"ec_activity" => "Disable"
				"action" => "connection failure"
				"reason" => "account is disabled"
					"[event][id]" => "00089:06"
					"[rsa][message][id1]" => "00089:06"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00090:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> account not allowed now 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} account not allowed now" }
				id => "message-00090:00"
				add_field => {
				"action" => "connection failure"
				"reason" => "account not allowed now"
					"[event][id]" => "00090:00"
					"[rsa][message][id1]" => "00090:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00090:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> account not allowed now 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} account not allowed now" }
				id => "message-00090:01"
				add_field => {
				"action" => "connection failure"
				"reason" => "account not allowed now"
					"[event][id]" => "00090:01"
					"[rsa][message][id1]" => "00090:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00090:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> account not allowed now 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} account not allowed now" }
				id => "message-00090:02"
				add_field => {
				"action" => "connection failure"
				"reason" => "account not allowed now"
					"[event][id]" => "00090:02"
					"[rsa][message][id1]" => "00090:02"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00090:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> account not allowed now 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} account not allowed now" }
				id => "message-00090:03"
				add_field => {
				"action" => "connection failure"
				"reason" => "account not allowed now"
					"[event][id]" => "00090:03"
					"[rsa][message][id1]" => "00090:03"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00090:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> account not allowed now 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} account not allowed now" }
				id => "message-00090:04"
				add_field => {
				"action" => "connection failure"
				"reason" => "account not allowed now"
					"[event][id]" => "00090:04"
					"[rsa][message][id1]" => "00090:04"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00090:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> account not allowed now 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} account not allowed now" }
				id => "message-00090:05"
				add_field => {
				"action" => "connection failure"
				"reason" => "account not allowed now"
					"[event][id]" => "00090:05"
					"[rsa][message][id1]" => "00090:05"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00090:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> account not allowed now 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} account not allowed now" }
				id => "message-00090:06"
				add_field => {
				"action" => "connection failure"
				"reason" => "account not allowed now"
					"[event][id]" => "00090:06"
					"[rsa][message][id1]" => "00090:06"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00091:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> authentication failed using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} authentication failed using %{authmethod}" }
				id => "message-00091:00"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00091:00"
					"[rsa][message][id1]" => "00091:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00091:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> authentication failed using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} authentication failed using %{authmethod}" }
				id => "message-00091:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00091:01"
					"[rsa][message][id1]" => "00091:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00091:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> authentication failed using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} authentication failed using %{authmethod}" }
				id => "message-00091:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00091:02"
					"[rsa][message][id1]" => "00091:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00091:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> authentication failed using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} authentication failed using %{authmethod}" }
				id => "message-00091:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00091:03"
					"[rsa][message][id1]" => "00091:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00091:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> authentication failed using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} authentication failed using %{authmethod}" }
				id => "message-00091:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00091:04"
					"[rsa][message][id1]" => "00091:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00091:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld10> authentication failed using <authmethod> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld10} authentication failed using %{authmethod}" }
				id => "message-00091:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00091:05"
					"[rsa][message][id1]" => "00091:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00091:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld10> authentication failed using <authmethod>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld10} authentication failed using %{authmethod}" }
				id => "message-00091:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00091:06"
					"[rsa][message][id1]" => "00091:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00091:07
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> authentication failed using <authmethod>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} authentication failed using %{authmethod}" }
				id => "message-00091:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00091:07"
					"[rsa][message][id1]" => "00091:07"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00092:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> system has max sessions (<fld7>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} system has max sessions (%{fld7})" }
				id => "message-00092:00"
				add_field => {
				"action" => "connection failure"
				"reason" => "system has max sessions"
					"[event][id]" => "00092:00"
					"[rsa][message][id1]" => "00092:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00092:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> system has max sessions (<fld7>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} system has max sessions (%{fld7})" }
				id => "message-00092:01"
				add_field => {
				"action" => "connection failure"
				"reason" => "system has max sessions"
					"[event][id]" => "00092:01"
					"[rsa][message][id1]" => "00092:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00092:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> system has max sessions (<fld3>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} system has max sessions (%{fld3})" }
				id => "message-00092:02"
				add_field => {
				"action" => "connection failure"
				"reason" => "system has max sessions"
					"[event][id]" => "00092:02"
					"[rsa][message][id1]" => "00092:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00092:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> system has max sessions (<fld3>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} system has max sessions (%{fld3})" }
				id => "message-00092:03"
				add_field => {
				"action" => "connection failure"
				"reason" => "system has max sessions"
					"[event][id]" => "00092:03"
					"[rsa][message][id1]" => "00092:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00092:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> system has max sessions (<fld30>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} system has max sessions (%{fld30})" }
				id => "message-00092:04"
				add_field => {
				"action" => "connection failure"
				"reason" => "system has max sessions"
					"[event][id]" => "00092:04"
					"[rsa][message][id1]" => "00092:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00092:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> system has max sessions (<fld4>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} system has max sessions (%{fld4})" }
				id => "message-00092:05"
				add_field => {
				"action" => "connection failure"
				"reason" => "system has max sessions"
					"[event][id]" => "00092:05"
					"[rsa][message][id1]" => "00092:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00092:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> system has max sessions (<fld3>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} system has max sessions (%{fld3})" }
				id => "message-00092:06"
				add_field => {
				"action" => "connection failure"
				"reason" => "system has max sessions"
					"[event][id]" => "00092:06"
					"[rsa][message][id1]" => "00092:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:00
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=nortel vpn (<username>) <fld2>] uid <fld3> not found in account 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=nortel vpn (%{username}) %{fld2}] uid %{fld3} not found in account" }
				id => "message-00094:00"
				add_field => {
				"action" => "uid not found in account"
					"[event][id]" => "00094:00"
					"[rsa][message][id1]" => "00094:00"
					"[event][categoryid]" => "1501040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:01
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=<username>(vpn), <fld2>] uid <fld3> not found in account 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=%{username}(vpn), %{fld2}] uid %{fld3} not found in account" }
				id => "message-00094:01"
				add_field => {
				"action" => "uid not found in account"
					"[event][id]" => "00094:01"
					"[rsa][message][id1]" => "00094:01"
					"[event][categoryid]" => "1501040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:02
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=<username>, mail=<user_address>] uid <fld2> not found in account
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=%{username}, mail=%{user_address}] uid %{fld2} not found in account" }
				id => "message-00094:02"
				add_field => {
				"action" => "uid not found in account"
					"[event][id]" => "00094:02"
					"[rsa][message][id1]" => "00094:02"
					"[event][categoryid]" => "1501040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:03
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=<username>] uid <fld2> not found in account
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=%{username}] uid %{fld2} not found in account" }
				id => "message-00094:03"
				add_field => {
				"action" => "uid not found in account"
					"[event][id]" => "00094:03"
					"[rsa][message][id1]" => "00094:03"
					"[event][categoryid]" => "1501040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:04
		# line in RSA: Security [<fld1>] Account: <protocol>[<fld2>, cn=<username>, mail=<user_address>] uid <fld3> not found in account 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}] uid %{fld3} not found in account" }
				id => "message-00094:04"
				add_field => {
				"action" => "uid not found in account"
					"[event][id]" => "00094:04"
					"[rsa][message][id1]" => "00094:04"
					"[event][categoryid]" => "1501040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:05
		# line in RSA: Security [<fld1>] Account: <protocol>[<fld2>, cn=<username>] uid <fld3> not found in account 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[%{fld2}, cn=%{username}] uid %{fld3} not found in account" }
				id => "message-00094:05"
				add_field => {
				"action" => "uid not found in account"
					"[event][id]" => "00094:05"
					"[rsa][message][id1]" => "00094:05"
					"[event][categoryid]" => "1501040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00094:06
		# line in RSA: Security [<fld1>] Account: <protocol>[<username>] uid <fld2> not found in account 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[%{username}] uid %{fld2} not found in account" }
				id => "message-00094:06"
				add_field => {
				"action" => "uid not found in account"
					"[event][id]" => "00094:06"
					"[rsa][message][id1]" => "00094:06"
					"[event][categoryid]" => "1501040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:00
		# line in RSA: Security [<fld1>] CaAuthServerCollection: authenticate <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> bad certificate - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] CaAuthServerCollection: authenticate %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} bad certificate - %{result}" }
				id => "message-00097:00"
				add_field => {
				"action" => "authentication failure"
				"reason" => "bad certificate"
					"[event][id]" => "00097:00"
					"[rsa][message][id1]" => "00097:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:01
		# line in RSA: Security [<fld1>] CaAuthServerCollection: authenticate <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> bad certificate - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] CaAuthServerCollection: authenticate %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} bad certificate - %{result}" }
				id => "message-00097:01"
				add_field => {
				"action" => "authentication failure"
				"reason" => "bad certificate"
					"[event][id]" => "00097:01"
					"[rsa][message][id1]" => "00097:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:02
		# line in RSA: Security [<fld1>] CaAuthServerCollection: authenticate <protocol>[cn=<username>, mail=<user_address>]: <fld2> bad certificate - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] CaAuthServerCollection: authenticate %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} bad certificate - %{result}" }
				id => "message-00097:02"
				add_field => {
				"action" => "authentication failure"
				"reason" => "bad certificate"
					"[event][id]" => "00097:02"
					"[rsa][message][id1]" => "00097:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:03
		# line in RSA: Security [<fld1>] CaAuthServerCollection: authenticate <protocol>[cn=<username>]: <fld2> bad certificate - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] CaAuthServerCollection: authenticate %{protocol}[cn=%{username}]: %{fld2} bad certificate - %{result}" }
				id => "message-00097:03"
				add_field => {
				"action" => "authentication failure"
				"reason" => "bad certificate"
					"[event][id]" => "00097:03"
					"[rsa][message][id1]" => "00097:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:04
		# line in RSA: Security [<fld1>] CaAuthServerCollection: authenticate <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> bad certificate - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] CaAuthServerCollection: authenticate %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} bad certificate - %{result}" }
				id => "message-00097:04"
				add_field => {
				"action" => "authentication failure"
				"reason" => "bad certificate"
					"[event][id]" => "00097:04"
					"[rsa][message][id1]" => "00097:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:05
		# line in RSA: Security [<fld1>] CaAuthServerCollection: authenticate <protocol>[<fld2>, cn=<username>]: <fld3> bad certificate - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] CaAuthServerCollection: authenticate %{protocol}[%{fld2}, cn=%{username}]: %{fld3} bad certificate - %{result}" }
				id => "message-00097:05"
				add_field => {
				"action" => "authentication failure"
				"reason" => "bad certificate"
					"[event][id]" => "00097:05"
					"[rsa][message][id1]" => "00097:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00097:06
		# line in RSA: Security [<fld1>] CaAuthServerCollection: authenticate <protocol>[<username>]: <fld2> bad certificate - <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] CaAuthServerCollection: authenticate %{protocol}[%{username}]: %{fld2} bad certificate - %{result}" }
				id => "message-00097:06"
				add_field => {
				"action" => "authentication failure"
				"reason" => "bad certificate"
					"[event][id]" => "00097:06"
					"[rsa][message][id1]" => "00097:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00098:00
		# line in RSA: Security [<fld1>] CaAuthServerCollection: authenticate <fld2> cert [<fld3>] invalid signature by [<fld4>] - <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] CaAuthServerCollection: authenticate %{fld2} cert [%{fld3}] invalid signature by [%{fld4}] - %{event_description}" }
				id => "message-00098:00"
				add_field => {
				"action" => "authentication failure"
				"reason" => "invalid signature"
					"[event][id]" => "00098:00"
					"[rsa][message][id1]" => "00098:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00098:05
		# line in RSA: Security [<fld1>] LocalAuthServerCls: Authenticate Days left <bytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] LocalAuthServerCls: Authenticate Days left %{bytes}" }
				id => "message-00098:05"
				add_field => {
				"action" => "Authenticate Days left (bytes)"
					"[event][id]" => "00098:05"
					"[rsa][message][id1]" => "00098:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00108:00
		# line in RSA: Security [<fld1>] RADIUS server rejected access
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS server rejected access" }
				id => "message-00108:00"
				add_field => {
				"action" => "RADIUS server rejected access"
					"[event][id]" => "00108:00"
					"[rsa][message][id1]" => "00108:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00110:00
		# line in RSA: Security [<fld1>] RADIUS: <saddr> sent challenge for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{saddr} sent challenge for %{username}" }
				id => "message-00110:00"
				add_field => {
				"action" => "challenge sent"
					"[event][id]" => "00110:00"
					"[rsa][message][id1]" => "00110:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00111:00
		# line in RSA: Security [<fld1>] RADIUS: <saddr> sent invalid response packet for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{saddr} sent invalid response packet for %{username}" }
				id => "message-00111:00"
				add_field => {
				"action" => "invalid repsonse packet"
					"[event][id]" => "00111:00"
					"[rsa][message][id1]" => "00111:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00112:00
		# line in RSA: Security [<fld1>] RADIUS: <saddr> sent packet with invalid response authenticator for <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{saddr} sent packet with invalid response authenticator for %{username}" }
				id => "message-00112:00"
				add_field => {
				"action" => "invalid response authenticator sent"
					"[event][id]" => "00112:00"
					"[rsa][message][id1]" => "00112:00"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00113:00
		# line in RSA: Security [<fld1>] RADIUS: <saddr> server error while authenticating <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{saddr} server error while authenticating %{username}" }
				id => "message-00113:00"
				add_field => {
				"action" => "RADIUS server error while authenticating"
					"[event][id]" => "00113:00"
					"[rsa][message][id1]" => "00113:00"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00114:00
		# line in RSA:  Security [<fld1>] RADIUS: <saddr> server failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{saddr} server failed" }
				id => "message-00114:00"
				add_field => {
					"[event][id]" => "00114:00"
					"[rsa][message][id1]" => "00114:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00115:00
		# line in RSA:  Security [<fld1>] RADIUS: <saddr> server timed out authenticating <username>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{saddr} server timed out authenticating %{username}" }
				id => "message-00115:00"
				add_field => {
					"[event][id]" => "00115:00"
					"[rsa][message][id1]" => "00115:00"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00116:00
		# line in RSA:  Security [<fld1>] RADIUS: <saddr> server timed out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{saddr} server timed out" }
				id => "message-00116:00"
				add_field => {
					"[event][id]" => "00116:00"
					"[rsa][message][id1]" => "00116:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00117:00
		# line in RSA: Security [<fld1>] RADIUS: <username> access OK by server <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{username} access OK by server %{saddr}" }
				id => "message-00117:00"
				add_field => {
					"[event][id]" => "00117:00"
					"[rsa][message][id1]" => "00117:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00117:01
		# line in RSA: Security [<fld1>] RADIUS: verified server "<saddr>" reply, result: <event_description>, message: <msg>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: verified server \"%{saddr}\" reply, result: %{event_description}, message: %{msg}" }
				id => "message-00117:01"
				add_field => {
					"[event][id]" => "00117:01"
					"[rsa][message][id1]" => "00117:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00118:00
		# line in RSA: Security [<fld1>] RADIUS: <username> accounting record sent to <saddr> OK
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: %{username} accounting record sent to %{saddr} OK" }
				id => "message-00118:00"
				add_field => {
					"[event][id]" => "00118:00"
					"[rsa][message][id1]" => "00118:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00119:00
		# line in RSA:  Security [<fld1>] RADIUS: Cannot send accounting request to <saddr>, possibly due to DNS translation failure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: Cannot send accounting request to %{saddr}, possibly due to DNS translation failure" }
				id => "message-00119:00"
				add_field => {
					"[event][id]" => "00119:00"
					"[rsa][message][id1]" => "00119:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00120:00
		# line in RSA:  Security [<fld1>] RADIUS: Cannot send request to <saddr>, possibly due to DNS translation failure
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: Cannot send request to %{saddr}, possibly due to DNS translation failure" }
				id => "message-00120:00"
				add_field => {
					"[event][id]" => "00120:00"
					"[rsa][message][id1]" => "00120:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00121:00
		# line in RSA: Security [<fld1>] RADIUS: failure sending <username> accounting record to <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: failure sending %{username} accounting record to %{saddr}" }
				id => "message-00121:00"
				add_field => {
					"[event][id]" => "00121:00"
					"[rsa][message][id1]" => "00121:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00122:00
		# line in RSA:  Security [<fld1>] RADIUS: network socket failure with <saddr>, recvfrom error: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: network socket failure with %{saddr}, recvfrom error: %{result}" }
				id => "message-00122:00"
				add_field => {
					"[event][id]" => "00122:00"
					"[rsa][message][id1]" => "00122:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00123:00
		# line in RSA: Security [<fld1>] RADIUS: no reply from RADIUS server <saddr>(<sport>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: no reply from RADIUS server %{saddr}(%{sport})" }
				id => "message-00123:00"
				add_field => {
					"[event][id]" => "00123:00"
					"[rsa][message][id1]" => "00123:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00124:00
		# line in RSA:  Security [<fld1>] RADIUS: no reply from server <saddr>(<sport>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS: no reply from server %{saddr}(%{sport})" }
				id => "message-00124:00"
				add_field => {
					"[event][id]" => "00124:00"
					"[rsa][message][id1]" => "00124:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00125:00
		# line in RSA:  Security [<fld1>] SchemaCls: Database schema not available
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] SchemaCls: Database schema not available" }
				id => "message-00125:00"
				add_field => {
					"[event][id]" => "00125:00"
					"[rsa][message][id1]" => "00125:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00126:00
		# line in RSA:  Security [<fld1>] Security: store new system IP address <saddr> failed - <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Security: store new system IP address %{saddr} failed - %{fld2}" }
				id => "message-00126:00"
				add_field => {
					"[event][id]" => "00126:00"
					"[rsa][message][id1]" => "00126:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00127:00
		# line in RSA:  Security [<fld1>] Security: store new system name <shost> failed - <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Security: store new system name %{shost} failed - %{fld2}" }
				id => "message-00127:00"
				add_field => {
					"[event][id]" => "00127:00"
					"[rsa][message][id1]" => "00127:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00128:00
		# line in RSA:  Security [<fld1>] Security: store new system subnet mask <smask> failed - <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Security: store new system subnet mask %{smask} failed - %{fld2}" }
				id => "message-00128:00"
				add_field => {
					"[event][id]" => "00128:00"
					"[rsa][message][id1]" => "00128:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00128:01
		# line in RSA: Security [<fld1>] LdapMonitorTask: Refreshed FW and NAT policies for new <authmethod> server
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] LdapMonitorTask: Refreshed FW and NAT policies for new %{authmethod} server" }
				id => "message-00128:01"
				add_field => {
				"action" => "Switching LDAP locations may impact SSL certificate identification"
					"[event][id]" => "00128:01"
					"[rsa][message][id1]" => "00128:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00128:02
		# line in RSA: Security [<fld1>] <fld2>: Shutdown complete.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] %{fld2}: Shutdown complete." }
				id => "message-00128:02"
				add_field => {
				"action" => "Shutdown complete"
					"[event][id]" => "00128:02"
					"[rsa][message][id1]" => "00128:02"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00129:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>] invalid uid - authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}] invalid uid - authentication failed" }
				id => "message-00129:00"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
				"reason" => "invalid uid"
					"[event][id]" => "00129:00"
					"[rsa][message][id1]" => "00129:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00129:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>] invalid uid - authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}] invalid uid - authentication failed" }
				id => "message-00129:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
				"reason" => "invalid uid"
					"[event][id]" => "00129:01"
					"[rsa][message][id1]" => "00129:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00129:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>] invalid uid - authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}] invalid uid - authentication failed" }
				id => "message-00129:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
				"reason" => "invalid uid"
					"[event][id]" => "00129:02"
					"[rsa][message][id1]" => "00129:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00129:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>] invalid uid - authentication failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}] invalid uid - authentication failed" }
				id => "message-00129:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
				"reason" => "invalid uid"
					"[event][id]" => "00129:03"
					"[rsa][message][id1]" => "00129:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00129:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>] invalid uid - authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}] invalid uid - authentication failed" }
				id => "message-00129:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
				"reason" => "invalid uid"
					"[event][id]" => "00129:04"
					"[rsa][message][id1]" => "00129:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00129:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>] invalid uid - authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}] invalid uid - authentication failed" }
				id => "message-00129:05"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
				"reason" => "invalid uid"
					"[event][id]" => "00129:05"
					"[rsa][message][id1]" => "00129:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00129:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>] invalid uid - authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}] invalid uid - authentication failed" }
				id => "message-00129:06"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
				"reason" => "invalid uid"
					"[event][id]" => "00129:06"
					"[rsa][message][id1]" => "00129:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00130:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>] session rejected - system is initializing 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}] session rejected - system is initializing" }
				id => "message-00130:00"
				add_field => {
					"[event][id]" => "00130:00"
					"[rsa][message][id1]" => "00130:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00130:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>] session rejected - system is initializing 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}] session rejected - system is initializing" }
				id => "message-00130:01"
				add_field => {
					"[event][id]" => "00130:01"
					"[rsa][message][id1]" => "00130:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00130:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>] session rejected - system is initializing 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}] session rejected - system is initializing" }
				id => "message-00130:02"
				add_field => {
					"[event][id]" => "00130:02"
					"[rsa][message][id1]" => "00130:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00130:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>] session rejected - system is initializing 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}] session rejected - system is initializing" }
				id => "message-00130:03"
				add_field => {
					"[event][id]" => "00130:03"
					"[rsa][message][id1]" => "00130:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00130:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>] session rejected - system is initializing 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}] session rejected - system is initializing" }
				id => "message-00130:04"
				add_field => {
					"[event][id]" => "00130:04"
					"[rsa][message][id1]" => "00130:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00130:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>] session rejected - system is initializing 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}] session rejected - system is initializing" }
				id => "message-00130:05"
				add_field => {
					"[event][id]" => "00130:05"
					"[rsa][message][id1]" => "00130:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00130:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>] session rejected - system is initializing 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}] session rejected - system is initializing" }
				id => "message-00130:06"
				add_field => {
					"[event][id]" => "00130:06"
					"[rsa][message][id1]" => "00130:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00131:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>] session rejected - system is shutting down 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}] session rejected - system is shutting down" }
				id => "message-00131:00"
				add_field => {
					"[event][id]" => "00131:00"
					"[rsa][message][id1]" => "00131:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00131:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>] session rejected - system is shutting down 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}] session rejected - system is shutting down" }
				id => "message-00131:01"
				add_field => {
					"[event][id]" => "00131:01"
					"[rsa][message][id1]" => "00131:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00131:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>] session rejected - system is shutting down 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}] session rejected - system is shutting down" }
				id => "message-00131:02"
				add_field => {
					"[event][id]" => "00131:02"
					"[rsa][message][id1]" => "00131:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00131:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>] session rejected - system is shutting down 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}] session rejected - system is shutting down" }
				id => "message-00131:03"
				add_field => {
					"[event][id]" => "00131:03"
					"[rsa][message][id1]" => "00131:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00131:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>] session rejected - system is shutting down 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}] session rejected - system is shutting down" }
				id => "message-00131:04"
				add_field => {
					"[event][id]" => "00131:04"
					"[rsa][message][id1]" => "00131:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00131:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>] session rejected - system is shutting down 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}] session rejected - system is shutting down" }
				id => "message-00131:05"
				add_field => {
					"[event][id]" => "00131:05"
					"[rsa][message][id1]" => "00131:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00131:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>] session rejected - system is shutting down 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}] session rejected - system is shutting down" }
				id => "message-00131:06"
				add_field => {
					"[event][id]" => "00131:06"
					"[rsa][message][id1]" => "00131:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00132:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld10> <result> auth method not allowed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld10} %{result} auth method not allowed" }
				id => "message-00132:00"
				add_field => {
				"action" => "login rejected"
				"reason" => "auth method not allowed"
					"[event][id]" => "00132:00"
					"[rsa][message][id1]" => "00132:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00132:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld10> <result> auth method not allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld10} %{result} auth method not allowed" }
				id => "message-00132:01"
				add_field => {
				"action" => "login rejected"
				"reason" => "auth method not allowed"
					"[event][id]" => "00132:01"
					"[rsa][message][id1]" => "00132:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00132:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld10> <result> auth method not allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld10} %{result} auth method not allowed" }
				id => "message-00132:02"
				add_field => {
				"action" => "login rejected"
				"reason" => "auth method not allowed"
					"[event][id]" => "00132:02"
					"[rsa][message][id1]" => "00132:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00132:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld10> <result> auth method not allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld10} %{result} auth method not allowed" }
				id => "message-00132:03"
				add_field => {
				"action" => "login rejected"
				"reason" => "auth method not allowed"
					"[event][id]" => "00132:03"
					"[rsa][message][id1]" => "00132:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00132:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld10> <result> auth method not allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld10} %{result} auth method not allowed" }
				id => "message-00132:04"
				add_field => {
				"action" => "login rejected"
				"reason" => "auth method not allowed"
					"[event][id]" => "00132:04"
					"[rsa][message][id1]" => "00132:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00132:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld10> <result> auth method not allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld10} %{result} auth method not allowed" }
				id => "message-00132:05"
				add_field => {
				"action" => "login rejected"
				"reason" => "auth method not allowed"
					"[event][id]" => "00132:05"
					"[rsa][message][id1]" => "00132:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00132:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld10> <result> auth method not allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld10} %{result} auth method not allowed" }
				id => "message-00132:06"
				add_field => {
				"action" => "login rejected"
				"reason" => "auth method not allowed"
					"[event][id]" => "00132:06"
					"[rsa][message][id1]" => "00132:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00133:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld10> AddLink failed [<fld7>] current links <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld10} AddLink failed [%{fld7}] current links %{result}" }
				id => "message-00133:00"
				add_field => {
				"action" => "Session - AddLink failure"
					"[event][id]" => "00133:00"
					"[rsa][message][id1]" => "00133:00"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00133:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld10> AddLink failed [<fld7>] current links <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld10} AddLink failed [%{fld7}] current links %{result}" }
				id => "message-00133:01"
				add_field => {
				"action" => "Session - AddLink failure"
					"[event][id]" => "00133:01"
					"[rsa][message][id1]" => "00133:01"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00133:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld10> AddLink failed [<fld7>] current links <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld10} AddLink failed [%{fld7}] current links %{result}" }
				id => "message-00133:02"
				add_field => {
				"action" => "Session - AddLink failure"
					"[event][id]" => "00133:02"
					"[rsa][message][id1]" => "00133:02"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00133:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld10> AddLink failed [<fld7>] current links <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld10} AddLink failed [%{fld7}] current links %{result}" }
				id => "message-00133:03"
				add_field => {
				"action" => "Session - AddLink failure"
					"[event][id]" => "00133:03"
					"[rsa][message][id1]" => "00133:03"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00133:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld10> AddLink failed [<fld7>] current links <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld10} AddLink failed [%{fld7}] current links %{result}" }
				id => "message-00133:04"
				add_field => {
				"action" => "Session - AddLink failure"
					"[event][id]" => "00133:04"
					"[rsa][message][id1]" => "00133:04"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00133:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld10> AddLink failed [<fld7>] current links <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld10} AddLink failed [%{fld7}] current links %{result}" }
				id => "message-00133:05"
				add_field => {
				"action" => "Session - AddLink failure"
					"[event][id]" => "00133:05"
					"[rsa][message][id1]" => "00133:05"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00133:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld10> AddLink failed [<fld7>] current links <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld10} AddLink failed [%{fld7}] current links %{result}" }
				id => "message-00133:06"
				add_field => {
				"action" => "Session - AddLink failure"
					"[event][id]" => "00133:06"
					"[rsa][message][id1]" => "00133:06"
					"[event][categoryid]" => "1601020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00134:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> L2TP host [<shost>] account misconfigured 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} L2TP host [%{shost}] account misconfigured" }
				id => "message-00134:00"
				add_field => {
					"[event][id]" => "00134:00"
					"[rsa][message][id1]" => "00134:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00134:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> L2TP host [<shost>] account misconfigured 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} L2TP host [%{shost}] account misconfigured" }
				id => "message-00134:01"
				add_field => {
					"[event][id]" => "00134:01"
					"[rsa][message][id1]" => "00134:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00134:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> L2TP host [<shost>] account misconfigured 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} L2TP host [%{shost}] account misconfigured" }
				id => "message-00134:02"
				add_field => {
					"[event][id]" => "00134:02"
					"[rsa][message][id1]" => "00134:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00134:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> L2TP host [<shost>] account misconfigured 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} L2TP host [%{shost}] account misconfigured" }
				id => "message-00134:03"
				add_field => {
					"[event][id]" => "00134:03"
					"[rsa][message][id1]" => "00134:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00134:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> L2TP host [<shost>] account misconfigured 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} L2TP host [%{shost}] account misconfigured" }
				id => "message-00134:04"
				add_field => {
					"[event][id]" => "00134:04"
					"[rsa][message][id1]" => "00134:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00134:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> L2TP host [<shost>] account misconfigured 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} L2TP host [%{shost}] account misconfigured" }
				id => "message-00134:05"
				add_field => {
					"[event][id]" => "00134:05"
					"[rsa][message][id1]" => "00134:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00134:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld2> L2TP host [<shost>] account misconfigured 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} L2TP host [%{shost}] account misconfigured" }
				id => "message-00134:06"
				add_field => {
					"[event][id]" => "00134:06"
					"[rsa][message][id1]" => "00134:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00134:07
		# line in RSA:    Security [<fld1>] Session: L2TP[<user_address>]: <fld2> bound to <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: L2TP[%{user_address}]: %{fld2} bound to %{fld3}" }
				id => "message-00134:07"
				add_field => {
				"method" => "L2TP"
				"action" => "User bound"
					"[event][id]" => "00134:07"
					"[rsa][message][id1]" => "00134:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00135:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> client assigned address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} client assigned address [%{saddr}] already in use" }
				id => "message-00135:00"
				add_field => {
					"[event][id]" => "00135:00"
					"[rsa][message][id1]" => "00135:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00135:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> client assigned address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} client assigned address [%{saddr}] already in use" }
				id => "message-00135:01"
				add_field => {
					"[event][id]" => "00135:01"
					"[rsa][message][id1]" => "00135:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00135:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> client assigned address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} client assigned address [%{saddr}] already in use" }
				id => "message-00135:02"
				add_field => {
					"[event][id]" => "00135:02"
					"[rsa][message][id1]" => "00135:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00135:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> client assigned address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} client assigned address [%{saddr}] already in use" }
				id => "message-00135:03"
				add_field => {
					"[event][id]" => "00135:03"
					"[rsa][message][id1]" => "00135:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00135:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> client assigned address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} client assigned address [%{saddr}] already in use" }
				id => "message-00135:04"
				add_field => {
					"[event][id]" => "00135:04"
					"[rsa][message][id1]" => "00135:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00135:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> client assigned address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} client assigned address [%{saddr}] already in use" }
				id => "message-00135:05"
				add_field => {
					"[event][id]" => "00135:05"
					"[rsa][message][id1]" => "00135:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00135:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld2> client assigned address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} client assigned address [%{saddr}] already in use" }
				id => "message-00135:06"
				add_field => {
					"[event][id]" => "00135:06"
					"[rsa][message][id1]" => "00135:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00136:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> connect Qos level <result> full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} connect Qos level %{result} full" }
				id => "message-00136:00"
				add_field => {
					"[event][id]" => "00136:00"
					"[rsa][message][id1]" => "00136:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00136:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> connect Qos level junk full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} connect Qos level junk full" }
				id => "message-00136:01"
				add_field => {
					"[event][id]" => "00136:01"
					"[rsa][message][id1]" => "00136:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00136:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> connect Qos level junk full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} connect Qos level junk full" }
				id => "message-00136:02"
				add_field => {
					"[event][id]" => "00136:02"
					"[rsa][message][id1]" => "00136:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00136:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> connect Qos level junk full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} connect Qos level junk full" }
				id => "message-00136:03"
				add_field => {
					"[event][id]" => "00136:03"
					"[rsa][message][id1]" => "00136:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00136:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> connect Qos level junk full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} connect Qos level junk full" }
				id => "message-00136:04"
				add_field => {
					"[event][id]" => "00136:04"
					"[rsa][message][id1]" => "00136:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00136:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> connect Qos level junk full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} connect Qos level junk full" }
				id => "message-00136:05"
				add_field => {
					"[event][id]" => "00136:05"
					"[rsa][message][id1]" => "00136:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00136:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld2> connect Qos level junk full 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} connect Qos level junk full" }
				id => "message-00136:06"
				add_field => {
					"[event][id]" => "00136:06"
					"[rsa][message][id1]" => "00136:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00137:00
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld> login rejected - new logins disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld} login rejected - new logins disabled" }
				id => "message-00137:00"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Error"
				"action" => "login rejected"
				"reason" => "new logins disabled"
					"[event][id]" => "00137:00"
					"[rsa][message][id1]" => "00137:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00137:01
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> login rejected - new logins disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} login rejected - new logins disabled" }
				id => "message-00137:01"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Error"
				"action" => "login rejected"
				"reason" => "new logins disabled"
					"[event][id]" => "00137:01"
					"[rsa][message][id1]" => "00137:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00137:02
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> login rejected - new logins disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} login rejected - new logins disabled" }
				id => "message-00137:02"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Error"
				"action" => "login rejected"
				"reason" => "new logins disabled"
					"[event][id]" => "00137:02"
					"[rsa][message][id1]" => "00137:02"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00137:03
		# line in RSA: Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> login rejected - new logins disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} login rejected - new logins disabled" }
				id => "message-00137:03"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Error"
				"action" => "login rejected"
				"reason" => "new logins disabled"
					"[event][id]" => "00137:03"
					"[rsa][message][id1]" => "00137:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00137:04
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> login rejected - new logins disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} login rejected - new logins disabled" }
				id => "message-00137:04"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Error"
				"action" => "login rejected"
				"reason" => "new logins disabled"
					"[event][id]" => "00137:04"
					"[rsa][message][id1]" => "00137:04"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00137:05
		# line in RSA: Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> login rejected - new logins disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} login rejected - new logins disabled" }
				id => "message-00137:05"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Error"
				"action" => "login rejected"
				"reason" => "new logins disabled"
					"[event][id]" => "00137:05"
					"[rsa][message][id1]" => "00137:05"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00137:06
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]: <fld2> login rejected - new logins disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} login rejected - new logins disabled" }
				id => "message-00137:06"
				add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"action" => "login rejected"
				"reason" => "new logins disabled"
					"[event][id]" => "00137:06"
					"[rsa][message][id1]" => "00137:06"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00138:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> no memory free: junk threshold: junk 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} no memory free: junk threshold: junk" }
				id => "message-00138:00"
				add_field => {
				"action" => "Session - no memory free"
					"[event][id]" => "00138:00"
					"[rsa][message][id1]" => "00138:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00138:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> no memory free: junk threshold: junk 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} no memory free: junk threshold: junk" }
				id => "message-00138:01"
				add_field => {
				"action" => "Session - no memory free"
					"[event][id]" => "00138:01"
					"[rsa][message][id1]" => "00138:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00138:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld3> no memory free: junk threshold: junk 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld3} no memory free: junk threshold: junk" }
				id => "message-00138:02"
				add_field => {
				"action" => "Session - no memory free"
					"[event][id]" => "00138:02"
					"[rsa][message][id1]" => "00138:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00138:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld3> no memory free: junk threshold: junk
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld3} no memory free: junk threshold: junk" }
				id => "message-00138:03"
				add_field => {
				"action" => "Session - no memory free"
					"[event][id]" => "00138:03"
					"[rsa][message][id1]" => "00138:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00138:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> no memory free: junk threshold: junk
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} no memory free: junk threshold: junk" }
				id => "message-00138:04"
				add_field => {
				"action" => "Session - no memory free"
					"[event][id]" => "00138:04"
					"[rsa][message][id1]" => "00138:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00138:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> no memory free: junk threshold: junk 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} no memory free: junk threshold: junk" }
				id => "message-00138:05"
				add_field => {
				"action" => "Session - no memory free"
					"[event][id]" => "00138:05"
					"[rsa][message][id1]" => "00138:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00138:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld2> no memory free: junk threshold: junk 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} no memory free: junk threshold: junk" }
				id => "message-00138:06"
				add_field => {
				"action" => "Session - no memory free"
					"[event][id]" => "00138:06"
					"[rsa][message][id1]" => "00138:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> only one session/static address allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} only one session/static address allowed" }
				id => "message-00139:00"
				add_field => {
					"[event][id]" => "00139:00"
					"[rsa][message][id1]" => "00139:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> only one session/static address allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} only one session/static address allowed" }
				id => "message-00139:01"
				add_field => {
					"[event][id]" => "00139:01"
					"[rsa][message][id1]" => "00139:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld10> only one session/static address allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld10} only one session/static address allowed" }
				id => "message-00139:02"
				add_field => {
					"[event][id]" => "00139:02"
					"[rsa][message][id1]" => "00139:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld10> only one session/static address allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld10} only one session/static address allowed" }
				id => "message-00139:03"
				add_field => {
					"[event][id]" => "00139:03"
					"[rsa][message][id1]" => "00139:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> only one session/static address allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} only one session/static address allowed" }
				id => "message-00139:04"
				add_field => {
					"[event][id]" => "00139:04"
					"[rsa][message][id1]" => "00139:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> only one session/static address allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} only one session/static address allowed" }
				id => "message-00139:05"
				add_field => {
					"[event][id]" => "00139:05"
					"[rsa][message][id1]" => "00139:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00139:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld2> only one session/static address allowed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} only one session/static address allowed" }
				id => "message-00139:06"
				add_field => {
					"[event][id]" => "00139:06"
					"[rsa][message][id1]" => "00139:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00140:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> pool address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} pool address [%{saddr}] already in use" }
				id => "message-00140:00"
				add_field => {
					"[event][id]" => "00140:00"
					"[rsa][message][id1]" => "00140:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00140:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> pool address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} pool address [%{saddr}] already in use" }
				id => "message-00140:01"
				add_field => {
					"[event][id]" => "00140:01"
					"[rsa][message][id1]" => "00140:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00140:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> pool address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} pool address [%{saddr}] already in use" }
				id => "message-00140:02"
				add_field => {
					"[event][id]" => "00140:02"
					"[rsa][message][id1]" => "00140:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00140:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld2> pool address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld2} pool address [%{saddr}] already in use" }
				id => "message-00140:03"
				add_field => {
					"[event][id]" => "00140:03"
					"[rsa][message][id1]" => "00140:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00140:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> pool address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} pool address [%{saddr}] already in use" }
				id => "message-00140:04"
				add_field => {
					"[event][id]" => "00140:04"
					"[rsa][message][id1]" => "00140:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00140:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld3> pool address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld3} pool address [%{saddr}] already in use" }
				id => "message-00140:05"
				add_field => {
					"[event][id]" => "00140:05"
					"[rsa][message][id1]" => "00140:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00140:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld2> pool address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} pool address [%{saddr}] already in use" }
				id => "message-00140:06"
				add_field => {
					"[event][id]" => "00140:06"
					"[rsa][message][id1]" => "00140:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00141:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> session directed to use server <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} session directed to use server %{saddr}" }
				id => "message-00141:00"
				add_field => {
					"[event][id]" => "00141:00"
					"[rsa][message][id1]" => "00141:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00141:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>]: <fld6> session directed to use server <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}]: %{fld6} session directed to use server %{saddr}" }
				id => "message-00141:01"
				add_field => {
					"[event][id]" => "00141:01"
					"[rsa][message][id1]" => "00141:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00141:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld2> session directed to use server <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld2} session directed to use server %{saddr}" }
				id => "message-00141:02"
				add_field => {
					"[event][id]" => "00141:02"
					"[rsa][message][id1]" => "00141:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00141:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld10> session directed to use server <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld10} session directed to use server %{saddr}" }
				id => "message-00141:03"
				add_field => {
					"[event][id]" => "00141:03"
					"[rsa][message][id1]" => "00141:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00141:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>, mail=<user_address>]: <fld3> session directed to use server <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}]: %{fld3} session directed to use server %{saddr}" }
				id => "message-00141:04"
				add_field => {
					"[event][id]" => "00141:04"
					"[rsa][message][id1]" => "00141:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00141:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld2>, cn=<username>]: <fld10> session directed to use server <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld2}, cn=%{username}]: %{fld10} session directed to use server %{saddr}" }
				id => "message-00141:05"
				add_field => {
					"[event][id]" => "00141:05"
					"[rsa][message][id1]" => "00141:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00141:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld2> session directed to use server <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld2} session directed to use server %{saddr}" }
				id => "message-00141:06"
				add_field => {
					"[event][id]" => "00141:06"
					"[rsa][message][id1]" => "00141:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00142:00
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=nortel vpn (<username>), o=<fld3>, l=<fld4>, st=<fld5>, c=<fld6>]: <fld7> static address [<saddr>] already in use
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=nortel vpn (%{username}), o=%{fld3}, l=%{fld4}, st=%{fld5}, c=%{fld6}]: %{fld7} static address [%{saddr}] already in use" }
				id => "message-00142:00"
				add_field => {
					"[event][id]" => "00142:00"
					"[rsa][message][id1]" => "00142:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00142:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>(vpn), o=<fld3>, l=<fld4>, st=<fld5>, c=<fld6>]: <fld7> static address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}(vpn), o=%{fld3}, l=%{fld4}, st=%{fld5}, c=%{fld6}]: %{fld7} static address [%{saddr}] already in use" }
				id => "message-00142:01"
				add_field => {
					"[event][id]" => "00142:01"
					"[rsa][message][id1]" => "00142:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00142:02
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>, mail=<user_address>]: <fld7> static address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}, mail=%{user_address}]: %{fld7} static address [%{saddr}] already in use" }
				id => "message-00142:02"
				add_field => {
					"[event][id]" => "00142:02"
					"[rsa][message][id1]" => "00142:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00142:03
		# line in RSA:  Security [<fld1>] Session: <protocol>[cn=<username>]: <fld10> static address [<saddr>] already in use
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[cn=%{username}]: %{fld10} static address [%{saddr}] already in use" }
				id => "message-00142:03"
				add_field => {
					"[event][id]" => "00142:03"
					"[rsa][message][id1]" => "00142:03"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00142:04
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld3>, cn=<username>, mail=<user_address>]: <fld4> static address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld3}, cn=%{username}, mail=%{user_address}]: %{fld4} static address [%{saddr}] already in use" }
				id => "message-00142:04"
				add_field => {
					"[event][id]" => "00142:04"
					"[rsa][message][id1]" => "00142:04"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00142:05
		# line in RSA:  Security [<fld1>] Session: <protocol>[<fld3>, cn=<username>]: <fld4> static address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{fld3}, cn=%{username}]: %{fld4} static address [%{saddr}] already in use" }
				id => "message-00142:05"
				add_field => {
					"[event][id]" => "00142:05"
					"[rsa][message][id1]" => "00142:05"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00142:06
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]: <fld4> static address [<saddr>] already in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]: %{fld4} static address [%{saddr}] already in use" }
				id => "message-00142:06"
				add_field => {
					"[event][id]" => "00142:06"
					"[rsa][message][id1]" => "00142:06"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00143:00
		# line in RSA: Security [<fld1>] Session: <username> uid invalid - authentication failed 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{username} uid invalid - authentication failed" }
				id => "message-00143:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
				"reason" => "invalid uid"
					"[event][id]" => "00143:00"
					"[rsa][message][id1]" => "00143:00"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:00
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=nortel vpn (<username>), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>] no LOCAL account found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=nortel vpn (%{username}), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}] no LOCAL account found" }
				id => "message-00158:00"
				add_field => {
				"action" => "no LOCAL account found"
					"[event][id]" => "00158:00"
					"[rsa][message][id1]" => "00158:00"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:01
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=<username>(vpn), o=<fld2>, l=<fld3>, st=<fld4>, c=<fld5>] no LOCAL account found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=%{username}(vpn), o=%{fld2}, l=%{fld3}, st=%{fld4}, c=%{fld5}] no LOCAL account found" }
				id => "message-00158:01"
				add_field => {
				"action" => "no LOCAL account found"
					"[event][id]" => "00158:01"
					"[rsa][message][id1]" => "00158:01"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:02
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld2>, c=<fld3>] no LOCAL account found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld2}, c=%{fld3}] no LOCAL account found" }
				id => "message-00158:02"
				add_field => {
				"action" => "no LOCAL account found"
					"[event][id]" => "00158:02"
					"[rsa][message][id1]" => "00158:02"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:03
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=<username>, mail=<user_address>] no LOCAL account found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=%{username}, mail=%{user_address}] no LOCAL account found" }
				id => "message-00158:03"
				add_field => {
				"action" => "no LOCAL account found"
					"[event][id]" => "00158:03"
					"[rsa][message][id1]" => "00158:03"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:04
		# line in RSA: Security [<fld1>] Account: <protocol>[cn=<username>] no LOCAL account found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[cn=%{username}] no LOCAL account found" }
				id => "message-00158:04"
				add_field => {
				"action" => "no LOCAL account found"
					"[event][id]" => "00158:04"
					"[rsa][message][id1]" => "00158:04"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:05
		# line in RSA: Security [<fld1>] Account: <protocol>[<fld2>, cn=<username>, mail=<user_address>] no LOCAL account found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[%{fld2}, cn=%{username}, mail=%{user_address}] no LOCAL account found" }
				id => "message-00158:05"
				add_field => {
				"action" => "no LOCAL account found"
					"[event][id]" => "00158:05"
					"[rsa][message][id1]" => "00158:05"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:06
		# line in RSA: Security [<fld1>] Account: <protocol>[<fld2>, cn=<username>] no LOCAL account found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[%{fld2}, cn=%{username}] no LOCAL account found" }
				id => "message-00158:06"
				add_field => {
				"action" => "no LOCAL account found"
					"[event][id]" => "00158:06"
					"[rsa][message][id1]" => "00158:06"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:07
		# line in RSA: Security [<fld1>] Account: <protocol>[<username>] no LOCAL account found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[%{username}] no LOCAL account found" }
				id => "message-00158:07"
				add_field => {
				"action" => "no LOCAL account found"
					"[event][id]" => "00158:07"
					"[rsa][message][id1]" => "00158:07"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00158:08
		# line in RSA:  Security [<fld1>] Account: <protocol>[<username>] already exists in entry account= <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Account: %{protocol}[%{username}] already exists in entry account= %{info}" }
				id => "message-00158:08"
				add_field => {
				"action" => "account already exists"
					"[event][id]" => "00158:08"
					"[rsa][message][id1]" => "00158:08"
					"[event][categoryid]" => "1303000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00161:00
		# line in RSA: Security [<fld1>] Alert: IP OPTIONS RECEIVED from <daddr> (<event_description>) 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Alert: IP OPTIONS RECEIVED from %{daddr} (%{event_description})" }
				id => "message-00161:00"
				add_field => {
					"[event][id]" => "00161:00"
					"[rsa][message][id1]" => "00161:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00180:00
		# line in RSA: Security [<fld1>] Management: Request for <fld2> denied, requires login
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Management: Request for %{fld2} denied, requires login" }
				id => "message-00180:00"
				add_field => {
				"action" => "Request denied"
				"reason" => "login required"
					"[event][id]" => "00180:00"
					"[rsa][message][id1]" => "00180:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00181:00
		# line in RSA: Security [<fld1>] Management: User Logged Off: <username> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Management: User Logged Off: %{username}" }
				id => "message-00181:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"action" => "User Logged Off"
					"[event][id]" => "00181:00"
					"[rsa][message][id1]" => "00181:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00182:00
		# line in RSA: Security [<fld1>] <fld2>: Authentication server does not support authentication method 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] %{fld2}: Authentication server does not support authentication method" }
				id => "message-00182:00"
				add_field => {
				"action" => "Authentication server does not support authentication method"
					"[event][id]" => "00182:00"
					"[rsa][message][id1]" => "00182:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00182:01
		# line in RSA: Security [<fld1>] ExtLdapAuthServer: authentication failed - no available ExtLdap servers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] ExtLdapAuthServer: authentication failed - no available ExtLdap servers" }
				id => "message-00182:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00182:01"
					"[rsa][message][id1]" => "00182:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00182:02
		# line in RSA: Security [<fld1>] Radius: authentication failed - no available Radius servers 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Radius: authentication failed - no available Radius servers" }
				id => "message-00182:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00182:02"
					"[rsa][message][id1]" => "00182:02"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00182:03
		# line in RSA: Security [<fld1>] ExtLdapAuthServer: Authenticate {IPSEC | LOCAL}[<username>] user bind { as | failed for } [<fld2>] 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+ExtLdapAuthServer:[\s]+Authenticate[\s]+(IPSEC[\s]+|[\s]*LOCAL)\[(?<username>[^\]]*)\][\s]+user[\s]+bind[\s]+([\s]*as[\s]+|[\s]*failed[\s]+for[\s]+)[\s]+\[(?<fld2>[^\]]*)\][\s]+$" }
				id => "message-00182:03"
				add_field => {
					"[event][id]" => "00182:03"
					"[rsa][message][id1]" => "00182:03"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00182:04
		# line in RSA: Security [<fld1>] RADIUS authentication server <saddr> pausing for <fld2> minutes, transmission failure limit (<fld3>) exceeded
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS authentication server %{saddr} pausing for %{fld2} minutes, transmission failure limit (%{fld3}) exceeded" }
				id => "message-00182:04"
				add_field => {
					"[event][id]" => "00182:04"
					"[rsa][message][id1]" => "00182:04"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00182:05
		# line in RSA: Security [<fld1>] RADIUS authentication server <saddr> back in service
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] RADIUS authentication server %{saddr} back in service" }
				id => "message-00182:05"
				add_field => {
					"[event][id]" => "00182:05"
					"[rsa][message][id1]" => "00182:05"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:00
		# line in RSA: Security [<fld1>] Deleted entry [account=<fld2>, cn=<username>, ou=<fld3>, o=<group>, c=<fld4>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Deleted entry [account=%{fld2}, cn=%{username}, ou=%{fld3}, o=%{group}, c=%{fld4}]" }
				id => "message-00183:00"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted entry"
					"[event][id]" => "00183:00"
					"[rsa][message][id1]" => "00183:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:01
		# line in RSA: Security [<fld1>] Deleted { tree | entry } [cn=<username>, ou=<fld2>, o=<group>, c=<fld3>] 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+Deleted[\s]+([\s]*tree[\s]+|[\s]*entry[\s]+)[\s]+\[cn=(?<username>[^,]*),[\s]+ou=(?<fld2>[^,]*),[\s]+o=(?<group>[^,]*),[\s]+c=(?<fld3>[^\]]*)\][\s]+$" }
				id => "message-00183:01"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted tree or entry"
					"[event][id]" => "00183:01"
					"[rsa][message][id1]" => "00183:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:02
		# line in RSA: Security [<fld1>] Deleted entry [account=<fld2>, cn=<username>, o=<group>, c=<fld3>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Deleted entry [account=%{fld2}, cn=%{username}, o=%{group}, c=%{fld3}]" }
				id => "message-00183:02"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted entry"
					"[event][id]" => "00183:02"
					"[rsa][message][id1]" => "00183:02"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:03
		# line in RSA: Security [<fld1>] Deleted entry [{ account=<fld2>, cn=<username>, cn=<fld3> | account=<fld2>, ou=<username>, ou=<fld3> | cn=<username>, cn=<fld3> | ou=<username>, ou=<fld3>} o=<group>, c=<fld4>] 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+Deleted[\s]+entry[\s]+\[([\s]*account=(?<fld2>[^,]*),[\s]+cn=(?<username>[^,]*),[\s]+cn=(?<fld3>[^\s]*)[\s]+|[\s]*account=(?<fld2>[^,]*),[\s]+ou=(?<username>[^,]*),[\s]+ou=(?<fld3>[^\s]*)[\s]+|[\s]*cn=(?<username>[^,]*),[\s]+cn=(?<fld3>[^\s]*)[\s]+|[\s]*ou=(?<username>[^,]*),[\s]+ou=(?<fld3>[^\s]*))[\s]+o=(?<group>[^,]*),[\s]+c=(?<fld4>[^\]]*)\][\s]+$" }
				id => "message-00183:03"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted entry"
					"[event][id]" => "00183:03"
					"[rsa][message][id1]" => "00183:03"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:04
		# line in RSA: Security [<fld1>] Deleted { entry | tree } [{ cn=<username> | ou=<username>, ou=<fld2> }, o=<group>, c=<fld3>] 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+Deleted[\s]+([\s]*entry[\s]+|[\s]*tree[\s]+)[\s]+\[([\s]*cn=(?<username>[^\s]*)[\s]+|[\s]*ou=(?<username>[^,]*),[\s]+ou=(?<fld2>[^\s]*)[\s]+),[\s]+o=(?<group>[^,]*),[\s]+c=(?<fld3>[^\]]*)\][\s]+$" }
				id => "message-00183:04"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted entry or tree"
					"[event][id]" => "00183:04"
					"[rsa][message][id1]" => "00183:04"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:05
		# line in RSA: Security [<fld1>] Copied { entry | subentries of } [{account=<fld2>, cn=<username>, | cn=<fld3>, cn=<username>, |cn=<username>, ou=<fld4>,} <fld5> o=<group>, c=<fld>] to <msg>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+Copied[\s]+([\s]*entry[\s]+|[\s]*subentries[\s]+of[\s]+)[\s]+\[(account=(?<fld2>[^,]*),[\s]+cn=(?<username>[^,]*),[\s]+|[\s]*cn=(?<fld3>[^,]*),[\s]+cn=(?<username>[^,]*),[\s]+|cn=(?<username>[^,]*),[\s]+ou=(?<fld4>[^,]*),)[\s]+(?<fld5>[^\s]*)[\s]+o=(?<group>[^,]*),[\s]+c=(?<fld>[^\]]*)\][\s]+to[\s]+(?<msg>.*)$" }
				id => "message-00183:05"
				add_field => {
				"ec_activity" => "Copy"
				"ec_theme" => "Configuration"
					"[event][id]" => "00183:05"
					"[rsa][message][id1]" => "00183:05"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:06
		# line in RSA: Security [<fld1>] Deleted entry [account=<fld2>, ou=<fld3>, o=<fld5>, c=<fld4>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Deleted entry [account=%{fld2}, ou=%{fld3}, o=%{fld5}, c=%{fld4}]" }
				id => "message-00183:06"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted entry"
					"[event][id]" => "00183:06"
					"[rsa][message][id1]" => "00183:06"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:07
		# line in RSA: Security [<fld1>] Deleted entry [ou=<fld2>, o=<fld3>, c=<fld4>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Deleted entry [ou=%{fld2}, o=%{fld3}, c=%{fld4}]" }
				id => "message-00183:07"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted entry"
					"[event][id]" => "00183:07"
					"[rsa][message][id1]" => "00183:07"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:08
		# line in RSA: Security [<fld1>] Deleted tree [account=<fld2>, cn=<fld3>, ou=<fld4>, o=<fld5>, c=<fld6>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Deleted tree [account=%{fld2}, cn=%{fld3}, ou=%{fld4}, o=%{fld5}, c=%{fld6}]" }
				id => "message-00183:08"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted tree"
					"[event][id]" => "00183:08"
					"[rsa][message][id1]" => "00183:08"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00183:09
		# line in RSA: Security [<fld1>] Deleted tree [ou=<fld2>, o=<fld3>, c=<fld4>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Deleted tree [ou=%{fld2}, o=%{fld3}, c=%{fld4}]" }
				id => "message-00183:09"
				add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"action" => "Deleted tree"
					"[event][id]" => "00183:09"
					"[rsa][message][id1]" => "00183:09"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00184:03
		# line in RSA:  Security [<fld1>] Ldap: <fld2> connected <daddr>[<dport>] cn=<username>, ou=<group>, ou=<fld3>, <fld4> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Ldap: %{fld2} connected %{daddr}[%{dport}] cn=%{username}, ou=%{group}, ou=%{fld3}, %{fld4}" }
				id => "message-00184:03"
				add_field => {
				"action" => "Ldap connected"
					"[event][id]" => "00184:03"
					"[rsa][message][id1]" => "00184:03"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00184:00
		# line in RSA:  Security [<fld1>] Ldap: <fld2> connected <daddr>[<dport>] <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Ldap: %{fld2} connected %{daddr}[%{dport}] %{fld3}" }
				id => "message-00184:00"
				add_field => {
				"action" => "Ldap connected"
					"[event][id]" => "00184:00"
					"[rsa][message][id1]" => "00184:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00184:01
		# line in RSA: Security [<fld1>] Ldap: Open <fld2> failed: - LDAP: <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Ldap: Open %{fld2} failed: - LDAP: %{event_description}" }
				id => "message-00184:01"
				add_field => {
				"action" => "Ldap Open failure"
					"[event][id]" => "00184:01"
					"[rsa][message][id1]" => "00184:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00184:02
		# line in RSA: Security [<fld1>] Ldap: ldap_open failed <daddr>[<dport>] - <event_description> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Ldap: ldap_open failed %{daddr}[%{dport}] - %{event_description}" }
				id => "message-00184:02"
				add_field => {
					"[event][id]" => "00184:02"
					"[rsa][message][id1]" => "00184:02"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00185:00
		# line in RSA: Security [<fld1>] Management: Invalid User Id (<username>) or Password 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Management: Invalid User Id (%{username}) or Password" }
				id => "message-00185:00"
				add_field => {
				"action" => "invalid user id"
					"[event][id]" => "00185:00"
					"[rsa][message][id1]" => "00185:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00185:01
		# line in RSA: Security [<fld1>] depth=<fld2>, trusted issuer found earlier 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] depth=%{fld2}, trusted issuer found earlier" }
				id => "message-00185:01"
				add_field => {
				"action" => "trusted issuer found earlier"
					"[event][id]" => "00185:01"
					"[rsa][message][id1]" => "00185:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00186:00
		# line in RSA: Security [<fld1>] Session: <protocol>[<username>]:<fld2> {TELNET: | FTP:} logged in from <saddr> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+Session:[\s]+(?<protocol>[^\[]*)\[(?<username>[^\]]*)\]:(?<fld2>[^\s]*)[\s]+(TELNET:[\s]+|[\s]*FTP:)[\s]+logged[\s]+in[\s]+from[\s]+(?<saddr>[^\s]*)[\s]+$" }
				id => "message-00186:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "00186:00"
					"[rsa][message][id1]" => "00186:00"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00186:01
		# line in RSA:  Security [<fld1>] Session: <protocol>[<username>]:<fld2> <fld3> Get filename <filename> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: %{protocol}[%{username}]:%{fld2} %{fld3} Get filename %{filename}" }
				id => "message-00186:01"
				add_field => {
					"[event][id]" => "00186:01"
					"[rsa][message][id1]" => "00186:01"
					"[event][categoryid]" => "1301010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00224:00
		# line in RSA:   Security.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<fld4>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{fld4}'" }
				id => "message-00224:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00224:00"
					"[rsa][message][id1]" => "00224:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00225:00
		# line in RSA:  Security [<fld18>] Security: System ID is <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] Security: System ID is %{fld1}" }
				id => "message-00225:00"
				add_field => {
					"[event][id]" => "00225:00"
					"[rsa][message][id1]" => "00225:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00226:00
		# line in RSA:  Security [<fld18>] LdapMonitorTask: Database content version at <saddr>[<sport>] is <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] LdapMonitorTask: Database content version at %{saddr}[%{sport}] is %{fld1}" }
				id => "message-00226:00"
				add_field => {
					"[event][id]" => "00226:00"
					"[rsa][message][id1]" => "00226:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00226:01
		# line in RSA:  Security [<fld18>] LdapMonitorTask: Latest upgrade LDIF content version is <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] LdapMonitorTask: Latest upgrade LDIF content version is %{fld1}" }
				id => "message-00226:01"
				add_field => {
					"[event][id]" => "00226:01"
					"[rsa][message][id1]" => "00226:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00226:02
		# line in RSA:  Security [<fld18>] LdapMonitorTask: Database content upgrade at <saddr>[<sport>] succeeded 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] LdapMonitorTask: Database content upgrade at %{saddr}[%{sport}] succeeded" }
				id => "message-00226:02"
				add_field => {
					"[event][id]" => "00226:02"
					"[rsa][message][id1]" => "00226:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00226:03
		# line in RSA:  Security [<fld18>] LdapMonitorTask: Upgrading database content at <saddr>[<sport>] from version <fld1> to versions <fld2> through <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld18}] LdapMonitorTask: Upgrading database content at %{saddr}[%{sport}] from version %{fld1} to versions %{fld2} through %{fld3}" }
				id => "message-00226:03"
				add_field => {
					"[event][id]" => "00226:03"
					"[rsa][message][id1]" => "00226:03"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:00
		# line in RSA:  Security [13] c_check_ca_root: user de-select server cert
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [13] c_check_ca_root: user de-select server cert" }
				id => "message-00257:00"
				add_field => {
					"[event][id]" => "00257:00"
					"[rsa][message][id1]" => "00257:00"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:01
		# line in RSA:  Security [<fld1>] Alert: SUSPICIOUS FRAGMENTS RECEIVED from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Alert: SUSPICIOUS FRAGMENTS RECEIVED from %{saddr}" }
				id => "message-00257:01"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
					"[event][id]" => "00257:01"
					"[rsa][message][id1]" => "00257:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:02
		# line in RSA: Security [<fld1>] LocalAuthServer: failed remove - filename 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] LocalAuthServer: failed remove - filename" }
				id => "message-00257:02"
				add_field => {
				"action" => "failed remove"
					"[event][id]" => "00257:02"
					"[rsa][message][id1]" => "00257:02"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:03
		# line in RSA: Security [<fld1>] Error in port filter rule "<service>" - missing port number 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Error in port filter rule \"%{service}\" - missing port number" }
				id => "message-00257:03"
				add_field => {
				"reason" => "missing port number"
					"[event][id]" => "00257:03"
					"[rsa][message][id1]" => "00257:03"
					"[event][categoryid]" => "1603110000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:04
		# line in RSA: Security [<fld1>] Alert: LAND DENIAL OF SERVICE ATTACK targetted at <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Alert: LAND DENIAL OF SERVICE ATTACK targetted at %{saddr}" }
				id => "message-00257:04"
				add_field => {
				"ec_subject" => "Virus"
				"ec_theme" => "TEV"
				"reason" => "LAND DENIAL OF SERVICE ATTACK"
					"[event][id]" => "00257:04"
					"[rsa][message][id1]" => "00257:04"
					"[event][categoryid]" => "1002000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:05
		# line in RSA: Security [<fld1>] <service>: login disallowed - all sessions in use 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] %{service}: login disallowed - all sessions in use" }
				id => "message-00257:05"
				add_field => {
				"action" => "login disallowed"
				"reason" => "all sessions in use"
					"[event][id]" => "00257:05"
					"[rsa][message][id1]" => "00257:05"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:06
		# line in RSA: Security [<fld1>] <service>: Client disconnected session before initialized 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] %{service}: Client disconnected session before initialized" }
				id => "message-00257:06"
				add_field => {
				"reason" => "Client disconnected session before initialized"
					"[event][id]" => "00257:06"
					"[rsa][message][id1]" => "00257:06"
					"[event][categoryid]" => "1801030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:07
		# line in RSA: Security [<fld1>] <service>: Switching <protocol> locations may impact <fld2> certificate identification, a re-load may be necessary.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] %{service}: Switching %{protocol} locations may impact %{fld2} certificate identification, a re-load may be necessary." }
				id => "message-00257:07"
				add_field => {
				"action" => "Switching LDAP locations may impact SSL certificate identification"
					"[event][id]" => "00257:07"
					"[rsa][message][id1]" => "00257:07"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:10
		# line in RSA: Security [<fld1>] Session: LOCAL[admin]:<fld2> <protocol> Put filename <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: LOCAL[admin]:%{fld2} %{protocol} Put filename %{filename}" }
				id => "message-00257:10"
				add_field => {
				"action" => "Put filename"
					"[event][id]" => "00257:10"
					"[rsa][message][id1]" => "00257:10"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:11
		# line in RSA: Security [<fld1>] Radius: Received unknown attribute <fld2> of length <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Radius: Received unknown attribute %{fld2} of length %{fld3}" }
				id => "message-00257:11"
				add_field => {
				"action" => "Radius: Received unknown attribute"
					"[event][id]" => "00257:11"
					"[rsa][message][id1]" => "00257:11"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:12
		# line in RSA: Security [<fld1>] Radius: Bad packet detected
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Radius: Bad packet detected" }
				id => "message-00257:12"
				add_field => {
				"action" => "Radius - Bad packet detected"
					"[event][id]" => "00257:12"
					"[rsa][message][id1]" => "00257:12"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:13
		# line in RSA:  Security [<fld1>] FilterRule <fld2> being referenced by <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] FilterRule %{fld2} being referenced by %{fld3}" }
				id => "message-00257:13"
				add_field => {
				"action" => "FilterRule being referenced "
					"[event][id]" => "00257:13"
					"[rsa][message][id1]" => "00257:13"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:14
		# line in RSA:  Security [<fld1>] Tunnel Filter <fld2> being referenced by <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Tunnel Filter %{fld2} being referenced by %{fld3}" }
				id => "message-00257:14"
				add_field => {
				"action" => "Tunnel Filter being referenced "
					"[event][id]" => "00257:14"
					"[rsa][message][id1]" => "00257:14"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:15
		# line in RSA:  Security [<fld1>] Authenticate<fld2> Result <fld3> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Authenticate%{fld2} Result %{fld3}" }
				id => "message-00257:15"
				add_field => {
					"[event][id]" => "00257:15"
					"[rsa][message][id1]" => "00257:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:16
		# line in RSA:  Security [<fld1>] Session: IPSEC[<fld2>] <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Session: IPSEC[%{fld2}] %{info}" }
				id => "message-00257:16"
				add_field => {
				"method" => "IPSEC"
				"action" => "IPSEC user session activity"
					"[event][id]" => "00257:16"
					"[rsa][message][id1]" => "00257:16"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:17
		# line in RSA:  Security [<fld1>] Duplicate UID already exists in account account=<fld2>, cn=<username>, o=<fld3>, c=<fld4>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Security [%{fld1}] Duplicate UID already exists in account account=%{fld2}, cn=%{username}, o=%{fld3}, c=%{fld4}." }
				id => "message-00257:17"
				add_field => {
				"action" => "Duplicate UID account"
					"[event][id]" => "00257:17"
					"[rsa][message][id1]" => "00257:17"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:18
		# line in RSA: Security [<fld1>] No valid CRLs are present; CRL checking is not mandatory, certificate [CN=<username>, {serialnumber=<serial_number>| OU=<group>}, O=<fld2>, C=<fld3>] is allowed 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+No[\s]+valid[\s]+CRLs[\s]+are[\s]+present;[\s]+CRL[\s]+checking[\s]+is[\s]+not[\s]+mandatory,[\s]+certificate[\s]+\[CN=(?<username>[^,]*),[\s]+(serialnumber=(?<serial_number>[^,]*)|[\s]*OU=(?<group>[^,]*)),[\s]+O=(?<fld2>[^,]*),[\s]+C=(?<fld3>[^\]]*)\][\s]+is[\s]+allowed[\s]+$" }
				id => "message-00257:18"
				add_field => {
				"action" => "No valid CRLs are present"
					"[event][id]" => "00257:18"
					"[rsa][message][id1]" => "00257:18"
					"[event][categoryid]" => "1608000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:19
		# line in RSA: Security [<fld1>] CRL is disabled; CRL will not be validated, certificate [{ CN=<username>, serialnumber=<serial_number>, OU=<group>, O=<fld2>, C=<fld3> | O=<fld4>, C=<fld5> }] is allowed 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^Security[\s]+\[(?<fld1>[^\]]*)\][\s]+CRL[\s]+is[\s]+disabled;[\s]+CRL[\s]+will[\s]+not[\s]+be[\s]+validated,[\s]+certificate[\s]+\[([\s]*CN=(?<username>[^,]*),[\s]+serialnumber=(?<serial_number>[^,]*),[\s]+OU=(?<group>[^,]*),[\s]+O=(?<fld2>[^,]*),[\s]+C=(?<fld3>[^\s]*)[\s]+|[\s]*O=(?<fld4>[^,]*),[\s]+C=(?<fld5>[^\s]*)[\s]+)\][\s]+is[\s]+allowed[\s]+$" }
				id => "message-00257:19"
				add_field => {
				"action" => "No valid CRLs are present"
					"[event][id]" => "00257:19"
					"[rsa][message][id1]" => "00257:19"
					"[event][categoryid]" => "1608000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00257:20
		# line in RSA:  <msg> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{msg}" }
				id => "message-00257:20"
				add_field => {
					"[event][id]" => "00257:20"
					"[rsa][message][id1]" => "00257:20"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Session:" {
		# MESSAGE 00160:01
		# line in RSA:  Session: <protocol>[cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld1>, c=<fld2>]: <fld10> Incoming client version (<version>), minimum version (<fld3>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Session: %{protocol}[cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld1}, c=%{fld2}]: %{fld10} Incoming client version (%{version}), minimum version (%{fld3}) %{info}" }
				id => "message-00160:01"
				add_field => {
				"action" => "IPSEC user session activity"
					"[event][id]" => "00160:01"
					"[rsa][message][id1]" => "00160:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00160:02
		# line in RSA:  Session: <protocol>[serialnumber=<serial_number>, cn=<username>, ou=<group>, o=<fld3>, c=<fld4>]: <fld5> Incoming client version (<version>), minimum version (<fld6>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Session: %{protocol}[serialnumber=%{serial_number}, cn=%{username}, ou=%{group}, o=%{fld3}, c=%{fld4}]: %{fld5} Incoming client version (%{version}), minimum version (%{fld6}) %{info}" }
				id => "message-00160:02"
				add_field => {
				"action" => "IPSEC user session activity"
					"[event][id]" => "00160:02"
					"[rsa][message][id1]" => "00160:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00160:00
		# line in RSA:  Session: <protocol>[<username>]: <fld2> Incoming client version (<version>), minimum version (<fld3>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Session: %{protocol}[%{username}]: %{fld2} Incoming client version (%{version}), minimum version (%{fld3}) %{info}" }
				id => "message-00160:00"
				add_field => {
				"action" => "IPSEC user session activity"
					"[event][id]" => "00160:00"
					"[rsa][message][id1]" => "00160:00"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId764
	# line in RSA:  Settings.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<fld4>'
	else if [logstash][msgparser][id] == "msgParserId764" {
		dissect {
			mapping => { "message" => "Settings.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{fld4}'" }
			id => "msgParserId764"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Setup" {
		# MESSAGE 00216:00
		# line in RSA:  Setup { non-tunnel | tunnel } traffic meter(rate=<fld1>) on <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Setup[\s]+([\s]*non\-tunnel[\s]+|[\s]*tunnel[\s]+)[\s]+traffic[\s]+meter\(rate=(?<fld1>[^\)]*)\)[\s]+on[\s]+(?<fld2>.*)$" }
				id => "message-00216:00"
				add_field => {
					"[event][id]" => "00216:00"
					"[rsa][message][id1]" => "00216:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00216:01
		# line in RSA:  Setup admission control { meter's Ip <saddr> | meter(limit=<fld1>) on <fld2> | meters Ip <saddr>} 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Setup[\s]+admission[\s]+control[\s]+([\s]*meter's[\s]+Ip[\s]+(?<saddr>[^\s]*)[\s]+|[\s]*meter\(limit=(?<fld1>[^\)]*)\)[\s]+on[\s]+(?<fld2>[^\s]*)[\s]+|[\s]*meters[\s]+Ip[\s]+(?<saddr>[^\s]*))[\s]+$" }
				id => "message-00216:01"
				add_field => {
					"[event][id]" => "00216:01"
					"[rsa][message][id1]" => "00216:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Shutdown" {
		# MESSAGE 00192:00
		# line in RSA:  Shutdown [<fld1>] shutting down system in <fld2> seconds. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Shutdown [%{fld1}] shutting down system in %{fld2} seconds." }
				id => "message-00192:00"
				add_field => {
					"[event][id]" => "00192:00"
					"[rsa][message][id1]" => "00192:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00192:01
		# line in RSA:  Shutdown.<fld1> changed from '<fld2>' to '<fld3>' by user '<username>' @ '<saddr>' 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Shutdown.%{fld1} changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{saddr}'" }
				id => "message-00192:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00192:01"
					"[rsa][message][id1]" => "00192:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00192:02
		# line in RSA: Shutdown [<fld1>] Powering down system after shutdown 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Shutdown [%{fld1}] Powering down system after shutdown" }
				id => "message-00192:02"
				add_field => {
				"action" => "Powering down system after shutdown"
					"[event][id]" => "00192:02"
					"[rsa][message][id1]" => "00192:02"
					"[event][categoryid]" => "1611000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "Slapd" {
		# MESSAGE 00219:00
		# line in RSA:  Slapd [<fld1>] Base Dn in <filename> file [o=<fld2>, c=<fld3>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] Base Dn in %{filename} file [o=%{fld2}, c=%{fld3}]" }
				id => "message-00219:00"
				add_field => {
					"[event][id]" => "00219:00"
					"[rsa][message][id1]" => "00219:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:01
		# line in RSA:  Slapd [<fld1>] Index file check is complete 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] Index file check is complete" }
				id => "message-00219:01"
				add_field => {
					"[event][id]" => "00219:01"
					"[rsa][message][id1]" => "00219:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:02
		# line in RSA:  Slapd [<fld1>] slapd starting 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] slapd starting" }
				id => "message-00219:02"
				add_field => {
					"[event][id]" => "00219:02"
					"[rsa][message][id1]" => "00219:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:03
		# line in RSA: Slapd.<fld1>changed from '<fld2>' to '<fld3>' by user '<username>' @ '<fld4>'
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd.%{fld1}changed from '%{fld2}' to '%{fld3}' by user '%{username}' @ '%{fld4}'" }
				id => "message-00219:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "00219:03"
					"[rsa][message][id1]" => "00219:03"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:04
		# line in RSA: Slapd [<fld1>] Completed restore of <fld2> database records from <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] Completed restore of %{fld2} database records from %{filename}" }
				id => "message-00219:04"
				add_field => {
				"action" => "Completed restore of database records"
					"[event][id]" => "00219:04"
					"[rsa][message][id1]" => "00219:04"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:05
		# line in RSA:  Slapd [<fld1>] <fld2> storing record <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] %{fld2} storing record %{fld3}" }
				id => "message-00219:05"
				add_field => {
					"[event][id]" => "00219:05"
					"[rsa][message][id1]" => "00219:05"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:06
		# line in RSA:  Slapd [<fld1>] {Done generating | Generating } attribute index for <fld2>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*Slapd[\s]+\[(?<fld1>[^\]]*)\][\s]+(Done[\s]+generating[\s]+|[\s]*Generating[\s]+)[\s]+attribute[\s]+index[\s]+for[\s]+(?<fld2>.*)$" }
				id => "message-00219:06"
				add_field => {
					"[event][id]" => "00219:06"
					"[rsa][message][id1]" => "00219:06"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:07
		# line in RSA:  Slapd [<fld1>] <fld2> generating index files
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] %{fld2} generating index files" }
				id => "message-00219:07"
				add_field => {
					"[event][id]" => "00219:07"
					"[rsa][message][id1]" => "00219:07"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:08
		# line in RSA:  Slapd [<fld1>] slapd shutting down - waiting for <fld2> threads to terminate
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] slapd shutting down - waiting for %{fld2} threads to terminate" }
				id => "message-00219:08"
				add_field => {
					"[event][id]" => "00219:08"
					"[rsa][message][id1]" => "00219:08"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:09
		# line in RSA:  Slapd [<fld1>] slapd stopping
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] slapd stopping" }
				id => "message-00219:09"
				add_field => {
					"[event][id]" => "00219:09"
					"[rsa][message][id1]" => "00219:09"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:10
		# line in RSA:  Slapd [<fld1>] Generating <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] Generating %{fld2}" }
				id => "message-00219:10"
				add_field => {
					"[event][id]" => "00219:10"
					"[rsa][message][id1]" => "00219:10"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:11
		# line in RSA:  Slapd [<fld1>] Backup: restoring database from <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] Backup: restoring database from %{filename}" }
				id => "message-00219:11"
				add_field => {
				"action" => "restoring database"
					"[event][id]" => "00219:11"
					"[rsa][message][id1]" => "00219:11"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:12
		# line in RSA: Slapd [<fld1>] Completed backup of <fld2> records to <filename>  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] Completed backup of %{fld2} records to %{filename}" }
				id => "message-00219:12"
				add_field => {
				"action" => "Completed backup"
					"[event][id]" => "00219:12"
					"[rsa][message][id1]" => "00219:12"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:13
		# line in RSA: Slapd [<fld1>] Backing up to <filename> (without Ids)  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] Backing up to %{filename} (without Ids)" }
				id => "message-00219:13"
				add_field => {
				"action" => "Backing up to file"
					"[event][id]" => "00219:13"
					"[rsa][message][id1]" => "00219:13"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:14
		# line in RSA:  Slapd [<fld1>] id <id> already in next block 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Slapd [%{fld1}] id %{id} already in next block" }
				id => "message-00219:14"
				add_field => {
					"[event][id]" => "00219:14"
					"[rsa][message][id1]" => "00219:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00219:15
		# line in RSA: <msg>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{msg}" }
				id => "message-00219:15"
				add_field => {
					"[event][id]" => "00219:15"
					"[rsa][message][id1]" => "00219:15"
					"[event][categoryid]" => "1609000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId786
	# line in RSA: SnmpVars.<fld1> created by user '<username>' @ '<fld2>'
	else if [logstash][msgparser][id] == "msgParserId786" {
		dissect {
			mapping => { "message" => "SnmpVars.%{fld1} created by user '%{username}' @ '%{fld2}'" }
			id => "msgParserId786"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId787
	# line in RSA:  <service> connect failed: <fld1> to backend  <daddr>:<dport>
	else if [logstash][msgparser][id] == "msgParserId787" {
		dissect {
			mapping => { "message" => "%{service} connect failed: %{fld1} to backend  %{daddr}:%{dport}" }
			id => "msgParserId787"
			add_field => {
				"reason" => "SSL connect failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId788
	# line in RSA:  SslConfig.<fld1> created by user '<username>' @ '<fld2>'
	else if [logstash][msgparser][id] == "msgParserId788" {
		dissect {
			mapping => { "message" => "SslConfig.%{fld1} created by user '%{username}' @ '%{fld2}'" }
			id => "msgParserId788"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "StaticRoute" {
		# MESSAGE 00266:00
		# line in RSA: StaticRoute [<fld1>] cur state <fld2>, new state <fld3> ... 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "StaticRoute [%{fld1}] cur state %{fld2}, new state %{fld3} ..." }
				id => "message-00266:00"
				add_field => {
					"[event][id]" => "00266:00"
					"[rsa][message][id1]" => "00266:00"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00266:01
		# line in RSA: StaticRoute [<fld1>] static route globally enabled ... 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "StaticRoute [%{fld1}] static route globally enabled ..." }
				id => "message-00266:01"
				add_field => {
					"[event][id]" => "00266:01"
					"[rsa][message][id1]" => "00266:01"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00266:02
		# line in RSA: StaticRoute [<fld1>] ip(<daddr>), mask(<dmask>), gw(<gateway>), cost(<fld2>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "StaticRoute [%{fld1}] ip(%{daddr}), mask(%{dmask}), gw(%{gateway}), cost(%{fld2})" }
				id => "message-00266:02"
				add_field => {
					"[event][id]" => "00266:02"
					"[rsa][message][id1]" => "00266:02"
					"[event][categoryid]" => "1802000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00266:03
		# line in RSA: StaticRoute [<fld1>] Trying to modify a static route when the link is down
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "StaticRoute [%{fld1}] Trying to modify a static route when the link is down" }
				id => "message-00266:03"
				add_field => {
					"[event][id]" => "00266:03"
					"[rsa][message][id1]" => "00266:03"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00266:04
		# line in RSA: StaticRoute [<fld1>] Static route : IP=<daddr>, Mask=<dmask>, GW=<gateway>, Cost=<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "StaticRoute [%{fld1}] Static route : IP=%{daddr}, Mask=%{dmask}, GW=%{gateway}, Cost=%{fld2}" }
				id => "message-00266:04"
				add_field => {
					"[event][id]" => "00266:04"
					"[rsa][message][id1]" => "00266:04"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId794
	# line in RSA:  StdTrap[<fld1>] created by user '<username>' @ '<fld2>'
	else if [logstash][msgparser][id] == "msgParserId794" {
		dissect {
			mapping => { "message" => "StdTrap[%{fld1}] created by user '%{username}' @ '%{fld2}'" }
			id => "msgParserId794"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId795
	# line in RSA: String truncated 'cn=<username>, serialnumber=<serial_number>, ou=<group>, o=<fld1>, c=<fld2>' to 'cn=<fld3>, serialnumber=<fld4>, ou=<fld5>, o=<fld6>, c=<fld7>' 
	else if [logstash][msgparser][id] == "msgParserId795" {
		dissect {
			mapping => { "message" => "String truncated 'cn=%{username}, serialnumber=%{serial_number}, ou=%{group}, o=%{fld1}, c=%{fld2}' to 'cn=%{fld3}, serialnumber=%{fld4}, ou=%{fld5}, o=%{fld6}, c=%{fld7}'" }
			id => "msgParserId795"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Sys" {
		# MESSAGE 00194:00
		# line in RSA:  Sys [<fld1>] resizeEventLog: Eventlog resized from <fld2> to <fld3> entries 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sys [%{fld1}] resizeEventLog: Eventlog resized from %{fld2} to %{fld3} entries" }
				id => "message-00194:00"
				add_field => {
					"[event][id]" => "00194:00"
					"[rsa][message][id1]" => "00194:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00268:00
		# line in RSA: Sys [<fld1>] EventLog: The current Eventlog size is <fld2> entries 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sys [%{fld1}] EventLog: The current Eventlog size is %{fld2} entries" }
				id => "message-00268:00"
				add_field => {
					"[event][id]" => "00268:00"
					"[rsa][message][id1]" => "00268:00"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00268:01
		# line in RSA: Sys [<fld1>] HTTPD: dispatcher got an error from some RPM 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sys [%{fld1}] HTTPD: dispatcher got an error from some RPM" }
				id => "message-00268:01"
				add_field => {
					"[event][id]" => "00268:01"
					"[rsa][message][id1]" => "00268:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00268:02
		# line in RSA: Sys [<fld1>] HTTPD: httplib.c: Now checking for LDAP 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sys [%{fld1}] HTTPD: httplib.c: Now checking for LDAP" }
				id => "message-00268:02"
				add_field => {
					"[event][id]" => "00268:02"
					"[rsa][message][id1]" => "00268:02"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00268:03
		# line in RSA: Sys [<fld1>] HTTPD: httpOsalTcp.c:  httpsSSLLoadCert: no server cert selected 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sys [%{fld1}] HTTPD: httpOsalTcp.c:  httpsSSLLoadCert: no server cert selected" }
				id => "message-00268:03"
				add_field => {
					"[event][id]" => "00268:03"
					"[rsa][message][id1]" => "00268:03"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00268:04
		# line in RSA: Sys [<fld1>] <protocol>: <fld2>: LDAP found 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sys [%{fld1}] %{protocol}: %{fld2}: LDAP found" }
				id => "message-00268:04"
				add_field => {
				"action" => "LDAP found"
					"[event][id]" => "00268:04"
					"[rsa][message][id1]" => "00268:04"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00268:05
		# line in RSA:   Sys [<fld1>] System drops a long event message which has an entity <fld2> subentity <fld3> and code <fld4> in it
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Sys [%{fld1}] System drops a long event message which has an entity %{fld2} subentity %{fld3} and code %{fld4} in it" }
				id => "message-00268:05"
				add_field => {
				"event_description" => "System drops a long event message"
					"[event][id]" => "00268:05"
					"[rsa][message][id1]" => "00268:05"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId803
	# line in RSA: SysClock.DST <msg> 
	else if [logstash][msgparser][id] == "msgParserId803" {
		dissect {
			mapping => { "message" => "SysClock.DST %{msg}" }
			id => "msgParserId803"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId804
	# line in RSA: SysClock.Zone changed from '<fld1>' to '<fld2>' by user '<username>' @ '<fld3>'
	else if [logstash][msgparser][id] == "msgParserId804" {
		dissect {
			mapping => { "message" => "SysClock.Zone changed from '%{fld1}' to '%{fld2}' by user '%{username}' @ '%{fld3}'" }
			id => "msgParserId804"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId805
	# line in RSA:  SysInit completed. 
	else if [logstash][msgparser][id] == "msgParserId805" {
		dissect {
			mapping => { "message" => "SysInit completed." }
			id => "msgParserId805"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SysLegacy" {
		# MESSAGE 00432
		# line in RSA:  SysLegacy [<fld1>] Security: Account: <protocol>[<username>] no LOCAL account found
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SysLegacy [%{fld1}] Security: Account: %{protocol}[%{username}] no LOCAL account found" }
				id => "message-00432"
				add_field => {
				"action" => "no LOCAL account found"
				"method" => "Security - Account"
					"[event][id]" => "00432"
					"[rsa][message][id1]" => "00432"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00432:01
		# line in RSA:  SysLegacy [<fld1>] Security: External LDAP: Server <saddr> status <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SysLegacy [%{fld1}] Security: External LDAP: Server %{saddr} status %{info}" }
				id => "message-00432:01"
				add_field => {
				"action" => "External LDAP Server Status"
					"[event][id]" => "00432:01"
					"[rsa][message][id1]" => "00432:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00432:02
		# line in RSA:  SysLegacy [<fld1>] Security: External LDAP: Trying to search on server <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SysLegacy [%{fld1}] Security: External LDAP: Trying to search on server %{saddr}" }
				id => "message-00432:02"
				add_field => {
				"action" => "External LDAP Server Activity"
					"[event][id]" => "00432:02"
					"[rsa][message][id1]" => "00432:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00432:03
		# line in RSA:  SysLegacy [<fld1>] <fld2>: Sending TG_TEARDOWN - add ref to tmpSess <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SysLegacy [%{fld1}] %{fld2}: Sending TG_TEARDOWN - add ref to tmpSess %{fld3}" }
				id => "message-00432:03"
				add_field => {
				"action" => "Sending TG_TEARDOWN"
					"[event][id]" => "00432:03"
					"[rsa][message][id1]" => "00432:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00432:04
		# line in RSA:  SysLegacy [<fld1>] Sys: HTTPD: <fld2>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SysLegacy [%{fld1}] Sys: HTTPD: %{fld2}: %{info}" }
				id => "message-00432:04"
				add_field => {
					"[event][id]" => "00432:04"
					"[rsa][message][id1]" => "00432:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00432:05
		# line in RSA: SysLegacy [<fld1>] Sys: HTTPD: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "SysLegacy [%{fld1}] Sys: HTTPD: %{info}" }
				id => "message-00432:05"
				add_field => {
					"[event][id]" => "00432:05"
					"[rsa][message][id1]" => "00432:05"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId812
	# line in RSA: SysShutdownCls::<action>
	else if [logstash][msgparser][id] == "msgParserId812" {
		dissect {
			mapping => { "message" => "SysShutdownCls::%{action}" }
			id => "msgParserId812"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "System" {
		# MESSAGE 00004:00
		# line in RSA: System files were <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System files were %{result}" }
				id => "message-00004:00"
				add_field => {
					"[event][id]" => "00004:00"
					"[rsa][message][id1]" => "00004:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00144:00
		# line in RSA: System Time has been changed to <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "System Time has been changed to %{fld1}" }
				id => "message-00144:00"
				add_field => {
					"[event][id]" => "00144:00"
					"[rsa][message][id1]" => "00144:00"
					"[event][categoryid]" => "1607000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00144:01
		# line in RSA: System { started [<fld1>] | is starting }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^System[\s]+([\s]*started[\s]+\[(?<fld1>[^\]]*)\][\s]+|[\s]*is[\s]+starting[\s]+)$" }
				id => "message-00144:01"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"action" => "System started"
					"[event][id]" => "00144:01"
					"[rsa][message][id1]" => "00144:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId816
	# line in RSA:  system shutdown at <fld1> 
	else if [logstash][msgparser][id] == "msgParserId816" {
		dissect {
			mapping => { "message" => "system shutdown at %{fld1}" }
			id => "msgParserId816"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"action" => "system shutdown"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId817
	# line in RSA:  sysclock.zone changed <result> by user '<username>' @ '<saddr>' 
	else if [logstash][msgparser][id] == "msgParserId817" {
		dissect {
			mapping => { "message" => "sysclock.zone changed %{result} by user '%{username}' @ '%{saddr}'" }
			id => "msgParserId817"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId818
	# line in RSA:  Tunnel: peer refused to authenticate
	else if [logstash][msgparser][id] == "msgParserId818" {
		dissect {
			mapping => { "message" => "Tunnel: peer refused to authenticate" }
			id => "msgParserId818"
			add_field => {
				"action" => "Tunnel: peer refused to authenticate"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "TUNNELGUARDd" {
		# MESSAGE 00269:00
		# line in RSA: TUNNELGUARDd [<fld1>] USER[<username>:<saddr>]: <action>.  Msg count: <fld2> - Deleting timer <fld3>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TUNNELGUARDd [%{fld1}] USER[%{username}:%{saddr}]: %{action}.  Msg count: %{fld2} - Deleting timer %{fld3}" }
				id => "message-00269:00"
				add_field => {
					"[event][id]" => "00269:00"
					"[rsa][message][id1]" => "00269:00"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00269:01
		# line in RSA: TUNNELGUARDd [<fld1>] USER[<username>:<saddr>]: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TUNNELGUARDd [%{fld1}] USER[%{username}:%{saddr}]: %{action}" }
				id => "message-00269:01"
				add_field => {
					"[event][id]" => "00269:01"
					"[rsa][message][id1]" => "00269:01"
					"[event][categoryid]" => "1602000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00269:02
		# line in RSA: TUNNELGUARDd [<fld1>] <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "TUNNELGUARDd [%{fld1}] %{info}" }
				id => "message-00269:02"
				add_field => {
					"[event][id]" => "00269:02"
					"[rsa][message][id1]" => "00269:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId822
	# line in RSA:  The contents of the database may have changed...
	else if [logstash][msgparser][id] == "msgParserId822" {
		dissect {
			mapping => { "message" => "The contents of the database may have changed..." }
			id => "msgParserId822"
			add_field => {
				"info" => "The contents of the database may have changed..."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId823
	# line in RSA:  TrapDetails[<fld1>].<fld2> changed from '<fld3>' to '<fld4>' by user '<username>' @ '<fld5>'
	else if [logstash][msgparser][id] == "msgParserId823" {
		dissect {
			mapping => { "message" => "TrapDetails[%{fld1}].%{fld2} changed from '%{fld3}' to '%{fld4}' by user '%{username}' @ '%{fld5}'" }
			id => "msgParserId823"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId824
	# line in RSA: task '<fld1>' successfully terminated. 
	else if [logstash][msgparser][id] == "msgParserId824" {
		dissect {
			mapping => { "message" => "task '%{fld1}' successfully terminated." }
			id => "msgParserId824"
			add_field => {
				"action" => "task successfully terminated"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId825
	# line in RSA: tCert: <fld1> certificates disabled in <fld2>
	else if [logstash][msgparser][id] == "msgParserId825" {
		dissect {
			mapping => { "message" => "tCert: %{fld1} certificates disabled in %{fld2}" }
			id => "msgParserId825"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tDhcpServer" {
		# MESSAGE 00236:00
		# line in RSA:  tDhcpServer [<fld18>] DHCP Server: successfully initialized - running 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tDhcpServer [%{fld18}] DHCP Server: successfully initialized - running" }
				id => "message-00236:00"
				add_field => {
					"[event][id]" => "00236:00"
					"[rsa][message][id1]" => "00236:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00236:01
		# line in RSA:  tDhcpServer [<fld18>] DHCP Server: Firewall is disabled 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tDhcpServer [%{fld18}] DHCP Server: Firewall is disabled" }
				id => "message-00236:01"
				add_field => {
				"ec_activity" => "Disable"
				"ec_theme" => "Configuration"
					"[event][id]" => "00236:01"
					"[rsa][message][id1]" => "00236:01"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId828
	# line in RSA: terminating task '<fld4>'
	else if [logstash][msgparser][id] == "msgParserId828" {
		dissect {
			mapping => { "message" => "terminating task '%{fld4}'" }
			id => "msgParserId828"
			add_field => {
				"action" => "terminating task"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "tIpsecDecap" {
		# MESSAGE 00302
		# line in RSA:  tIpsecDecap [<fld1>] ESP { decap | encap } session SPI <interface> bound to s/w on cpu <fld2> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIpsecDecap[\s]+\[(?<fld1>[^\]]*)\][\s]+ESP[\s]+([\s]*decap[\s]+|[\s]*encap[\s]+)[\s]+session[\s]+SPI[\s]+(?<interface>[^\s]*)[\s]+bound[\s]+to[\s]+s/w[\s]+on[\s]+cpu[\s]+(?<fld2>[^\s]*)[\s]+$" }
				id => "message-00302"
				add_field => {
					"[event][id]" => "00302"
					"[rsa][message][id1]" => "00302"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00302:01
		# line in RSA:  tIpsecDecap [<fld1>] authentication failure detected--npbuf <interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIpsecDecap [%{fld1}] authentication failure detected--npbuf %{interface}" }
				id => "message-00302:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00302:01"
					"[rsa][message][id1]" => "00302:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00302:02
		# line in RSA:  tIpsecDecap [<fld1>] ESP { decap | encap } session SPI <interface> bound to accelerator in slot <fld2> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIpsecDecap[\s]+\[(?<fld1>[^\]]*)\][\s]+ESP[\s]+([\s]*decap[\s]+|[\s]*encap[\s]+)[\s]+session[\s]+SPI[\s]+(?<interface>[^\s]*)[\s]+bound[\s]+to[\s]+accelerator[\s]+in[\s]+slot[\s]+(?<fld2>[^\s]*)[\s]+$" }
				id => "message-00302:02"
				add_field => {
					"[event][id]" => "00302:02"
					"[rsa][message][id1]" => "00302:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00302:03
		# line in RSA:  tIpsecDecap [<fld1>] corrupt packet detected npbuf <interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIpsecDecap [%{fld1}] corrupt packet detected npbuf %{interface}" }
				id => "message-00302:03"
				add_field => {
				"action" => "corrupt packet detected"
					"[event][id]" => "00302:03"
					"[rsa][message][id1]" => "00302:03"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00302:04
		# line in RSA:  tIpsecDecap [<fld1>] Unable to send ESPUDP data, <event_description> - packet dropped 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIpsecDecap [%{fld1}] Unable to send ESPUDP data, %{event_description} - packet dropped" }
				id => "message-00302:04"
				add_field => {
				"action" => "packet dropped"
					"[event][id]" => "00302:04"
					"[rsa][message][id1]" => "00302:04"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "tIpsecEncap" {
		# MESSAGE 00304
		# line in RSA:  tIpsecEncap [<fld1>] ESP { encap | decap } session SPI <interface> bound to s/w on cpu <fld2> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIpsecEncap[\s]+\[(?<fld1>[^\]]*)\][\s]+ESP[\s]+([\s]*encap[\s]+|[\s]*decap[\s]+)[\s]+session[\s]+SPI[\s]+(?<interface>[^\s]*)[\s]+bound[\s]+to[\s]+s/w[\s]+on[\s]+cpu[\s]+(?<fld2>[^\s]*)[\s]+$" }
				id => "message-00304"
				add_field => {
					"[event][id]" => "00304"
					"[rsa][message][id1]" => "00304"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00304:01
		# line in RSA:  tIpsecEncap [<fld1>] ESP { encap | decap } session <interface> bound to accelerator in slot <fld2> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIpsecEncap[\s]+\[(?<fld1>[^\]]*)\][\s]+ESP[\s]+([\s]*encap[\s]+|[\s]*decap[\s]+)[\s]+session[\s]+(?<interface>[^\s]*)[\s]+bound[\s]+to[\s]+accelerator[\s]+in[\s]+slot[\s]+(?<fld2>[^\s]*)[\s]+$" }
				id => "message-00304:01"
				add_field => {
					"[event][id]" => "00304:01"
					"[rsa][message][id1]" => "00304:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00304:02
		# line in RSA:  tIpsecEncap [<fld1>] Unable to send ESPUDP data, <event_description> - packet dropped 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIpsecEncap [%{fld1}] Unable to send ESPUDP data, %{event_description} - packet dropped" }
				id => "message-00304:02"
				add_field => {
				"action" => "packet dropped"
					"[event][id]" => "00304:02"
					"[rsa][message][id1]" => "00304:02"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00304:03
		# line in RSA:  tIpsecEncap [<fld1>] authentication failure detected--npbuf <interface> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIpsecEncap [%{fld1}] authentication failure detected--npbuf %{interface}" }
				id => "message-00304:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "authentication failure"
					"[event][id]" => "00304:03"
					"[rsa][message][id1]" => "00304:03"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "tIsakmp" {
		# MESSAGE 00305:19
		# line in RSA:  tIsakmp [<fld1>] mail=<user_address>, (null)=<user_fname>, (null)=<user_lname>, cn=<username>, ou=<fld3>, o=<group>, c=<fld5> (<saddr>) has exceeded idle timeout - logging out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] mail=%{user_address}, (null)=%{user_fname}, (null)=%{user_lname}, cn=%{username}, ou=%{fld3}, o=%{group}, c=%{fld5} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00305:19"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00305:19"
					"[rsa][message][id1]" => "00305:19"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:20
		# line in RSA:  tIsakmp [<fld1>] mail=<user_address>, (null)=<user_fname>, (null)=<user_lname>, cn=<username>, ou=<group>, c=<fld5> (<saddr>) has exceeded idle timeout - logging out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] mail=%{user_address}, (null)=%{user_fname}, (null)=%{user_lname}, cn=%{username}, ou=%{group}, c=%{fld5} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00305:20"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00305:20"
					"[rsa][message][id1]" => "00305:20"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:21
		# line in RSA:  tIsakmp [<fld1>] mail=<user_address>, (null)=<user_fname>, (null)=<user_lname>, cn=<username>, o=<group>, c=<fld5> (<saddr>) has exceeded idle timeout - logging out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] mail=%{user_address}, (null)=%{user_fname}, (null)=%{user_lname}, cn=%{username}, o=%{group}, c=%{fld5} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00305:21"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00305:21"
					"[rsa][message][id1]" => "00305:21"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:22
		# line in RSA:  tIsakmp [<fld1>] mail=<user_address>, (null)=<user_fname>, (null)=<user_lname>, cn=<username>, ou=<group>, c=<fld5> (<saddr>) rejected or aborted connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] mail=%{user_address}, (null)=%{user_fname}, (null)=%{user_lname}, cn=%{username}, ou=%{group}, c=%{fld5} (%{saddr}) rejected or aborted connection attempt" }
				id => "message-00305:22"
				add_field => {
				"action" => "rejected or aborted connection attempt"
					"[event][id]" => "00305:22"
					"[rsa][message][id1]" => "00305:22"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:23
		# line in RSA:  tIsakmp [<fld1>] mail=<user_address>, (null)=<user_fname>, (null)=<user_lname>, cn=<username>, c=<fld5> (<saddr>) has exceeded idle timeout - logging out
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] mail=%{user_address}, (null)=%{user_fname}, (null)=%{user_lname}, cn=%{username}, c=%{fld5} (%{saddr}) has exceeded idle timeout - logging out" }
				id => "message-00305:23"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00305:23"
					"[rsa][message][id1]" => "00305:23"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305
		# line in RSA:  tIsakmp [<fld1>] Error notification (<event_description>) received from { <username> (<saddr>) | <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIsakmp[\s]+\[(?<fld1>[^\]]*)\][\s]+Error[\s]+notification[\s]+\((?<event_description>[^\)]*)\)[\s]+received[\s]+from[\s]+([\s]*(?<username>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-00305"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Error notification received"
					"[event][id]" => "00305"
					"[rsa][message][id1]" => "00305"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:01
		# line in RSA:  tIsakmp [<fld1>] { <username> (<saddr>) | <saddr> } rejected or aborted connection attempt 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIsakmp[\s]+\[(?<fld1>[^\]]*)\][\s]+([\s]*(?<username>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+rejected[\s]+or[\s]+aborted[\s]+connection[\s]+attempt[\s]+$" }
				id => "message-00305:01"
				add_field => {
				"ec_activity" => "Deny"
				"action" => "rejected or aborted connection"
					"[event][id]" => "00305:01"
					"[rsa][message][id1]" => "00305:01"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:02
		# line in RSA:  tIsakmp [<fld1>] { <username> (<saddr>) | <saddr> } has exceeded idle timeout - logging out 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIsakmp[\s]+\[(?<fld1>[^\]]*)\][\s]+([\s]*(?<username>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+has[\s]+exceeded[\s]+idle[\s]+timeout[\s]+\-[\s]+logging[\s]+out[\s]+$" }
				id => "message-00305:02"
				add_field => {
				"ec_subject" => "Time"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "idle timeout exceeded"
					"[event][id]" => "00305:02"
					"[rsa][message][id1]" => "00305:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:03
		# line in RSA:  tIsakmp [<fld1>] { <username> (<saddr>) | <saddr> } logged off by administrator
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIsakmp[\s]+\[(?<fld1>[^\]]*)\][\s]+([\s]*(?<username>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+logged[\s]+off[\s]+by[\s]+administrator$" }
				id => "message-00305:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "user forced logoff by administrator"
					"[event][id]" => "00305:03"
					"[rsa][message][id1]" => "00305:03"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:04
		# line in RSA:  tIsakmp [<fld1>] Authentication failure in message from { <username> (<saddr>) | <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIsakmp[\s]+\[(?<fld1>[^\]]*)\][\s]+Authentication[\s]+failure[\s]+in[\s]+message[\s]+from[\s]+([\s]*(?<username>[^\s]*)[\s]+\((?<saddr>[^\)]*)\)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-00305:04"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Authentication failure"
					"[event][id]" => "00305:04"
					"[rsa][message][id1]" => "00305:04"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:05
		# line in RSA:  tIsakmp [<fld1>] Invalid cookie in message from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] Invalid cookie in message from %{saddr}" }
				id => "message-00305:05"
				add_field => {
				"action" => "Invalid cookie in message"
					"[event][id]" => "00305:05"
					"[rsa][message][id1]" => "00305:05"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:06
		# line in RSA:  tIsakmp [<fld1>] No proposal chosen in message from <saddr> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] No proposal chosen in message from %{saddr}" }
				id => "message-00305:06"
				add_field => {
				"action" => "No proposal chosen in message"
					"[event][id]" => "00305:06"
					"[rsa][message][id1]" => "00305:06"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:07
		# line in RSA:  tIsakmp [<fld1>] Oakley Main Mode proposal accepted from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] Oakley Main Mode proposal accepted from %{saddr}" }
				id => "message-00305:07"
				add_field => {
				"action" => "proposal accepted"
					"[event][id]" => "00305:07"
					"[rsa][message][id1]" => "00305:07"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:08
		# line in RSA:  tIsakmp [<fld1>] No response from client - logging out 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] No response from client - logging out" }
				id => "message-00305:08"
				add_field => {
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"action" => "forced logout"
				"reason" => "No response from client"
					"[event][id]" => "00305:08"
					"[rsa][message][id1]" => "00305:08"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:09
		# line in RSA:  tIsakmp [<fld1>] Unprotected Delete message from <daddr> being dropped
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] Unprotected Delete message from %{daddr} being dropped" }
				id => "message-00305:09"
				add_field => {
				"action" => "message dropped"
				"reason" => "Unprotected Delete"
					"[event][id]" => "00305:09"
					"[rsa][message][id1]" => "00305:09"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:10
		# line in RSA:  tIsakmp [<fld1>] Invalid protocol major version number in message from <daddr>, to: <dhost>, cookies (<info>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] Invalid protocol major version number in message from %{daddr}, to: %{dhost}, cookies (%{info})" }
				id => "message-00305:10"
				add_field => {
				"action" => "Invalid protocol major version number in message"
					"[event][id]" => "00305:10"
					"[rsa][message][id1]" => "00305:10"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:11
		# line in RSA:  tIsakmp [<fld1>] <scheme> Notify message (<fld7>) received from { <daddr>, <info> |  <daddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIsakmp[\s]+\[(?<fld1>[^\]]*)\][\s]+(?<scheme>[^\s]*)[\s]+Notify[\s]+message[\s]+\((?<fld7>[^\)]*)\)[\s]+received[\s]+from[\s]+([\s]*(?<daddr>[^,]*),[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<daddr>[^\s]*)[\s]+)$" }
				id => "message-00305:11"
				add_field => {
				"action" => "Notify message received"
					"[event][id]" => "00305:11"
					"[rsa][message][id1]" => "00305:11"
					"[event][categoryid]" => "1603000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:12
		# line in RSA:  tIsakmp [<fld1>] Invalid key information in message { from <saddr>, to: <daddr>, cookies (<event_description>) | from <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*tIsakmp[\s]+\[(?<fld1>[^\]]*)\][\s]+Invalid[\s]+key[\s]+information[\s]+in[\s]+message[\s]+([\s]*from[\s]+(?<saddr>[^,]*),[\s]+to:[\s]+(?<daddr>[^,]*),[\s]+cookies[\s]+\((?<event_description>[^\)]*)\)[\s]+|[\s]*from[\s]+(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-00305:12"
				add_field => {
				"action" => "Invalid key information in message"
					"[event][id]" => "00305:12"
					"[rsa][message][id1]" => "00305:12"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:13
		# line in RSA:  tIsakmp [<fld1>] Quickmode accepts address mismatch:
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] Quickmode accepts address mismatch:" }
				id => "message-00305:13"
				add_field => {
				"action" => "Quickmode accepts address mismatch"
					"[event][id]" => "00305:13"
					"[rsa][message][id1]" => "00305:13"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:14
		# line in RSA:  tIsakmp [<fld1>]   Remote address <daddr> received remote address <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}]   Remote address %{daddr} received remote address %{fld2}" }
				id => "message-00305:14"
				add_field => {
				"action" => "Remote Address received"
					"[event][id]" => "00305:14"
					"[rsa][message][id1]" => "00305:14"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:15
		# line in RSA:  tIsakmp [<fld1>]   Local address <saddr> received local address <fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}]   Local address %{saddr} received local address %{fld2}" }
				id => "message-00305:15"
				add_field => {
				"action" => "Local Address received"
					"[event][id]" => "00305:15"
					"[rsa][message][id1]" => "00305:15"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:16
		# line in RSA:  tIsakmp [<fld1>] Diffie-Hellman group mismatch for <group> - terminating connection attempt
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] Diffie-Hellman group mismatch for %{group} - terminating connection attempt" }
				id => "message-00305:16"
				add_field => {
				"action" => "terminating connection attempt"
				"reason" => "Diffie-Hellman group mismatch"
					"[event][id]" => "00305:16"
					"[rsa][message][id1]" => "00305:16"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:17
		# line in RSA:  tIsakmp [<fld1>] confmode:PostXauthAuthenticate2:send Failed Authentication. <event_description>. <info>. len <bytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] confmode:PostXauthAuthenticate2:send Failed Authentication. %{event_description}. %{info}. len %{bytes}" }
				id => "message-00305:17"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "send Failed Authentication"
					"[event][id]" => "00305:17"
					"[rsa][message][id1]" => "00305:17"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:18
		# line in RSA:  tIsakmp [<fld1>] confmode:PostXauthAuthenticate2:send To change your password add /c at end of password. <event_description>. <info>. len <bytes>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] confmode:PostXauthAuthenticate2:send To change your password add /c at end of password. %{event_description}. %{info}. len %{bytes}" }
				id => "message-00305:18"
				add_field => {
				"action" => "send To change your password"
					"[event][id]" => "00305:18"
					"[rsa][message][id1]" => "00305:18"
					"[event][categoryid]" => "1301020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00305:24
		# line in RSA:  tIsakmp [<fld1>] No SPI on Notify message after Phase <fld2> - <info> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "tIsakmp [%{fld1}] No SPI on Notify message after Phase %{fld2} - %{info}" }
				id => "message-00305:24"
				add_field => {
				"action" => "No SPI on Notify message after Phase"
					"[event][id]" => "00305:24"
					"[rsa][message][id1]" => "00305:24"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId863
	# line in RSA:  tunnelguard: user <username>[<saddr>] - SRS checks ok, open session
	else if [logstash][msgparser][id] == "msgParserId863" {
		dissect {
			mapping => { "message" => "tunnelguard: user %{username}[%{saddr}] - SRS checks ok, open session" }
			id => "msgParserId863"
			add_field => {
				"action" => "open session"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "Unable" {
		# MESSAGE 00006:00
		# line in RSA: Unable to communicate with <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unable to communicate with %{fld1}" }
				id => "message-00006:00"
				add_field => {
					"[event][id]" => "00006:00"
					"[rsa][message][id1]" => "00006:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00145:00
		# line in RSA:  Unable <result> for OSPF 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unable %{result} for OSPF" }
				id => "message-00145:00"
				add_field => {
					"[event][id]" => "00145:00"
					"[rsa][message][id1]" => "00145:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00146:00
		# line in RSA:  Unable <result> for VR <fld1> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "Unable %{result} for VR %{fld1}" }
				id => "message-00146:00"
				add_field => {
					"[event][id]" => "00146:00"
					"[rsa][message][id1]" => "00146:00"
					"[event][categoryid]" => "1603040000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId867
	# line in RSA: Unknown WWW-Authenticate method, closing
	else if [logstash][msgparser][id] == "msgParserId867" {
		dissect {
			mapping => { "message" => "Unknown WWW-Authenticate method, closing" }
			id => "msgParserId867"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId868
	# line in RSA: Unsupported <info> 
	else if [logstash][msgparser][id] == "msgParserId868" {
		dissect {
			mapping => { "message" => "Unsupported %{info}" }
			id => "msgParserId868"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId869
	# line in RSA:   Updated selected {Firewall | NAT} policy cn=<username>, ou=<group>, o=<fld3>, c=<fld4>
	else if [logstash][msgparser][id] == "msgParserId869" {
		grok {
			match => { "message" => "^[\s]*Updated[\s]+selected[\s]+(Firewall[\s]+|[\s]*NAT)[\s]+policy[\s]+cn=(?<username>[^,]*),[\s]+ou=(?<group>[^,]*),[\s]+o=(?<fld3>[^,]*),[\s]+c=(?<fld4>.*)$" }
			id => "msgParserId869"
			add_field => {
				"action" => "Updated Policy"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId870
	# line in RSA:  Using <fld1> hardware, options=<fld2>. 
	else if [logstash][msgparser][id] == "msgParserId870" {
		dissect {
			mapping => { "message" => "Using %{fld1} hardware, options=%{fld2}." }
			id => "msgParserId870"
			add_field => {
				"action" => "Using hardware"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId871
	# line in RSA: Waiting <msg> 
	else if [logstash][msgparser][id] == "msgParserId871" {
		dissect {
			mapping => { "message" => "Waiting %{msg}" }
			id => "msgParserId871"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId872
	# line in RSA: Warning <msg> 
	else if [logstash][msgparser][id] == "msgParserId872" {
		dissect {
			mapping => { "message" => "Warning %{msg}" }
			id => "msgParserId872"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId873
	# line in RSA: Wrote configuration <filename> 
	else if [logstash][msgparser][id] == "msgParserId873" {
		dissect {
			mapping => { "message" => "Wrote configuration %{filename}" }
			id => "msgParserId873"
			add_field => {
				"action" => "wrote configuration"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId874
	# line in RSA: PORTAL Vpn="<fld1>" User="<username>" Proto="<protocol>" Host="<shost>" Share="<fld2>" Path="<fld3>"
	else if [logstash][msgparser][id] == "msgParserId874" {
		dissect {
			mapping => { "message" => "PORTAL Vpn=\"%{fld1}\" User=\"%{username}\" Proto=\"%{protocol}\" Host=\"%{shost}\" Share=\"%{fld2}\" Path=\"%{fld3}\"" }
			id => "msgParserId874"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "reload" {
		# MESSAGE 00283:00
		# line in RSA: reload configuration <result> 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "reload configuration %{result}" }
				id => "message-00283:00"
				add_field => {
				"action" => "reload configuration request"
					"[event][id]" => "00283:00"
					"[rsa][message][id1]" => "00283:00"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00283:01
		# line in RSA: reload cert config { start | done }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^reload[\s]+cert[\s]+config[\s]+([\s]*start[\s]+|[\s]*done[\s]+)$" }
				id => "message-00283:01"
				add_field => {
				"action" => "reload cert config start"
					"[event][id]" => "00283:01"
					"[rsa][message][id1]" => "00283:01"
					"[event][categoryid]" => "1605030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId877
	# line in RSA:   Returned IP <saddr> to pool for vpn '<fld1>'
	else if [logstash][msgparser][id] == "msgParserId877" {
		dissect {
			mapping => { "message" => "Returned IP %{saddr} to pool for vpn '%{fld1}'" }
			id => "msgParserId877"
			add_field => {
				"action" => "Returned IP to pool for vpn"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId878
	# line in RSA: RSVP [<fld18>] reserved MAC address <shost> for <fld1>
	else if [logstash][msgparser][id] == "msgParserId878" {
		dissect {
			mapping => { "message" => "RSVP [%{fld18}] reserved MAC address %{shost} for %{fld1}" }
			id => "msgParserId878"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "VPN" {
		# MESSAGE 00284:00
		# line in RSA: VPN LoginSucceeded Vpn="<fld1>" SrcIp="<saddr>" Method="<fld2>" User="<username>" Groups="<group>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN LoginSucceeded Vpn=\"%{fld1}\" SrcIp=\"%{saddr}\" Method=\"%{fld2}\" User=\"%{username}\" Groups=\"%{group}\"" }
				id => "message-00284:00"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "00284:00"
					"[rsa][message][id1]" => "00284:00"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00284:01
		# line in RSA: VPN LoginFailed Vpn="<fld1>" SrcIp="<saddr>" Method="<fld2>" User="<username>" Error="<event_description>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN LoginFailed Vpn=\"%{fld1}\" SrcIp=\"%{saddr}\" Method=\"%{fld2}\" User=\"%{username}\" Error=\"%{event_description}\"" }
				id => "message-00284:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00284:01"
					"[rsa][message][id1]" => "00284:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00284:02
		# line in RSA: VPN Logout Vpn="<fld1>" SrcIp="<saddr>" User="<username>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN Logout Vpn=\"%{fld1}\" SrcIp=\"%{saddr}\" User=\"%{username}\"" }
				id => "message-00284:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "00284:02"
					"[rsa][message][id1]" => "00284:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00284:03
		# line in RSA:  VPN LoginFailed Vpn="<fld1>" SrcIp="<saddr>" Method="<fld2>" Error="<event_description>" 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN LoginFailed Vpn=\"%{fld1}\" SrcIp=\"%{saddr}\" Method=\"%{fld2}\" Error=\"%{event_description}\"" }
				id => "message-00284:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "00284:03"
					"[rsa][message][id1]" => "00284:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00284:04
		# line in RSA:  VPN=undefined Failed to create ike session: Initial setup failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN=undefined Failed to create ike session: Initial setup failed" }
				id => "message-00284:04"
				add_field => {
				"action" => "Initial setup failed"
				"reason" => "Failed to create ike session"
					"[event][id]" => "00284:04"
					"[rsa][message][id1]" => "00284:04"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00284:05
		# line in RSA:  VPN='<fld1>' No such user defined in local auth db
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN='%{fld1}' No such user defined in local auth db" }
				id => "message-00284:05"
				add_field => {
				"action" => "No such user defined in local auth db"
					"[event][id]" => "00284:05"
					"[rsa][message][id1]" => "00284:05"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00284:06
		# line in RSA:  VPN='<fld1>' Failed to create ike session: No such user stored in local auth db
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN='%{fld1}' Failed to create ike session: No such user stored in local auth db" }
				id => "message-00284:06"
				add_field => {
				"action" => "Failed to create ike session"
				"scheme" => "No such user stored in local auth db"
					"[event][id]" => "00284:06"
					"[rsa][message][id1]" => "00284:06"
					"[event][categoryid]" => "1801010100"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00284:07
		# line in RSA:   VPN='<fld1>' Failed to auth session: Failed to auth user: "<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN='%{fld1}' Failed to auth session: Failed to auth user: \"%{event_description}\"" }
				id => "message-00284:07"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed to auth session"
					"[event][id]" => "00284:07"
					"[rsa][message][id1]" => "00284:07"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00284:08
		# line in RSA:  VPN='<fld7>' Failed to auth session: Auth rejected rsn="<event_description>"
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VPN='%{fld7}' Failed to auth session: Auth rejected rsn=\"%{event_description}\"" }
				id => "message-00284:08"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"action" => "Failed to auth session"
					"[event][id]" => "00284:08"
					"[rsa][message][id1]" => "00284:08"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId888
	# line in RSA: VR <msg> 
	else if [logstash][msgparser][id] == "msgParserId888" {
		dissect {
			mapping => { "message" => "VR %{msg}" }
			id => "msgParserId888"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "VrrpIntfOm" {
		# MESSAGE 00150:00
		# line in RSA: VrrpIntfOm [<fld1>] <action>, so VRRP parameters may now be inconsistent 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VrrpIntfOm [%{fld1}] %{action}, so VRRP parameters may now be inconsistent" }
				id => "message-00150:00"
				add_field => {
					"[event][id]" => "00150:00"
					"[rsa][message][id1]" => "00150:00"
					"[event][categoryid]" => "1703000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 00150:01
		# line in RSA: VrrpIntfOm [<fld1>] VRRP should be Disabled and then Enabled to get new values. 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "VrrpIntfOm [%{fld1}] VRRP should be Disabled and then Enabled to get new values." }
				id => "message-00150:01"
				add_field => {
					"[event][id]" => "00150:01"
					"[rsa][message][id1]" => "00150:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_nortelvpnmsg.json"
#			template_name => "nortelvpn_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
