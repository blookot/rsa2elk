# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "safenethsm"
			"[observer][name]" => "SafeNet HSM"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth> <hdate> <htime> <hhost> IngrianAudit: <hdatetime> [<husername>] [<messageid>] <!payload:hdatetime>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+IngrianAudit:[\s]+(?<message>(?<hdatetime>[^\s]*)[\s]+\[(?<husername>[^\]]*)\][\s]+\[(?<messageid>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hdate> <htime> <hhost> IngrianActivity: <hfld1> <hfld2> <hseverity> <hsaddr> [<hsrc_dn>] <husername> <hid> <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+IngrianActivity:[\s]+(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hseverity>[^\s]*)[\s]+(?<hsaddr>[^\s]*)[\s]+\[(?<hsrc_dn>[^\]]*)\][\s]+(?<husername>[^\s]*)[\s]+(?<hid>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hdate> <htime> <hhost> IngrianAudit: <hdatetime> [<messageid>] <!payload:hdatetime>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hhost>[^\s]*)[\s]+IngrianAudit:[\s]+(?<message>(?<hdatetime>[^\s]*)[\s]+\[(?<messageid>[^\]]*)\][\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hdate> <htime> <hhost> IngrianSystem: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{htime} %{hhost} IngrianSystem: %{message}" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "Ingrian_System"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth> <hdate> <htime> <hhost> IngrianActivity: <!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hmonth} %{hdate} %{htime} %{hhost} IngrianActivity: %{message}" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "Ingrian_Activity"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-safenethsmmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "ConfigChange" {
		# MESSAGE ConfigChange:01
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: Saved Cryptographic Key Server settings [IP: [<saddr>]; port: <dport>; use SSL: <fld4>; server certificate: [<fld5>]; connection timeout: <fld6>; allow config operations: <fld7>; allow key export: <fld8>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: Saved Cryptographic Key Server settings [IP: [%{saddr}]; port: %{dport}; use SSL: %{fld4}; server certificate: [%{fld5}]; connection timeout: %{fld6}; allow config operations: %{fld7}; allow key export: %{fld8}]" }
				id => "message-ConfigChange:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "ConfigChange:01"
					"[rsa][message][id1]" => "ConfigChange:01"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ConfigChange:02
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: <action> user [username: <fld4>; permissions: User Administration: <result>, Change Password: <fld5>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: %{action} user [username: %{fld4}; permissions: User Administration: %{result}, Change Password: %{fld5}]" }
				id => "message-ConfigChange:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "ConfigChange:02"
					"[rsa][message][id1]" => "ConfigChange:02"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ConfigChange:03
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: Created Token Vault: Name=[<fld4>], Database SID/Name=[<fld5>], Database type=[<fld6>], Host=[<hostip>], Port=[<sport>], Vault Table Tablespace=[[<fld7>]], Vault Index Tablespace=[[<fld8>]], Keys Table Tablespace=[[<fld9>]], Keys Index Tablespace=[[<fld10>]], Database User=[<fld11>], Is Token Sequential=[<fld12>], Input Data Length=[<fld13>], Encryption Key=[<fld14>], Hashing Key=[<fld15>] 
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: Created Token Vault: Name=[%{fld4}], Database SID/Name=[%{fld5}], Database type=[%{fld6}], Host=[%{hostip}], Port=[%{sport}], Vault Table Tablespace=[[%{fld7}]], Vault Index Tablespace=[[%{fld8}]], Keys Table Tablespace=[[%{fld9}]], Keys Index Tablespace=[[%{fld10}]], Database User=[%{fld11}], Is Token Sequential=[%{fld12}], Input Data Length=[%{fld13}], Encryption Key=[%{fld14}], Hashing Key=[%{fld15}]" }
				id => "message-ConfigChange:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "ConfigChange:03"
					"[rsa][message][id1]" => "ConfigChange:03"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ConfigChange:04
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: Saved syslog settings for Audit Log [syslog: <disposition>; IP #1: [<daddr>]; port #1: <dport>; IP #2: <fld2>; port #2: <fld3>; facility: <fld4>; proto #1: <protocol>; proto #2: <fld5>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: Saved syslog settings for Audit Log [syslog: %{disposition}; IP #1: [%{daddr}]; port #1: %{dport}; IP #2: %{fld2}; port #2: %{fld3}; facility: %{fld4}; proto #1: %{protocol}; proto #2: %{fld5}]" }
				id => "message-ConfigChange:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "ConfigChange:04"
					"[rsa][message][id1]" => "ConfigChange:04"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ConfigChange:06
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: Loaded restore information for <obj_name>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: Loaded restore information for %{obj_name}" }
				id => "message-ConfigChange:06"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"event_description" => "Loaded restore information"
				"hostname" => "%{hhost}"
					"[event][id]" => "ConfigChange:06"
					"[rsa][message][id1]" => "ConfigChange:06"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ConfigChange:07
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: Restored backup [<filename>], source: [<fld2>], backup items: [ <info>]
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: Restored backup [%{filename}], source: [%{fld2}], backup items: [ %{info}]" }
				id => "message-ConfigChange:07"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"event_description" => "Restored backup"
				"ec_activity" => "Restore"
				"hostname" => "%{hhost}"
					"[event][id]" => "ConfigChange:07"
					"[rsa][message][id1]" => "ConfigChange:07"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ConfigChange:08
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: Downloaded backup <filename>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: Downloaded backup %{filename}" }
				id => "message-ConfigChange:08"
				add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"event_description" => "Downloaded backup"
				"hostname" => "%{hhost}"
					"[event][id]" => "ConfigChange:08"
					"[rsa][message][id1]" => "ConfigChange:08"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE ConfigChange:05
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: %{event_description}" }
				id => "message-ConfigChange:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "ConfigChange:05"
					"[rsa][message][id1]" => "ConfigChange:05"
					"[event][categoryid]" => "1701010000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: %{event_description}" }
			id => "msgParserId8"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId9
	# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId9" {
		dissect {
			mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: %{event_description}" }
			id => "msgParserId9"
			add_field => {
				"ec_subject" => "User"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{fld1}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d HH:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "Login" {
		# MESSAGE Login:01
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: Logged in from <saddr> via <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: Logged in from %{saddr} via %{fld4}" }
				id => "message-Login:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Login:01"
					"[rsa][message][id1]" => "Login:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Login:02
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: Web login failure: <info> for administrator <fld4> from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: Web login failure: %{info} for administrator %{fld4} from %{saddr}" }
				id => "message-Login:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Login:02"
					"[rsa][message][id1]" => "Login:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
		# MESSAGE Login:03
		# line in RSA: <fld1> [<username>] [<event_type>] [<event_source>]: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} [%{username}] [%{event_type}] [%{event_source}]: %{event_description}" }
				id => "message-Login:03"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "Login:03"
					"[rsa][message][id1]" => "Login:03"
					"[event][categoryid]" => "1401070000"
					"[logstash][fullDateTimeString]" => "%{hdatetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: <fld1> [<username>]: <event_description>
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{fld1} [%{username}]: %{event_description}" }
			id => "msgParserId13"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{hdatetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId14
	# line in RSA: <fld1> <fld2> <hostname> <event_type>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{hostname} %{event_type}: %{event_description}" }
			id => "msgParserId14"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId15
	# line in RSA:  [<fld1> <fld2>] <severity> <saddr> [<src_dn>] <username> <id> <event_type> <obj_name> [<obj_type>] - [<result>] [-]
	else if [logstash][msgparser][id] == "msgParserId15" {
		dissect {
			mapping => { "message" => "[%{fld1} %{fld2}] %{severity} %{saddr} [%{src_dn}] %{username} %{id} %{event_type} %{obj_name} [%{obj_type}] - [%{result}] [-]" }
			id => "msgParserId15"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}
	# PARSER msgParserId16
	# line in RSA: [<fld1> <fld2>] <severity> <saddr> [<src_dn>] <username> <id> [<event_description>]
	else if [logstash][msgparser][id] == "msgParserId16" {
		dissect {
			mapping => { "message" => "[%{fld1} %{fld2}] %{severity} %{saddr} [%{src_dn}] %{username} %{id} [%{event_description}]" }
			id => "msgParserId16"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy-M-d H:m:s" ] }
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-safenethsmmsg.json"
#			template_name => "safenethsm_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
