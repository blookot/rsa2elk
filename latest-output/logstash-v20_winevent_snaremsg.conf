# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "winevent_snare"
			"[observer][name]" => "Windows Events (Snare)"
			"[observer][type]" => "Windows Hosts"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 1004
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<Hcriticality>	<msgIdPart1>	<Hlinenum>	<Hday> <Hdatetime>	<msgIdPart2>	Microsoft-Windows-Security-Auditing,<Hevent_user>	<Husername>	<Hevent_type>	<Hevent_computer>	<Hcategory>	<Hdata>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<Hcriticality>[^\t]*)\t(?<msgIdPart1>[^\t]*)\t(?<Hlinenum>[^\t]*)\t(?<Hday>[^\s]*)[\s]+(?<Hdatetime>[^\t]*)\t(?<msgIdPart2>[^\t]*)\tMicrosoft\-Windows\-Security\-Auditing,(?<Hevent_user>[^\t]*)\t(?<Husername>[^\t]*)\t(?<Hevent_type>[^\t]*)\t(?<Hevent_computer>[^\t]*)\t(?<Hcategory>[^\t]*)\t(?<Hdata>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1004"
			add_field => {
				"[rsa][header][id]" => "1004"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_Microsoft-Windows-Security-Auditing"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<Hcriticality>,<msgIdPart1>,<Hlinenum>,<Hday> <Hdatetime>,<msgIdPart2>,Microsoft-Windows-Security-Auditing,<Hevent_user>,<Husername>,<Hevent_type>,<Hevent_computer>,<Hcategory>,<Hdata>,<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<Hcriticality>[^,]*),(?<msgIdPart1>[^,]*),(?<Hlinenum>[^,]*),(?<Hday>[^\s]*)[\s]+(?<Hdatetime>[^,]*),(?<msgIdPart2>[^,]*),Microsoft\-Windows\-Security\-Auditing,(?<Hevent_user>[^,]*),(?<Husername>[^,]*),(?<Hevent_type>[^,]*),(?<Hevent_computer>[^,]*),(?<Hcategory>[^,]*),(?<Hdata>[^,]*),(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_Microsoft-Windows-Security-Auditing"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1005
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<Hcriticality>	<msgIdPart1>	<Hlinenum>	<Hday> <Hdatetime>	<msgIdPart2>	Microsoft-Windows-Eventlog,<Hevent_user>	<Husername>	<Hevent_type>	<Hevent_computer>	<Hcategory>	<Hdata>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<Hcriticality>[^\t]*)\t(?<msgIdPart1>[^\t]*)\t(?<Hlinenum>[^\t]*)\t(?<Hday>[^\s]*)[\s]+(?<Hdatetime>[^\t]*)\t(?<msgIdPart2>[^\t]*)\tMicrosoft\-Windows\-Eventlog,(?<Hevent_user>[^\t]*)\t(?<Husername>[^\t]*)\t(?<Hevent_type>[^\t]*)\t(?<Hevent_computer>[^\t]*)\t(?<Hcategory>[^\t]*)\t(?<Hdata>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1005"
			add_field => {
				"[rsa][header][id]" => "1005"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_Microsoft-Windows-Eventlog"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<Hcriticality>,<msgIdPart1>,<Hlinenum>,<Hday> <Hdatetime>,<msgIdPart2>,Microsoft-Windows-Eventlog,<Hevent_user>,<Husername>,<Hevent_type>,<Hevent_computer>,<Hcategory>,<Hdata>,<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<Hcriticality>[^,]*),(?<msgIdPart1>[^,]*),(?<Hlinenum>[^,]*),(?<Hday>[^\s]*)[\s]+(?<Hdatetime>[^,]*),(?<msgIdPart2>[^,]*),Microsoft\-Windows\-Eventlog,(?<Hevent_user>[^,]*),(?<Husername>[^,]*),(?<Hevent_type>[^,]*),(?<Hevent_computer>[^,]*),(?<Hcategory>[^,]*),(?<Hdata>[^,]*),(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_Microsoft-Windows-Eventlog"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1013
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<criticality>	<msgIdPart1> <hfld1>	<linenum>	<date> <datetime>	<msgIdPart2>	<msgIdPart3> <hfld2>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<criticality>[^\t]*)\t(?<msgIdPart1>[^\s]*)[\s]+(?<hfld1>[^\t]*)\t(?<linenum>[^\t]*)\t(?<date>[^\s]*)[\s]+(?<datetime>[^\t]*)\t(?<msgIdPart2>[^\t]*)\t(?<msgIdPart3>[^\s]*)[\s]+(?<hfld2>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1013"
			add_field => {
				"[rsa][header][id]" => "1013"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0013
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<criticality>,<msgIdPart1> <hfld1>,<linenum>,<date> <datetime>,<msgIdPart2>,<msgIdPart3> <hfld2>, <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<criticality>[^,]*),(?<msgIdPart1>[^\s]*)[\s]+(?<hfld1>[^,]*),(?<linenum>[^,]*),(?<date>[^\s]*)[\s]+(?<datetime>[^,]*),(?<msgIdPart2>[^,]*),(?<msgIdPart3>[^\s]*)[\s]+(?<hfld2>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0013"
			add_field => {
				"[rsa][header][id]" => "0013"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1014
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<criticality>	<msgIdPart1> <hfld1>	<linenum>	<date> <datetime>	<msgIdPart2>	<msgIdPart3>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<criticality>[^\t]*)\t(?<msgIdPart1>[^\s]*)[\s]+(?<hfld1>[^\t]*)\t(?<linenum>[^\t]*)\t(?<date>[^\s]*)[\s]+(?<datetime>[^\t]*)\t(?<msgIdPart2>[^\t]*)\t(?<msgIdPart3>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1014"
			add_field => {
				"[rsa][header][id]" => "1014"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0014
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<criticality>,<msgIdPart1> <hfld1>,<linenum>,<date> <datetime>,<msgIdPart2>,<msgIdPart3>, <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<criticality>[^,]*),(?<msgIdPart1>[^\s]*)[\s]+(?<hfld1>[^,]*),(?<linenum>[^,]*),(?<date>[^\s]*)[\s]+(?<datetime>[^,]*),(?<msgIdPart2>[^,]*),(?<msgIdPart3>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0014"
			add_field => {
				"[rsa][header][id]" => "0014"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0022
	# line in RSA: <hfld1> <hfld2> <hfld3> <hhostname> <fld90>,<level>,<msgIdPart1>,<fld91>,<hday> <hmonth> <hdate> <htime> <hyear>,<msgIdPart2>,AD FS Auditing,<hevent_user>,<fld92>,<hevent_type>,<hevent_computer>,<hcategory>,<fld93>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{hfld1} %{hfld2} %{hfld3} %{hhostname} %{fld90},%{level},%{msgIdPart1},%{fld91},%{hday} %{hmonth} %{hdate} %{htime} %{hyear},%{msgIdPart2},AD FS Auditing,%{hevent_user},%{fld92},%{hevent_type},%{hevent_computer},%{hcategory},%{fld93},%{message}" }
			id => "header-0022"
			add_field => {
				"[rsa][header][id]" => "0022"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_AD"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1015
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<criticality>	<msgIdPart1>	<linenum>	<date> <datetime>	<msgIdPart2>	<msgIdPart3> <hfld1>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<criticality>[^\t]*)\t(?<msgIdPart1>[^\t]*)\t(?<linenum>[^\t]*)\t(?<date>[^\s]*)[\s]+(?<datetime>[^\t]*)\t(?<msgIdPart2>[^\t]*)\t(?<msgIdPart3>[^\s]*)[\s]+(?<hfld1>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1015"
			add_field => {
				"[rsa][header][id]" => "1015"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0015
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<criticality>,<msgIdPart1>,<linenum>,<date> <datetime>,<msgIdPart2>,<msgIdPart3> <hfld1>, <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<criticality>[^,]*),(?<msgIdPart1>[^,]*),(?<linenum>[^,]*),(?<date>[^\s]*)[\s]+(?<datetime>[^,]*),(?<msgIdPart2>[^,]*),(?<msgIdPart3>[^\s]*)[\s]+(?<hfld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0015"
			add_field => {
				"[rsa][header][id]" => "0015"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1001
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<criticality>	<msgIdPart1>	<linenum>	<date> <datetime>	<msgIdPart2>	<msgIdPart3>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<criticality>[^\t]*)\t(?<msgIdPart1>[^\t]*)\t(?<linenum>[^\t]*)\t(?<date>[^\s]*)[\s]+(?<datetime>[^\t]*)\t(?<msgIdPart2>[^\t]*)\t(?<msgIdPart3>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1001"
			add_field => {
				"[rsa][header][id]" => "1001"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0001
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<criticality>,<msgIdPart1>,<linenum>,<date> <datetime>,<msgIdPart2>,<msgIdPart3>, <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<criticality>[^,]*),(?<msgIdPart1>[^,]*),(?<linenum>[^,]*),(?<date>[^\s]*)[\s]+(?<datetime>[^,]*),(?<msgIdPart2>[^,]*),(?<msgIdPart3>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1012
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<criticality>	<hfld1>	<linenum>	<date> <datetime>	<msgIdPart1>	<msgIdPart2>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<criticality>[^\t]*)\t(?<hfld1>[^\t]*)\t(?<linenum>[^\t]*)\t(?<date>[^\s]*)[\s]+(?<datetime>[^\t]*)\t(?<msgIdPart1>[^\t]*)\t(?<msgIdPart2>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1012"
			add_field => {
				"[rsa][header][id]" => "1012"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0012
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<criticality>,<hfld1>,<linenum>,<date> <datetime>,<msgIdPart1>,<msgIdPart2>, <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<criticality>[^,]*),(?<hfld1>[^,]*),(?<linenum>[^,]*),(?<date>[^\s]*)[\s]+(?<datetime>[^,]*),(?<msgIdPart1>[^,]*),(?<msgIdPart2>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0012"
			add_field => {
				"[rsa][header][id]" => "0012"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1002
	# line in RSA: Original Address=<haddr> <month> <day> <time> <hostname> <log_type>	<criticality>	<msgIdPart1>	<linenum>	<date> <datetime>	<msgIdPart2>	<msgIdPart3>	 <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Original[\s]+Address=(?<haddr>[^\s]*)[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<criticality>[^\t]*)\t(?<msgIdPart1>[^\t]*)\t(?<linenum>[^\t]*)\t(?<date>[^\s]*)[\s]+(?<datetime>[^\t]*)\t(?<msgIdPart2>[^\t]*)\t(?<msgIdPart3>[^\t]*)\t[\s]+(?<payload>.*))$" }
			id => "header-1002"
			add_field => {
				"[rsa][header][id]" => "1002"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: Original Address=<haddr> <month> <day> <time> <hostname> <log_type>,<criticality>,<msgIdPart1>,<linenum>,<date> <datetime>,<msgIdPart2>,<msgIdPart3>, <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^Original[\s]+Address=(?<haddr>[^\s]*)[\s]+(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<criticality>[^,]*),(?<msgIdPart1>[^,]*),(?<linenum>[^,]*),(?<date>[^\s]*)[\s]+(?<datetime>[^,]*),(?<msgIdPart2>[^,]*),(?<msgIdPart3>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}_%{msgIdPart3}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1003
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<criticality>	<messageid>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<criticality>[^\t]*)\t(?<messageid>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1003"
			add_field => {
				"[rsa][header][id]" => "1003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<criticality>,<messageid>, <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<criticality>[^,]*),(?<messageid>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1006
	# line in RSA: <month> <day> <time> <hostname> <log_type>	<criticality>	<messageid> <fld1>	<!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^\t]*)\t(?<criticality>[^\t]*)\t(?<messageid>[^\s]*)[\s]+(?<fld1>[^\t]*)\t(?<payload>.*))$" }
			id => "header-1006"
			add_field => {
				"[rsa][header][id]" => "1006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <month> <day> <time> <hostname> <log_type>,<criticality>,<messageid> <fld1>, <!payload:log_type>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+(?<message>(?<log_type>[^,]*),(?<criticality>[^,]*),(?<messageid>[^\s]*)[\s]+(?<fld1>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0008
	# line in RSA: %WINDNS-<hlevel>: <hfld1><hfld2><hfld3><hfld4><messageid><!payload:hfld1>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0011
	# line in RSA: %WINDNS-<hlevel>: <hfld1><hfld2><hfld3><messageid><!payload:hfld1>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 0009
	# line in RSA: <hfld10> <hdatetime> <hfld11> [DNSDebug.log]: <hfld1><hfld2><hfld3><messageid><!payload:hfld1>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# HEADER 1007
	# line in RSA: <month> <day> <time> <hostname> DNSServer,0,<hfld1> <hfld2> <hfld3> <hfld4> <messageid> <!payload:hfld1>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<hostname>[^\s]*)[\s]+DNSServer,0,(?<message>(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<messageid>[^\s]*)[\s]+(?<payload>.*))$" }
			id => "header-1007"
			add_field => {
				"[rsa][header][id]" => "1007"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1008
	# line in RSA: <month> <day> <time> <hostname> <messageid>,<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} %{hostname} %{messageid},%{message}" }
			id => "header-1008"
			add_field => {
				"[rsa][header][id]" => "1008"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1009
	# line in RSA: <month> <day> <time> <hfld7> <messageid>	<hfld1>	<hfld2>	<os>	<version>	<log_type>	<!payload>
	if ![logstash][headerfound] {
		dissect {
			mapping => { "[event][original]" => "%{month} %{day} %{time} %{hfld7} %{messageid}	%{hfld1}	%{hfld2}	%{os}	%{version}	%{log_type}	%{message}" }
			id => "header-1009"
			add_field => {
				"[rsa][header][id]" => "1009"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9999
	# line in RSA: <month> <day> <time> <hostname> MSWinEventLog	<hcriticality>	<hfld1>	<hlinenum>	<hdate> <hdatetime>	<hid>	<hevent_source>	<!payload:hostname>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<hostname>[^\s]*)[\s]+MSWinEventLog\t(?<hcriticality>[^\t]*)\t(?<hfld1>[^\t]*)\t(?<hlinenum>[^\t]*)\t(?<hdate>[^\s]*)[\s]+(?<hdatetime>[^\t]*)\t(?<hid>[^\t]*)\t(?<hevent_source>[^\t]*)\t(?<payload>.*))$" }
			id => "header-9999"
			add_field => {
				"[rsa][header][id]" => "9999"
				"[rsa][message][id2]" => "WINDOWS_SNARE_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 9998
	# line in RSA: <month> <day> <time> <hostname> MSWinEventLog,<hcriticality>,<hfld1>,<hlinenum>,<hdate> <hdatetime>,<hid>,<hevent_source>, <!payload:hostname>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<month>[^\s]*)[\s]+(?<day>[^\s]*)[\s]+(?<time>[^\s]*)[\s]+(?<message>(?<hostname>[^\s]*)[\s]+MSWinEventLog,(?<hcriticality>[^,]*),(?<hfld1>[^,]*),(?<hlinenum>[^,]*),(?<hdate>[^\s]*)[\s]+(?<hdatetime>[^,]*),(?<hid>[^,]*),(?<hevent_source>[^,]*),[\s]+(?<payload>.*))$" }
			id => "header-9998"
			add_field => {
				"[rsa][header][id]" => "9998"
				"[rsa][message][id2]" => "WINDOWS_SNARE_GENERIC"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 1010
	# line in RSA: <hmonth> <hday> <htime> <hostname> MSDNSLog	<hfld1>	<hfld2> <hfld3> {PM <hfld4>|AM <hfld4>|<hfld4>} <messageid><!payload:hfld2>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-v20_winevent_snaremsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,} <space> Document <doc_number>, <fld34> owned by <username> on <fld33> was printed on <device> { via | through } port <portname> Size in <space> bytes: <bytes>{.|<fld32>} { pages | Pages } printed:<dclass_counter1> {. <event_description>|<event_description>}
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
	# PARSER msgParserId1
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,} <event_description>
	else if [logstash][msgparser][id] == "msgParserId1" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+(?<event_description>.*)$" }
			id => "msgParserId1"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId2
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId2" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId2"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId3
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Product: <product> - Update <obj_name> <event_description>
	else if [logstash][msgparser][id] == "msgParserId3" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Product:[\s]+(?<product>[^\s]*)[\s]+\-[\s]+Update[\s]+(?<obj_name>[^\s]*)[\s]+(?<event_description>.*)$" }
			id => "msgParserId3"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId4
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Product: <product>. The file <filename>is being {used | held in use} by the following { process: | process }Name: <process> <fld50>
	else if [logstash][msgparser][id] == "msgParserId4" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Product:[\s]+(?<product>[^\.]*)\.[\s]+The[\s]+file[\s]+(?<filename>[^i]*)is[\s]+being[\s]+(used[\s]+|[\s]*held[\s]+in[\s]+use)[\s]+by[\s]+the[\s]+following[\s]+([\s]*process:[\s]+|[\s]*process[\s]+)Name:[\s]+(?<process>[^\s]*)[\s]+(?<fld50>.*)$" }
			id => "msgParserId4"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId5
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>Product: <product>.<event_description>
	else if [logstash][msgparser][id] == "msgParserId5" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^P]*)Product:[\s]+(?<product>[^\.]*)\.(?<event_description>.*)$" }
			id => "msgParserId5"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Application_1033_MsiInstaller" {
		# MESSAGE Application_1033_MsiInstaller:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Product Name: <product> Product Version: <version> Product Language: <fld29> Installation success or error status: <resultcode>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Product[\s]+Name:[\s]+(?<product>[^\s]*)[\s]+Product[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Product[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+Installation[\s]+success[\s]+or[\s]+error[\s]+status:[\s]+(?<resultcode>.*)$" }
				id => "message-Application_1033_MsiInstaller:01"
				add_field => {
					"[event][id]" => "Application_1033_MsiInstaller:01"
					"[rsa][message][id1]" => "Application_1033_MsiInstaller:01"
					"[event][categoryid]" => "1704010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application_1033_MsiInstaller
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>Product: <product> Version: <version> Language: <fld29> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^P]*)Product:[\s]+(?<product>[^\s]*)[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-Application_1033_MsiInstaller"
				add_field => {
					"[event][id]" => "Application_1033_MsiInstaller"
					"[rsa][message][id1]" => "Application_1033_MsiInstaller"
					"[event][categoryid]" => "1704010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Application_1034_MsiInstaller" {
		# MESSAGE Application_1034_MsiInstaller:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Product Name: <product> Product Version: <version> Product Language: <fld29> Removal success or error status: <resultcode>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Product[\s]+Name:[\s]+(?<product>[^\s]*)[\s]+Product[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Product[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+Removal[\s]+success[\s]+or[\s]+error[\s]+status:[\s]+(?<resultcode>.*)$" }
				id => "message-Application_1034_MsiInstaller:01"
				add_field => {
					"[event][id]" => "Application_1034_MsiInstaller:01"
					"[rsa][message][id1]" => "Application_1034_MsiInstaller:01"
					"[event][categoryid]" => "1704020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application_1034_MsiInstaller
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>Product: <product> Version: <version> Language: <fld29> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^P]*)Product:[\s]+(?<product>[^\s]*)[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-Application_1034_MsiInstaller"
				add_field => {
					"[event][id]" => "Application_1034_MsiInstaller"
					"[rsa][message][id1]" => "Application_1034_MsiInstaller"
					"[event][categoryid]" => "1704020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Application_1035_MsiInstaller" {
		# MESSAGE Application_1035_MsiInstaller:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Product Name: <product> Product Version: <version> Product Language: <fld29> Reconfiguration success or error status: <resultcode>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Product[\s]+Name:[\s]+(?<product>[^\s]*)[\s]+Product[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Product[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+Reconfiguration[\s]+success[\s]+or[\s]+error[\s]+status:[\s]+(?<resultcode>.*)$" }
				id => "message-Application_1035_MsiInstaller:01"
				add_field => {
					"[event][id]" => "Application_1035_MsiInstaller:01"
					"[rsa][message][id1]" => "Application_1035_MsiInstaller:01"
					"[event][categoryid]" => "1704030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application_1035_MsiInstaller
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>Product: <product> Version: <version> Language: <fld29> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^P]*)Product:[\s]+(?<product>[^\s]*)[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-Application_1035_MsiInstaller"
				add_field => {
					"[event][id]" => "Application_1035_MsiInstaller"
					"[rsa][message][id1]" => "Application_1035_MsiInstaller"
					"[event][categoryid]" => "1704030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Application_1036_MsiInstaller" {
		# MESSAGE Application_1036_MsiInstaller:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Product Name: <product> Product Version: <version> Product Language: <fld29> Installation success or error status: <resultcode>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Product[\s]+Name:[\s]+(?<product>[^\s]*)[\s]+Product[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Product[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+Installation[\s]+success[\s]+or[\s]+error[\s]+status:[\s]+(?<resultcode>.*)$" }
				id => "message-Application_1036_MsiInstaller:01"
				add_field => {
					"[event][id]" => "Application_1036_MsiInstaller:01"
					"[rsa][message][id1]" => "Application_1036_MsiInstaller:01"
					"[event][categoryid]" => "1704010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application_1036_MsiInstaller
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>Product: <product> Version: <version> Language: <fld16> Update: <obj_name> <fld50>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^P]*)Product:[\s]+(?<product>[^\s]*)[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Language:[\s]+(?<fld16>[^\s]*)[\s]+Update:[\s]+(?<obj_name>[^\s]*)[\s]+(?<fld50>.*)$" }
				id => "message-Application_1036_MsiInstaller"
				add_field => {
					"[event][id]" => "Application_1036_MsiInstaller"
					"[rsa][message][id1]" => "Application_1036_MsiInstaller"
					"[event][categoryid]" => "1704010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Application_1037_MsiInstaller" {
		# MESSAGE Application_1037_MsiInstaller:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Product Name: <product> Product Version: <version> Product Language: <fld29> Update Name: <obj_name> Removal success or error status: <resultcode>.,<fld30>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Product[\s]+Name:[\s]+(?<product>[^\s]*)[\s]+Product[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Product[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+Update[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Removal[\s]+success[\s]+or[\s]+error[\s]+status:[\s]+(?<resultcode>[^\.]*)\.,(?<fld30>.*)$" }
				id => "message-Application_1037_MsiInstaller:01"
				add_field => {
					"[event][id]" => "Application_1037_MsiInstaller:01"
					"[rsa][message][id1]" => "Application_1037_MsiInstaller:01"
					"[event][categoryid]" => "1704020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application_1037_MsiInstaller
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>Product: <product> Version: <version> Language: <fld29> Update:<obj_name> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^P]*)Product:[\s]+(?<product>[^\s]*)[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+Update:(?<obj_name>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-Application_1037_MsiInstaller"
				add_field => {
					"[event][id]" => "Application_1037_MsiInstaller"
					"[rsa][message][id1]" => "Application_1037_MsiInstaller"
					"[event][categoryid]" => "1704020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Application_1038_MsiInstaller" {
		# MESSAGE Application_1038_MsiInstaller
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>Product: <product> Version: <version> Language: <fld29> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^P]*)Product:[\s]+(?<product>[^\s]*)[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-Application_1038_MsiInstaller"
				add_field => {
					"[event][id]" => "Application_1038_MsiInstaller"
					"[rsa][message][id1]" => "Application_1038_MsiInstaller"
					"[event][categoryid]" => "1606000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application_1038_MsiInstaller:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>Product Name: <product> Product Version: <version> Product Language: <fld29> <event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^P]*)Product[\s]+Name:[\s]+(?<product>[^\s]*)[\s]+Product[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+Product[\s]+Language:[\s]+(?<fld29>[^\s]*)[\s]+(?<event_description>.*)$" }
				id => "message-Application_1038_MsiInstaller:01"
				add_field => {
					"[event][id]" => "Application_1038_MsiInstaller:01"
					"[rsa][message][id1]" => "Application_1038_MsiInstaller:01"
					"[event][categoryid]" => "1606000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Application_1002_Application" {
		# MESSAGE Application_1002_Application
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}The program <application> version <version> stopped interacting with Windows and was closed. <fld50> Process ID: <process_id> Start Time:<fld3> Termination Time:<fld4> Application Path:<directory> Report Id:<fld5>{	 | ,}<fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)The[\s]+program[\s]+(?<application>[^\s]*)[\s]+version[\s]+(?<version>[^\s]*)[\s]+stopped[\s]+interacting[\s]+with[\s]+Windows[\s]+and[\s]+was[\s]+closed\.[\s]+(?<fld50>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Start[\s]+Time:(?<fld3>[^\s]*)[\s]+Termination[\s]+Time:(?<fld4>[^\s]*)[\s]+Application[\s]+Path:(?<directory>[^\s]*)[\s]+Report[\s]+Id:(?<fld5>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld6>.*)$" }
				id => "message-Application_1002_Application"
				add_field => {
					"[event][id]" => "Application_1002_Application"
					"[rsa][message][id1]" => "Application_1002_Application"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application_1002_Application:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Server farm '<obj_server>' has reached its minimum server threshold. <event_state>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Server[\s]+farm[\s]+'(?<obj_server>[^']*)'[\s]+has[\s]+reached[\s]+its[\s]+minimum[\s]+server[\s]+threshold\.[\s]+(?<event_state>.*)$" }
				id => "message-Application_1002_Application:01"
				add_field => {
				"event_description" => "Server farm has reached its minimum server threshold"
					"[event][id]" => "Application_1002_Application:01"
					"[rsa][message][id1]" => "Application_1002_Application:01"
					"[event][categoryid]" => "1603090000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId16
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId16" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId16"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId17
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>.<space>Info:<info>
	else if [logstash][msgparser][id] == "msgParserId17" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\.]*)\.(?<space>[^I]*)Info:(?<info>.*)$" }
			id => "msgParserId17"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId18
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<info> Application information:<space>Application domain: <domain>      Trust level: <fld25>      Application Virtual Path: <fld26>      Application Path: <directory>      Machine name: <fld27>    Process information:<space>Process ID: <process_id>      Process name: <process>      Account name: <service_account>    Exception information:<space>Exception type: <fld28>      Exception message: <event_description>    {at <fld29>   Request information:|Request information:}<space>{Request URL: <url>     Request path: <fld30>      User host address: <hostip>      User:       <fld31>|Request URL: <url>}
	else if [logstash][msgparser][id] == "msgParserId18" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<info>[^\s]*)[\s]+Application[\s]+information:(?<space>[^A]*)Application[\s]+domain:[\s]+(?<domain>[^\s]*)[\s]+Trust[\s]+level:[\s]+(?<fld25>[^\s]*)[\s]+Application[\s]+Virtual[\s]+Path:[\s]+(?<fld26>[^\s]*)[\s]+Application[\s]+Path:[\s]+(?<directory>[^\s]*)[\s]+Machine[\s]+name:[\s]+(?<fld27>[^\s]*)[\s]+Process[\s]+information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+name:[\s]+(?<process>[^\s]*)[\s]+Account[\s]+name:[\s]+(?<service_account>[^\s]*)[\s]+Exception[\s]+information:(?<space>[^E]*)Exception[\s]+type:[\s]+(?<fld28>[^\s]*)[\s]+Exception[\s]+message:[\s]+(?<event_description>[^\s]*)[\s]+(at[\s]+(?<fld29>[^\s]*)[\s]+Request[\s]+information:|Request[\s]+information:)(?<space>[^RR]*)(Request[\s]+URL:[\s]+(?<url>[^\s]*)[\s]+Request[\s]+path:[\s]+(?<fld30>[^\s]*)[\s]+User[\s]+host[\s]+address:[\s]+(?<hostip>[^\s]*)[\s]+User:[\s]+(?<fld31>.*)|Request[\s]+URL:[\s]+(?<url>.*))$" }
			id => "msgParserId18"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId19
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId19" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId19"
			add_field => {
				"ec_subject" => "OS"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId20
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId20" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId20"
			add_field => {
				"ec_subject" => "OS"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId21
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Authentication Package Name: <authmethod>
	else if [logstash][msgparser][id] == "msgParserId21" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Authentication[\s]+Package[\s]+Name:[\s]+(?<authmethod>.*)$" }
			id => "msgParserId21"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId22
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Logon Process Name: <process>
	else if [logstash][msgparser][id] == "msgParserId22" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Logon[\s]+Process[\s]+Name:[\s]+(?<process>.*)$" }
			id => "msgParserId22"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId23
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Number of audit messages discarded: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId23" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Number[\s]+of[\s]+audit[\s]+messages[\s]+discarded:[\s]+(?<dclass_counter1>.*)$" }
			id => "msgParserId23"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId24
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Primary User Name: <username> Primary Domain: <domain> Primary Logon ID: <sessionid> Client User Name: <c_username> Client Domain: <c_domain> Client Logon ID: <sessionid1>
	else if [logstash][msgparser][id] == "msgParserId24" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>.*)$" }
			id => "msgParserId24"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId25
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Notification Package Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId25" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Notification[\s]+Package[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId25"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId26
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Process ID: <process_id> Process Name: <process> Primary User Name: <username> Primary Domain: <domain> Primary Logon ID: <sessionid> Client User Name: <c_username> Client Domain: <c_domain>  Client Logon ID: <sessionid1> Previous Time: <change_old> New Time: <change_new>
	else if [logstash][msgparser][id] == "msgParserId26" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^\s]*)[\s]+Previous[\s]+Time:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Time:[\s]+(?<change_new>.*)$" }
			id => "msgParserId26"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_subject" => "Time"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_528_Security" {
		# MESSAGE Security_528_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> User Name: <username>Domain: <domain>Logon ID: <sessionid>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Logon GUID: <fld13>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <fld3>Transited Services: <service> Source Network Address: <saddr> {Source Port: <sport>	<fld42> |Source Port: <sport>,<fld42> | Source Port: <sport>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_528_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> User Name: <username>Domain: <domain>Logon ID: <sessionid>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Logon GUID: <fld13>{	 | ,}<fld30>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_528_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> User Name: <username>Domain: <domain>Logon ID: <sessionid>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_529_Security" {
		# MESSAGE Security_529_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <fld3>Transited Services: <service> Source Network Address: <saddr> {Source Port: <sport>	<fld42> |Source Port: <sport>,<fld42> | Source Port: <sport>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<fld39>[^C]*)Caller[\s]+Domain:[\s]+(?<fld40>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^C]*)Caller[\s]+Process[\s]+ID:[\s]+(?<fld3>[^T]*)Transited[\s]+Services:[\s]+(?<service>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+(Source[\s]+Port:[\s]+(?<sport>[^\t]*)\t(?<fld42>[^\s]*)[\s]+|Source[\s]+Port:[\s]+(?<sport>[^,]*),(?<fld42>[^\s]*)[\s]+|[\s]*Source[\s]+Port:[\s]+(?<sport>.*))$" }
				id => "message-Security_529_Security:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_529_Security:01"
					"[rsa][message][id1]" => "Security_529_Security:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_529_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>.*)$" }
				id => "message-Security_529_Security"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_529_Security"
					"[rsa][message][id1]" => "Security_529_Security"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_530_Security" {
		# MESSAGE Security_530_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Reason:[\s]+(?<result>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<fld39>[^C]*)Caller[\s]+Domain:[\s]+(?<fld40>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^C]*)Caller[\s]+Process[\s]+ID:[\s]+(?<process_id>[^T]*)Transited[\s]+Services:[\s]+(?<service>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>.*)$" }
				id => "message-Security_530_Security:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_530_Security:01"
					"[rsa][message][id1]" => "Security_530_Security:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_530_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Reason:[\s]+(?<result>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>.*)$" }
				id => "message-Security_530_Security"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_530_Security"
					"[rsa][message][id1]" => "Security_530_Security"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_531_Security" {
		# MESSAGE Security_531_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_531_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_532_Security" {
		# MESSAGE Security_532_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod> Workstation Name: <hostname>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_532_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod> Workstation Name: <hostname>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_533_Security" {
		# MESSAGE Security_533_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username> Domain: <domain> Logon Type: <logon_type> Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_533_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username> Domain: <domain> Logon Type: <logon_type> Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_534_Security" {
		# MESSAGE Security_534_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_534_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>{	 | ,}<fld30>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_534_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_535_Security" {
		# MESSAGE Security_535_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Reason: <result> User Name: <username> Domain: <domain> Logon Type: <logon_type> Logon Process: <process> Authentication Package: <authmethod> Workstation Name: <hostname> Caller User Name: <fld39> Caller Domain: <fld40> Caller Logon ID: <fld41> Caller Process ID: <fld3> Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+Type:[\s]+(?<logon_type>[^\s]*)[\s]+Logon[\s]+Process:[\s]+(?<process>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Workstation[\s]+Name:[\s]+(?<hostname>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<fld39>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<fld40>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^\s]*)[\s]+Caller[\s]+Process[\s]+ID:[\s]+(?<fld3>[^\s]*)[\s]+Transited[\s]+Services:[\s]+(?<service>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>.*)$" }
				id => "message-Security_535_Security:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_535_Security:01"
					"[rsa][message][id1]" => "Security_535_Security:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_535_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Reason: <result> User Name: <username> Domain: <domain> Logon Type: <logon_type> Logon Process: <process> Authentication Package: <authmethod> Workstation Name: <hostname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+Type:[\s]+(?<logon_type>[^\s]*)[\s]+Logon[\s]+Process:[\s]+(?<process>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Workstation[\s]+Name:[\s]+(?<hostname>.*)$" }
				id => "message-Security_535_Security"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_535_Security"
					"[rsa][message][id1]" => "Security_535_Security"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_536_Security" {
		# MESSAGE Security_536_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space>Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_536_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space>Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_537_Security" {
		# MESSAGE Security_537_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space>Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Status code: <disposition>Substatus code: <resultcode>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_537_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space>Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_538_Security" {
		# MESSAGE Security_538_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space>User Name: <username> Domain: <domain> Logon ID: <sessionid> Logon Type: <logon_type>{	 | ,}<fld30>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Security_538_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description><space>User Name: <username> Domain: <domain> Logon ID: <sessionid> Logon Type: <logon_type>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_539_Security" {
		# MESSAGE Security_539_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> Source Port: <sport>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<fld39>[^C]*)Caller[\s]+Domain:[\s]+(?<fld40>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^C]*)Caller[\s]+Process[\s]+ID:[\s]+(?<process_id>[^T]*)Transited[\s]+Services:[\s]+(?<service>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>.*)$" }
				id => "message-Security_539_Security:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_539_Security:01"
					"[rsa][message][id1]" => "Security_539_Security:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_539_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Reason: <result>User Name: <username>Domain: <domain>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>.*)$" }
				id => "message-Security_539_Security"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_539_Security"
					"[rsa][message][id1]" => "Security_539_Security"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_540_Security" {
		# MESSAGE Security_540_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Domain: <domain>Logon ID: <sessionid>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Logon GUID:<fld13>Caller User Name: <fld39>Caller Domain: <fld40>Caller Logon ID: <fld41>Caller Process ID: <process_id>Transited Services: <service> Source Network Address: <saddr> {Source Port: <sport>	<fld42> | Source Port: <sport>,<fld42> | Source Port: <sport>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>[^L]*)Logon[\s]+GUID:(?<fld13>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<fld39>[^C]*)Caller[\s]+Domain:[\s]+(?<fld40>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^C]*)Caller[\s]+Process[\s]+ID:[\s]+(?<process_id>[^T]*)Transited[\s]+Services:[\s]+(?<service>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+(Source[\s]+Port:[\s]+(?<sport>[^\t]*)\t(?<fld42>[^\s]*)[\s]+|[\s]*Source[\s]+Port:[\s]+(?<sport>[^,]*),(?<fld42>[^\s]*)[\s]+|[\s]*Source[\s]+Port:[\s]+(?<sport>.*))$" }
				id => "message-Security_540_Security"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_540_Security"
					"[rsa][message][id1]" => "Security_540_Security"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_540_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Domain: <domain>Logon ID: <sessionid>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>Logon GUID: <fld13>{	 | ,}<fld30>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>[^L]*)Logon[\s]+GUID:[\s]+(?<fld13>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld30>.*)$" }
				id => "message-Security_540_Security:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_540_Security:02"
					"[rsa][message][id1]" => "Security_540_Security:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_540_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Domain: <domain>Logon ID: <sessionid>Logon Type: <logon_type>Logon Process: <process>Authentication Package: <authmethod>Workstation Name: <hostname>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^A]*)Authentication[\s]+Package:[\s]+(?<authmethod>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>.*)$" }
				id => "message-Security_540_Security:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_540_Security:01"
					"[rsa][message][id1]" => "Security_540_Security:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId52
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Mode: <ike> Peer Identity: <peer_id>Filter: <filter>Parameters: <param>
	else if [logstash][msgparser][id] == "msgParserId52" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Mode:[\s]+(?<ike>[^\s]*)[\s]+Peer[\s]+Identity:[\s]+(?<peer_id>[^F]*)Filter:[\s]+(?<filter>[^P]*)Parameters:[\s]+(?<param>.*)$" }
			id => "msgParserId52"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId53
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space>Mode: <ike> Filter: <filter>Inbound SPI: <fld14>Outbound SPI: <fld13>
	else if [logstash][msgparser][id] == "msgParserId53" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^M]*)Mode:[\s]+(?<ike>[^\s]*)[\s]+Filter:[\s]+(?<filter>[^I]*)Inbound[\s]+SPI:[\s]+(?<fld14>[^O]*)Outbound[\s]+SPI:[\s]+(?<fld13>.*)$" }
			id => "msgParserId53"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId54
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space>Mode: <ike> Filter: <filter>
	else if [logstash][msgparser][id] == "msgParserId54" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^M]*)Mode:[\s]+(?<ike>[^\s]*)[\s]+Filter:[\s]+(?<filter>.*)$" }
			id => "msgParserId54"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId55
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Peer Identity: <peer_id>Filter: <filter>
	else if [logstash][msgparser][id] == "msgParserId55" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Peer[\s]+Identity:[\s]+(?<peer_id>[^F]*)Filter:[\s]+(?<filter>.*)$" }
			id => "msgParserId55"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId56
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Peer Identity: <peer_id>Filter: <filter>
	else if [logstash][msgparser][id] == "msgParserId56" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Peer[\s]+Identity:[\s]+(?<peer_id>[^F]*)Filter:[\s]+(?<filter>.*)$" }
			id => "msgParserId56"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId57
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Mode: <ike>Filter: <filter>Attribute: <param>Expected value: <expected_val>Received value: <observed_val>
	else if [logstash][msgparser][id] == "msgParserId57" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Mode:[\s]+(?<ike>[^F]*)Filter:[\s]+(?<filter>[^A]*)Attribute:[\s]+(?<param>[^E]*)Expected[\s]+value:[\s]+(?<expected_val>[^R]*)Received[\s]+value:[\s]+(?<observed_val>.*)$" }
			id => "msgParserId57"
			add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_547_Security" {
		# MESSAGE Security_547_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Mode: <ike>Filter: <filter>Peer Identity: <peer_id>Failure Point: <fld19> Failure Reason: <result> Extra Status: <fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Mode:[\s]+(?<ike>[^F]*)Filter:[\s]+(?<filter>[^P]*)Peer[\s]+Identity:[\s]+(?<peer_id>[^F]*)Failure[\s]+Point:[\s]+(?<fld19>[^\s]*)[\s]+Failure[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+Extra[\s]+Status:[\s]+(?<fld3>.*)$" }
				id => "message-Security_547_Security:02"
				add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_547_Security:02"
					"[rsa][message][id1]" => "Security_547_Security:02"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_547_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Mode: <ike> Filter: <filter> Failure Point: <fld19> Failure Reason: <result>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Mode:[\s]+(?<ike>[^\s]*)[\s]+Filter:[\s]+(?<filter>[^\s]*)[\s]+Failure[\s]+Point:[\s]+(?<fld19>[^\s]*)[\s]+Failure[\s]+Reason:[\s]+(?<result>.*)$" }
				id => "message-Security_547_Security"
				add_field => {
				"ec_theme" => "Encryption"
				"ec_subject" => "NetworkComm"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_547_Security"
					"[rsa][message][id1]" => "Security_547_Security"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId60
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId60" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId60"
			add_field => {
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId61
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId61" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId61"
			add_field => {
				"ec_theme" => "ALM"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Detect"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId62
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username> Domain: <domain> Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId62" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId62"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId63
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Logged on user: <space> User Name: <username> Domain: <domain> Logon ID: <sessionid> Logon GUID: <fld13> User whose credentials were used: <space> Target User Name: <c_username> Target Domain: <c_domain> Target Logon GUID: <fld32> Target Server Name: <dhost> Target Server Info: <fld33> Caller Process ID: <process_id> Source Network Address: <saddr> {Source Port: <sport>	<fld42> | Source Port: <sport>,<fld42> | Source Port: <sport>}
	else if [logstash][msgparser][id] == "msgParserId63" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Logged[\s]+on[\s]+user:[\s]+(?<space>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Logon[\s]+GUID:[\s]+(?<fld13>[^\s]*)[\s]+User[\s]+whose[\s]+credentials[\s]+were[\s]+used:[\s]+(?<space>[^\s]*)[\s]+Target[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Target[\s]+Logon[\s]+GUID:[\s]+(?<fld32>[^\s]*)[\s]+Target[\s]+Server[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Target[\s]+Server[\s]+Info:[\s]+(?<fld33>[^\s]*)[\s]+Caller[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+(Source[\s]+Port:[\s]+(?<sport>[^\t]*)\t(?<fld42>[^\s]*)[\s]+|[\s]*Source[\s]+Port:[\s]+(?<sport>[^,]*),(?<fld42>[^\s]*)[\s]+|[\s]*Source[\s]+Port:[\s]+(?<sport>.*))$" }
			id => "msgParserId63"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_560_Security" {
		# MESSAGE Security_560_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space>Object Server: <obj_server>Object Type: <obj_type>Object Name: <obj_name>Handle ID: <id1>Operation ID: <id2>Process ID: <process_id>Image File Name: <process>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain: <c_domain>Client Logon ID: <sessionid1>Accesses: <accesses>Privileges: <privilege>Restricted Sid Count: <fld53>Access Mask: <fld52>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^H]*)Handle[\s]+ID:[\s]+(?<id1>[^O]*)Operation[\s]+ID:[\s]+(?<id2>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^I]*)Image[\s]+File[\s]+Name:[\s]+(?<process>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:[\s]+(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^A]*)Accesses:[\s]+(?<accesses>[^P]*)Privileges:[\s]+(?<privilege>[^R]*)Restricted[\s]+Sid[\s]+Count:[\s]+(?<fld53>[^A]*)Access[\s]+Mask:[\s]+(?<fld52>.*)$" }
				id => "message-Security_560_Security:02"
				add_field => {
				"ec_theme" => "ALM"
					"[event][id]" => "Security_560_Security:02"
					"[rsa][message][id1]" => "Security_560_Security:02"
					"[event][categoryid]" => "1206010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_560_Security:03
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Object Server: <obj_server> Object Type: <obj_type> Object Name: <obj_name> Handle ID: <id1> Operation ID: <id2> Process ID: <process_id> Image File Name: <process> Primary User Name: <username> Primary Domain: <domain> Primary Logon ID: <sessionid> Client User Name: <c_username> Client Domain: <c_domain> Client Logon ID: <sessionid1> Accesses: <accesses> Privileges: <privilege> Restricted Sid Count: <fld53>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Operation[\s]+ID:[\s]+(?<id2>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Image[\s]+File[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Restricted[\s]+Sid[\s]+Count:[\s]+(?<fld53>.*)$" }
				id => "message-Security_560_Security:03"
				add_field => {
				"ec_theme" => "ALM"
					"[event][id]" => "Security_560_Security:03"
					"[rsa][message][id1]" => "Security_560_Security:03"
					"[event][categoryid]" => "1206010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_560_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space>Object Server: <obj_server> Object Type: <obj_type> Object Name: <obj_name> New Handle ID: <id1> Operation ID: <id2> Process ID: <process_id> Primary User Name: <username> Primary Domain: <domain> Primary Logon ID: <sessionid> Client User Name: <c_username> Client Domain: <c_domain> Client Logon ID: <sessionid1> Accesses<accesses> Privileges<privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+New[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Operation[\s]+ID:[\s]+(?<id2>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^\s]*)[\s]+Accesses(?<accesses>[^\s]*)[\s]+Privileges(?<privilege>.*)$" }
				id => "message-Security_560_Security"
				add_field => {
				"ec_theme" => "ALM"
					"[event][id]" => "Security_560_Security"
					"[rsa][message][id1]" => "Security_560_Security"
					"[event][categoryid]" => "1206010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Handle ID: <id1>Operation ID: <id2>Process ID: <process_id>
	else if [logstash][msgparser][id] == "msgParserId67" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^O]*)Operation[\s]+ID:[\s]+(?<id2>[^P]*)Process[\s]+ID:[\s]+(?<process_id>.*)$" }
			id => "msgParserId67"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_562_Security" {
		# MESSAGE Security_562_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server>Handle ID: <id1>Process ID: <process_id>Image File Name: <process>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^H]*)Handle[\s]+ID:[\s]+(?<id1>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^I]*)Image[\s]+File[\s]+Name:[\s]+(?<process>.*)$" }
				id => "message-Security_562_Security:02"
				add_field => {
					"[event][id]" => "Security_562_Security:02"
					"[rsa][message][id1]" => "Security_562_Security:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_562_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server> Handle ID: <id1> Process ID: <process_id>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>.*)$" }
				id => "message-Security_562_Security"
				add_field => {
					"[event][id]" => "Security_562_Security"
					"[rsa][message][id1]" => "Security_562_Security"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_563_Security" {
		# MESSAGE Security_563_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server>Object Type: <obj_type>Object Name: <obj_name>Handle ID: <id1>Operation ID: <id2>Process ID: <process_id>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain: <c_domain>Client Logon ID: <sessionid1>Accesses: <accesses>Privileges: <privilege>Access Mask: <fld52>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^H]*)Handle[\s]+ID:[\s]+(?<id1>[^O]*)Operation[\s]+ID:[\s]+(?<id2>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:[\s]+(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^A]*)Accesses:[\s]+(?<accesses>[^P]*)Privileges:[\s]+(?<privilege>[^A]*)Access[\s]+Mask:[\s]+(?<fld52>.*)$" }
				id => "message-Security_563_Security:02"
				add_field => {
					"[event][id]" => "Security_563_Security:02"
					"[rsa][message][id1]" => "Security_563_Security:02"
					"[event][categoryid]" => "1206020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_563_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server>Object Type: <obj_type>Object Name: <obj_name>Handle ID: <id1>Operation ID: <id2>Process ID: <process_id>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain: <c_domain>Client Logon ID: <sessionid1> Accesses <accesses> Privileges <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^H]*)Handle[\s]+ID:[\s]+(?<id1>[^O]*)Operation[\s]+ID:[\s]+(?<id2>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:[\s]+(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^\s]*)[\s]+Accesses[\s]+(?<accesses>[^\s]*)[\s]+Privileges[\s]+(?<privilege>.*)$" }
				id => "message-Security_563_Security"
				add_field => {
					"[event][id]" => "Security_563_Security"
					"[rsa][message][id1]" => "Security_563_Security"
					"[event][categoryid]" => "1206020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_564_Security" {
		# MESSAGE Security_564_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server>Handle ID: <id1>Process ID: <process_id>Image File Name: <process>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^H]*)Handle[\s]+ID:[\s]+(?<id1>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^I]*)Image[\s]+File[\s]+Name:[\s]+(?<process>.*)$" }
				id => "message-Security_564_Security:02"
				add_field => {
					"[event][id]" => "Security_564_Security:02"
					"[rsa][message][id1]" => "Security_564_Security:02"
					"[event][categoryid]" => "1206020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_564_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server>Handle ID: <id1>Process ID: <process_id>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^H]*)Handle[\s]+ID:[\s]+(?<id1>[^P]*)Process[\s]+ID:[\s]+(?<process_id>.*)$" }
				id => "message-Security_564_Security"
				add_field => {
					"[event][id]" => "Security_564_Security"
					"[rsa][message][id1]" => "Security_564_Security"
					"[event][categoryid]" => "1206020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_565_Security" {
		# MESSAGE Security_565_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server>Object Type: <obj_type>Object Name: <obj_name>Handle ID: <id1>Operation ID: <id2>Process ID:<process_id>Process Name:<process>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain:<c_domain>Client Logon ID: <sessionid1>Accesses: <accesses> Privileges: <privilege> Properties: <param>Access Mask:<fld52>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^H]*)Handle[\s]+ID:[\s]+(?<id1>[^O]*)Operation[\s]+ID:[\s]+(?<id2>[^P]*)Process[\s]+ID:(?<process_id>[^P]*)Process[\s]+Name:(?<process>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^A]*)Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Properties:[\s]+(?<param>[^A]*)Access[\s]+Mask:(?<fld52>.*)$" }
				id => "message-Security_565_Security:02"
				add_field => {
					"[event][id]" => "Security_565_Security:02"
					"[rsa][message][id1]" => "Security_565_Security:02"
					"[event][categoryid]" => "1206010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_565_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server>Object Type: <obj_type>Object Name: <obj_name>New Handle ID: <id1>Operation ID: <id2>Process ID:<process_id>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain:<c_domain>Client Logon ID: <sessionid1>Accesses<accesses>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^N]*)New[\s]+Handle[\s]+ID:[\s]+(?<id1>[^O]*)Operation[\s]+ID:[\s]+(?<id2>[^P]*)Process[\s]+ID:(?<process_id>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^A]*)Accesses(?<accesses>.*)$" }
				id => "message-Security_565_Security"
				add_field => {
					"[event][id]" => "Security_565_Security"
					"[rsa][message][id1]" => "Security_565_Security"
					"[event][categoryid]" => "1206010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_566_Security" {
		# MESSAGE Security_566_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Operation Type: <action>Object Type: <obj_type>Object Name: <obj_name>Handle ID: <id1>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain: <c_domain>Client Logon ID: <sessionid1>Accesses: <accesses>Properties: <fld54>Additional Info: <param> Access Mask: <fld52>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Operation[\s]+Type:[\s]+(?<action>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^H]*)Handle[\s]+ID:[\s]+(?<id1>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:[\s]+(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^A]*)Accesses:[\s]+(?<accesses>[^P]*)Properties:[\s]+(?<fld54>[^A]*)Additional[\s]+Info:[\s]+(?<param>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>.*)$" }
				id => "message-Security_566_Security:02"
				add_field => {
					"[event][id]" => "Security_566_Security:02"
					"[rsa][message][id1]" => "Security_566_Security:02"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_566_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> <space> Operation Type: <action> Object Type: <obj_type> Object Name: <obj_name> Handle ID: <id1> Operation ID: <id2> Primary User Name: <username> Primary Domain: <domain> Primary Logon ID: <sessionid> Client User Name: <c_username> Client Domain: <c_domain> Client Logon ID: <sessionid1> Requested Accesses <accesses>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(?<space>[^\s]*)[\s]+Operation[\s]+Type:[\s]+(?<action>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Operation[\s]+ID:[\s]+(?<id2>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^\s]*)[\s]+Requested[\s]+Accesses[\s]+(?<accesses>.*)$" }
				id => "message-Security_566_Security"
				add_field => {
					"[event][id]" => "Security_566_Security"
					"[rsa][message][id1]" => "Security_566_Security"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_567_Security" {
		# MESSAGE Security_567_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server> Handle ID: <id1> Object Type: <obj_type> Process ID: <process_id> Image File Name: <process> Accesses: <accesses> Access Mask: <fld52>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Image[\s]+File[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>.*)$" }
				id => "message-Security_567_Security:02"
				add_field => {
					"[event][id]" => "Security_567_Security:02"
					"[rsa][message][id1]" => "Security_567_Security:02"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_567_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server> Handle ID: <id1> Object Type: <obj_type> Process ID: <process_id> Image File Name: <process> Access Mask: <fld52>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Image[\s]+File[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>.*)$" }
				id => "message-Security_567_Security:01"
				add_field => {
					"[event][id]" => "Security_567_Security:01"
					"[rsa][message][id1]" => "Security_567_Security:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Domain: <domain>Logon ID: <sessionid>{Assigned|Privileges}: <privilege>
	else if [logstash][msgparser][id] == "msgParserId79" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^AP]*)(Assigned|Privileges):[\s]+(?<privilege>.*)$" }
			id => "msgParserId79"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_577_Security" {
		# MESSAGE Security_577_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	Success Audit	 | ,Success Audit,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Server: <obj_server>Service: <service>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain: <c_domain>Client Logon ID: <sessionid1>Privileges:<privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\tSuccess[\s]+Audit\t[\s]+|[\s]*,Success[\s]+Audit,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Server:[\s]+(?<obj_server>[^S]*)Service:[\s]+(?<service>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:[\s]+(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^P]*)Privileges:(?<privilege>.*)$" }
				id => "message-Security_577_Security:02"
				add_field => {
				"event_type" => "Success Audit"
					"[event][id]" => "Security_577_Security:02"
					"[rsa][message][id1]" => "Security_577_Security:02"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_577_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	Failure Audit	 | ,Failure Audit,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Server: <obj_server>Service: <service>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain: <c_domain>Client Logon ID: <sessionid1>Privileges:<privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\tFailure[\s]+Audit\t[\s]+|[\s]*,Failure[\s]+Audit,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Server:[\s]+(?<obj_server>[^S]*)Service:[\s]+(?<service>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:[\s]+(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^P]*)Privileges:(?<privilege>.*)$" }
				id => "message-Security_577_Security:01"
				add_field => {
				"event_type" => "Failure Audit"
					"[event][id]" => "Security_577_Security:01"
					"[rsa][message][id1]" => "Security_577_Security:01"
					"[event][categoryid]" => "1401050200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_577_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Server: <obj_server>Service: <service>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain: <c_domain>Client Logon ID: <sessionid1>Privileges:<privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Server:[\s]+(?<obj_server>[^S]*)Service:[\s]+(?<service>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:[\s]+(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^P]*)Privileges:(?<privilege>.*)$" }
				id => "message-Security_577_Security"
				add_field => {
					"[event][id]" => "Security_577_Security"
					"[rsa][message][id1]" => "Security_577_Security"
					"[event][categoryid]" => "1401050100"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Server: <obj_server>Object Handle: <id1>Process ID: <process>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain: <c_domain>Client Logon ID:<sessionid1>Privileges:<privilege>
	else if [logstash][msgparser][id] == "msgParserId83" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^O]*)Object[\s]+Handle:[\s]+(?<id1>[^P]*)Process[\s]+ID:[\s]+(?<process>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:[\s]+(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:(?<sessionid1>[^P]*)Privileges:(?<privilege>.*)$" }
			id => "msgParserId83"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId84
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Process ID: <process_id>Image File Name: <process>Creator Process ID: <parent_pid>User Name: <username>Domain: <domain>Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId84" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Process[\s]+ID:[\s]+(?<process_id>[^I]*)Image[\s]+File[\s]+Name:[\s]+(?<process>[^C]*)Creator[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId84"
			add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_593_Security" {
		# MESSAGE Security_593_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Process ID: <process_id>Image File Name: <process>User Name: <username>Domain: <domain>Logon ID: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^I]*)Image[\s]+File[\s]+Name:[\s]+(?<process>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
				id => "message-Security_593_Security"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_593_Security"
					"[rsa][message][id1]" => "Security_593_Security"
					"[event][categoryid]" => "1205020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_593_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Process ID: <process_id>User Name: <username>Domain: <domain>Logon ID: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
				id => "message-Security_593_Security:01"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_593_Security:01"
					"[rsa][message][id1]" => "Security_593_Security:01"
					"[event][categoryid]" => "1205020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId87
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Source Handle ID: <id1>Source Process ID: <parent_pid>Target Handle ID: <id2>Target Process ID: <process_id>
	else if [logstash][msgparser][id] == "msgParserId87" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Source[\s]+Handle[\s]+ID:[\s]+(?<id1>[^S]*)Source[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^T]*)Target[\s]+Handle[\s]+ID:[\s]+(?<id2>[^T]*)Target[\s]+Process[\s]+ID:[\s]+(?<process_id>.*)$" }
			id => "msgParserId87"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_595_Security" {
		# MESSAGE Security_595_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Type: <obj_type>Object Name: <obj_name>Process ID: <process_id>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain:<c_domain>Client Logon ID:<sessionid1>Accesses:<accesses>Access Mask:<fld52>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:(?<sessionid1>[^A]*)Accesses:(?<accesses>[^A]*)Access[\s]+Mask:(?<fld52>.*)$" }
				id => "message-Security_595_Security"
				add_field => {
					"[event][id]" => "Security_595_Security"
					"[rsa][message][id1]" => "Security_595_Security"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_595_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Object Type: <obj_type>Object Name: <obj_name>Process ID: <process_id>Primary User Name: <username>Primary Domain: <domain>Primary Logon ID: <sessionid>Client User Name: <c_username>Client Domain:<c_domain>Client Logon ID:<sessionid1>Accesses:<accesses>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^P]*)Primary[\s]+User[\s]+Name:[\s]+(?<username>[^P]*)Primary[\s]+Domain:[\s]+(?<domain>[^P]*)Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^C]*)Client[\s]+Domain:(?<c_domain>[^C]*)Client[\s]+Logon[\s]+ID:(?<sessionid1>[^A]*)Accesses:(?<accesses>.*)$" }
				id => "message-Security_595_Security:01"
				add_field => {
					"[event][id]" => "Security_595_Security:01"
					"[rsa][message][id1]" => "Security_595_Security:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId90
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Assigning Process Information: <space> Process ID: <parent_pid>  Image File Name: <process_src>  Primary User Name: <username>  Primary Domain: <domain>  Primary Logon ID: <sessionid> New Process Information:<space>Process ID: <process_id>  Image File Name: <process>  Target User Name: <c_username>  Target Domain: <c_domain>  Target Logon ID: <sessionid1>
	else if [logstash][msgparser][id] == "msgParserId90" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Assigning[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*)[\s]+Image[\s]+File[\s]+Name:[\s]+(?<process_src>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+New[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Image[\s]+File[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Target[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Target[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>.*)$" }
			id => "msgParserId90"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId91
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Service Name:<service> Service File Name:<filename> Service Type:<fld56> Service Start Type:<fld57> Service Account:<service_account> By: <space> User Name:<username> Domain:<domain> Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId91" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Service[\s]+Name:(?<service>[^\s]*)[\s]+Service[\s]+File[\s]+Name:(?<filename>[^\s]*)[\s]+Service[\s]+Type:(?<fld56>[^\s]*)[\s]+Service[\s]+Start[\s]+Type:(?<fld57>[^\s]*)[\s]+Service[\s]+Account:(?<service_account>[^\s]*)[\s]+By:[\s]+(?<space>[^\s]*)[\s]+User[\s]+Name:(?<username>[^\s]*)[\s]+Domain:(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId91"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId92
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> File Name:<filename> Command:<action> Triggers:<trigger_val> Time:<fld58> Flags:<fld52> Target User:<service_account> By: <space> User:<username> Domain:<domain> Logon ID:<sessionid>
	else if [logstash][msgparser][id] == "msgParserId92" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+File[\s]+Name:(?<filename>[^\s]*)[\s]+Command:(?<action>[^\s]*)[\s]+Triggers:(?<trigger_val>[^\s]*)[\s]+Time:(?<fld58>[^\s]*)[\s]+Flags:(?<fld52>[^\s]*)[\s]+Target[\s]+User:(?<service_account>[^\s]*)[\s]+By:[\s]+(?<space>[^\s]*)[\s]+User:(?<username>[^\s]*)[\s]+Domain:(?<domain>[^\s]*)[\s]+Logon[\s]+ID:(?<sessionid>.*)$" }
			id => "msgParserId92"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_608_Security" {
		# MESSAGE Security_608_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Right: <privilege> Assigned To: <realm> Assigned By:<space>User Name: <username> Domain: <domain> Logon ID: <sessionid> {	 | ,}<fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Right:[\s]+(?<privilege>[^\s]*)[\s]+Assigned[\s]+To:[\s]+(?<realm>[^\s]*)[\s]+Assigned[\s]+By:(?<space>[^U]*)User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+(\t[\s]+|[\s]*,)(?<fld3>.*)$" }
				id => "message-Security_608_Security:01"
				add_field => {
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_608_Security:01"
					"[rsa][message][id1]" => "Security_608_Security:01"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_608_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Right: <privilege> Assigned To: <realm> Assigned By:   User Name: <username> Domain: <domain> Logon ID: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Right:[\s]+(?<privilege>[^\s]*)[\s]+Assigned[\s]+To:[\s]+(?<realm>[^\s]*)[\s]+Assigned[\s]+By:[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
				id => "message-Security_608_Security"
				add_field => {
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_608_Security"
					"[rsa][message][id1]" => "Security_608_Security"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_609_Security" {
		# MESSAGE Security_609_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Right: <privilege> Removed From: <realm> Removed By:<space>User Name: <username> Domain: <domain> Logon ID: <sessionid> {	 | ,}<fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Right:[\s]+(?<privilege>[^\s]*)[\s]+Removed[\s]+From:[\s]+(?<realm>[^\s]*)[\s]+Removed[\s]+By:(?<space>[^U]*)User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+(\t[\s]+|[\s]*,)(?<fld3>.*)$" }
				id => "message-Security_609_Security:01"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_609_Security:01"
					"[rsa][message][id1]" => "Security_609_Security:01"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_609_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Right: <privilege> Removed From: <realm> Removed By:   User Name: <username> Domain: <domain> Logon ID: <sessionid>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Right:[\s]+(?<privilege>[^\s]*)[\s]+Removed[\s]+From:[\s]+(?<realm>[^\s]*)[\s]+Removed[\s]+By:[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
				id => "message-Security_609_Security"
				add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_609_Security"
					"[rsa][message][id1]" => "Security_609_Security"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId97
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Trusted Domain: Domain Name: <remote_domain>Domain ID: <remote_domain_id>Established By: <space> User Name: <username>Domain: <domain>Logon ID: <sessionid> <info>
	else if [logstash][msgparser][id] == "msgParserId97" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Trusted[\s]+Domain:[\s]+Domain[\s]+Name:[\s]+(?<remote_domain>[^D]*)Domain[\s]+ID:[\s]+(?<remote_domain_id>[^E]*)Established[\s]+By:[\s]+(?<space>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+(?<info>.*)$" }
			id => "msgParserId97"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId98
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Domain Name: <remote_domain>Domain ID: <remote_domain_id>Removed By: User Name: <username>Domain: <domain>Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId98" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Domain[\s]+Name:[\s]+(?<remote_domain>[^D]*)Domain[\s]+ID:[\s]+(?<remote_domain_id>[^R]*)Removed[\s]+By:[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId98"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId99
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Policy: <policy_value> Changed By:<space>User Name: <username>Domain Name: <domain>Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId99" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Policy:[\s]+(?<policy_value>[^\s]*)[\s]+Changed[\s]+By:(?<space>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain[\s]+Name:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId99"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId100
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy Source: <info>
	else if [logstash][msgparser][id] == "msgParserId100" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+Source:[\s]+(?<info>.*)$" }
			id => "msgParserId100"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId101
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>: <info>
	else if [logstash][msgparser][id] == "msgParserId101" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^:]*):[\s]+(?<info>.*)$" }
			id => "msgParserId101"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId102
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Changed By:<space>User Name:<username>Domain Name:<domain>Logon ID:<sessionid>Changes made:<policy_value>
	else if [logstash][msgparser][id] == "msgParserId102" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Changed[\s]+By:(?<space>[^U]*)User[\s]+Name:(?<username>[^D]*)Domain[\s]+Name:(?<domain>[^L]*)Logon[\s]+ID:(?<sessionid>[^C]*)Changes[\s]+made:(?<policy_value>.*)$" }
			id => "msgParserId102"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId103
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Changed By: <space>  User Name: <username>Domain Name: <domain>Logon ID: <sessionid>Changes Made:<policy_value>
	else if [logstash][msgparser][id] == "msgParserId103" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Changed[\s]+By:[\s]+(?<space>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain[\s]+Name:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Changes[\s]+Made:(?<policy_value>.*)$" }
			id => "msgParserId103"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId104
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Changed By: <space>User Name: <username>Domain Name: <domain>Logon ID: <sessionid>Changes Made:<policy_value>
	else if [logstash][msgparser][id] == "msgParserId104" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Changed[\s]+By:[\s]+(?<space>[^U]*)User[\s]+Name:[\s]+(?<username>[^D]*)Domain[\s]+Name:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^C]*)Changes[\s]+Made:(?<policy_value>.*)$" }
			id => "msgParserId104"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId105
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Domain Name: <remote_domain>Domain ID: <remote_domain_id>Modified By: <space> User Name: <username>Domain: <domain>Logon ID: <sessionid> <info>
	else if [logstash][msgparser][id] == "msgParserId105" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Domain[\s]+Name:[\s]+(?<remote_domain>[^D]*)Domain[\s]+ID:[\s]+(?<remote_domain_id>[^M]*)Modified[\s]+By:[\s]+(?<space>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+(?<info>.*)$" }
			id => "msgParserId105"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId106
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Access Granted: <accesses> Account Modified: <realm> Assigned By: User Name: <username> Domain: <domain> Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId106" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Access[\s]+Granted:[\s]+(?<accesses>[^\s]*)[\s]+Account[\s]+Modified:[\s]+(?<realm>[^\s]*)[\s]+Assigned[\s]+By:[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId106"
			add_field => {
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId107
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Access Removed: <accesses> Account Modified: <realm> Removed By: User Name: <username> Domain: <domain> Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId107" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Access[\s]+Removed:[\s]+(?<accesses>[^\s]*)[\s]+Account[\s]+Modified:[\s]+(?<realm>[^\s]*)[\s]+Removed[\s]+By:[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId107"
			add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId108
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId108" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId108"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_624_Security" {
		# MESSAGE Security_624_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <c_username>New Domain: <c_domain>New Account ID: <fld39>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>{Privileges:|Privileges} <privilege> Attributes: Sam Account Name: <user_fullname> Home Directory: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<c_username>[^N]*)New[\s]+Domain:[\s]+(?<c_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<fld39>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^PP]*)(Privileges:|Privileges)[\s]+(?<privilege>[^\s]*)[\s]+Attributes:[\s]+Sam[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Home[\s]+Directory:[\s]+(?<param>.*)$" }
				id => "message-Security_624_Security:02"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_624_Security:02"
					"[rsa][message][id1]" => "Security_624_Security:02"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_624_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <c_username>New Domain: <c_domain>New Account ID: <fld39>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<c_username>[^N]*)New[\s]+Domain:[\s]+(?<c_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<fld39>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges[\s]+(?<privilege>.*)$" }
				id => "message-Security_624_Security"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_624_Security"
					"[rsa][message][id1]" => "Security_624_Security"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId111
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID:<c_sid>New Type: <change_new>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId111" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:(?<c_sid>[^N]*)New[\s]+Type:[\s]+(?<change_new>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId111"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId112
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID:<c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId112" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId112"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId113
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID:<c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId113" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId113"
			add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId114
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID:<c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId114" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId114"
			add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId115
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID:<c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId115" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId115"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId116
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID:<c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId116" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId116"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_631_Security" {
		# MESSAGE Security_631_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^A]*)Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_631_Security:02"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_631_Security:02"
					"[rsa][message][id1]" => "Security_631_Security:02"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_631_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_631_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_631_Security"
					"[rsa][message][id1]" => "Security_631_Security"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId119
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Member Name: <c_username> Member ID: <c_sid> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID <sessionid> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId119" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Member[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId119"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId120
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Member Name: <c_username> Member ID: <c_sid> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain:<domain> Caller Logon ID: <sessionid> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId120" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Member[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId120"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId121
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID:<groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId121" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId121"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_635_Security" {
		# MESSAGE Security_635_Security:03
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID:<groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^A]*)Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_635_Security:03"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_635_Security:03"
					"[rsa][message][id1]" => "Security_635_Security:03"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_635_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group> New Domain: <remote_domain> New Account ID:<groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+New[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+New[\s]+Account[\s]+ID:(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_635_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_635_Security"
					"[rsa][message][id1]" => "Security_635_Security"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_635_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID:<groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_635_Security:01"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_635_Security:01"
					"[rsa][message][id1]" => "Security_635_Security:01"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId125
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Member Name: <c_username>Member ID: <c_sid>Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId125" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^M]*)Member[\s]+ID:[\s]+(?<c_sid>[^T]*)Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId125"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId126
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Member Name: <c_username>Member ID: <c_sid>Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId126" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^M]*)Member[\s]+ID:[\s]+(?<c_sid>[^T]*)Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId126"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId127
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId127" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId127"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_639_Security" {
		# MESSAGE Security_639_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Changed Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^C]*)Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_639_Security:02"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_639_Security:02"
					"[rsa][message][id1]" => "Security_639_Security:02"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_639_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_639_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_639_Security"
					"[rsa][message][id1]" => "Security_639_Security"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId130
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Type of change: <fld15>Object Type: <obj_type>Object Name: <obj_name>Object ID: <id1>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId130" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Type[\s]+of[\s]+change:[\s]+(?<fld15>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^O]*)Object[\s]+ID:[\s]+(?<id1>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId130"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_641_Security" {
		# MESSAGE Security_641_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Changed Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^C]*)Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_641_Security:02"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_641_Security:02"
					"[rsa][message][id1]" => "Security_641_Security:02"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_641_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_641_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_641_Security"
					"[rsa][message][id1]" => "Security_641_Security"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_642_Security" {
		# MESSAGE Security_642_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID: <c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Changed Attributes: Sam Account Name: <user_fullname> Home Directory: <directory>User Workstations: <hostname>Password Last Set: <fld7> Account Expires: <fld86> Primary Group ID: <groupid> AllowedToDelegateTo: <fld88>Old UAC Value: <change_old>New UAC Value: <change_new>User Account Control: <fld87>User Parameters: <param>Sid History: <fld50>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^C]*)Changed[\s]+Attributes:[\s]+Sam[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Home[\s]+Directory:[\s]+(?<directory>[^U]*)User[\s]+Workstations:[\s]+(?<hostname>[^P]*)Password[\s]+Last[\s]+Set:[\s]+(?<fld7>[^\s]*)[\s]+Account[\s]+Expires:[\s]+(?<fld86>[^\s]*)[\s]+Primary[\s]+Group[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+AllowedToDelegateTo:[\s]+(?<fld88>[^O]*)Old[\s]+UAC[\s]+Value:[\s]+(?<change_old>[^N]*)New[\s]+UAC[\s]+Value:[\s]+(?<change_new>[^U]*)User[\s]+Account[\s]+Control:[\s]+(?<fld87>[^U]*)User[\s]+Parameters:[\s]+(?<param>[^S]*)Sid[\s]+History:[\s]+(?<fld50>.*)$" }
				id => "message-Security_642_Security:02"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_642_Security:02"
					"[rsa][message][id1]" => "Security_642_Security:02"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_642_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID: <c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_642_Security"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_642_Security"
					"[rsa][message][id1]" => "Security_642_Security"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_643_Security" {
		# MESSAGE Security_643_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Domain Name: <c_domain>Domain ID: <domain_id>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Changed Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Domain[\s]+Name:[\s]+(?<c_domain>[^D]*)Domain[\s]+ID:[\s]+(?<domain_id>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^C]*)Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_643_Security:02"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_643_Security:02"
					"[rsa][message][id1]" => "Security_643_Security:02"
					"[event][categoryid]" => "1502050000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_643_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  modified Domain Name: <c_domain> Domain ID: <domain_id> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+modified[\s]+Domain[\s]+Name:[\s]+(?<c_domain>[^\s]*)[\s]+Domain[\s]+ID:[\s]+(?<domain_id>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_643_Security"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_643_Security"
					"[rsa][message][id1]" => "Security_643_Security"
					"[event][categoryid]" => "1502050000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId135
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<fld93>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <username>Target Account ID: <sid>Caller Machine Name: <hostname>Caller User Name: <event_user>Caller Domain: <fld40>Caller Logon ID: <fld41>
	else if [logstash][msgparser][id] == "msgParserId135" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld93>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<username>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<sid>[^C]*)Caller[\s]+Machine[\s]+Name:[\s]+(?<hostname>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<event_user>[^C]*)Caller[\s]+Domain:[\s]+(?<fld40>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<fld41>.*)$" }
			id => "msgParserId135"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_645_Security" {
		# MESSAGE Security_645_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <c_username>New Domain: <c_domain>New Account ID: <c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges <privilege>Attributes: Sam Account Name: <user_fullname>Home Directory: <directory>User Workstations: <hostname> <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<c_username>[^N]*)New[\s]+Domain:[\s]+(?<c_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges[\s]+(?<privilege>[^A]*)Attributes:[\s]+Sam[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^H]*)Home[\s]+Directory:[\s]+(?<directory>[^U]*)User[\s]+Workstations:[\s]+(?<hostname>[^\s]*)[\s]+(?<param>.*)$" }
				id => "message-Security_645_Security:02"
				add_field => {
					"[event][id]" => "Security_645_Security:02"
					"[rsa][message][id1]" => "Security_645_Security:02"
					"[event][categoryid]" => "1503020200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_645_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <c_username>New Domain: <c_domain>New Account ID: <c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<c_username>[^N]*)New[\s]+Domain:[\s]+(?<c_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges[\s]+(?<privilege>.*)$" }
				id => "message-Security_645_Security"
				add_field => {
					"[event][id]" => "Security_645_Security"
					"[rsa][message][id1]" => "Security_645_Security"
					"[event][categoryid]" => "1503020200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_646_Security" {
		# MESSAGE Security_646_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID: <fld39>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Changed Attributes: Sam Account Name: <user_fullname>Home Directory: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<fld39>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^C]*)Changed[\s]+Attributes:[\s]+Sam[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^H]*)Home[\s]+Directory:[\s]+(?<param>.*)$" }
				id => "message-Security_646_Security:02"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_activity" => "Modify"
					"[event][id]" => "Security_646_Security:02"
					"[rsa][message][id1]" => "Security_646_Security:02"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_646_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID: <fld39>Caller User Name: <username>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<fld39>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_646_Security"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_activity" => "Modify"
					"[event][id]" => "Security_646_Security"
					"[rsa][message][id1]" => "Security_646_Security"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_647_Security" {
		# MESSAGE Security_647_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID: <c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_647_Security:02"
				add_field => {
					"[event][id]" => "Security_647_Security:02"
					"[rsa][message][id1]" => "Security_647_Security:02"
					"[event][categoryid]" => "1503020200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_647_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID: <c_sid>Caller User Name: <username>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_647_Security"
				add_field => {
					"[event][id]" => "Security_647_Security"
					"[rsa][message][id1]" => "Security_647_Security"
					"[event][categoryid]" => "1503020200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId142
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group> Target Domain:<remote_domain> Target Account ID:<groupid> Caller User Name:<username> Caller Domain:<domain> Caller Logon ID:<sessionid> Privileges: <privilege> { Attributes: <param> | <param>}
	else if [logstash][msgparser][id] == "msgParserId142" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:(?<username>[^\s]*)[\s]+Caller[\s]+Domain:(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+([\s]*Attributes:[\s]+(?<param>[^\s]*)[\s]+|[\s]*(?<param>.*))$" }
			id => "msgParserId142"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId143
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group> Target Domain:<remote_domain> Target Account ID:<groupid> Caller User Name:<username> Caller Domain:<domain> Caller Logon ID:<sessionid> Privileges: <privilege> { Changed Attributes: <param> | <param>}
	else if [logstash][msgparser][id] == "msgParserId143" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:(?<username>[^\s]*)[\s]+Caller[\s]+Domain:(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+([\s]*Changed[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+|[\s]*(?<param>.*))$" }
			id => "msgParserId143"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId144
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Member Name: <c_username> Member ID:<c_sid> Target Account Name:<group> Target Domain:<remote_domain> Target Account ID:<groupid> Caller User Name:<username> Caller Domain:<domain> Caller Logon ID:<sessionid> Privileges:<privilege>
	else if [logstash][msgparser][id] == "msgParserId144" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Member[\s]+ID:(?<c_sid>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:(?<group>[^\s]*)[\s]+Target[\s]+Domain:(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:(?<username>[^\s]*)[\s]+Caller[\s]+Domain:(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:(?<sessionid>[^\s]*)[\s]+Privileges:(?<privilege>.*)$" }
			id => "msgParserId144"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId145
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Member Name: <c_username> Member ID:<fld39> Target Account Name:<group> Target Domain:<remote_domain> Target Account ID:<fld40> Caller User Name:<username> Caller Domain:<domain> Caller Logon ID:<sessionid> Privileges:<privilege>
	else if [logstash][msgparser][id] == "msgParserId145" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Member[\s]+ID:(?<fld39>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:(?<group>[^\s]*)[\s]+Target[\s]+Domain:(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:(?<fld40>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:(?<username>[^\s]*)[\s]+Caller[\s]+Domain:(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:(?<sessionid>[^\s]*)[\s]+Privileges:(?<privilege>.*)$" }
			id => "msgParserId145"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId146
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name:<group> Target Domain:<remote_domain> Target Account ID:<fld40> Caller User Name:<username> Caller Domain:<domain> Caller Logon ID:<sessionid> Privileges:<privilege>
	else if [logstash][msgparser][id] == "msgParserId146" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:(?<group>[^\s]*)[\s]+Target[\s]+Domain:(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:(?<fld40>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:(?<username>[^\s]*)[\s]+Caller[\s]+Domain:(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:(?<sessionid>[^\s]*)[\s]+Privileges:(?<privilege>.*)$" }
			id => "msgParserId146"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_653_Security" {
		# MESSAGE Security_653_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege> Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_653_Security:01"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_653_Security:01"
					"[rsa][message][id1]" => "Security_653_Security:01"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_653_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_653_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_653_Security"
					"[rsa][message][id1]" => "Security_653_Security"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId148
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege> Changed Attributes: <param>
	else if [logstash][msgparser][id] == "msgParserId148" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
			id => "msgParserId148"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId149
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Member Name: <c_username> Member ID: <c_sid> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId149" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Member[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId149"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId150
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Member Name: <c_username> Member ID: <c_sid> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId150" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Member[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId150"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId151
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId151" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId151"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_658_Security" {
		# MESSAGE Security_658_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^A]*)Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_658_Security:02"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_658_Security:02"
					"[rsa][message][id1]" => "Security_658_Security:02"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_658_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_658_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_658_Security"
					"[rsa][message][id1]" => "Security_658_Security"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_659_Security" {
		# MESSAGE Security_659_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>Changed Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^C]*)Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_659_Security:02"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_659_Security:02"
					"[rsa][message][id1]" => "Security_659_Security:02"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_659_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_659_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_659_Security"
					"[rsa][message][id1]" => "Security_659_Security"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_663_Security" {
		# MESSAGE Security_663_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege> Attributes:<param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Attributes:(?<param>.*)$" }
				id => "message-Security_663_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_663_Security"
					"[rsa][message][id1]" => "Security_663_Security"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_663_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_663_Security:01"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_663_Security:01"
					"[rsa][message][id1]" => "Security_663_Security:01"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_664_Security" {
		# MESSAGE Security_664_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege> Changed Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_664_Security:01"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_664_Security:01"
					"[rsa][message][id1]" => "Security_664_Security:01"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_664_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_664_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_664_Security"
					"[rsa][message][id1]" => "Security_664_Security"
					"[event][categoryid]" => "1402010300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId154
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name:<group> Target Domain:<remote_domain> Target Account ID:<groupid> Caller User Name:<username> Caller Domain:<domain> Caller Logon ID:<sessionid> Privileges:<privilege>
	else if [logstash][msgparser][id] == "msgParserId154" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:(?<group>[^\s]*)[\s]+Target[\s]+Domain:(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:(?<username>[^\s]*)[\s]+Caller[\s]+Domain:(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:(?<sessionid>[^\s]*)[\s]+Privileges:(?<privilege>.*)$" }
			id => "msgParserId154"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId155
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>Target Account Name: <group>Target Domain: <remote_domain>Target Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId155" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^T]*)Target[\s]+Account[\s]+Name:[\s]+(?<group>[^T]*)Target[\s]+Domain:[\s]+(?<remote_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId155"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId156
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>Source Account Name: <fld52> Source Account ID: <fld53> Target Account Name: <c_username> Target Domain:  <c_domain> Target Account ID: <c_sid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege> SidList:<fld56>{	 | ,}<fld50>
	else if [logstash][msgparser][id] == "msgParserId156" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^S]*)Source[\s]+Account[\s]+Name:[\s]+(?<fld52>[^\s]*)[\s]+Source[\s]+Account[\s]+ID:[\s]+(?<fld53>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+SidList:(?<fld56>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld50>.*)$" }
			id => "msgParserId156"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId157
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Target Account Name: <c_username> Target Domain: <c_domain> Target Account ID: <c_sid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId157" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId157"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_672_Security" {
		# MESSAGE Security_672_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	Success Audit	 | ,Success Audit,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Supplied Realm Name: <domain>User ID: <sid>Service Name: <service>Service ID: <fld60>Ticket Options: <fld26>Result Code: <resultcode> Ticket Encryption Type: <encryption_type>Pre-Authentication Type: <fld93>Client Address: <saddr>Certificate Issuer Name: <cert_issuer> Certificate Serial Number: <fld94> Certificate Thumbprint: <fld95>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\tSuccess[\s]+Audit\t[\s]+|[\s]*,Success[\s]+Audit,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^S]*)Supplied[\s]+Realm[\s]+Name:[\s]+(?<domain>[^U]*)User[\s]+ID:[\s]+(?<sid>[^S]*)Service[\s]+Name:[\s]+(?<service>[^S]*)Service[\s]+ID:[\s]+(?<fld60>[^T]*)Ticket[\s]+Options:[\s]+(?<fld26>[^R]*)Result[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^P]*)Pre\-Authentication[\s]+Type:[\s]+(?<fld93>[^C]*)Client[\s]+Address:[\s]+(?<saddr>[^C]*)Certificate[\s]+Issuer[\s]+Name:[\s]+(?<cert_issuer>[^\s]*)[\s]+Certificate[\s]+Serial[\s]+Number:[\s]+(?<fld94>[^\s]*)[\s]+Certificate[\s]+Thumbprint:[\s]+(?<fld95>.*)$" }
				id => "message-Security_672_Security:02"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"event_type" => "Success Audit"
					"[event][id]" => "Security_672_Security:02"
					"[rsa][message][id1]" => "Security_672_Security:02"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_672_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	Failure Audit	 | ,Failure Audit,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Supplied Realm Name: <domain>User ID: <sid>Service Name: <service>Service ID: <fld60>Ticket Options: <fld26>Result Code: <resultcode> Ticket Encryption Type: <encryption_type>Pre-Authentication Type: <fld93>Client Address: <saddr>Certificate Issuer Name: <cert_issuer> Certificate Serial Number: <fld94> Certificate Thumbprint: <fld95>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\tFailure[\s]+Audit\t[\s]+|[\s]*,Failure[\s]+Audit,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^S]*)Supplied[\s]+Realm[\s]+Name:[\s]+(?<domain>[^U]*)User[\s]+ID:[\s]+(?<sid>[^S]*)Service[\s]+Name:[\s]+(?<service>[^S]*)Service[\s]+ID:[\s]+(?<fld60>[^T]*)Ticket[\s]+Options:[\s]+(?<fld26>[^R]*)Result[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^P]*)Pre\-Authentication[\s]+Type:[\s]+(?<fld93>[^C]*)Client[\s]+Address:[\s]+(?<saddr>[^C]*)Certificate[\s]+Issuer[\s]+Name:[\s]+(?<cert_issuer>[^\s]*)[\s]+Certificate[\s]+Serial[\s]+Number:[\s]+(?<fld94>[^\s]*)[\s]+Certificate[\s]+Thumbprint:[\s]+(?<fld95>.*)$" }
				id => "message-Security_672_Security:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"event_type" => "Failure Audit"
					"[event][id]" => "Security_672_Security:01"
					"[rsa][message][id1]" => "Security_672_Security:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_672_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Supplied Realm Name: <domain>User ID: <sid>Service Name: <service>Service ID: <fld60>Ticket Options: <fld26>Ticket Encryption Type: <encryption_type>Pre-Authentication Type: <fld93> {Client Address: <saddr>	<fld50> | Client Address: <saddr>,<fld50> | Client Address: <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^S]*)Supplied[\s]+Realm[\s]+Name:[\s]+(?<domain>[^U]*)User[\s]+ID:[\s]+(?<sid>[^S]*)Service[\s]+Name:[\s]+(?<service>[^S]*)Service[\s]+ID:[\s]+(?<fld60>[^T]*)Ticket[\s]+Options:[\s]+(?<fld26>[^T]*)Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^P]*)Pre\-Authentication[\s]+Type:[\s]+(?<fld93>[^\s]*)[\s]+(Client[\s]+Address:[\s]+(?<saddr>[^\t]*)\t(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^,]*),(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-Security_672_Security"
				add_field => {
					"[event][id]" => "Security_672_Security"
					"[rsa][message][id1]" => "Security_672_Security"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_673_Security" {
		# MESSAGE Security_673_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>User Domain: <domain>Service Name: <service>Service ID: <fld60>Ticket Options: <fld26>Ticket Encryption Type: <encryption_type>Client Address: <saddr> Failure Code: <resultcode> Logon GUID: <sessionid> Transited Services: <fld43>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^U]*)User[\s]+Domain:[\s]+(?<domain>[^S]*)Service[\s]+Name:[\s]+(?<service>[^S]*)Service[\s]+ID:[\s]+(?<fld60>[^T]*)Ticket[\s]+Options:[\s]+(?<fld26>[^T]*)Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^C]*)Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Failure[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Logon[\s]+GUID:[\s]+(?<sessionid>[^\s]*)[\s]+Transited[\s]+Services:[\s]+(?<fld43>.*)$" }
				id => "message-Security_673_Security:02"
				add_field => {
					"[event][id]" => "Security_673_Security:02"
					"[rsa][message][id1]" => "Security_673_Security:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_673_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>User Domain: <domain>Service Name: <service>Service ID: <fld60>Ticket Options: <fld26>Ticket Encryption Type: <encryption_type>{Client Address: <saddr>	<fld50> | Client Address: <saddr>,<fld50> | Client Address: <saddr> }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^U]*)User[\s]+Domain:[\s]+(?<domain>[^S]*)Service[\s]+Name:[\s]+(?<service>[^S]*)Service[\s]+ID:[\s]+(?<fld60>[^T]*)Ticket[\s]+Options:[\s]+(?<fld26>[^T]*)Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^C\s\s]*)(Client[\s]+Address:[\s]+(?<saddr>[^\t]*)\t(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^,]*),(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+)$" }
				id => "message-Security_673_Security"
				add_field => {
					"[event][id]" => "Security_673_Security"
					"[rsa][message][id1]" => "Security_673_Security"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId162
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>User Domain: <domain>Service Name: <service>Service ID: <fld60>Ticket Options: <fld26>Ticket Encryption Type: <encryption_type>{Client Address: <saddr>	<fld50> | Client Address: <saddr>,<fld50> | Client Address: <saddr> }
	else if [logstash][msgparser][id] == "msgParserId162" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^U]*)User[\s]+Domain:[\s]+(?<domain>[^S]*)Service[\s]+Name:[\s]+(?<service>[^S]*)Service[\s]+ID:[\s]+(?<fld60>[^T]*)Ticket[\s]+Options:[\s]+(?<fld26>[^T]*)Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^C\s\s]*)(Client[\s]+Address:[\s]+(?<saddr>[^\t]*)\t(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^,]*),(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+)$" }
			id => "msgParserId162"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId163
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>User ID: <sid>Service Name: <service>Pre-Authentication Type: <fld93> Failure Code: <resultcode> {Client Address: <saddr>	<fld50> | Client Address: <saddr>,<fld50> | Client Address: <saddr> }
	else if [logstash][msgparser][id] == "msgParserId163" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^U]*)User[\s]+ID:[\s]+(?<sid>[^S]*)Service[\s]+Name:[\s]+(?<service>[^P]*)Pre\-Authentication[\s]+Type:[\s]+(?<fld93>[^\s]*)[\s]+Failure[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+(Client[\s]+Address:[\s]+(?<saddr>[^\t]*)\t(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^,]*),(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+)$" }
			id => "msgParserId163"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId164
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Supplied Realm Name: <domain>Service Name: <service>Ticket Options: <fld26> Failure Code: <resultcode> {Client Address: <saddr>	<fld50> | Client Address: <saddr>,<fld50> | Client Address: <saddr> }
	else if [logstash][msgparser][id] == "msgParserId164" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^S]*)Supplied[\s]+Realm[\s]+Name:[\s]+(?<domain>[^S]*)Service[\s]+Name:[\s]+(?<service>[^T]*)Ticket[\s]+Options:[\s]+(?<fld26>[^\s]*)[\s]+Failure[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+(Client[\s]+Address:[\s]+(?<saddr>[^\t]*)\t(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^,]*),(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+)$" }
			id => "msgParserId164"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId165
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>User Domain: <domain>Service Name: <service>Ticket Options: <fld26>Failure Code: <resultcode> {Client Address: <saddr>	<fld50> | Client Address: <saddr>,<fld50> | Client Address: <saddr> }
	else if [logstash][msgparser][id] == "msgParserId165" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^U]*)User[\s]+Domain:[\s]+(?<domain>[^S]*)Service[\s]+Name:[\s]+(?<service>[^T]*)Ticket[\s]+Options:[\s]+(?<fld26>[^F]*)Failure[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+(Client[\s]+Address:[\s]+(?<saddr>[^\t]*)\t(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^,]*),(?<fld50>[^\s]*)[\s]+|[\s]*Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+)$" }
			id => "msgParserId165"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId166
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Mapping Attempted By: <fld22>Client Name: <fld23>Mapped Name: <fld24>
	else if [logstash][msgparser][id] == "msgParserId166" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Mapping[\s]+Attempted[\s]+By:[\s]+(?<fld22>[^C]*)Client[\s]+Name:[\s]+(?<fld23>[^M]*)Mapped[\s]+Name:[\s]+(?<fld24>.*)$" }
			id => "msgParserId166"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId167
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> The name:<c_username>could not be mapped for logon by: <fld22>
	else if [logstash][msgparser][id] == "msgParserId167" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+The[\s]+name:(?<c_username>[^c]*)could[\s]+not[\s]+be[\s]+mapped[\s]+for[\s]+logon[\s]+by:[\s]+(?<fld22>.*)$" }
			id => "msgParserId167"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_680_Security" {
		# MESSAGE Security_680_Security:05
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	Success Audit	 | ,Success Audit,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Logon attempt by: <authmethod> Logon account: <username> Source Workstation: <shost>{Error Code: <resultcode>,<fld50>|Error Code: <resultcode>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\tSuccess[\s]+Audit\t[\s]+|[\s]*,Success[\s]+Audit,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Logon[\s]+attempt[\s]+by:[\s]+(?<authmethod>[^\s]*)[\s]+Logon[\s]+account:[\s]+(?<username>[^\s]*)[\s]+Source[\s]+Workstation:[\s]+(?<shost>[^EE]*)(Error[\s]+Code:[\s]+(?<resultcode>[^,]*),(?<fld50>.*)|Error[\s]+Code:[\s]+(?<resultcode>.*))$" }
				id => "message-Security_680_Security:05"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_type" => "Success Audit"
					"[event][id]" => "Security_680_Security:05"
					"[rsa][message][id1]" => "Security_680_Security:05"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_680_Security:04
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	Success Audit	 | ,Success Audit,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Account Used for Logon by: <authmethod> Account Name: <username> Workstation: <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\tSuccess[\s]+Audit\t[\s]+|[\s]*,Success[\s]+Audit,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Used[\s]+for[\s]+Logon[\s]+by:[\s]+(?<authmethod>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Workstation:[\s]+(?<shost>.*)$" }
				id => "message-Security_680_Security:04"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_type" => "Success Audit"
					"[event][id]" => "Security_680_Security:04"
					"[rsa][message][id1]" => "Security_680_Security:04"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_680_Security:03
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	Failure Audit	 | ,Failure Audit,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Logon attempt by: <authmethod> Logon account: <username> Source Workstation: <shost> {Error Code: <resultcode>,<fld50>|Error Code: <resultcode>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\tFailure[\s]+Audit\t[\s]+|[\s]*,Failure[\s]+Audit,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Logon[\s]+attempt[\s]+by:[\s]+(?<authmethod>[^\s]*)[\s]+Logon[\s]+account:[\s]+(?<username>[^\s]*)[\s]+Source[\s]+Workstation:[\s]+(?<shost>[^\s]*)[\s]+(Error[\s]+Code:[\s]+(?<resultcode>[^,]*),(?<fld50>.*)|Error[\s]+Code:[\s]+(?<resultcode>.*))$" }
				id => "message-Security_680_Security:03"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_type" => "Failure Audit"
					"[event][id]" => "Security_680_Security:03"
					"[rsa][message][id1]" => "Security_680_Security:03"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_680_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	Failure Audit	 | ,Failure Audit,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Account Used for Logon by: <authmethod> Account Name: <username> Workstation: <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\tFailure[\s]+Audit\t[\s]+|[\s]*,Failure[\s]+Audit,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Used[\s]+for[\s]+Logon[\s]+by:[\s]+(?<authmethod>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Workstation:[\s]+(?<shost>.*)$" }
				id => "message-Security_680_Security:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"event_type" => "Failure Audit"
					"[event][id]" => "Security_680_Security:01"
					"[rsa][message][id1]" => "Security_680_Security:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_680_Security:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Logon attempt by: <authmethod> Logon account: <username> Source Workstation: <shost> {Error Code: <resultcode>,<fld50>|Error Code: <resultcode>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Logon[\s]+attempt[\s]+by:[\s]+(?<authmethod>[^\s]*)[\s]+Logon[\s]+account:[\s]+(?<username>[^\s]*)[\s]+Source[\s]+Workstation:[\s]+(?<shost>[^\s]*)[\s]+(Error[\s]+Code:[\s]+(?<resultcode>[^,]*),(?<fld50>.*)|Error[\s]+Code:[\s]+(?<resultcode>.*))$" }
				id => "message-Security_680_Security:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_680_Security:02"
					"[rsa][message][id1]" => "Security_680_Security:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_680_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Account Used for Logon by: <authmethod> Account Name: <username> Workstation: <shost>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Used[\s]+for[\s]+Logon[\s]+by:[\s]+(?<authmethod>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Workstation:[\s]+(?<shost>.*)$" }
				id => "message-Security_680_Security"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_680_Security"
					"[rsa][message][id1]" => "Security_680_Security"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId174
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> The logon to account:<username>by: <authmethod>from workstation: <shost>failed. The error code was: <result>
	else if [logstash][msgparser][id] == "msgParserId174" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+The[\s]+logon[\s]+to[\s]+account:(?<username>[^b]*)by:[\s]+(?<authmethod>[^f]*)from[\s]+workstation:[\s]+(?<shost>[^f]*)failed\.[\s]+The[\s]+error[\s]+code[\s]+was:[\s]+(?<result>.*)$" }
			id => "msgParserId174"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId175
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Domain: <domain>Logon ID: <sessionid>Session Name: <sessionid1>Client Name: <shost>Client Address: <saddr>
	else if [logstash][msgparser][id] == "msgParserId175" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^S]*)Session[\s]+Name:[\s]+(?<sessionid1>[^C]*)Client[\s]+Name:[\s]+(?<shost>[^C]*)Client[\s]+Address:[\s]+(?<saddr>.*)$" }
			id => "msgParserId175"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId176
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> User Name: <username>Domain: <domain>Logon ID: <sessionid>Session Name: <sessionid1>Client Name: <shost>Client Address: <saddr>
	else if [logstash][msgparser][id] == "msgParserId176" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User[\s]+Name:[\s]+(?<username>[^D]*)Domain:[\s]+(?<domain>[^L]*)Logon[\s]+ID:[\s]+(?<sessionid>[^S]*)Session[\s]+Name:[\s]+(?<sessionid1>[^C]*)Client[\s]+Name:[\s]+(?<shost>[^C]*)Client[\s]+Address:[\s]+(?<saddr>.*)$" }
			id => "msgParserId176"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId140
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Target Account Name: <c_username>Target Domain: <c_domain>Target Account ID: <c_sid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId140" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<c_username>[^T]*)Target[\s]+Domain:[\s]+(?<c_domain>[^T]*)Target[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId140"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId177
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Old Account Name: <change_old> New Account Name: <change_new> Target Domain: <c_domain> Target Account ID: <c_sid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId177" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Old[\s]+Account[\s]+Name:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<change_new>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId177"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId178
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>Target User Name: <c_username> Target User Domain:  <c_domain> By user: <c_sid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid>{	 | ,}<fld50>
	else if [logstash][msgparser][id] == "msgParserId178" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^T]*)Target[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Target[\s]+User[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+By[\s]+user:[\s]+(?<c_sid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld50>.*)$" }
			id => "msgParserId178"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Read"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId179
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Member Name: <c_username> Member ID: <c_sid> Target Account Name: <group> Target Domain: <remote_domain> Target Account ID: <groupid> Caller User Name: <username> Caller Domain: <domain> Caller Logon ID: <sessionid> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId179" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Member[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Member[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Target[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Target[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Target[\s]+Account[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Caller[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId179"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_687_Security" {
		# MESSAGE Security_687_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege> Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_687_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_687_Security"
					"[rsa][message][id1]" => "Security_687_Security"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_687_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_687_Security:01"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_687_Security:01"
					"[rsa][message][id1]" => "Security_687_Security:01"
					"[event][categoryid]" => "1402010200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_688_Security" {
		# MESSAGE Security_688_Security
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege> Changed Attributes: <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
				id => "message-Security_688_Security"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_688_Security"
					"[rsa][message][id1]" => "Security_688_Security"
					"[event][categoryid]" => "1402010301"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_688_Security:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_688_Security:01"
				add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
					"[event][id]" => "Security_688_Security:01"
					"[rsa][message][id1]" => "Security_688_Security:01"
					"[event][categoryid]" => "1402010301"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId147
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege> Attributes: <param>
	else if [logstash][msgparser][id] == "msgParserId147" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Attributes:[\s]+(?<param>.*)$" }
			id => "msgParserId147"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId180
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Account Name: <group>New Domain: <remote_domain>New Account ID: <groupid>Caller User Name: <username>Caller Domain: <domain>Caller Logon ID: <sessionid>Privileges: <privilege> Changed Attributes: <param>
	else if [logstash][msgparser][id] == "msgParserId180" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<group>[^N]*)New[\s]+Domain:[\s]+(?<remote_domain>[^N]*)New[\s]+Account[\s]+ID:[\s]+(?<groupid>[^C]*)Caller[\s]+User[\s]+Name:[\s]+(?<username>[^C]*)Caller[\s]+Domain:[\s]+(?<domain>[^C]*)Caller[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^P]*)Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
			id => "msgParserId180"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId182
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Caller Username: <username> Caller Domain: <domain> Caller Logon ID: <space> (<sessionid>) <space> Caller Workstation: <hostname> Provided User Name (unauthenticated): <c_username> Status Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId182" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Caller[\s]+Username:[\s]+(?<username>[^\s]*)[\s]+Caller[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Caller[\s]+Logon[\s]+ID:[\s]+(?<space>[^\s]*)[\s]+\((?<sessionid>[^\)]*)\)[\s]+(?<space>[^\s]*)[\s]+Caller[\s]+Workstation:[\s]+(?<hostname>[^\s]*)[\s]+Provided[\s]+User[\s]+Name[\s]+\(unauthenticated\):[\s]+(?<c_username>[^\s]*)[\s]+Status[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId182"
			add_field => {
				"ec_subject" => "Password"
				"ec_activity" => "Execute"
				"ec_theme" => "Policy"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId183
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId183" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId183"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId184
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Primary User Name: <username> Primary Domain: <domain> Primary Logon ID: <sessionid> Client User Name: <c_username> Client Domain: <c_domain> Client Logon ID: <sessionid1> Source Name: <application> Process Id: <process_id> Event Source Id: <id1>
	else if [logstash][msgparser][id] == "msgParserId184" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Primary[\s]+User[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Primary[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Primary[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Client[\s]+User[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Client[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^\s]*)[\s]+Source[\s]+Name:[\s]+(?<application>[^\s]*)[\s]+Process[\s]+Id:[\s]+(?<process_id>[^\s]*)[\s]+Event[\s]+Source[\s]+Id:[\s]+(?<id1>.*)$" }
			id => "msgParserId184"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId185
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Group Policy applied: <policyname> Profile used: <profile> Interface: <info>
	else if [logstash][msgparser][id] == "msgParserId185" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Group[\s]+Policy[\s]+applied:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+used:[\s]+(?<profile>[^\s]*)[\s]+Interface:[\s]+(?<info>.*)$" }
			id => "msgParserId185"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId186
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy origin: <policyname> Profile used: <profile> Name: <fld15> Path: <directory> State: <disposition> Scope: <fld16>
	else if [logstash][msgparser][id] == "msgParserId186" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+origin:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+used:[\s]+(?<profile>[^\s]*)[\s]+Name:[\s]+(?<fld15>[^\s]*)[\s]+Path:[\s]+(?<directory>[^\s]*)[\s]+State:[\s]+(?<disposition>[^\s]*)[\s]+Scope:[\s]+(?<fld16>.*)$" }
			id => "msgParserId186"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId187
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy origin: <policyname> Profile used: <profile> Interface: <fld14> Name: <fld15> Port number: <network_port> Protocol: <protocol> State: <disposition> Scope: <fld16>
	else if [logstash][msgparser][id] == "msgParserId187" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+origin:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+used:[\s]+(?<profile>[^\s]*)[\s]+Interface:[\s]+(?<fld14>[^\s]*)[\s]+Name:[\s]+(?<fld15>[^\s]*)[\s]+Port[\s]+number:[\s]+(?<network_port>[^\s]*)[\s]+Protocol:[\s]+(?<protocol>[^\s]*)[\s]+State:[\s]+(?<disposition>[^\s]*)[\s]+Scope:[\s]+(?<fld16>.*)$" }
			id => "msgParserId187"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId188
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy origin: <policyname> Profile changed: <profile> Change type: <fld13> New Settings: <change_new> Old Settings: <change_old>
	else if [logstash][msgparser][id] == "msgParserId188" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+origin:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+changed:[\s]+(?<profile>[^\s]*)[\s]+Change[\s]+type:[\s]+(?<fld13>[^\s]*)[\s]+New[\s]+Settings:[\s]+(?<change_new>[^\s]*)[\s]+Old[\s]+Settings:[\s]+(?<change_old>.*)$" }
			id => "msgParserId188"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId189
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy origin: <policyname> Profile changed: <profile> Interface: <fld14> Change type: <fld13> New Settings: <change_new> Old Settings: <change_old>
	else if [logstash][msgparser][id] == "msgParserId189" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+origin:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+changed:[\s]+(?<profile>[^\s]*)[\s]+Interface:[\s]+(?<fld14>[^\s]*)[\s]+Change[\s]+type:[\s]+(?<fld13>[^\s]*)[\s]+New[\s]+Settings:[\s]+(?<change_new>[^\s]*)[\s]+Old[\s]+Settings:[\s]+(?<change_old>.*)$" }
			id => "msgParserId189"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId190
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy origin: <policyname> Profile changed: <profile> Interface: <fld14> New Setting: Operation mode: <change_new> Old Setting: Operation mode: <change_old>
	else if [logstash][msgparser][id] == "msgParserId190" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+origin:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+changed:[\s]+(?<profile>[^\s]*)[\s]+Interface:[\s]+(?<fld14>[^\s]*)[\s]+New[\s]+Setting:[\s]+Operation[\s]+mode:[\s]+(?<change_new>[^\s]*)[\s]+Old[\s]+Setting:[\s]+Operation[\s]+mode:[\s]+(?<change_old>.*)$" }
			id => "msgParserId190"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId191
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy origin: <policyname> Profile changed: <profile> New Settings: <change_new> Old Settings: <change_old>
	else if [logstash][msgparser][id] == "msgParserId191" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+origin:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+changed:[\s]+(?<profile>[^\s]*)[\s]+New[\s]+Settings:[\s]+(?<change_new>[^\s]*)[\s]+Old[\s]+Settings:[\s]+(?<change_old>.*)$" }
			id => "msgParserId191"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId192
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy origin: <policyname> Profile changed: <profile> Interface: <fld14> New Setting: <change_new> Old Setting: <change_old>
	else if [logstash][msgparser][id] == "msgParserId192" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+origin:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+changed:[\s]+(?<profile>[^\s]*)[\s]+Interface:[\s]+(?<fld14>[^\s]*)[\s]+New[\s]+Setting:[\s]+(?<change_new>[^\s]*)[\s]+Old[\s]+Setting:[\s]+(?<change_old>.*)$" }
			id => "msgParserId192"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId193
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Policy origin: <policyname> Profile changed: <profile> New Setting: <change_new> Old Setting: <change_old>
	else if [logstash][msgparser][id] == "msgParserId193" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+origin:[\s]+(?<policyname>[^\s]*)[\s]+Profile[\s]+changed:[\s]+(?<profile>[^\s]*)[\s]+New[\s]+Setting:[\s]+(?<change_new>[^\s]*)[\s]+Old[\s]+Setting:[\s]+(?<change_old>.*)$" }
			id => "msgParserId193"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId194
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Active profile: <profile>
	else if [logstash][msgparser][id] == "msgParserId194" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Active[\s]+profile:[\s]+(?<profile>.*)$" }
			id => "msgParserId194"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId195
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Name: <application> Path: <filename> Process identifier: <process_id> User account: <username> User domain: <domain> Service: <service> RPC server: <fld17> IP version: <version> IP protocol: <protocol> Port number: <network_port> Allowed: <fld18> User notified: <fld19>
	else if [logstash][msgparser][id] == "msgParserId195" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Name:[\s]+(?<application>[^\s]*)[\s]+Path:[\s]+(?<filename>[^\s]*)[\s]+Process[\s]+identifier:[\s]+(?<process_id>[^\s]*)[\s]+User[\s]+account:[\s]+(?<username>[^\s]*)[\s]+User[\s]+domain:[\s]+(?<domain>[^\s]*)[\s]+Service:[\s]+(?<service>[^\s]*)[\s]+RPC[\s]+server:[\s]+(?<fld17>[^\s]*)[\s]+IP[\s]+version:[\s]+(?<version>[^\s]*)[\s]+IP[\s]+protocol:[\s]+(?<protocol>[^\s]*)[\s]+Port[\s]+number:[\s]+(?<network_port>[^\s]*)[\s]+Allowed:[\s]+(?<fld18>[^\s]*)[\s]+User[\s]+notified:[\s]+(?<fld19>.*)$" }
			id => "msgParserId195"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "System_1074_USER32" {
		# MESSAGE System_1074_USER32
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>The process <process> has initiated { the restart | the power off } of computer <hostname> on behalf of user <username> for the following reason: <result> Reason Code: <resultcode> Shutdown Type: <fld13> Comment: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^T]*)The[\s]+process[\s]+(?<process>[^\s]*)[\s]+has[\s]+initiated[\s]+([\s]*the[\s]+restart[\s]+|[\s]*the[\s]+power[\s]+off[\s]+)[\s]+of[\s]+computer[\s]+(?<hostname>[^\s]*)[\s]+on[\s]+behalf[\s]+of[\s]+user[\s]+(?<username>[^\s]*)[\s]+for[\s]+the[\s]+following[\s]+reason:[\s]+(?<result>[^\s]*)[\s]+Reason[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Shutdown[\s]+Type:[\s]+(?<fld13>[^\s]*)[\s]+Comment:[\s]+(?<info>.*)$" }
				id => "message-System_1074_USER32"
				add_field => {
					"[event][id]" => "System_1074_USER32"
					"[rsa][message][id1]" => "System_1074_USER32"
					"[event][categoryid]" => "1603060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_1074_USER32:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>The process <process> has initiated the restart of <hostname> for the following reason: <result> Reason: <resultcode> Shutdown Type: <fld13> Comment: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^T]*)The[\s]+process[\s]+(?<process>[^\s]*)[\s]+has[\s]+initiated[\s]+the[\s]+restart[\s]+of[\s]+(?<hostname>[^\s]*)[\s]+for[\s]+the[\s]+following[\s]+reason:[\s]+(?<result>[^\s]*)[\s]+Reason:[\s]+(?<resultcode>[^\s]*)[\s]+Shutdown[\s]+Type:[\s]+(?<fld13>[^\s]*)[\s]+Comment:[\s]+(?<info>.*)$" }
				id => "message-System_1074_USER32:01"
				add_field => {
					"[event][id]" => "System_1074_USER32:01"
					"[rsa][message][id1]" => "System_1074_USER32:01"
					"[event][categoryid]" => "1603060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_1074_USER32:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space>The process <process> has initiated the shutdown of computer <hostname> on behalf of user <username> for the following reason: <result> Reason Code: <resultcode> Shutdown Type: <fld13> Comment: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^T]*)The[\s]+process[\s]+(?<process>[^\s]*)[\s]+has[\s]+initiated[\s]+the[\s]+shutdown[\s]+of[\s]+computer[\s]+(?<hostname>[^\s]*)[\s]+on[\s]+behalf[\s]+of[\s]+user[\s]+(?<username>[^\s]*)[\s]+for[\s]+the[\s]+following[\s]+reason:[\s]+(?<result>[^\s]*)[\s]+Reason[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Shutdown[\s]+Type:[\s]+(?<fld13>[^\s]*)[\s]+Comment:[\s]+(?<info>.*)$" }
				id => "message-System_1074_USER32:02"
				add_field => {
					"[event][id]" => "System_1074_USER32:02"
					"[rsa][message][id1]" => "System_1074_USER32:02"
					"[event][categoryid]" => "1603060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "System_10_Print" {
		# MESSAGE System_10_Print
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,} <application>-<filename> owned by <username> was printed on <device> { via | through } port <portname> Size in <space> bytes: <bytes><fld32> { pages | Pages } printed:<dclass_counter1> <event_description>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE System_10_Print:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,} <filename> owned by <username> was printed on <device> { via | through } port <portname> Size in <space> bytes: <bytes><fld32> { pages | Pages } printed:<dclass_counter1> <event_description>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	# PARSER msgParserId201
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Fully-Qualified-User-Name = <username> NAS-IP-Address = <daddr> NAS-Identifier = <fld9> Client-Friendly-Name = <c_username> Client-IP-Address = <saddr> NAS-Port-Type = <fld17> NAS-Port = <dport> Policy-Name = <policyname> Authentication-Type = <authmethod> EAP-Type = <fld18>
	else if [logstash][msgparser][id] == "msgParserId201" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Fully\-Qualified\-User\-Name[\s]+=[\s]+(?<username>[^\s]*)[\s]+NAS\-IP\-Address[\s]+=[\s]+(?<daddr>[^\s]*)[\s]+NAS\-Identifier[\s]+=[\s]+(?<fld9>[^\s]*)[\s]+Client\-Friendly\-Name[\s]+=[\s]+(?<c_username>[^\s]*)[\s]+Client\-IP\-Address[\s]+=[\s]+(?<saddr>[^\s]*)[\s]+NAS\-Port\-Type[\s]+=[\s]+(?<fld17>[^\s]*)[\s]+NAS\-Port[\s]+=[\s]+(?<dport>[^\s]*)[\s]+Policy\-Name[\s]+=[\s]+(?<policyname>[^\s]*)[\s]+Authentication\-Type[\s]+=[\s]+(?<authmethod>[^\s]*)[\s]+EAP\-Type[\s]+=[\s]+(?<fld18>.*)$" }
			id => "msgParserId201"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId202
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Fully-Qualified-User-Name = <username> NAS-IP-Address = <daddr> NAS-Identifier = <fld9> Called-Station-Identifier = <fld19> Calling-Station-Identifier = <fld20> Client-Friendly-Name = <c_username> Client-IP-Address = <saddr> NAS-Port-Type = <fld17> NAS-Port = <dport> Policy-Name = <policyname> Authentication-Type = <authmethod> EAP-Type = <fld18> Reason-Code = <resultcode> Reason = <result>
	else if [logstash][msgparser][id] == "msgParserId202" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Fully\-Qualified\-User\-Name[\s]+=[\s]+(?<username>[^\s]*)[\s]+NAS\-IP\-Address[\s]+=[\s]+(?<daddr>[^\s]*)[\s]+NAS\-Identifier[\s]+=[\s]+(?<fld9>[^\s]*)[\s]+Called\-Station\-Identifier[\s]+=[\s]+(?<fld19>[^\s]*)[\s]+Calling\-Station\-Identifier[\s]+=[\s]+(?<fld20>[^\s]*)[\s]+Client\-Friendly\-Name[\s]+=[\s]+(?<c_username>[^\s]*)[\s]+Client\-IP\-Address[\s]+=[\s]+(?<saddr>[^\s]*)[\s]+NAS\-Port\-Type[\s]+=[\s]+(?<fld17>[^\s]*)[\s]+NAS\-Port[\s]+=[\s]+(?<dport>[^\s]*)[\s]+Policy\-Name[\s]+=[\s]+(?<policyname>[^\s]*)[\s]+Authentication\-Type[\s]+=[\s]+(?<authmethod>[^\s]*)[\s]+EAP\-Type[\s]+=[\s]+(?<fld18>[^\s]*)[\s]+Reason\-Code[\s]+=[\s]+(?<resultcode>[^\s]*)[\s]+Reason[\s]+=[\s]+(?<result>.*)$" }
			id => "msgParserId202"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "System_6005_EventLog" {
		# MESSAGE System_6005_EventLog
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-System_6005_EventLog"
				add_field => {
					"[event][id]" => "System_6005_EventLog"
					"[rsa][message][id1]" => "System_6005_EventLog"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_6005_EventLog:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-System_6005_EventLog:01"
				add_field => {
					"[event][id]" => "System_6005_EventLog:01"
					"[rsa][message][id1]" => "System_6005_EventLog:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "System_6006_EventLog" {
		# MESSAGE System_6006_EventLog
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-System_6006_EventLog"
				add_field => {
					"[event][id]" => "System_6006_EventLog"
					"[rsa][message][id1]" => "System_6006_EventLog"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_6006_EventLog:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-System_6006_EventLog:01"
				add_field => {
					"[event][id]" => "System_6006_EventLog:01"
					"[rsa][message][id1]" => "System_6006_EventLog:01"
					"[event][categoryid]" => "1607000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId204
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}The <service> service terminated with {service-specific error | the following service-specific error:} {<result>.<fld50>|<result>,<fld50>|<result>}
	else if [logstash][msgparser][id] == "msgParserId204" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)The[\s]+(?<service>[^\s]*)[\s]+service[\s]+terminated[\s]+with[\s]+(service\-specific[\s]+error[\s]+|[\s]*the[\s]+following[\s]+service\-specific[\s]+error:)[\s]+((?<result>[^\.]*)\.(?<fld50>.*)|(?<result>[^,]*),(?<fld50>.*)|(?<result>.*))$" }
			id => "msgParserId204"
			add_field => {
				"disposition" => "service terminated"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId205
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}The start type of the <service> service was changed from <change_old> to <change_new>
	else if [logstash][msgparser][id] == "msgParserId205" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)The[\s]+start[\s]+type[\s]+of[\s]+the[\s]+(?<service>[^\s]*)[\s]+service[\s]+was[\s]+changed[\s]+from[\s]+(?<change_old>[^\s]*)[\s]+to[\s]+(?<change_new>.*)$" }
			id => "msgParserId205"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId206
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}The <service> service entered the <disposition> state.
	else if [logstash][msgparser][id] == "msgParserId206" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)The[\s]+(?<service>[^\s]*)[\s]+service[\s]+entered[\s]+the[\s]+(?<disposition>[^\s]*)[\s]+state\.$" }
			id => "msgParserId206"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "System_15300_Microsoft-Windows-HttpEvent" {
		# MESSAGE System_15300_Microsoft-Windows-HttpEvent:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}SSL Certificate Settings deleted for endpoint :<saddr>:<network_port> .<fld51>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)SSL[\s]+Certificate[\s]+Settings[\s]+deleted[\s]+for[\s]+endpoint[\s]+:(?<saddr>[^:]*):(?<network_port>[^\s]*)[\s]+\.(?<fld51>.*)$" }
				id => "message-System_15300_Microsoft-Windows-HttpEvent:01"
				add_field => {
					"[event][id]" => "System_15300_Microsoft-Windows-HttpEvent:01"
					"[rsa][message][id1]" => "System_15300_Microsoft-Windows-HttpEvent:01"
					"[event][categoryid]" => "1502040000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_15300_Microsoft-Windows-HttpEvent
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}SSL Certificate Settings deleted for Port :{<saddr>:<network_port>.|<saddr>:<network_port>|<network_port>>.|<network_port>}{	 | , | .} <fld51>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)SSL[\s]+Certificate[\s]+Settings[\s]+deleted[\s]+for[\s]+Port[\s]+:((?<saddr>[^:]*):(?<network_port>[^\.]*)\.|(?<saddr>[^:]*):(?<network_port>[^\t\s\s]*)|(?<network_port>[^>]*)>\.|(?<network_port>[^\t\s\s]*))(\t[\s]+|[\s]*,[\s]+|[\s]*\.)[\s]+(?<fld51>.*)$" }
				id => "message-System_15300_Microsoft-Windows-HttpEvent"
				add_field => {
					"[event][id]" => "System_15300_Microsoft-Windows-HttpEvent"
					"[rsa][message][id1]" => "System_15300_Microsoft-Windows-HttpEvent"
					"[event][categoryid]" => "1502040000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "System_15301_Microsoft-Windows-HttpEvent" {
		# MESSAGE System_15301_Microsoft-Windows-HttpEvent:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}SSL Certificate Settings created by an admin process for endpoint :{[<fld50>]:<network_port>|<saddr>:<network_port>} .<fld51>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)SSL[\s]+Certificate[\s]+Settings[\s]+created[\s]+by[\s]+an[\s]+admin[\s]+process[\s]+for[\s]+endpoint[\s]+:(\[(?<fld50>[^\]]*)\]:(?<network_port>[^\s]*)|(?<saddr>[^:]*):(?<network_port>[^\s]*))[\s]+\.(?<fld51>.*)$" }
				id => "message-System_15301_Microsoft-Windows-HttpEvent:01"
				add_field => {
					"[event][id]" => "System_15301_Microsoft-Windows-HttpEvent:01"
					"[rsa][message][id1]" => "System_15301_Microsoft-Windows-HttpEvent:01"
					"[event][categoryid]" => "1502030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_15301_Microsoft-Windows-HttpEvent
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}SSL Certificate Settings created by an admin process for Port :{<saddr>:<network_port>.|<saddr>:<network_port>|<network_port>>.|<network_port>}{	 | , | .} <fld51>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)SSL[\s]+Certificate[\s]+Settings[\s]+created[\s]+by[\s]+an[\s]+admin[\s]+process[\s]+for[\s]+Port[\s]+:((?<saddr>[^:]*):(?<network_port>[^\.]*)\.|(?<saddr>[^:]*):(?<network_port>[^\t\s\s]*)|(?<network_port>[^>]*)>\.|(?<network_port>[^\t\s\s]*))(\t[\s]+|[\s]*,[\s]+|[\s]*\.)[\s]+(?<fld51>.*)$" }
				id => "message-System_15301_Microsoft-Windows-HttpEvent"
				add_field => {
					"[event][id]" => "System_15301_Microsoft-Windows-HttpEvent"
					"[rsa][message][id1]" => "System_15301_Microsoft-Windows-HttpEvent"
					"[event][categoryid]" => "1502030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId211
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId211" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId211"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "System_19_Microsoft-Windows-WindowsUpdateClient" {
		# MESSAGE System_19_Microsoft-Windows-WindowsUpdateClient
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Installation Successful: Windows successfully installed the following update:<obj_name>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Installation[\s]+Successful:[\s]+Windows[\s]+successfully[\s]+installed[\s]+the[\s]+following[\s]+update:(?<obj_name>.*)$" }
				id => "message-System_19_Microsoft-Windows-WindowsUpdateClient"
				add_field => {
					"[event][id]" => "System_19_Microsoft-Windows-WindowsUpdateClient"
					"[rsa][message][id1]" => "System_19_Microsoft-Windows-WindowsUpdateClient"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_19_Microsoft-Windows-WindowsUpdateClient:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-System_19_Microsoft-Windows-WindowsUpdateClient:01"
				add_field => {
					"[event][id]" => "System_19_Microsoft-Windows-WindowsUpdateClient:01"
					"[rsa][message][id1]" => "System_19_Microsoft-Windows-WindowsUpdateClient:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId213
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Service <service> started.
	else if [logstash][msgparser][id] == "msgParserId213" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Service[\s]+(?<service>[^\s]*)[\s]+started\.$" }
			id => "msgParserId213"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId214
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}A worker process with process id of { '<process_id>' | <process_id>} serving application pool <application> has requested a recycle because the worker process reached its allowed processing time limit.
	else if [logstash][msgparser][id] == "msgParserId214" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)A[\s]+worker[\s]+process[\s]+with[\s]+process[\s]+id[\s]+of[\s]+([\s]*'(?<process_id>[^']*)'[\s]+|[\s]*(?<process_id>[^\s]*))[\s]+serving[\s]+application[\s]+pool[\s]+(?<application>[^\s]*)[\s]+has[\s]+requested[\s]+a[\s]+recycle[\s]+because[\s]+the[\s]+worker[\s]+process[\s]+reached[\s]+its[\s]+allowed[\s]+processing[\s]+time[\s]+limit\.$" }
			id => "msgParserId214"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId215
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Authentication Package Name: <authmethod>
	else if [logstash][msgparser][id] == "msgParserId215" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Authentication[\s]+Package[\s]+Name:[\s]+(?<authmethod>.*)$" }
			id => "msgParserId215"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId216
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:  <space> Security ID: <sid> Account Name: <username>   Account Domain: <domain> Logon ID: <sessionid> Logon Process Name: <process>
	else if [logstash][msgparser][id] == "msgParserId216" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Logon[\s]+Process[\s]+Name:[\s]+(?<process>.*)$" }
			id => "msgParserId216"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId217
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Number of audit messages discarded: <dclass_counter1> <fld50>
	else if [logstash][msgparser][id] == "msgParserId217" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Number[\s]+of[\s]+audit[\s]+messages[\s]+discarded:[\s]+(?<dclass_counter1>[^\s]*)[\s]+(?<fld50>.*)$" }
			id => "msgParserId217"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId218
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Notification Package Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId218" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Notification[\s]+Package[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId218"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId219
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject: <space> Security ID:  <sid>  Account Name:  <username>  Account Domain:  <domain>  Logon ID:  <sessionid>  Process Information:<space>PID:   <process_id>  Name:   <process>  Invalid Use:  <fld1>  LPC Server Port Name: <fld50>
	else if [logstash][msgparser][id] == "msgParserId219" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)PID:[\s]+(?<process_id>[^\s]*)[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Invalid[\s]+Use:[\s]+(?<fld1>[^\s]*)[\s]+LPC[\s]+Server[\s]+Port[\s]+Name:[\s]+(?<fld50>.*)$" }
			id => "msgParserId219"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId220
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject: <space> Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Process Information:<space>Process ID: <process_id>  Name: <process>  Previous Time:  <change_old> New Time:  <change_new> This event is generated <fld50>
	else if [logstash][msgparser][id] == "msgParserId220" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Previous[\s]+Time:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Time:[\s]+(?<change_new>[^\s]*)[\s]+This[\s]+event[\s]+is[\s]+generated[\s]+(?<fld50>.*)$" }
			id => "msgParserId220"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_subject" => "Time"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId221
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject: <space> Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid> Alert Information: <fld4> Computer:  <hostname>  Event ID:  <fld13>  Number of Events: <dclass_counter1>  Duration:  <fld14>  This event is generated when <fld50>
	else if [logstash][msgparser][id] == "msgParserId221" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Alert[\s]+Information:[\s]+(?<fld4>[^\s]*)[\s]+Computer:[\s]+(?<hostname>[^\s]*)[\s]+Event[\s]+ID:[\s]+(?<fld13>[^\s]*)[\s]+Number[\s]+of[\s]+Events:[\s]+(?<dclass_counter1>[^\s]*)[\s]+Duration:[\s]+(?<fld14>[^\s]*)[\s]+This[\s]+event[\s]+is[\s]+generated[\s]+when[\s]+(?<fld50>.*)$" }
			id => "msgParserId221"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId222
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Security Package Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId222" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Security[\s]+Package[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId222"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId223
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<fld93>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <fld39> Account Name: <event_user>   Account Domain: <c_domain> Logon ID: <fld41> { Logon Information:<space>Logon Type: <logon_type> Restricted Admin Mode: <fld51> Virtual Account: <fld52> Elevated Token: <fld53> Impersonation Level:  <obj_name> New Logon:|Logon Type: <logon_type> Impersonation Level:  <obj_name> New Logon:| Logon Type: <logon_type> New Logon:}<space>Security ID: <sid> Account Name: <username> Account Domain: <domain> {Logon ID: <sessionid> Linked Logon ID: <fld54> Network Account Name: <fld55> Network Account Domain: <fld56> |Logon ID: <sessionid>} Logon GUID: <fld66> Process Information:<space>Process ID: <parent_pid> Process Name: <process_src> Network Information:<space>Workstation Name: <shost> Source Network Address: <saddr> Source Port: <sport> Detailed Authentication Information:<space>Logon Process: <process> Authentication Package: <authmethod> Transited Services: <fld43>  Package Name (NTLM only): <service>  Key Length: <info> This event is generated <fld50>
	else if [logstash][msgparser][id] == "msgParserId223" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld93>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<event_user>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^\s]*)[\s]+([\s]*Logon[\s]+Information:(?<space>[^L]*)Logon[\s]+Type:[\s]+(?<logon_type>[^\s]*)[\s]+Restricted[\s]+Admin[\s]+Mode:[\s]+(?<fld51>[^\s]*)[\s]+Virtual[\s]+Account:[\s]+(?<fld52>[^\s]*)[\s]+Elevated[\s]+Token:[\s]+(?<fld53>[^\s]*)[\s]+Impersonation[\s]+Level:[\s]+(?<obj_name>[^\s]*)[\s]+New[\s]+Logon:|Logon[\s]+Type:[\s]+(?<logon_type>[^\s]*)[\s]+Impersonation[\s]+Level:[\s]+(?<obj_name>[^\s]*)[\s]+New[\s]+Logon:|[\s]*Logon[\s]+Type:[\s]+(?<logon_type>[^\s]*)[\s]+New[\s]+Logon:)(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+(Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Linked[\s]+Logon[\s]+ID:[\s]+(?<fld54>[^\s]*)[\s]+Network[\s]+Account[\s]+Name:[\s]+(?<fld55>[^\s]*)[\s]+Network[\s]+Account[\s]+Domain:[\s]+(?<fld56>[^\s]*)[\s]+|Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*))[\s]+Logon[\s]+GUID:[\s]+(?<fld66>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process_src>[^\s]*)[\s]+Network[\s]+Information:(?<space>[^W]*)Workstation[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Detailed[\s]+Authentication[\s]+Information:(?<space>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Transited[\s]+Services:[\s]+(?<fld43>[^\s]*)[\s]+Package[\s]+Name[\s]+\(NTLM[\s]+only\):[\s]+(?<service>[^\s]*)[\s]+Key[\s]+Length:[\s]+(?<info>[^\s]*)[\s]+This[\s]+event[\s]+is[\s]+generated[\s]+(?<fld50>.*)$" }
			id => "msgParserId223"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Success"
				"hostname" => "%{shost}"
				"obj_type" => "Impersonation Level"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId224
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<fld93>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <fld39> Account Name: <event_user>   Account Domain: <c_domain> Logon ID: <fld41> Logon Type: <logon_type> Account For Which Logon Failed:<space>Security ID: <sid> Account Name: <username> Account Domain: <domain> Failure Information:<space>Failure Reason: <result> Status: <resultcode> Sub Status: <context> Process Information:<space>Caller Process ID: <parent_pid> Caller Process Name: <process_src> Network Information:<space>Workstation Name: <shost> Source Network Address: <saddr> Source Port: <sport> Detailed Authentication Information:<space>Logon Process: <process>   Authentication Package: <authmethod>   Transited Services: <fld43>  Package Name (NTLM only): <fld44>  Key Length: <info> {This event is generated <fld50>|<fld50>},<fld51>
	else if [logstash][msgparser][id] == "msgParserId224" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld93>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<event_user>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^\s]*)[\s]+Logon[\s]+Type:[\s]+(?<logon_type>[^\s]*)[\s]+Account[\s]+For[\s]+Which[\s]+Logon[\s]+Failed:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Failure[\s]+Information:(?<space>[^F]*)Failure[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+Status:[\s]+(?<resultcode>[^\s]*)[\s]+Sub[\s]+Status:[\s]+(?<context>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^C]*)Caller[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*)[\s]+Caller[\s]+Process[\s]+Name:[\s]+(?<process_src>[^\s]*)[\s]+Network[\s]+Information:(?<space>[^W]*)Workstation[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Detailed[\s]+Authentication[\s]+Information:(?<space>[^L]*)Logon[\s]+Process:[\s]+(?<process>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Transited[\s]+Services:[\s]+(?<fld43>[^\s]*)[\s]+Package[\s]+Name[\s]+\(NTLM[\s]+only\):[\s]+(?<fld44>[^\s]*)[\s]+Key[\s]+Length:[\s]+(?<info>[^\s]*)[\s]+(This[\s]+event[\s]+is[\s]+generated[\s]+(?<fld50>[^,]*)|(?<fld50>[^,]*)),(?<fld51>.*)$" }
			id => "msgParserId224"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId225
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<fld93>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject: <space> Security ID: <fld39> Account Name: <event_user>   Account Domain: <c_domain> Logon ID: <fld41> Logon Type: <logon_type> New Logon: <space> Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Event in sequence: <fld45> Group Membership:<fld46>
	else if [logstash][msgparser][id] == "msgParserId225" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld93>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<event_user>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^\s]*)[\s]+Logon[\s]+Type:[\s]+(?<logon_type>[^\s]*)[\s]+New[\s]+Logon:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Event[\s]+in[\s]+sequence:[\s]+(?<fld45>[^\s]*)[\s]+Group[\s]+Membership:(?<fld46>.*)$" }
			id => "msgParserId225"
			add_field => {
				"ec_subject" => "Group"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId226
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid> Account Name: <username>   Account Domain: <domain> Logon ID: <sessionid> Logon Type: <logon_type> { This event is generated | , } <fld50>
	else if [logstash][msgparser][id] == "msgParserId226" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Logon[\s]+Type:[\s]+(?<logon_type>[^\s]*)[\s]+([\s]*This[\s]+event[\s]+is[\s]+generated[\s]+|[\s]*,[\s]+)[\s]+(?<fld50>.*)$" }
			id => "msgParserId226"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId227
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid> {This event is generated <fld50>|<fld50>}{,|.}<fld51>
	else if [logstash][msgparser][id] == "msgParserId227" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+(This[\s]+event[\s]+is[\s]+generated[\s]+(?<fld50>[^,\.]*)|(?<fld50>[^,\.]*))(,|\.)(?<fld51>.*)$" }
			id => "msgParserId227"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId228
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid> Account Name:  <username>   Account Domain:  <domain> Logon ID:  <sessionid> Logon GUID:  <fld13> Account Whose Credentials Were Used:<space>Account Name:  <c_username>  Account Domain:  <c_domain>  Logon GUID:  <fld32>  Target Server:<space>Target Server Name: <dhost>  Additional Information: <fld33> Process Information:<space>Process ID:  <process_id>  Process Name:  <process>  Network Information:<space>Network Address: <saddr>  Port: <sport> {This event is generated <fld50>|<fld50>},<fld51>
	else if [logstash][msgparser][id] == "msgParserId228" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Logon[\s]+GUID:[\s]+(?<fld13>[^\s]*)[\s]+Account[\s]+Whose[\s]+Credentials[\s]+Were[\s]+Used:(?<space>[^A]*)Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Logon[\s]+GUID:[\s]+(?<fld32>[^\s]*)[\s]+Target[\s]+Server:(?<space>[^T]*)Target[\s]+Server[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<fld33>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Network[\s]+Information:(?<space>[^N]*)Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+(This[\s]+event[\s]+is[\s]+generated[\s]+(?<fld50>[^,]*)|(?<fld50>[^,]*)),(?<fld51>.*)$" }
			id => "msgParserId228"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId229
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Credentials Which Were Replayed:<space>Account Name:  <c_username>  Account Domain:  <c_domain>  Process Information:<space>Process ID:  <process_id>  Process Name:  <process> Network Information:<space>Workstation Name: <hostname>  Detailed Authentication Information:<space>Request Type: <fld34> Logon Process: <fld35>  Authentication Package: <authmethod>  Transited Services: <service>  This event indicates that a <fld50>
	else if [logstash][msgparser][id] == "msgParserId229" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Credentials[\s]+Which[\s]+Were[\s]+Replayed:(?<space>[^A]*)Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Network[\s]+Information:(?<space>[^W]*)Workstation[\s]+Name:[\s]+(?<hostname>[^\s]*)[\s]+Detailed[\s]+Authentication[\s]+Information:(?<space>[^R]*)Request[\s]+Type:[\s]+(?<fld34>[^\s]*)[\s]+Logon[\s]+Process:[\s]+(?<fld35>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Transited[\s]+Services:[\s]+(?<service>[^\s]*)[\s]+This[\s]+event[\s]+indicates[\s]+that[\s]+a[\s]+(?<fld50>.*)$" }
			id => "msgParserId229"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId230
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Local Endpoint:<space>Principal Name: <shost>  Network Address: <saddr>  Keying Module Port: <sport>  Remote Endpoint:<space>Principal Name: <dhost>  Network Address: <daddr>  Keying Module Port: <dport>  Security Association Information:<space>Lifetime (minutes): <duration>  Quick Mode Limit: <fld35>  Main Mode SA ID: <fld13>  Cryptographic Information:<space>Cipher Algorithm: <encryption_type>  Integrity Algorithm: <fld36>  Diffie-Hellman Group: <fld37>  Additional Information:<space>Keying Module Name: <fld38>  Authentication Method: <authmethod>  Role: <fld39>  Impersonation State: <fld40>  Main Mode Filter ID: <filter>
	else if [logstash][msgparser][id] == "msgParserId230" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:(?<space>[^P]*)Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Remote[\s]+Endpoint:(?<space>[^P]*)Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Security[\s]+Association[\s]+Information:(?<space>[^L]*)Lifetime[\s]+\(minutes\):[\s]+(?<duration>[^\s]*)[\s]+Quick[\s]+Mode[\s]+Limit:[\s]+(?<fld35>[^\s]*)[\s]+Main[\s]+Mode[\s]+SA[\s]+ID:[\s]+(?<fld13>[^\s]*)[\s]+Cryptographic[\s]+Information:(?<space>[^C]*)Cipher[\s]+Algorithm:[\s]+(?<encryption_type>[^\s]*)[\s]+Integrity[\s]+Algorithm:[\s]+(?<fld36>[^\s]*)[\s]+Diffie\-Hellman[\s]+Group:[\s]+(?<fld37>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^K]*)Keying[\s]+Module[\s]+Name:[\s]+(?<fld38>[^\s]*)[\s]+Authentication[\s]+Method:[\s]+(?<authmethod>[^\s]*)[\s]+Role:[\s]+(?<fld39>[^\s]*)[\s]+Impersonation[\s]+State:[\s]+(?<fld40>[^\s]*)[\s]+Main[\s]+Mode[\s]+Filter[\s]+ID:[\s]+(?<filter>.*)$" }
			id => "msgParserId230"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId231
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Local Endpoint:<space>Principal Name: <shost> Network Address: <saddr>  Keying Module Port: <sport>  Local Certificate:<space>SHA Thumbprint: <fld41>  Issuing CA:  <s_certauth>  Root CA:  <fld42>  Remote Endpoint:<space>Principal Name: <dhost>  Network Address: <daddr>  Keying Module Port: <dport>  Remote Certificate:<space>SHA thumbprint:  <fld43>  Issuing CA:  <d_certauth>  Root CA:  <fld44>  Cryptographic Information:<space>Cipher Algorithm: <encryption_type>  Integrity Algorithm: <fld36>  Diffie-Hellman Group: <fld37>  Security Association Information:<space>Lifetime (minutes): <duration>  Quick Mode Limit: <fld35>  Main Mode SA ID: <fld13>  Additional Information:<space>Keying Module Name: <fld38>  Authentication Method: <authmethod>  Role: <fld39>  Impersonation State: <fld40>  Main Mode Filter ID: <filter>
	else if [logstash][msgparser][id] == "msgParserId231" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:(?<space>[^P]*)Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Local[\s]+Certificate:(?<space>[^S]*)SHA[\s]+Thumbprint:[\s]+(?<fld41>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<s_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld42>[^\s]*)[\s]+Remote[\s]+Endpoint:(?<space>[^P]*)Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Remote[\s]+Certificate:(?<space>[^S]*)SHA[\s]+thumbprint:[\s]+(?<fld43>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<d_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld44>[^\s]*)[\s]+Cryptographic[\s]+Information:(?<space>[^C]*)Cipher[\s]+Algorithm:[\s]+(?<encryption_type>[^\s]*)[\s]+Integrity[\s]+Algorithm:[\s]+(?<fld36>[^\s]*)[\s]+Diffie\-Hellman[\s]+Group:[\s]+(?<fld37>[^\s]*)[\s]+Security[\s]+Association[\s]+Information:(?<space>[^L]*)Lifetime[\s]+\(minutes\):[\s]+(?<duration>[^\s]*)[\s]+Quick[\s]+Mode[\s]+Limit:[\s]+(?<fld35>[^\s]*)[\s]+Main[\s]+Mode[\s]+SA[\s]+ID:[\s]+(?<fld13>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^K]*)Keying[\s]+Module[\s]+Name:[\s]+(?<fld38>[^\s]*)[\s]+Authentication[\s]+Method:[\s]+(?<authmethod>[^\s]*)[\s]+Role:[\s]+(?<fld39>[^\s]*)[\s]+Impersonation[\s]+State:[\s]+(?<fld40>[^\s]*)[\s]+Main[\s]+Mode[\s]+Filter[\s]+ID:[\s]+(?<filter>.*)$" }
			id => "msgParserId231"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId232
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Local Endpoint:<space>Principal Name: <shost> Network Address: <saddr>  Keying Module Port: <sport>  Local Certificate:<space>SHA Thumbprint: <fld41>  Issuing CA:  <s_certauth>  Root CA:  <fld42> Remote Endpoint:<space>Principal Name: <dhost>  Network Address: <daddr>  Keying Module Port: <dport>  Remote Certificate:<space>SHA thumbprint:  <fld43>  Issuing CA:  <d_certauth>  Root CA:  <fld44>  Additional Information:<space>Keying Module Name: <fld38>  Authentication Method: <authmethod>  Role: <fld39>  Impersonation State: <fld40>  Main Mode Filter ID: <filter> Failure Information:<space>Failure Point:  <fld19>  Failure Reason:  <result>  State: <disposition>  Initiator Cookie:  <fld46>  Responder Cookie: <fld47>
	else if [logstash][msgparser][id] == "msgParserId232" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:(?<space>[^P]*)Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Local[\s]+Certificate:(?<space>[^S]*)SHA[\s]+Thumbprint:[\s]+(?<fld41>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<s_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld42>[^\s]*)[\s]+Remote[\s]+Endpoint:(?<space>[^P]*)Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Remote[\s]+Certificate:(?<space>[^S]*)SHA[\s]+thumbprint:[\s]+(?<fld43>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<d_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld44>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^K]*)Keying[\s]+Module[\s]+Name:[\s]+(?<fld38>[^\s]*)[\s]+Authentication[\s]+Method:[\s]+(?<authmethod>[^\s]*)[\s]+Role:[\s]+(?<fld39>[^\s]*)[\s]+Impersonation[\s]+State:[\s]+(?<fld40>[^\s]*)[\s]+Main[\s]+Mode[\s]+Filter[\s]+ID:[\s]+(?<filter>[^\s]*)[\s]+Failure[\s]+Information:(?<space>[^F]*)Failure[\s]+Point:[\s]+(?<fld19>[^\s]*)[\s]+Failure[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+State:[\s]+(?<disposition>[^\s]*)[\s]+Initiator[\s]+Cookie:[\s]+(?<fld46>[^\s]*)[\s]+Responder[\s]+Cookie:[\s]+(?<fld47>.*)$" }
			id => "msgParserId232"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId233
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Local Endpoint:<space>Principal Name: <shost> Network Address: <saddr>  Keying Module Port: <sport>  Remote Endpoint:<space>Principal Name: <dhost>  Network Address: <daddr>  Keying Module Port: <dport> Additional Information:<space>Keying Module Name: <fld38>  Authentication Method: <authmethod>  Role: <fld39>  Impersonation State: <fld40>  Main Mode Filter ID: <filter> Failure Information:<space>Failure Point:  <fld19>  Failure Reason:  <result>  State: <disposition>  Initiator Cookie:  <fld46>  Responder Cookie: <fld47>
	else if [logstash][msgparser][id] == "msgParserId233" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:(?<space>[^P]*)Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Remote[\s]+Endpoint:(?<space>[^P]*)Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^K]*)Keying[\s]+Module[\s]+Name:[\s]+(?<fld38>[^\s]*)[\s]+Authentication[\s]+Method:[\s]+(?<authmethod>[^\s]*)[\s]+Role:[\s]+(?<fld39>[^\s]*)[\s]+Impersonation[\s]+State:[\s]+(?<fld40>[^\s]*)[\s]+Main[\s]+Mode[\s]+Filter[\s]+ID:[\s]+(?<filter>[^\s]*)[\s]+Failure[\s]+Information:(?<space>[^F]*)Failure[\s]+Point:[\s]+(?<fld19>[^\s]*)[\s]+Failure[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+State:[\s]+(?<disposition>[^\s]*)[\s]+Initiator[\s]+Cookie:[\s]+(?<fld46>[^\s]*)[\s]+Responder[\s]+Cookie:[\s]+(?<fld47>.*)$" }
			id => "msgParserId233"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId234
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Local Endpoint:<space>Network Address: <saddr>  Network Address mask: <fld14> Port: <sport>  Tunnel Endpoint:  <fld48> Remote Endpoint:<space>Network Address: <daddr>  Address Mask: <fld13> Port: <dport>  Tunnel Endpoint: <fld49> Private Address: <dtransaddr> Additional Information:<space>Protocol:  <protocol>  Keying Module Name: <fld38>  Mode: <ike>  Role: <fld39>  Quick Mode Filter ID: <filter> Main Mode SA ID: <fld40>  Failure Information:<space>State: <disposition>  Message ID: <id1>  Failure Point: <fld19>  Failure Reason: <result>
	else if [logstash][msgparser][id] == "msgParserId234" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:(?<space>[^N]*)Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Network[\s]+Address[\s]+mask:[\s]+(?<fld14>[^\s]*)[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Tunnel[\s]+Endpoint:[\s]+(?<fld48>[^\s]*)[\s]+Remote[\s]+Endpoint:(?<space>[^N]*)Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Address[\s]+Mask:[\s]+(?<fld13>[^\s]*)[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Tunnel[\s]+Endpoint:[\s]+(?<fld49>[^\s]*)[\s]+Private[\s]+Address:[\s]+(?<dtransaddr>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Protocol:[\s]+(?<protocol>[^\s]*)[\s]+Keying[\s]+Module[\s]+Name:[\s]+(?<fld38>[^\s]*)[\s]+Mode:[\s]+(?<ike>[^\s]*)[\s]+Role:[\s]+(?<fld39>[^\s]*)[\s]+Quick[\s]+Mode[\s]+Filter[\s]+ID:[\s]+(?<filter>[^\s]*)[\s]+Main[\s]+Mode[\s]+SA[\s]+ID:[\s]+(?<fld40>[^\s]*)[\s]+Failure[\s]+Information:(?<space>[^S]*)State:[\s]+(?<disposition>[^\s]*)[\s]+Message[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Failure[\s]+Point:[\s]+(?<fld19>[^\s]*)[\s]+Failure[\s]+Reason:[\s]+(?<result>.*)$" }
			id => "msgParserId234"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId235
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Local Network Address:  <saddr> Remote Network Address: <daddr> Keying Module Name:  <fld38>
	else if [logstash][msgparser][id] == "msgParserId235" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Remote[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Name:[\s]+(?<fld38>.*)$" }
			id => "msgParserId235"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Stop"
				"ec_theme" => "Encryption"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId236
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Object:<space>Object Server:  <obj_server>  Object Type:  <obj_type>  Object Name:  <obj_name>  Handle ID:  <id1>  Process Information:<space>Process ID:  <process_id>  Process Name: <process> Access Request Information:<space>Transaction ID: <id2>   Accesses:  <accesses>   Access Mask:  <fld52>   Privileges Used for Access Check: <privilege>   Restricted SID Count: <fld53>
	else if [logstash][msgparser][id] == "msgParserId236" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:(?<space>[^T]*)Transaction[\s]+ID:[\s]+(?<id2>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>[^\s]*)[\s]+Privileges[\s]+Used[\s]+for[\s]+Access[\s]+Check:[\s]+(?<privilege>[^\s]*)[\s]+Restricted[\s]+SID[\s]+Count:[\s]+(?<fld53>.*)$" }
			id => "msgParserId236"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId237
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Name:  <obj_name>  Object Value Name: <obj_value>  Handle ID: <id1>  Operation Type:  <action> Process Information:<space>Process ID:  <process_id>  Process Name: <process>  Change Information:<space>Old Value Type:  <change_old>  New Value Type: <change_new>
	else if [logstash][msgparser][id] == "msgParserId237" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Object[\s]+Value[\s]+Name:[\s]+(?<obj_value>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Operation[\s]+Type:[\s]+(?<action>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Change[\s]+Information:(?<space>[^O]*)Old[\s]+Value[\s]+Type:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Value[\s]+Type:[\s]+(?<change_new>.*)$" }
			id => "msgParserId237"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId238
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject<space>:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Server:  <obj_server>  Handle ID:  <id1>  Process Information:<space>Process ID:  <process_id>  Process Name:  <process>
	else if [logstash][msgparser][id] == "msgParserId238" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject(?<space>[^:]*):(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>.*)$" }
			id => "msgParserId238"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId239
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Server: <obj_server>  Object Type: <obj_type>  Object Name: <obj_name>  Handle ID: <id1>  Process Information:<space>Process ID: <process_id>  Access Request Information:<space>Transaction ID: <id2>  Accesses: <accesses>  Access Mask: <fld52>  Privileges Used for Access Check: <privilege>
	else if [logstash][msgparser][id] == "msgParserId239" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:(?<space>[^T]*)Transaction[\s]+ID:[\s]+(?<id2>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>[^\s]*)[\s]+Privileges[\s]+Used[\s]+for[\s]+Access[\s]+Check:[\s]+(?<privilege>.*)$" }
			id => "msgParserId239"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId240
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Server: <obj_server>  Handle ID:  <id1>  Process Information:<space>Process ID:  <process_id>  Process Name:  <process> Transaction ID: <id2>
	else if [logstash][msgparser][id] == "msgParserId240" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Transaction[\s]+ID:[\s]+(?<id2>.*)$" }
			id => "msgParserId240"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_4661_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_4661_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject<space>: <space> Security ID: <sid> Account Name: <username>   Account Domain: <domain> Logon ID: <sessionid> Object:  Object Server:  <obj_server>  Object Type:  <obj_type>  Object Name: <obj_name>  Handle ID:  <id1>  Process Information:  Process ID:  <process_id>  Process Name:   <process>  Access Request Information:  Transaction ID: <id2>   Accesses: <accesses>   Access Mask: <fld52>   Privileges Used for Access Check: <privilege>   Properties: <param> Restricted SID Count: <fld53>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject(?<space>[^:]*):[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:[\s]+Transaction[\s]+ID:[\s]+(?<id2>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>[^\s]*)[\s]+Privileges[\s]+Used[\s]+for[\s]+Access[\s]+Check:[\s]+(?<privilege>[^\s]*)[\s]+Properties:[\s]+(?<param>[^\s]*)[\s]+Restricted[\s]+SID[\s]+Count:[\s]+(?<fld53>.*)$" }
				id => "message-Security_4661_Microsoft-Windows-Security-Auditing"
				add_field => {
					"[event][id]" => "Security_4661_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_4661_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1206010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4661_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject<space>: <space> Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Object: <space> Object Server: <obj_server> Object Type:  <obj_type> Object Name: <obj_name> Handle ID:  <id1> Process Information: <space> Process ID: <process_id> Process Name: <process> Access Request Information: <space> Transaction ID: <id2> Accesses: <accesses> Access Mask: <fld52> Privileges Used for Access Check: <privilege> Properties: <param> Restricted SID Count: <fld53>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject(?<space>[^:]*):[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Transaction[\s]+ID:[\s]+(?<id2>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>[^\s]*)[\s]+Privileges[\s]+Used[\s]+for[\s]+Access[\s]+Check:[\s]+(?<privilege>[^\s]*)[\s]+Properties:[\s]+(?<param>[^\s]*)[\s]+Restricted[\s]+SID[\s]+Count:[\s]+(?<fld53>.*)$" }
				id => "message-Security_4661_Microsoft-Windows-Security-Auditing:01"
				add_field => {
					"[event][id]" => "Security_4661_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_4661_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1206010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_4662_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_4662_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Subject :<space>Security ID:  <sid>  Account Name:  <username>  Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Server:  <obj_server>  Object Type:  <obj_type>  Object Name:  <obj_name>  Handle ID:  <id1>  Operation:<space>Operation Type:  <action>  Accesses:  <accesses>  Access Mask:  <fld52>  Properties:  <fld54>  Additional Information:  <param>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject[\s]+:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Operation:(?<space>[^O]*)Operation[\s]+Type:[\s]+(?<action>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>[^\s]*)[\s]+Properties:[\s]+(?<fld54>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<param>.*)$" }
				id => "message-Security_4662_Microsoft-Windows-Security-Auditing"
				add_field => {
					"[event][id]" => "Security_4662_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_4662_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4662_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Subject :<space>Security ID:  <sid>  Account Name:  <username>  Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Server:  <obj_server>  Object Type:  <obj_type>  Object Name:  <obj_name>  Handle ID:  <id1>  Operation:<space>Operation Type:  <action>  Accesses:  <accesses>  Access Mask:  <fld52>  Properties:  <fld54>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject[\s]+:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Operation:(?<space>[^O]*)Operation[\s]+Type:[\s]+(?<action>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>[^\s]*)[\s]+Properties:[\s]+(?<fld54>.*)$" }
				id => "message-Security_4662_Microsoft-Windows-Security-Auditing:01"
				add_field => {
					"[event][id]" => "Security_4662_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_4662_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1401000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId245
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Server: <obj_server>  Object Type: <obj_type>  Object Name: <obj_name>  Handle ID:  <id1>  Process Information:<space>Process ID:  <process_id>  Process Name:  <process> Access Request Information:<space>Accesses: <accesses>  Access Mask: <fld52>
	else if [logstash][msgparser][id] == "msgParserId245" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:(?<space>[^A]*)Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>.*)$" }
			id => "msgParserId245"
			add_field => {
				"ec_theme" => "ALM"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId246
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Account Name:  <sid>    Account Name:  <username> Account Domain:  <domain>  Logon ID:  <sessionid>  Link Information:<space>File Name: <filename>  Link Name: <fld13>  Transaction ID: <id1>
	else if [logstash][msgparser][id] == "msgParserId246" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^A]*)Account[\s]+Name:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Link[\s]+Information:(?<space>[^F]*)File[\s]+Name:[\s]+(?<filename>[^\s]*)[\s]+Link[\s]+Name:[\s]+(?<fld13>[^\s]*)[\s]+Transaction[\s]+ID:[\s]+(?<id1>.*)$" }
			id => "msgParserId246"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId247
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Client Name:  <username>  Client Domain:  <domain> Client Context ID:  <id1>  Application Information: <space> Application Name: <application> Application Instance ID: <fld13>
	else if [logstash][msgparser][id] == "msgParserId247" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^C]*)Client[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Client[\s]+Context[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Application[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Application[\s]+Name:[\s]+(?<application>[^\s]*)[\s]+Application[\s]+Instance[\s]+ID:[\s]+(?<fld13>.*)$" }
			id => "msgParserId247"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId248
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Client Name:  <username>  Client Domain:  <domain> Client Context ID:  <id1>  Object:<space>Object Name:  <obj_name>  Scope Names:  <fld53>  Application Information: <space> Application Name: <application> Application Instance ID: <fld13> Access Request Information:<space>Role:  <fld39>  Groups: <group>  Operation Name: <action> (<fld40>){	 | ,}<fld41>
	else if [logstash][msgparser][id] == "msgParserId248" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^C]*)Client[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Client[\s]+Context[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Scope[\s]+Names:[\s]+(?<fld53>[^\s]*)[\s]+Application[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Application[\s]+Name:[\s]+(?<application>[^\s]*)[\s]+Application[\s]+Instance[\s]+ID:[\s]+(?<fld13>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:(?<space>[^R]*)Role:[\s]+(?<fld39>[^\s]*)[\s]+Groups:[\s]+(?<group>[^\s]*)[\s]+Operation[\s]+Name:[\s]+(?<action>[^\s]*)[\s]+\((?<fld40>[^\)]*)\)(\t[\s]+|[\s]*,)(?<fld41>.*)$" }
			id => "msgParserId248"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId249
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Client Name:  <username>  Client Domain:  <domain> Client Context ID:  <id1>  Application Information:<space>Application Name: <application>  Application Instance ID: <fld13>
	else if [logstash][msgparser][id] == "msgParserId249" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^C]*)Client[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Client[\s]+Context[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Application[\s]+Information:(?<space>[^A]*)Application[\s]+Name:[\s]+(?<application>[^\s]*)[\s]+Application[\s]+Instance[\s]+ID:[\s]+(?<fld13>.*)$" }
			id => "msgParserId249"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId250
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Client Name: <username>  Client Domain: <domain> Client ID:  <id1>  Application Information:<space>Application Name: <application>  Application Instance ID: <fld13> Additional Information:<space>Policy Store URL: <url>
	else if [logstash][msgparser][id] == "msgParserId250" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^C]*)Client[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Client[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Client[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Application[\s]+Information:(?<space>[^A]*)Application[\s]+Name:[\s]+(?<application>[^\s]*)[\s]+Application[\s]+Instance[\s]+ID:[\s]+(?<fld13>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Policy[\s]+Store[\s]+URL:[\s]+(?<url>.*)$" }
			id => "msgParserId250"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId251
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Server: <obj_server>  Object Type: <obj_type>  Object Name: <obj_name>  Handle ID:  <id1>  Process:<space>Process ID:  <process_id>  Process Name:  <process> Permissions Change:<space>Original Security Descriptor: <change_old>  New Security Descriptor: <change_new>
	else if [logstash][msgparser][id] == "msgParserId251" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Permissions[\s]+Change:(?<space>[^O]*)Original[\s]+Security[\s]+Descriptor:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Security[\s]+Descriptor:[\s]+(?<change_new>.*)$" }
			id => "msgParserId251"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId252
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Ordinal: <info>
	else if [logstash][msgparser][id] == "msgParserId252" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Ordinal:[\s]+(?<info>.*)$" }
			id => "msgParserId252"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId253
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid> Account Name: <username>   Account Domain: <domain> Logon ID: <sessionid> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId253" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId253"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId254
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Service:<space>Server: <obj_server>    Service Name:<service>    Process:<space>Process ID:  <process_id>  Process Name:  <process>    Service Request Information: <space> Privileges:  {<privilege>,<fld1>|<privilege>}
	else if [logstash][msgparser][id] == "msgParserId254" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Service:(?<space>[^S]*)Server:[\s]+(?<obj_server>[^\s]*)[\s]+Service[\s]+Name:(?<service>[^\s]*)[\s]+Process:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Service[\s]+Request[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+((?<privilege>[^,]*),(?<fld1>.*)|(?<privilege>.*))$" }
			id => "msgParserId254"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId255
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid> Account Name: <username>   Account Domain: <domain> Logon ID: <sessionid> Object:<space>Object Server: <obj_server> Object Type: <obj_type> Object Name: <obj_name> Object Handle: <id1> Process Information:<space>Process ID: <process_id> Process Name: <process> Requested Operation:<space>Desired Access: <accesses> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId255" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Object[\s]+Handle:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Requested[\s]+Operation:(?<space>[^D]*)Desired[\s]+Access:[\s]+(?<accesses>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId255"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_4688_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_4688_Microsoft-Windows-Security-Auditing:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Creator Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>  Target Subject:<space>Security ID:  <c_sid>  Account Name:  <c_username>  Account Domain:  <c_domain>  Logon ID:  <sessionid1>  Process Information: <space>New Process ID:  <process_id>  New Process Name: <process>  Token Elevation Type: <fld55>   {Creator Process ID: <parent_pid> Creator Process Name: <process_src>|Creator Process ID: <parent_pid>}  {Process Command Line:     Token Elevation Type|Process Command Line:   Token Elevation Type|Process Command Line: "<filename>"<param>Token Elevation Type indicates|Process Command Line:<filename> <param> Token Elevation Type indicates|Process Command Line:<filename> <param>} <fld50>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Creator[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^N]*)New[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+New[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Token[\s]+Elevation[\s]+Type:[\s]+(?<fld55>[^\s]*)[\s]+(Creator[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*)[\s]+Creator[\s]+Process[\s]+Name:[\s]+(?<process_src>[^\s]*)|Creator[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*))[\s]+(Process[\s]+Command[\s]+Line:[\s]+Token[\s]+Elevation[\s]+Type|Process[\s]+Command[\s]+Line:[\s]+Token[\s]+Elevation[\s]+Type|Process[\s]+Command[\s]+Line:[\s]+\"(?<filename>[^\"]*)\"(?<param>[^T]*)Token[\s]+Elevation[\s]+Type[\s]+indicates|Process[\s]+Command[\s]+Line:(?<filename>[^\s]*)[\s]+(?<param>[^\s]*)[\s]+Token[\s]+Elevation[\s]+Type[\s]+indicates|Process[\s]+Command[\s]+Line:(?<filename>[^\s]*)[\s]+(?<param>[^\s]*))[\s]+(?<fld50>.*)$" }
				id => "message-Security_4688_Microsoft-Windows-Security-Auditing:02"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
				"fld_cmdline" => "%{filename}"
				"info" => "%{filename}\t%{param}"
					"[event][id]" => "Security_4688_Microsoft-Windows-Security-Auditing:02"
					"[rsa][message][id1]" => "Security_4688_Microsoft-Windows-Security-Auditing:02"
					"[event][categoryid]" => "1205010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4688_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Process Information: <space>New Process ID:  <process_id>  New Process Name: <process>  Token Elevation Type: <fld55>   {Creator Process ID: <parent_pid> Creator Process Name: <process_src>|Creator Process ID: <parent_pid>}  {Process Command Line:     Token Elevation Type|Process Command Line:   Token Elevation Type|Process Command Line: "<filename>"<param>Token Elevation Type indicates|Process Command Line:<filename> <param> Token Elevation Type indicates|Process Command Line:<filename> <param>} <fld50>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^N]*)New[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+New[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Token[\s]+Elevation[\s]+Type:[\s]+(?<fld55>[^\s]*)[\s]+(Creator[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*)[\s]+Creator[\s]+Process[\s]+Name:[\s]+(?<process_src>[^\s]*)|Creator[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*))[\s]+(Process[\s]+Command[\s]+Line:[\s]+Token[\s]+Elevation[\s]+Type|Process[\s]+Command[\s]+Line:[\s]+Token[\s]+Elevation[\s]+Type|Process[\s]+Command[\s]+Line:[\s]+\"(?<filename>[^\"]*)\"(?<param>[^T]*)Token[\s]+Elevation[\s]+Type[\s]+indicates|Process[\s]+Command[\s]+Line:(?<filename>[^\s]*)[\s]+(?<param>[^\s]*)[\s]+Token[\s]+Elevation[\s]+Type[\s]+indicates|Process[\s]+Command[\s]+Line:(?<filename>[^\s]*)[\s]+(?<param>[^\s]*))[\s]+(?<fld50>.*)$" }
				id => "message-Security_4688_Microsoft-Windows-Security-Auditing:01"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
				"fld_cmdline" => "%{filename}"
				"info" => "%{filename}\t%{param}"
					"[event][id]" => "Security_4688_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_4688_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1205010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4688_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Process Information:<space>New Process ID:  <process_id>  New Process Name:  <process>    Token Elevation Type: <fld55>   {Creator Process ID: <parent_pid> Creator Process Name: <process_src>|Creator Process ID: <parent_pid>}   <fld50>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^N]*)New[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+New[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Token[\s]+Elevation[\s]+Type:[\s]+(?<fld55>[^\s]*)[\s]+(Creator[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*)[\s]+Creator[\s]+Process[\s]+Name:[\s]+(?<process_src>[^\s]*)|Creator[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*))[\s]+(?<fld50>.*)$" }
				id => "message-Security_4688_Microsoft-Windows-Security-Auditing"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Start"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4688_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_4688_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1205010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId259
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Process Information:<space>Process ID:  <process_id>  Process Name:  <process>    Exit Status: {<resultcode>,<fld50>|<resultcode>	<fld50>|<resultcode>}
	else if [logstash][msgparser][id] == "msgParserId259" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Exit[\s]+Status:[\s]+((?<resultcode>[^,]*),(?<fld50>.*)|(?<resultcode>[^\t]*)\t(?<fld50>.*)|(?<resultcode>.*))$" }
			id => "msgParserId259"
			add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
				"ec_theme" => "ALM"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId260
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Source Handle Information:<space>Source Handle ID: <id1>  Source Process ID: <parent_pid>  New Handle Information:<space>Target Handle ID: <id2>  Target Process ID: <process_id>
	else if [logstash][msgparser][id] == "msgParserId260" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Source[\s]+Handle[\s]+Information:(?<space>[^S]*)Source[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Source[\s]+Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*)[\s]+New[\s]+Handle[\s]+Information:(?<space>[^T]*)Target[\s]+Handle[\s]+ID:[\s]+(?<id2>[^\s]*)[\s]+Target[\s]+Process[\s]+ID:[\s]+(?<process_id>.*)$" }
			id => "msgParserId260"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId261
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object:<space>Object Type: <obj_type>  Object Name: <obj_name>  Process Information:<space>Process ID:  <process_id> Access Request Information:<space>Accesses: <accesses> Access Mask: <fld52>
	else if [logstash][msgparser][id] == "msgParserId261" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:(?<space>[^A]*)Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>.*)$" }
			id => "msgParserId261"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId262
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Key Information:  <info> Status Information:<space>Status Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId262" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Key[\s]+Information:[\s]+(?<info>[^\s]*)[\s]+Status[\s]+Information:(?<space>[^S]*)Status[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId262"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId263
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Protected Data:  <info>  Status Information:<space>Status Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId263" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Protected[\s]+Data:[\s]+(?<info>[^\s]*)[\s]+Status[\s]+Information:(?<space>[^S]*)Status[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId263"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId264
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Protected Data:<fld52>  Protection Algorithms: <encryption_type>  Status Information:<space>Status Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId264" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Protected[\s]+Data:(?<fld52>[^\s]*)[\s]+Protection[\s]+Algorithms:[\s]+(?<encryption_type>[^\s]*)[\s]+Status[\s]+Information:(?<space>[^S]*)Status[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId264"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId265
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Process Information:<space>Process ID:  <parent_pid>  Process Name: <process_src>  Target Process:<space>Target Process ID: <process_id>  Target Process Name: <process>  New Token Information:<space>Security ID:  <fld39>  Account Name:  <c_username>  Account Domain:  <c_domain>  Logon ID:  <sessionid1>
	else if [logstash][msgparser][id] == "msgParserId265" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<parent_pid>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process_src>[^\s]*)[\s]+Target[\s]+Process:(?<space>[^T]*)Target[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Target[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+New[\s]+Token[\s]+Information:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid1>.*)$" }
			id => "msgParserId265"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId266
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Service Information:<space>Service Name: <service> Service File Name: <filename>  Service Type:  <fld56> Service Start Type: <fld57>  Service Account: <service_account>
	else if [logstash][msgparser][id] == "msgParserId266" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Service[\s]+Information:(?<space>[^S]*)Service[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Service[\s]+File[\s]+Name:[\s]+(?<filename>[^\s]*)[\s]+Service[\s]+Type:[\s]+(?<fld56>[^\s]*)[\s]+Service[\s]+Start[\s]+Type:[\s]+(?<fld57>[^\s]*)[\s]+Service[\s]+Account:[\s]+(?<service_account>.*)$" }
			id => "msgParserId266"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId267
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Task Information:<space>Task Name: <service>  Task Content:  <info>
	else if [logstash][msgparser][id] == "msgParserId267" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Task[\s]+Information:(?<space>[^T]*)Task[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Task[\s]+Content:[\s]+(?<info>.*)$" }
			id => "msgParserId267"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_1200_AD" {
		# MESSAGE Security_1200_AD:01
		# line in RSA: <event_description> See XML for details.<fld15>Activity ID:<process_id> Additional Data<fld16>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld1><<ErrorCode> <resultcode> <</ErrorCode><fld2> <<RelyingParty><federated_sp><</RelyingParty> <fld43> <<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3> <<SsoBindingValidationLevel><fld22><</SsoBindingValidationLevel> <fld44> <<Server><application><</Server><fld81><<AuthProtocol><protocol><</AuthProtocol><fld9><<NetworkLocation><netname><</NetworkLocation><fld10><<IpAddress><saddr><</IpAddress><fld7> {<<ForwardedIpAddress><ip.orig><</ForwardedIpAddress>|<<ForwardedIpAddress />} <fld50> <<ProxyIpAddress><fld88><</ProxyIpAddress> <fld51> <<NetworkIpAddress><hostip><</NetworkIpAddress> <fld11><<ProxyServer><hostname><</ProxyServer> <fld8> <<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+details\.(?<fld15>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld16>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld1>[^<]*)<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld2>[^\s]*)[\s]+<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld43>[^\s]*)[\s]+<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^\s]*)[\s]+<SsoBindingValidationLevel>(?<fld22>[^<]*)</SsoBindingValidationLevel>[\s]+(?<fld44>[^\s]*)[\s]+<Server>(?<application>[^<]*)</Server>(?<fld81>[^<]*)<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld9>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld10>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>(?<fld7>[^\s]*)[\s]+(<ForwardedIpAddress>(?<ip.orig>[^<]*)</ForwardedIpAddress>|<ForwardedIpAddress[\s]+/>)[\s]+(?<fld50>[^\s]*)[\s]+<ProxyIpAddress>(?<fld88>[^<]*)</ProxyIpAddress>[\s]+(?<fld51>[^\s]*)[\s]+<NetworkIpAddress>(?<hostip>[^<]*)</NetworkIpAddress>[\s]+(?<fld11>[^<]*)<ProxyServer>(?<hostname>[^<]*)</ProxyServer>[\s]+(?<fld8>[^\s]*)[\s]+<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld45>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-Security_1200_AD:01"
				add_field => {
				"ec_activity" => "Service issued a valid token"
				"event_log" => "%{msgIdPart1}"
				"hostname" => "%{hhostname}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
					"[event][id]" => "Security_1200_AD:01"
					"[rsa][message][id1]" => "Security_1200_AD:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_1200_AD
		# line in RSA: <event_description> See XML for details.<fld15>Activity ID:<process_id> Additional Data<fld16>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld1><<ErrorCode> <resultcode> <</ErrorCode><fld2> <<RelyingParty><federated_sp><</RelyingParty> <fld43> <<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3> <<SsoBindingValidationLevel><fld22><</SsoBindingValidationLevel> <fld44> <<Server><application><</Server><fld81><<AuthProtocol><protocol><</AuthProtocol><fld9><<NetworkLocation><netname><</NetworkLocation><fld10><<IpAddress><saddr><</IpAddress><fld11><<ProxyServer><hostname><</ProxyServer> <fld8> <<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+details\.(?<fld15>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld16>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld1>[^<]*)<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld2>[^\s]*)[\s]+<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld43>[^\s]*)[\s]+<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^\s]*)[\s]+<SsoBindingValidationLevel>(?<fld22>[^<]*)</SsoBindingValidationLevel>[\s]+(?<fld44>[^\s]*)[\s]+<Server>(?<application>[^<]*)</Server>(?<fld81>[^<]*)<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld9>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld10>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>(?<fld11>[^<]*)<ProxyServer>(?<hostname>[^<]*)</ProxyServer>[\s]+(?<fld8>[^\s]*)[\s]+<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld45>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-Security_1200_AD"
				add_field => {
				"ec_activity" => "Service issued a valid token"
				"event_log" => "%{msgIdPart1}"
				"hostname" => "%{hhostname}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
					"[event][id]" => "Security_1200_AD"
					"[rsa][message][id1]" => "Security_1200_AD"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_1201_AD" {
		# MESSAGE Security_1201_AD:01
		# line in RSA: <event_description> See XML for failure details.<fld1>Activity ID:<process_id> Additional Data<fld5>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld81><<ErrorCode> <resultcode> <</ErrorCode><fld2> <<RelyingParty><federated_sp><</RelyingParty> <fld43> <<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3> <<SsoBindingValidationLevel><fld22><</SsoBindingValidationLevel> <fld44> <<Server><application><</Server><fld83><<AuthProtocol><protocol><</AuthProtocol><fld9><<NetworkLocation><netname><</NetworkLocation><fld10><<IpAddress><saddr><</IpAddress> <fld7> {<<ForwardedIpAddress><ip.orig><</ForwardedIpAddress>|<<ForwardedIpAddress />} <fld50> <<ProxyIpAddress><fld88><</ProxyIpAddress> <fld51> <<NetworkIpAddress><hostip><</NetworkIpAddress> <fld11><<ProxyServer><hostname><</ProxyServer> <fld8> <<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+failure[\s]+details\.(?<fld1>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld5>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld81>[^<]*)<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld2>[^\s]*)[\s]+<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld43>[^\s]*)[\s]+<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^\s]*)[\s]+<SsoBindingValidationLevel>(?<fld22>[^<]*)</SsoBindingValidationLevel>[\s]+(?<fld44>[^\s]*)[\s]+<Server>(?<application>[^<]*)</Server>(?<fld83>[^<]*)<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld9>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld10>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>[\s]+(?<fld7>[^\s]*)[\s]+(<ForwardedIpAddress>(?<ip.orig>[^<]*)</ForwardedIpAddress>|<ForwardedIpAddress[\s]+/>)[\s]+(?<fld50>[^\s]*)[\s]+<ProxyIpAddress>(?<fld88>[^<]*)</ProxyIpAddress>[\s]+(?<fld51>[^\s]*)[\s]+<NetworkIpAddress>(?<hostip>[^<]*)</NetworkIpAddress>[\s]+(?<fld11>[^<]*)<ProxyServer>(?<hostname>[^<]*)</ProxyServer>[\s]+(?<fld8>[^\s]*)[\s]+<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld45>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-Security_1201_AD:01"
				add_field => {
				"ec_activity" => "Service failed to issue a valid token"
				"event_log" => "%{msgIdPart1}"
				"hostname" => "%{hhostname}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
					"[event][id]" => "Security_1201_AD:01"
					"[rsa][message][id1]" => "Security_1201_AD:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_1201_AD
		# line in RSA: <event_description> See XML for failure details.<fld1>Activity ID:<process_id> Additional Data<fld5>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld81><<ErrorCode> <resultcode> <</ErrorCode><fld2> <<RelyingParty><federated_sp><</RelyingParty> <fld43> <<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3> <<SsoBindingValidationLevel><fld22><</SsoBindingValidationLevel> <fld44> <<Server><application><</Server><fld83><<AuthProtocol><protocol><</AuthProtocol><fld9><<NetworkLocation><netname><</NetworkLocation><fld10><<IpAddress><saddr><</IpAddress> <fld11><<ProxyServer><hostname><</ProxyServer> <fld8> <<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+failure[\s]+details\.(?<fld1>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld5>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld81>[^<]*)<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld2>[^\s]*)[\s]+<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld43>[^\s]*)[\s]+<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^\s]*)[\s]+<SsoBindingValidationLevel>(?<fld22>[^<]*)</SsoBindingValidationLevel>[\s]+(?<fld44>[^\s]*)[\s]+<Server>(?<application>[^<]*)</Server>(?<fld83>[^<]*)<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld9>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld10>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>[\s]+(?<fld11>[^<]*)<ProxyServer>(?<hostname>[^<]*)</ProxyServer>[\s]+(?<fld8>[^\s]*)[\s]+<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld45>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-Security_1201_AD"
				add_field => {
				"ec_activity" => "Service failed to issue a valid token"
				"event_log" => "%{msgIdPart1}"
				"hostname" => "%{hhostname}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
					"[event][id]" => "Security_1201_AD"
					"[rsa][message][id1]" => "Security_1201_AD"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_1202_AD" {
		# MESSAGE Security_1202_AD:01
		# line in RSA: <event_description> See XML for details.<fld81>Activity ID:<process_id> Additional Data<fld5>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld1> <<ErrorCode> <resultcode> <</ErrorCode><fld2>  <<RelyingParty><federated_sp><</RelyingParty> <fld43> <<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3> <<SsoBindingValidationLevel><fld22><</SsoBindingValidationLevel> <fld44> <<Server><application><</Server> <fld83> <<AuthProtocol><protocol><</AuthProtocol><fld9><<NetworkLocation><netname><</NetworkLocation><fld10><<IpAddress><saddr><</IpAddress> <fld7> {<<ForwardedIpAddress><ip.orig><</ForwardedIpAddress>|<<ForwardedIpAddress />} <fld50> <<ProxyIpAddress><fld88><</ProxyIpAddress> <fld51> <<NetworkIpAddress><hostip><</NetworkIpAddress> <fld11> <<ProxyServer><hostname><</ProxyServer><fld8><<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+details\.(?<fld81>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld5>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld1>[^\s]*)[\s]+<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld2>[^\s]*)[\s]+<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld43>[^\s]*)[\s]+<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^\s]*)[\s]+<SsoBindingValidationLevel>(?<fld22>[^<]*)</SsoBindingValidationLevel>[\s]+(?<fld44>[^\s]*)[\s]+<Server>(?<application>[^<]*)</Server>[\s]+(?<fld83>[^\s]*)[\s]+<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld9>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld10>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>[\s]+(?<fld7>[^\s]*)[\s]+(<ForwardedIpAddress>(?<ip.orig>[^<]*)</ForwardedIpAddress>|<ForwardedIpAddress[\s]+/>)[\s]+(?<fld50>[^\s]*)[\s]+<ProxyIpAddress>(?<fld88>[^<]*)</ProxyIpAddress>[\s]+(?<fld51>[^\s]*)[\s]+<NetworkIpAddress>(?<hostip>[^<]*)</NetworkIpAddress>[\s]+(?<fld11>[^\s]*)[\s]+<ProxyServer>(?<hostname>[^<]*)</ProxyServer>(?<fld8>[^<]*)<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld45>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-Security_1202_AD:01"
				add_field => {
				"ec_activity" => " Service validated a new credential"
				"event_log" => "%{msgIdPart1}"
				"hostname" => "%{hhostname}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
					"[event][id]" => "Security_1202_AD:01"
					"[rsa][message][id1]" => "Security_1202_AD:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_1202_AD
		# line in RSA: <event_description> See XML for details.<fld81>Activity ID:<process_id> Additional Data<fld5>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld1> <<ErrorCode> <resultcode> <</ErrorCode><fld2>  <<RelyingParty><federated_sp><</RelyingParty> <fld43> <<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3> <<SsoBindingValidationLevel><fld22><</SsoBindingValidationLevel> <fld44> <<Server><application><</Server> <fld83> <<AuthProtocol><protocol><</AuthProtocol><fld9><<NetworkLocation><netname><</NetworkLocation><fld10><<IpAddress><saddr><</IpAddress> <fld11> <<ProxyServer><hostname><</ProxyServer><fld8><<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+details\.(?<fld81>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld5>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld1>[^\s]*)[\s]+<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld2>[^\s]*)[\s]+<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld43>[^\s]*)[\s]+<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^\s]*)[\s]+<SsoBindingValidationLevel>(?<fld22>[^<]*)</SsoBindingValidationLevel>[\s]+(?<fld44>[^\s]*)[\s]+<Server>(?<application>[^<]*)</Server>[\s]+(?<fld83>[^\s]*)[\s]+<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld9>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld10>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>[\s]+(?<fld11>[^\s]*)[\s]+<ProxyServer>(?<hostname>[^<]*)</ProxyServer>(?<fld8>[^<]*)<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld45>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-Security_1202_AD"
				add_field => {
				"ec_activity" => " Service validated a new credential"
				"event_log" => "%{msgIdPart1}"
				"hostname" => "%{hhostname}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
					"[event][id]" => "Security_1202_AD"
					"[rsa][message][id1]" => "Security_1202_AD"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_1203_AD" {
		# MESSAGE Security_1203_AD:01
		# line in RSA: <event_description> See XML for failure details.<fld1>Activity ID:<process_id> Additional Data<fld9>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld84><<ErrorCode> <resultcode> <</ErrorCode><fld2><<RelyingParty><federated_sp><</RelyingParty> <fld43> <<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3><<SsoBindingValidationLevel><fld83><</SsoBindingValidationLevel> <fld44> <<Server><application><</Server><fld10><<AuthProtocol><protocol><</AuthProtocol><fld5><<NetworkLocation><netname><</NetworkLocation><fld6><<IpAddress><saddr><</IpAddress><fld7> {<<ForwardedIpAddress><ip.orig><</ForwardedIpAddress>|<<ForwardedIpAddress />} <fld50> <<ProxyIpAddress><fld88><</ProxyIpAddress> <fld51> <<NetworkIpAddress><hostip><</NetworkIpAddress> <fld89> <<ProxyServer><hostname><</ProxyServer><fld8><<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+failure[\s]+details\.(?<fld1>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld9>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld84>[^<]*)<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld2>[^<]*)<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld43>[^\s]*)[\s]+<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^<]*)<SsoBindingValidationLevel>(?<fld83>[^<]*)</SsoBindingValidationLevel>[\s]+(?<fld44>[^\s]*)[\s]+<Server>(?<application>[^<]*)</Server>(?<fld10>[^<]*)<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld5>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld6>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>(?<fld7>[^\s]*)[\s]+(<ForwardedIpAddress>(?<ip.orig>[^<]*)</ForwardedIpAddress>|<ForwardedIpAddress[\s]+/>)[\s]+(?<fld50>[^\s]*)[\s]+<ProxyIpAddress>(?<fld88>[^<]*)</ProxyIpAddress>[\s]+(?<fld51>[^\s]*)[\s]+<NetworkIpAddress>(?<hostip>[^<]*)</NetworkIpAddress>[\s]+(?<fld89>[^\s]*)[\s]+<ProxyServer>(?<hostname>[^<]*)</ProxyServer>(?<fld8>[^<]*)<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld45>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-Security_1203_AD:01"
				add_field => {
				"event_log" => "%{msgIdPart1}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
				"hostname" => "%{hhostname}"
					"[event][id]" => "Security_1203_AD:01"
					"[rsa][message][id1]" => "Security_1203_AD:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_1203_AD
		# line in RSA: <event_description> See XML for failure details.<fld1>Activity ID:<process_id> Additional Data<fld9>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld22><<ErrorCode> <resultcode> <</ErrorCode><fld2><<RelyingParty><federated_sp><</RelyingParty> <fld43> <<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3><<SsoBindingValidationLevel><fld84><</SsoBindingValidationLevel> <fld44> <<Server><application><</Server><fld10><<AuthProtocol><protocol><</AuthProtocol><fld5><<NetworkLocation><netname><</NetworkLocation><fld6><<IpAddress><saddr><</IpAddress><fld7><<ProxyServer><hostname><</ProxyServer><fld8><<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> 
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+failure[\s]+details\.(?<fld1>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld9>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld22>[^<]*)<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld2>[^<]*)<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld43>[^\s]*)[\s]+<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^<]*)<SsoBindingValidationLevel>(?<fld84>[^<]*)</SsoBindingValidationLevel>[\s]+(?<fld44>[^\s]*)[\s]+<Server>(?<application>[^<]*)</Server>(?<fld10>[^<]*)<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld5>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld6>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>(?<fld7>[^<]*)<ProxyServer>(?<hostname>[^<]*)</ProxyServer>(?<fld8>[^<]*)<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld45>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+$" }
				id => "message-Security_1203_AD"
				add_field => {
				"event_log" => "%{msgIdPart1}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
				"hostname" => "%{hhostname}"
					"[event][id]" => "Security_1203_AD"
					"[rsa][message][id1]" => "Security_1203_AD"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_1206_AD" {
		# MESSAGE Security_1206_AD:01
		# line in RSA: <event_description> See XML for failure details.<fld1>Activity ID:<process_id> Additional Data<fld8>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld22><<ErrorCode> <resultcode> <</ErrorCode><fld2><<Server><application><</Server><fld3><<AuthProtocol><protocol><</AuthProtocol><fld10><<NetworkLocation><netname><</NetworkLocation><fld5><<IpAddress><saddr><</IpAddress><fld6>{<<ForwardedIpAddress><ip.orig><</ForwardedIpAddress>|<<ForwardedIpAddress />} <fld50> <<ProxyIpAddress><fld88><</ProxyIpAddress> <fld51> <<NetworkIpAddress><hostip><</NetworkIpAddress> <fld65><<ProxyServer><hostname><</ProxyServer><fld7><<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> <<SignedInRPs><fld60><<SignedInRPs><federated_sp><</SignedInRPs><fld61><</SignedInRPs> <fld62>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
		# MESSAGE Security_1206_AD
		# line in RSA: <event_description> See XML for failure details.<fld1>Activity ID:<process_id> Additional Data<fld8>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld22><<ErrorCode> <resultcode> <</ErrorCode><fld2><<Server><application><</Server><fld3><<AuthProtocol><protocol><</AuthProtocol><fld10><<NetworkLocation><netname><</NetworkLocation><fld5><<IpAddress><saddr><</IpAddress><fld6><<ProxyServer><hostname><</ProxyServer><fld7><<UserAgentString><user_agent><</UserAgentString> <fld45> <<Endpoint><url><</Endpoint> <fld4> <<SignedInRPs><fld60><<SignedInRPs><federated_sp><</SignedInRPs><fld61><</SignedInRPs> <fld62>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description} See XML for failure details.%{fld1}Activity ID:%{process_id} Additional Data%{fld8}XML: %{info} <AuditType>%{event_type}</AuditType> %{fld41} <AuditResult> %{disposition} </AuditResult> %{fld42} <FailureType>%{result}</FailureType> %{fld22}<ErrorCode> %{resultcode} </ErrorCode>%{fld2}<Server>%{application}</Server>%{fld3}<AuthProtocol>%{protocol}</AuthProtocol>%{fld10}<NetworkLocation>%{netname}</NetworkLocation>%{fld5}<IpAddress>%{saddr}</IpAddress>%{fld6}<ProxyServer>%{hostname}</ProxyServer>%{fld7}<UserAgentString>%{user_agent}</UserAgentString> %{fld45} <Endpoint>%{url}</Endpoint> %{fld4} <SignedInRPs>%{fld60}<SignedInRPs>%{federated_sp}</SignedInRPs>%{fld61}</SignedInRPs> %{fld62}" }
				id => "message-Security_1206_AD"
				add_field => {
				"ec_activity" => " Logoff"
				"event_log" => "%{msgIdPart1}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
				"hostname" => "%{hhostname}"
					"[event][id]" => "Security_1206_AD"
					"[rsa][message][id1]" => "Security_1206_AD"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_1210_AD" {
		# MESSAGE Security_1210_AD:01
		# line in RSA: <event_description> See XML for failure details.<fld1>Activity ID:<process_id> Additional Data<fld8>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld22><<ErrorCode> <resultcode> <</ErrorCode><fld67> <<RelyingParty><federated_sp><</RelyingParty> <fld2><<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3><<Server><application><</Server><fld9><<AuthProtocol><protocol><</AuthProtocol><fld10><<NetworkLocation><netname><</NetworkLocation><fld5><<IpAddress><saddr><</IpAddress><fld6>{<<ForwardedIpAddress><ip.orig><</ForwardedIpAddress>|<<ForwardedIpAddress />} <fld50> <<ProxyIpAddress><fld33><</ProxyIpAddress><fld64><<NetworkIpAddress><hostip><</NetworkIpAddress><fld65><<ProxyServer><hostname><</ProxyServer><fld7><<UserAgentString><user_agent><</UserAgentString> <fld77> <<Endpoint><url><</Endpoint> <fld4> <<CurrentBadPasswordCount><dclass_counter1><</CurrentBadPasswordCount><fld70><<ConfigBadPasswordCount><dclass_counter2><</ConfigBadPasswordCount><fld71><<LastBadAttempt><event_time_string><</LastBadAttempt><fld72><<LockoutWindowConfig><duration_string><</LockoutWindowConfig> <fld73>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
		# MESSAGE Security_1210_AD
		# line in RSA: <event_description> See XML for failure details.<fld1>Activity ID:<process_id> Additional Data<fld8>XML: <info> <<AuditType><event_type><</AuditType> <fld41> <<AuditResult> <disposition> <</AuditResult> <fld42> <<FailureType><result><</FailureType> <fld22><<ErrorCode> <resultcode> <</ErrorCode><fld67> <<RelyingParty><federated_sp><</RelyingParty> <fld2><<UserId>{<domain>\<username>|<username>@<domain>|<username>}<</UserId><fld3><<Server><application><</Server><fld9><<AuthProtocol><protocol><</AuthProtocol><fld10><<NetworkLocation><netname><</NetworkLocation><fld5><<IpAddress><saddr><</IpAddress><fld6><<ProxyServer><hostname><</ProxyServer><fld7><<UserAgentString><user_agent><</UserAgentString> <fld77> <<Endpoint><url><</Endpoint> <fld4> <<CurrentBadPasswordCount><dclass_counter1><</CurrentBadPasswordCount><fld70><<ConfigBadPasswordCount><dclass_counter2><</ConfigBadPasswordCount><fld71><<LastBadAttempt><event_time_string><</LastBadAttempt><fld72><<LockoutWindowConfig><duration_string><</LockoutWindowConfig> <fld73>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<event_description>[^\s]*)[\s]+See[\s]+XML[\s]+for[\s]+failure[\s]+details\.(?<fld1>[^A]*)Activity[\s]+ID:(?<process_id>[^\s]*)[\s]+Additional[\s]+Data(?<fld8>[^X]*)XML:[\s]+(?<info>[^\s]*)[\s]+<AuditType>(?<event_type>[^<]*)</AuditType>[\s]+(?<fld41>[^\s]*)[\s]+<AuditResult>[\s]+(?<disposition>[^\s]*)[\s]+</AuditResult>[\s]+(?<fld42>[^\s]*)[\s]+<FailureType>(?<result>[^<]*)</FailureType>[\s]+(?<fld22>[^<]*)<ErrorCode>[\s]+(?<resultcode>[^\s]*)[\s]+</ErrorCode>(?<fld67>[^\s]*)[\s]+<RelyingParty>(?<federated_sp>[^<]*)</RelyingParty>[\s]+(?<fld2>[^<]*)<UserId>((?<domain>[^\\]*)\\(?<username>[^<]*)|(?<username>[^@]*)@(?<domain>[^<]*)|(?<username>[^<]*))</UserId>(?<fld3>[^<]*)<Server>(?<application>[^<]*)</Server>(?<fld9>[^<]*)<AuthProtocol>(?<protocol>[^<]*)</AuthProtocol>(?<fld10>[^<]*)<NetworkLocation>(?<netname>[^<]*)</NetworkLocation>(?<fld5>[^<]*)<IpAddress>(?<saddr>[^<]*)</IpAddress>(?<fld6>[^<]*)<ProxyServer>(?<hostname>[^<]*)</ProxyServer>(?<fld7>[^<]*)<UserAgentString>(?<user_agent>[^<]*)</UserAgentString>[\s]+(?<fld77>[^\s]*)[\s]+<Endpoint>(?<url>[^<]*)</Endpoint>[\s]+(?<fld4>[^\s]*)[\s]+<CurrentBadPasswordCount>(?<dclass_counter1>[^<]*)</CurrentBadPasswordCount>(?<fld70>[^<]*)<ConfigBadPasswordCount>(?<dclass_counter2>[^<]*)</ConfigBadPasswordCount>(?<fld71>[^<]*)<LastBadAttempt>(?<event_time_string>[^<]*)</LastBadAttempt>(?<fld72>[^<]*)<LockoutWindowConfig>(?<duration_string>[^<]*)</LockoutWindowConfig>[\s]+(?<fld73>.*)$" }
				id => "message-Security_1210_AD"
				add_field => {
				"ec_activity" => "Lockout"
				"event_log" => "%{msgIdPart1}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{hevent_type}"
				"event_user" => "%{hevent_user}"
				"event_computer" => "%{hevent_computer}"
				"category" => "%{hcategory}"
				"hostname" => "%{hhostname}"
					"[event][id]" => "Security_1210_AD"
					"[rsa][message][id1]" => "Security_1210_AD"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{hmonth} %{hdate} %{htime} %{hyear}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM dd H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId280
	# line in RSA: <event_description> See inner exception for more details. <fld1> Additional Data <fld2> Activity ID:<process_id> Token Type: <fld3> Client IP: <saddr> Error message: <username>-<info> Exception details:<fld4>,<fld5>
	else if [logstash][msgparser][id] == "msgParserId280" {
		dissect {
			mapping => { "message" => "%{event_description} See inner exception for more details. %{fld1} Additional Data %{fld2} Activity ID:%{process_id} Token Type: %{fld3} Client IP: %{saddr} Error message: %{username}-%{info} Exception details:%{fld4},%{fld5}" }
			id => "msgParserId280"
			add_field => {
				"event_log" => "%{msgIdPart1}"
				"id" => "%{msgIdPart2}"
				"event_source" => "AD FS Auditing"
				"event_type" => "%{Hevent_type}"
				"event_user" => "%{Hevent_user}"
				"event_computer" => "%{Hevent_computer}"
				"category" => "%{Hcategory}"
				"[logstash][fullDateTimeString]" => "%{}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId281
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Task Information:<space>Task Name: <service>  Task Content:  <info>
	else if [logstash][msgparser][id] == "msgParserId281" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Task[\s]+Information:(?<space>[^T]*)Task[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Task[\s]+Content:[\s]+(?<info>.*)$" }
			id => "msgParserId281"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId282
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Task Information:<space>Task Name: <service>  Task Content:  <info>
	else if [logstash][msgparser][id] == "msgParserId282" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Task[\s]+Information:(?<space>[^T]*)Task[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Task[\s]+Content:[\s]+(?<info>.*)$" }
			id => "msgParserId282"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId283
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Task Information:<space>Task Name: <service>  Task New Content:  <info>
	else if [logstash][msgparser][id] == "msgParserId283" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Task[\s]+Information:(?<space>[^T]*)Task[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Task[\s]+New[\s]+Content:[\s]+(?<info>.*)$" }
			id => "msgParserId283"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId284
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject<space>:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Target Account:<space>Account Name:  <realm>    New Right:<space>User Right:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId284" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject(?<space>[^:]*):(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:(?<space>[^A]*)Account[\s]+Name:[\s]+(?<realm>[^\s]*)[\s]+New[\s]+Right:(?<space>[^U]*)User[\s]+Right:[\s]+(?<privilege>.*)$" }
			id => "msgParserId284"
			add_field => {
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId285
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Target Account:<space>Account Name:  <realm>    Removed Right:<space>User Right:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId285" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:(?<space>[^A]*)Account[\s]+Name:[\s]+(?<realm>[^\s]*)[\s]+Removed[\s]+Right:(?<space>[^U]*)User[\s]+Right:[\s]+(?<privilege>.*)$" }
			id => "msgParserId285"
			add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId286
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Trusted Domain:<space>Domain Name:  <remote_domain>  Domain ID:  <remote_domain_id>  Trust Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId286" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Trusted[\s]+Domain:(?<space>[^D]*)Domain[\s]+Name:[\s]+(?<remote_domain>[^\s]*)[\s]+Domain[\s]+ID:[\s]+(?<remote_domain_id>[^\s]*)[\s]+Trust[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId286"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId287
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject<space>:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Domain Information:<space>Domain Name:  <remote_domain>  Domain ID:  <remote_domain_id>
	else if [logstash][msgparser][id] == "msgParserId287" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject(?<space>[^:]*):(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Domain[\s]+Information:(?<space>[^D]*)Domain[\s]+Name:[\s]+(?<remote_domain>[^\s]*)[\s]+Domain[\s]+ID:[\s]+(?<remote_domain_id>.*)$" }
			id => "msgParserId287"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId288
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Policy Source:  <info>
	else if [logstash][msgparser][id] == "msgParserId288" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy[\s]+Source:[\s]+(?<info>.*)$" }
			id => "msgParserId288"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId289
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Changes Made:  <policy_value>
	else if [logstash][msgparser][id] == "msgParserId289" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Changes[\s]+Made:[\s]+(?<policy_value>.*)$" }
			id => "msgParserId289"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_4714_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_4714_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Changes Made:  <policy_value>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Changes[\s]+Made:[\s]+(?<policy_value>.*)$" }
				id => "message-Security_4714_Microsoft-Windows-Security-Auditing"
				add_field => {
					"[event][id]" => "Security_4714_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_4714_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1502050000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4714_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>{	 | ,}<fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld3>.*)$" }
				id => "message-Security_4714_Microsoft-Windows-Security-Auditing:01"
				add_field => {
					"[event][id]" => "Security_4714_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_4714_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId291
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Audit Policy Change:<space>Original Security Descriptor: <change_old> New Security Descriptor: <change_new>
	else if [logstash][msgparser][id] == "msgParserId291" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Audit[\s]+Policy[\s]+Change:(?<space>[^O]*)Original[\s]+Security[\s]+Descriptor:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Security[\s]+Descriptor:[\s]+(?<change_new>.*)$" }
			id => "msgParserId291"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId292
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Trusted Domain:<space>Domain Name:  <remote_domain>  Domain ID:  <remote_domain_id>  New Trust Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId292" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Trusted[\s]+Domain:(?<space>[^D]*)Domain[\s]+Name:[\s]+(?<remote_domain>[^\s]*)[\s]+Domain[\s]+ID:[\s]+(?<remote_domain_id>[^\s]*)[\s]+New[\s]+Trust[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId292"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId293
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Account Modified:<space>Account Name:  <realm>  Access Granted:<space>Access Right:  <accesses>
	else if [logstash][msgparser][id] == "msgParserId293" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Account[\s]+Modified:(?<space>[^A]*)Account[\s]+Name:[\s]+(?<realm>[^\s]*)[\s]+Access[\s]+Granted:(?<space>[^A]*)Access[\s]+Right:[\s]+(?<accesses>.*)$" }
			id => "msgParserId293"
			add_field => {
				"ec_subject" => "Permission"
				"ec_activity" => "Modify"
				"ec_theme" => "AccessControl"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId294
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Account Modified:<space>Account Name:  <realm>  Access Removed:<space>Access Right:  <accesses>
	else if [logstash][msgparser][id] == "msgParserId294" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Account[\s]+Modified:(?<space>[^A]*)Account[\s]+Name:[\s]+(?<realm>[^\s]*)[\s]+Access[\s]+Removed:(?<space>[^A]*)Access[\s]+Right:[\s]+(?<accesses>.*)$" }
			id => "msgParserId294"
			add_field => {
				"ec_theme" => "AccessControl"
				"ec_subject" => "Permission"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId295
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<fld14>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Audit Policy Change: <space> Category:  <category>  Subcategory: <fld66>  Subcategory GUID: <fld13>  Changes: <policy_value>
	else if [logstash][msgparser][id] == "msgParserId295" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld14>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Audit[\s]+Policy[\s]+Change:[\s]+(?<space>[^\s]*)[\s]+Category:[\s]+(?<category>[^\s]*)[\s]+Subcategory:[\s]+(?<fld66>[^\s]*)[\s]+Subcategory[\s]+GUID:[\s]+(?<fld13>[^\s]*)[\s]+Changes:[\s]+(?<policy_value>.*)$" }
			id => "msgParserId295"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_4720_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_4720_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    New Account: <space> Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Attributes: <space> SAM Account Name: <user_fullname>  Display Name:  <param>   User Principal Name: <fld21>   Home Directory:  <directory>   Home Drive:  <fld22>   Script Path:  <fld23>   Profile Path:  <fld24>   User Workstations: <hostname>   Password Last Set: <fld25>   Account Expires:  <expiration_time>   Primary Group ID: <groupid>   Allowed To Delegate To: <fld27>   Old UAC Value:  <change_old>   New UAC Value:  <change_new>   User Account Control:   <fld28>   User Parameters: <fld29>   SID History:  <fld30>   Logon Hours:  <fld31>    Additional Information: <space> Privileges <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+New[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+SAM[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Display[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+User[\s]+Principal[\s]+Name:[\s]+(?<fld21>[^\s]*)[\s]+Home[\s]+Directory:[\s]+(?<directory>[^\s]*)[\s]+Home[\s]+Drive:[\s]+(?<fld22>[^\s]*)[\s]+Script[\s]+Path:[\s]+(?<fld23>[^\s]*)[\s]+Profile[\s]+Path:[\s]+(?<fld24>[^\s]*)[\s]+User[\s]+Workstations:[\s]+(?<hostname>[^\s]*)[\s]+Password[\s]+Last[\s]+Set:[\s]+(?<fld25>[^\s]*)[\s]+Account[\s]+Expires:[\s]+(?<expiration_time>[^\s]*)[\s]+Primary[\s]+Group[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Allowed[\s]+To[\s]+Delegate[\s]+To:[\s]+(?<fld27>[^\s]*)[\s]+Old[\s]+UAC[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+UAC[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+User[\s]+Account[\s]+Control:[\s]+(?<fld28>[^\s]*)[\s]+User[\s]+Parameters:[\s]+(?<fld29>[^\s]*)[\s]+SID[\s]+History:[\s]+(?<fld30>[^\s]*)[\s]+Logon[\s]+Hours:[\s]+(?<fld31>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges[\s]+(?<privilege>.*)$" }
				id => "message-Security_4720_Microsoft-Windows-Security-Auditing:01"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4720_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_4720_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4720_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    New Account: <space> Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Attributes: <space> SAM Account Name: <user_fullname>  Display Name:  <param> Additional Information: <space> Privileges <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+New[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+SAM[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Display[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges[\s]+(?<privilege>.*)$" }
				id => "message-Security_4720_Microsoft-Windows-Security-Auditing"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4720_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_4720_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1402020200"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId298
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Target Account: <space> Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>
	else if [logstash][msgparser][id] == "msgParserId298" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>.*)$" }
			id => "msgParserId298"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId299
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Target Account:<space>Security ID:  <fld39>  Account Name:  <c_username>  Account Domain:  <c_domain>  Additional Information:<space>Privileges  <privilege>
	else if [logstash][msgparser][id] == "msgParserId299" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges[\s]+(?<privilege>.*)$" }
			id => "msgParserId299"
			add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId300
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid> Account Name: <username>   Account Domain: <domain> Logon ID: <sessionid> Target Account: <space> Security ID: <fld39> Account Name: <c_username> Account Domain: <c_domain>
	else if [logstash][msgparser][id] == "msgParserId300" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>.*)$" }
			id => "msgParserId300"
			add_field => {
				"ec_theme" => "Password"
				"ec_subject" => "Password"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId301
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Deleted Group:<space>Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information:<space>Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId301" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Deleted[\s]+Group:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId301"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId302
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group:<space>Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information:<space>Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId302" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId302"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId303
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid> Account Name: <username>   Account Domain: <domain> Logon ID: <sessionid> Group:<space>Security ID: <groupid> Group Name: <group> Group Domain:  <remote_domain>    Changed Attributes:  <param>    Additional Information:<space>Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId303" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId303"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_4738_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_4738_Microsoft-Windows-Security-Auditing:04
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Target Account:<space>Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Changed Attributes: <space>  SAM Account Name: <user_fullname>  Display Name:  <param> User Principal Name: <fld21> Home Directory: <directory> Home Drive: <fld22> Script Path: <fld23> Profile Path: <fld24>  User Workstations: <hostid> Password Last Set: <space>-<fld7> Account Expires: {<space>-<space> Primary | <<never> <fld89> Primary | <fld8> Primary } Group ID: <groupid> AllowedToDelegateTo: <fld27> Old UAC Value:  <change_old>   New UAC Value:  <change_new>  { User Account Control: <fld28> 'Password Not Required' - <fld26> 'Don't Expire Password' - <action> | User Account Control:<fld28> 'Password Not Required' - <fld26> |User Account Control:<fld28> 'Don't Expire Password' - <action> } User Parameters: <fld29> SID History: <fld30> Logon Hours: <fld31> Additional Information: <fld32> Privileges <privilege>{	 | , | .} <fld33>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+SAM[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Display[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+User[\s]+Principal[\s]+Name:[\s]+(?<fld21>[^\s]*)[\s]+Home[\s]+Directory:[\s]+(?<directory>[^\s]*)[\s]+Home[\s]+Drive:[\s]+(?<fld22>[^\s]*)[\s]+Script[\s]+Path:[\s]+(?<fld23>[^\s]*)[\s]+Profile[\s]+Path:[\s]+(?<fld24>[^\s]*)[\s]+User[\s]+Workstations:[\s]+(?<hostid>[^\s]*)[\s]+Password[\s]+Last[\s]+Set:[\s]+(?<space>[^\-]*)\-(?<fld7>[^\s]*)[\s]+Account[\s]+Expires:[\s]+((?<space>[^\-]*)\-(?<space>[^\s]*)[\s]+Primary[\s]+|[\s]*<never>[\s]+(?<fld89>[^\s]*)[\s]+Primary[\s]+|[\s]*(?<fld8>[^\s]*)[\s]+Primary[\s]+)[\s]+Group[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+AllowedToDelegateTo:[\s]+(?<fld27>[^\s]*)[\s]+Old[\s]+UAC[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+UAC[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+([\s]*User[\s]+Account[\s]+Control:[\s]+(?<fld28>[^\s]*)[\s]+'Password[\s]+Not[\s]+Required'[\s]+\-[\s]+(?<fld26>[^\s]*)[\s]+'Don't[\s]+Expire[\s]+Password'[\s]+\-[\s]+(?<action>[^\s]*)[\s]+|[\s]*User[\s]+Account[\s]+Control:(?<fld28>[^\s]*)[\s]+'Password[\s]+Not[\s]+Required'[\s]+\-[\s]+(?<fld26>[^\s]*)[\s]+|User[\s]+Account[\s]+Control:(?<fld28>[^\s]*)[\s]+'Don't[\s]+Expire[\s]+Password'[\s]+\-[\s]+(?<action>[^\s]*)[\s]+)[\s]+User[\s]+Parameters:[\s]+(?<fld29>[^\s]*)[\s]+SID[\s]+History:[\s]+(?<fld30>[^\s]*)[\s]+Logon[\s]+Hours:[\s]+(?<fld31>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<fld32>[^\s]*)[\s]+Privileges[\s]+(?<privilege>[^\t\s\s]*)(\t[\s]+|[\s]*,[\s]+|[\s]*\.)[\s]+(?<fld33>.*)$" }
				id => "message-Security_4738_Microsoft-Windows-Security-Auditing:04"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4738_Microsoft-Windows-Security-Auditing:04"
					"[rsa][message][id1]" => "Security_4738_Microsoft-Windows-Security-Auditing:04"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4738_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Target Account:<space>Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Changed Attributes: <space>  SAM Account Name: <user_fullname>  Display Name:  <param> User Principal Name: <fld21> Home Directory: <directory> Home Drive: <fld22> Script Path: <fld23> Profile Path: <fld24>  User Workstations: <hostid> Password Last Set: { <<never> <space> Account | <fld7> Account } Expires: {<space>-<space> Primary | <<never> <fld89> Primary | <fld8> Primary } Group ID: <groupid> AllowedToDelegateTo: <fld27> Old UAC Value:  <change_old>   New UAC Value:  <change_new>  { User Account Control: <fld28> 'Password Not Required' - <fld26> 'Don't Expire Password' - <action> | User Account Control:<fld28> 'Password Not Required' - <fld26> |User Account Control:<fld28> 'Don't Expire Password' - <action> } User Parameters: <fld29> SID History: <fld30> Logon Hours: <fld31> Additional Information: <fld32> Privileges <privilege>{	 | , | .} <fld33>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+SAM[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Display[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+User[\s]+Principal[\s]+Name:[\s]+(?<fld21>[^\s]*)[\s]+Home[\s]+Directory:[\s]+(?<directory>[^\s]*)[\s]+Home[\s]+Drive:[\s]+(?<fld22>[^\s]*)[\s]+Script[\s]+Path:[\s]+(?<fld23>[^\s]*)[\s]+Profile[\s]+Path:[\s]+(?<fld24>[^\s]*)[\s]+User[\s]+Workstations:[\s]+(?<hostid>[^\s]*)[\s]+Password[\s]+Last[\s]+Set:[\s]+([\s]*<never>[\s]+(?<space>[^\s]*)[\s]+Account[\s]+|[\s]*(?<fld7>[^\s]*)[\s]+Account[\s]+)[\s]+Expires:[\s]+((?<space>[^\-]*)\-(?<space>[^\s]*)[\s]+Primary[\s]+|[\s]*<never>[\s]+(?<fld89>[^\s]*)[\s]+Primary[\s]+|[\s]*(?<fld8>[^\s]*)[\s]+Primary[\s]+)[\s]+Group[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+AllowedToDelegateTo:[\s]+(?<fld27>[^\s]*)[\s]+Old[\s]+UAC[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+UAC[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+([\s]*User[\s]+Account[\s]+Control:[\s]+(?<fld28>[^\s]*)[\s]+'Password[\s]+Not[\s]+Required'[\s]+\-[\s]+(?<fld26>[^\s]*)[\s]+'Don't[\s]+Expire[\s]+Password'[\s]+\-[\s]+(?<action>[^\s]*)[\s]+|[\s]*User[\s]+Account[\s]+Control:(?<fld28>[^\s]*)[\s]+'Password[\s]+Not[\s]+Required'[\s]+\-[\s]+(?<fld26>[^\s]*)[\s]+|User[\s]+Account[\s]+Control:(?<fld28>[^\s]*)[\s]+'Don't[\s]+Expire[\s]+Password'[\s]+\-[\s]+(?<action>[^\s]*)[\s]+)[\s]+User[\s]+Parameters:[\s]+(?<fld29>[^\s]*)[\s]+SID[\s]+History:[\s]+(?<fld30>[^\s]*)[\s]+Logon[\s]+Hours:[\s]+(?<fld31>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<fld32>[^\s]*)[\s]+Privileges[\s]+(?<privilege>[^\t\s\s]*)(\t[\s]+|[\s]*,[\s]+|[\s]*\.)[\s]+(?<fld33>.*)$" }
				id => "message-Security_4738_Microsoft-Windows-Security-Auditing:01"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4738_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_4738_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d HH:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4738_Microsoft-Windows-Security-Auditing:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Target Account:<space>Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Changed Attributes: <space>  SAM Account Name: <user_fullname>  Display Name:  <param> User Principal Name: <fld21> Home Directory: <directory> Home Drive: <fld22> Script Path: <fld23> Profile Path: <fld24> User Workstations: <hostname> Password Last Set:<space>-<fld7> Account Expires: { <space>-<space> Primary | <<never> <fld89> Primary | <fld8> Primary } Group ID: <groupid> AllowedToDelegateTo: <fld27> Old UAC Value: <change_old> New UAC Value: <change_new> User Account Control: <fld28> User Parameters: <fld29> SID History: <fld30> Logon Hours: <fld31> Additional Information:<space>Privileges: <privilege>{	 | , | .} <fld33>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+SAM[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Display[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+User[\s]+Principal[\s]+Name:[\s]+(?<fld21>[^\s]*)[\s]+Home[\s]+Directory:[\s]+(?<directory>[^\s]*)[\s]+Home[\s]+Drive:[\s]+(?<fld22>[^\s]*)[\s]+Script[\s]+Path:[\s]+(?<fld23>[^\s]*)[\s]+Profile[\s]+Path:[\s]+(?<fld24>[^\s]*)[\s]+User[\s]+Workstations:[\s]+(?<hostname>[^\s]*)[\s]+Password[\s]+Last[\s]+Set:(?<space>[^\-]*)\-(?<fld7>[^\s]*)[\s]+Account[\s]+Expires:[\s]+([\s]*(?<space>[^\-]*)\-(?<space>[^\s]*)[\s]+Primary[\s]+|[\s]*<never>[\s]+(?<fld89>[^\s]*)[\s]+Primary[\s]+|[\s]*(?<fld8>[^\s]*)[\s]+Primary[\s]+)[\s]+Group[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+AllowedToDelegateTo:[\s]+(?<fld27>[^\s]*)[\s]+Old[\s]+UAC[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+UAC[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+User[\s]+Account[\s]+Control:[\s]+(?<fld28>[^\s]*)[\s]+User[\s]+Parameters:[\s]+(?<fld29>[^\s]*)[\s]+SID[\s]+History:[\s]+(?<fld30>[^\s]*)[\s]+Logon[\s]+Hours:[\s]+(?<fld31>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges:[\s]+(?<privilege>[^\t\s\s]*)(\t[\s]+|[\s]*,[\s]+|[\s]*\.)[\s]+(?<fld33>.*)$" }
				id => "message-Security_4738_Microsoft-Windows-Security-Auditing:02"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4738_Microsoft-Windows-Security-Auditing:02"
					"[rsa][message][id1]" => "Security_4738_Microsoft-Windows-Security-Auditing:02"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4738_Microsoft-Windows-Security-Auditing:03
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Target Account:<space>Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Changed Attributes: <space>  SAM Account Name: <user_fullname>  Display Name:  <param> User Principal Name: <fld21> Home Directory: <directory> Home Drive: <fld22> Script Path: <fld23> Profile Path: <fld24> User Workstations: <hostname> Password Last Set: { <<never> <space> Account | <fld7> Account } Expires: { <space>-<space> Primary | <<never> <fld89> Primary | <fld8> Primary } Group ID: <groupid> AllowedToDelegateTo: <fld27> Old UAC Value: <change_old> New UAC Value: <change_new> User Account Control: <fld28> User Parameters: <fld29> SID History: <fld30> Logon Hours: <fld31> Additional Information:<space>Privileges: <privilege>{	 | , | .} <fld33>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+SAM[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Display[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+User[\s]+Principal[\s]+Name:[\s]+(?<fld21>[^\s]*)[\s]+Home[\s]+Directory:[\s]+(?<directory>[^\s]*)[\s]+Home[\s]+Drive:[\s]+(?<fld22>[^\s]*)[\s]+Script[\s]+Path:[\s]+(?<fld23>[^\s]*)[\s]+Profile[\s]+Path:[\s]+(?<fld24>[^\s]*)[\s]+User[\s]+Workstations:[\s]+(?<hostname>[^\s]*)[\s]+Password[\s]+Last[\s]+Set:[\s]+([\s]*<never>[\s]+(?<space>[^\s]*)[\s]+Account[\s]+|[\s]*(?<fld7>[^\s]*)[\s]+Account[\s]+)[\s]+Expires:[\s]+([\s]*(?<space>[^\-]*)\-(?<space>[^\s]*)[\s]+Primary[\s]+|[\s]*<never>[\s]+(?<fld89>[^\s]*)[\s]+Primary[\s]+|[\s]*(?<fld8>[^\s]*)[\s]+Primary[\s]+)[\s]+Group[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+AllowedToDelegateTo:[\s]+(?<fld27>[^\s]*)[\s]+Old[\s]+UAC[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+UAC[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+User[\s]+Account[\s]+Control:[\s]+(?<fld28>[^\s]*)[\s]+User[\s]+Parameters:[\s]+(?<fld29>[^\s]*)[\s]+SID[\s]+History:[\s]+(?<fld30>[^\s]*)[\s]+Logon[\s]+Hours:[\s]+(?<fld31>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges:[\s]+(?<privilege>[^\t\s\s]*)(\t[\s]+|[\s]*,[\s]+|[\s]*\.)[\s]+(?<fld33>.*)$" }
				id => "message-Security_4738_Microsoft-Windows-Security-Auditing:03"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4738_Microsoft-Windows-Security-Auditing:03"
					"[rsa][message][id1]" => "Security_4738_Microsoft-Windows-Security-Auditing:03"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4738_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Target Account:<space>Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Changed Attributes: <space>  SAM Account Name: <user_fullname>  Display Name:  <param> User Principal Name: <fld21> Home Directory: <directory> Home Drive: <fld22> Script Path: <fld23> Profile Path: <fld24> User Workstations: <hostname> Password Last Set: { <<never> <space> Account | <fld7> Account } Expires: { <space>-<space> Primary | <<never> <fld89> Primary | <fld8> Primary } Group ID: <groupid> AllowedToDelegateTo: <fld27> Old UAC Value: <change_old> New UAC Value: <change_new> User Account Control: <fld28> User Parameters: <fld29> SID History: <fld30> Logon Hours: <fld31> Additional Information:<space>Privileges <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+SAM[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Display[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+User[\s]+Principal[\s]+Name:[\s]+(?<fld21>[^\s]*)[\s]+Home[\s]+Directory:[\s]+(?<directory>[^\s]*)[\s]+Home[\s]+Drive:[\s]+(?<fld22>[^\s]*)[\s]+Script[\s]+Path:[\s]+(?<fld23>[^\s]*)[\s]+Profile[\s]+Path:[\s]+(?<fld24>[^\s]*)[\s]+User[\s]+Workstations:[\s]+(?<hostname>[^\s]*)[\s]+Password[\s]+Last[\s]+Set:[\s]+([\s]*<never>[\s]+(?<space>[^\s]*)[\s]+Account[\s]+|[\s]*(?<fld7>[^\s]*)[\s]+Account[\s]+)[\s]+Expires:[\s]+([\s]*(?<space>[^\-]*)\-(?<space>[^\s]*)[\s]+Primary[\s]+|[\s]*<never>[\s]+(?<fld89>[^\s]*)[\s]+Primary[\s]+|[\s]*(?<fld8>[^\s]*)[\s]+Primary[\s]+)[\s]+Group[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+AllowedToDelegateTo:[\s]+(?<fld27>[^\s]*)[\s]+Old[\s]+UAC[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+UAC[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+User[\s]+Account[\s]+Control:[\s]+(?<fld28>[^\s]*)[\s]+User[\s]+Parameters:[\s]+(?<fld29>[^\s]*)[\s]+SID[\s]+History:[\s]+(?<fld30>[^\s]*)[\s]+Logon[\s]+Hours:[\s]+(?<fld31>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges[\s]+(?<privilege>.*)$" }
				id => "message-Security_4738_Microsoft-Windows-Security-Auditing"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4738_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_4738_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1402020300"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId309
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<fld93>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <fld39>  Account Name:  <event_user>    Account Domain:  <fld40>  Logon ID:  <fld41>  Account That Was Locked Out:<space>Security ID:  <sid>  Account Name:  <username>  Additional Information:<space>Caller Computer Name:{<shost>	<fld42>|<shost>,<fld42>|<shost>}
	else if [logstash][msgparser][id] == "msgParserId309" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld93>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<event_user>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<fld40>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^\s]*)[\s]+Account[\s]+That[\s]+Was[\s]+Locked[\s]+Out:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^C]*)Caller[\s]+Computer[\s]+Name:((?<shost>[^\t]*)\t(?<fld42>.*)|(?<shost>[^,]*),(?<fld42>.*)|(?<shost>.*))$" }
			id => "msgParserId309"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Lockout"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId310
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Computer Account That Was Changed: <space> Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Changed Attributes: <space>  SAM Account Name: <user_fullname>  Display Name:  <param> Additional Information: <space> Privileges <privilege>
	else if [logstash][msgparser][id] == "msgParserId310" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Computer[\s]+Account[\s]+That[\s]+Was[\s]+Changed:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+SAM[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Display[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges[\s]+(?<privilege>.*)$" }
			id => "msgParserId310"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId311
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  New Group:<space>Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Attributes:  <param> Additional Information:<space>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId311" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+New[\s]+Group:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId311"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId312
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group:<space>Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Changed Attributes:  <param> Additional Information:<space>Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId312" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId312"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId313
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Member:<space>Security ID:  <fld39>  Account Name:  <c_username>  Group:<space>Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId313" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Group:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId313"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId314
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Member: <space> Security ID:  <fld39>  Account Name:  <c_username>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId314" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId314"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId315
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId315" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId315"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId316
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Attributes: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId316" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId316"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId317
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Changed Attributes: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId317" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId317"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId318
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid> Group Name:  <group>  Group Domain:  <remote_domain> Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId318" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId318"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId319
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Attributes: <param>    Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId319" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId319"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId320
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Changed Attributes:   <param>    Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId320" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId320"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_4756_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_4756_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Member: <space> Security ID:  <c_sid>  Account Name:{<fld15>cn=<c_username>,ou=<fld16>|<fld15>CN=<c_username>,OU=<fld16>|<fld15>CN=<c_username> <fld16>|<c_username>}  Group: <space> Security ID:  <groupid>  {Account | Group} Name:  <group>  {Account | Group} Domain:  <remote_domain>  Additional Information: <space> Privileges:  <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:((?<fld15>[^c]*)cn=(?<c_username>[^,]*),ou=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^,]*),OU=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^\s]*)[\s]+(?<fld16>[^\s]*)|(?<c_username>[^\s]*))[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+(Account[\s]+|[\s]*Group)[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+(Account[\s]+|[\s]*Group)[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_4756_Microsoft-Windows-Security-Auditing"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4756_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_4756_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1402010301"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4756_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>   Account Domain:  <domain>   Logon ID:  <sessionid>    Member:<space>Security ID:  <c_sid>   Account Name:{<fld15>cn=<c_username>,ou=<fld16>|<fld15>CN=<c_username>,OU=<fld16>|<fld15>CN=<c_username> <fld16>|<c_username>}  Group:<space>Security ID:  <groupid>  {Account Name: | Group Name:}  <group>  {Account Domain: | Group Domain:}  <remote_domain>  Additional Information:<space>Privileges:  <privilege>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:((?<fld15>[^c]*)cn=(?<c_username>[^,]*),ou=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^,]*),OU=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^\s]*)[\s]+(?<fld16>[^\s]*)|(?<c_username>[^\s]*))[\s]+Group:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+(Account[\s]+Name:[\s]+|[\s]*Group[\s]+Name:)[\s]+(?<group>[^\s]*)[\s]+(Account[\s]+Domain:[\s]+|[\s]*Group[\s]+Domain:)[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:(?<space>[^P]*)Privileges:[\s]+(?<privilege>.*)$" }
				id => "message-Security_4756_Microsoft-Windows-Security-Auditing:01"
				add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
					"[event][id]" => "Security_4756_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_4756_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1402010301"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId323
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Member: <space> Security ID:  <c_sid>  Account Name: {<fld15>cn=<c_username>,ou=<fld16>|<fld15>CN=<c_username>,OU=<fld16>|<fld15>CN=<c_username> <fld16>|<c_username>}  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId323" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+((?<fld15>[^c]*)cn=(?<c_username>[^,]*),ou=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^,]*),OU=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^\s]*)[\s]+(?<fld16>[^\s]*)|(?<c_username>[^\s]*))[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId323"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId324
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId324" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId324"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId325
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId325" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId325"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId326
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId326" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId326"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId327
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Member: <space> Security ID:  <fld39>  Account Name:  <c_username>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId327" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId327"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId328
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId328" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId328"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId329
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Target Account: <space> Security ID:  <fld39>  Account Name:  <c_username>  Account Domain:  <c_domain>  Source Account:  <info>  Additional Information: <space> Privileges: <privilege>  SID List:   <fld89>
	else if [logstash][msgparser][id] == "msgParserId329" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Source[\s]+Account:[\s]+(?<info>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+SID[\s]+List:[\s]+(?<fld89>.*)$" }
			id => "msgParserId329"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId330
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Target Account: <space> Security ID:  <fld39>  Account Name:  <c_username>  Account Domain:  <c_domain>  Source Account  <info>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId330" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Source[\s]+Account[\s]+(?<info>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId330"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId331
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Target Account: <space> Security ID:  <fld39>  Account Name:  <c_username>  Account Domain:  <c_domain>
	else if [logstash][msgparser][id] == "msgParserId331" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>.*)$" }
			id => "msgParserId331"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId332
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Target Account: <space> Security ID:  <fld39>  Account Name:  <c_username>  Account Domain:  <c_domain>
	else if [logstash][msgparser][id] == "msgParserId332" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>.*)$" }
			id => "msgParserId332"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId333
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Target Account: <space> Security ID:  <fld39>  Account Name:  <c_username>  Account Domain:  <c_domain>  Additional Information: <space> Privileges <privilege>
	else if [logstash][msgparser][id] == "msgParserId333" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges[\s]+(?<privilege>.*)$" }
			id => "msgParserId333"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId334
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  New Group: <space> Security ID:  <groupid>   Group Name:  <group>  Group Domain:  <remote_domain>  Attributes:   <param>    Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId334" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+New[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId334"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId335
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Member: <space> Security ID:  <c_sid>  Account Name:{<fld15>cn=<c_username>,ou=<fld16>|<fld15>cn=<c_username>,OU=<fld16>|<fld15>CN=<c_username>,OU=<fld16>|<fld15>CN=<c_username>,CN=<fld16>|<fld15>CN=<c_username> <fld16>|<c_username>}  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId335" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:((?<fld15>[^c]*)cn=(?<c_username>[^,]*),ou=(?<fld16>[^\s]*)|(?<fld15>[^c]*)cn=(?<c_username>[^,]*),OU=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^,]*),OU=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^,]*),CN=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^\s]*)[\s]+(?<fld16>[^\s]*)|(?<c_username>[^\s]*))[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId335"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId336
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Member: <space> Security ID:  <c_sid>  Account Name:{<fld15>cn=<c_username>,ou=<fld16>|<fld15>CN=<c_username>,OU=<fld16>|<fld15>CN=<c_username> <fld16>|<c_username>}  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId336" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:((?<fld15>[^c]*)cn=(?<c_username>[^,]*),ou=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^,]*),OU=(?<fld16>[^\s]*)|(?<fld15>[^C]*)CN=(?<c_username>[^\s]*)[\s]+(?<fld16>[^\s]*)|(?<c_username>[^\s]*))[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId336"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId337
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  New Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Attributes:   <param>    Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId337" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+New[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId337"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId338
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Member: <space> Security ID:  <c_sid>  Account Name:  <c_username>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId338" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId338"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId339
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Changed Attributes: <param>
	else if [logstash][msgparser][id] == "msgParserId339" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>.*)$" }
			id => "msgParserId339"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId340
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Change Type: <change_attribute> Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Domain: <space> Domain Name:  <c_domain>  Domain ID:  <domain_id> Changed Attributes:  <param> Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId340" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Change[\s]+Type:[\s]+(?<change_attribute>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Domain:[\s]+(?<space>[^\s]*)[\s]+Domain[\s]+Name:[\s]+(?<c_domain>[^\s]*)[\s]+Domain[\s]+ID:[\s]+(?<domain_id>[^\s]*)[\s]+Changed[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId340"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId341
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    New Computer Account: <space> Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Attributes:   <param>  Additional Information: <space> Privileges  <privilege>
	else if [logstash][msgparser][id] == "msgParserId341" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+New[\s]+Computer[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges[\s]+(?<privilege>.*)$" }
			id => "msgParserId341"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Create"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId342
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name:  <username>     Account Domain:  <domain>   Logon ID:  <sessionid>    Target Computer: <space> Security ID:  <fld39>   Account Name:  <c_username>   Account Domain:  <c_domain>    Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId342" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Computer:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId342"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Delete"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId343
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Account Information: <space> Account Name:  <username>    Supplied Realm Name: <domain> User ID: <sid> Service Information: <space> Service Name: <service> Service ID: <fld60>  Network Information: <space> Client Address: { ::ffff:<saddr> | <saddr> } Client Port: <sport>  Additional Information: <space> Ticket Options: <fld92> Result Code: <resultcode> Ticket Encryption Type: <encryption_type> Pre-Authentication Type: <fld93>  Certificate Information: <space> Certificate Issuer Name:  <cert_issuer>  Certificate Serial Number: <fld94>  Certificate Thumbprint: <fld95> Certificate information <fld50>
	else if [logstash][msgparser][id] == "msgParserId343" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Supplied[\s]+Realm[\s]+Name:[\s]+(?<domain>[^\s]*)[\s]+User[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Service[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Service[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Service[\s]+ID:[\s]+(?<fld60>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Address:[\s]+([\s]*::ffff:(?<saddr>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+Client[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Ticket[\s]+Options:[\s]+(?<fld92>[^\s]*)[\s]+Result[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^\s]*)[\s]+Pre\-Authentication[\s]+Type:[\s]+(?<fld93>[^\s]*)[\s]+Certificate[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Certificate[\s]+Issuer[\s]+Name:[\s]+(?<cert_issuer>[^\s]*)[\s]+Certificate[\s]+Serial[\s]+Number:[\s]+(?<fld94>[^\s]*)[\s]+Certificate[\s]+Thumbprint:[\s]+(?<fld95>[^\s]*)[\s]+Certificate[\s]+information[\s]+(?<fld50>.*)$" }
			id => "msgParserId343"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId344
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Account Information: <space> Account Name:  <username>    Account Domain:  <domain>  Logon GUID:  <sessionid>  Service Information: <space> Service Name:  <service>  Service ID:  <fld60>  Network Information: <space> Client Address:  { ::ffff:<saddr> | <saddr> }  Client Port:  <sport>  Additional Information: <space> Ticket Options: <fld92>   Ticket Encryption Type: <encryption_type> Failure Code:  <resultcode>  Transited Services: <fld43> This event is generated <fld50>
	else if [logstash][msgparser][id] == "msgParserId344" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+GUID:[\s]+(?<sessionid>[^\s]*)[\s]+Service[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Service[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Service[\s]+ID:[\s]+(?<fld60>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Address:[\s]+([\s]*::ffff:(?<saddr>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+Client[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Ticket[\s]+Options:[\s]+(?<fld92>[^\s]*)[\s]+Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^\s]*)[\s]+Failure[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Transited[\s]+Services:[\s]+(?<fld43>[^\s]*)[\s]+This[\s]+event[\s]+is[\s]+generated[\s]+(?<fld50>.*)$" }
			id => "msgParserId344"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId345
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Account Information: <space> Account Name:  <username>    Account Domain:  <domain>  Service Information: <space> Service Name:  <service>  Service ID:  <fld60>  Network Information: <space> Client Address:  { ::ffff:<saddr> | <saddr> }  Client Port:  <sport> Additional Information: <space> Ticket Options: <fld92>   Ticket Encryption Type: <encryption_type> Ticket options and encryption types are defined in RFC 4120.
	else if [logstash][msgparser][id] == "msgParserId345" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Service[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Service[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Service[\s]+ID:[\s]+(?<fld60>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Address:[\s]+([\s]*::ffff:(?<saddr>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+Client[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Ticket[\s]+Options:[\s]+(?<fld92>[^\s]*)[\s]+Ticket[\s]+Encryption[\s]+Type:[\s]+(?<encryption_type>[^\s]*)[\s]+Ticket[\s]+options[\s]+and[\s]+encryption[\s]+types[\s]+are[\s]+defined[\s]+in[\s]+RFC[\s]+4120\.$" }
			id => "msgParserId345"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId346
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Account Information: <space> Security ID:  <sid>  Account Name:  <username>    Service Information: <space> Service Name:  <service>  Network Information: <space> Client Address:  { ::ffff:<saddr> | <saddr> }  Client Port:  <sport>  Additional Information: <space> Ticket Options: <fld92>   {Failure Code:  <resultcode> Pre-Authentication Type: <fld93>|Failure Code:  <resultcode>} Certificate information <fld50>
	else if [logstash][msgparser][id] == "msgParserId346" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Service[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Service[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Address:[\s]+([\s]*::ffff:(?<saddr>[^\s]*)[\s]+|[\s]*(?<saddr>[^\s]*)[\s]+)[\s]+Client[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Ticket[\s]+Options:[\s]+(?<fld92>[^\s]*)[\s]+(Failure[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Pre\-Authentication[\s]+Type:[\s]+(?<fld93>[^\s]*)|Failure[\s]+Code:[\s]+(?<resultcode>[^\s]*))[\s]+Certificate[\s]+information[\s]+(?<fld50>.*)$" }
			id => "msgParserId346"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId347
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Account Information: <space> Account Name:  <username>    Supplied Realm Name: <domain>  Service Information: <space> Service Name: <service>  Network Information: <space> Client Address: <daddr>  Client Port: <dport>  Additional Information: <space> Ticket Options: <fld92>   Failure Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId347" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Supplied[\s]+Realm[\s]+Name:[\s]+(?<domain>[^\s]*)[\s]+Service[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Service[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Client[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Ticket[\s]+Options:[\s]+(?<fld92>[^\s]*)[\s]+Failure[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId347"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId348
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Account Information: <space> Account Name:  <username>    Account Domain:  <domain>  Service Information: <space> Service Name: <service> Network Information: <space> Client Address: <saddr>  Client Port: <sport>  Additional Information: <space> Ticket Options: <fld92>  Failure Code: <resultcode>  Ticket options and failure codes are defined in RFC 4120.
	else if [logstash][msgparser][id] == "msgParserId348" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Account[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Service[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Service[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Client[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Ticket[\s]+Options:[\s]+(?<fld92>[^\s]*)[\s]+Failure[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Ticket[\s]+options[\s]+and[\s]+failure[\s]+codes[\s]+are[\s]+defined[\s]+in[\s]+RFC[\s]+4120\.$" }
			id => "msgParserId348"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId349
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Authentication Package: <authmethod> Account UPN: <fld23> Mapped Name: <fld24>
	else if [logstash][msgparser][id] == "msgParserId349" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Account[\s]+UPN:[\s]+(?<fld23>[^\s]*)[\s]+Mapped[\s]+Name:[\s]+(?<fld24>.*)$" }
			id => "msgParserId349"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId350
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Authentication Package:  <authmethod> Account Name:  <c_username>
	else if [logstash][msgparser][id] == "msgParserId350" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>.*)$" }
			id => "msgParserId350"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_4776_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_4776_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Authentication Package: <authmethod> Logon Account: <username>   Source Workstation: <shost> {Error Code: 0x0	<fld3>|Error Code: 0x0,<fld3>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Logon[\s]+Account:[\s]+(?<username>[^\s]*)[\s]+Source[\s]+Workstation:[\s]+(?<shost>[^\s]*)[\s]+(Error[\s]+Code:[\s]+0x0\t(?<fld3>.*)|Error[\s]+Code:[\s]+0x0,(?<fld3>.*))$" }
				id => "message-Security_4776_Microsoft-Windows-Security-Auditing"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"resultcode" => "0x0"
					"[event][id]" => "Security_4776_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_4776_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1401060000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_4776_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Authentication Package: <authmethod> Logon Account: <username>   Source Workstation: <shost> Error Code: <resultcode>{	 | ,}<fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Logon[\s]+Account:[\s]+(?<username>[^\s]*)[\s]+Source[\s]+Workstation:[\s]+(?<shost>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld3>.*)$" }
				id => "message-Security_4776_Microsoft-Windows-Security-Auditing:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_4776_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_4776_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId353
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Authentication Package: <authmethod> Logon Account: <username>   Source Workstation: <shost> Error Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId353" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Authentication[\s]+Package:[\s]+(?<authmethod>[^\s]*)[\s]+Logon[\s]+Account:[\s]+(?<username>[^\s]*)[\s]+Source[\s]+Workstation:[\s]+(?<shost>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId353"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId354
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject: <space> Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Session: <space> Session Name:  <sessionid1>  Additional Information: <space> Client Name: <shost> Client Address: <saddr> This event is generated <fld50>
	else if [logstash][msgparser][id] == "msgParserId354" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Session:[\s]+(?<space>[^\s]*)[\s]+Session[\s]+Name:[\s]+(?<sessionid1>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+This[\s]+event[\s]+is[\s]+generated[\s]+(?<fld50>.*)$" }
			id => "msgParserId354"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId355
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject: <space> Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Session: <space> Session Name:  <sessionid1>  Additional Information: <space> Client Name: <shost> Client Address: <saddr> This event is generated <fld50>
	else if [logstash][msgparser][id] == "msgParserId355" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Session:[\s]+(?<space>[^\s]*)[\s]+Session[\s]+Name:[\s]+(?<sessionid1>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+This[\s]+event[\s]+is[\s]+generated[\s]+(?<fld50>.*)$" }
			id => "msgParserId355"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId356
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Target Account: <space> Security ID:  <c_sid>  Account Name:  <c_username>  Account Domain:  <c_domain>  Additional Information: <space> Privileges:  <privilege>    Every hour,<fld50>
	else if [logstash][msgparser][id] == "msgParserId356" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+Every[\s]+hour,(?<fld50>.*)$" }
			id => "msgParserId356"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId357
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Target Account: <space> Security ID:  <c_sid>  Account Domain:  <c_domain>  Old Account Name: <change_old>  New Account Name: <change_new>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId357" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Old[\s]+Account[\s]+Name:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Account[\s]+Name:[\s]+(?<change_new>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId357"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId358
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Target Account: <space> Account Name:  <c_username>  Account Domain:  <c_domain>
	else if [logstash][msgparser][id] == "msgParserId358" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>.*)$" }
			id => "msgParserId358"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId359
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Group: <space> Security ID:  <groupid>  Account Name:  <group>  Account Domain:  <remote_domain>  Attributes:  <param>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId359" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId359"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Create"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId360
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Group: <space> Security ID:  <groupid>  Account Name:  <group>  Account Domain:  <remote_domain>  Attributes:  <param>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId360" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId360"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId361
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Member: <space> Security ID:  <c_sid>  Account Name:  <c_username>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId361" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId361"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId362
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Member: <space> Security ID:  <c_sid>  Account Name:  <c_username>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId362" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId362"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId363
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Member: <space> Security ID:  <c_sid>  Account Name:  <c_username>  Group: <space> Security ID:  <groupid>  Account Name:  <group>  Account Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege> <fld50>
	else if [logstash][msgparser][id] == "msgParserId363" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Member:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>[^\s]*)[\s]+(?<fld50>.*)$" }
			id => "msgParserId363"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId364
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Group: <space> Security ID:  <groupid>  Account Name:  <group>  Account Domain:  <remote_domain>  Additional Information: <space> Privileges: <privilege>
	else if [logstash][msgparser][id] == "msgParserId364" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId364"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId365
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Additional Information: <space> Caller Workstation: <hostname>  Provided Account Name (unauthenticated): <c_username>  Status Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId365" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Caller[\s]+Workstation:[\s]+(?<hostname>[^\s]*)[\s]+Provided[\s]+Account[\s]+Name[\s]+\(unauthenticated\):[\s]+(?<c_username>[^\s]*)[\s]+Status[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId365"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId366
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Additional Information: <space> Caller Workstation: <hostname>  Status Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId366" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Caller[\s]+Workstation:[\s]+(?<hostname>[^\s]*)[\s]+Status[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId366"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId367
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Session ID: <sessionid1>
	else if [logstash][msgparser][id] == "msgParserId367" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Session[\s]+ID:[\s]+(?<sessionid1>.*)$" }
			id => "msgParserId367"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId368
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Peer Name: <peer> Protocol Sequence: <protocol> Security Error: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId368" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Peer[\s]+Name:[\s]+(?<peer>[^\s]*)[\s]+Protocol[\s]+Sequence:[\s]+(?<protocol>[^\s]*)[\s]+Security[\s]+Error:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId368"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId369
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject:<space>Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> General Settings: <param>
	else if [logstash][msgparser][id] == "msgParserId369" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+General[\s]+Settings:[\s]+(?<param>.*)$" }
			id => "msgParserId369"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId370
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>. <info>
	else if [logstash][msgparser][id] == "msgParserId370" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\.]*)\.[\s]+(?<info>.*)$" }
			id => "msgParserId370"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId371
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Trust Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId371" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Trust[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId371"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId372
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Trust Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId372" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Trust[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId372"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId373
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Request ID: <id1>
	else if [logstash][msgparser][id] == "msgParserId373" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Request[\s]+ID:[\s]+(?<id1>.*)$" }
			id => "msgParserId373"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId374
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Serial Number: <fld95> Reason: <result>
	else if [logstash][msgparser][id] == "msgParserId374" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Serial[\s]+Number:[\s]+(?<fld95>[^\s]*)[\s]+Reason:[\s]+(?<result>.*)$" }
			id => "msgParserId374"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId375
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Request ID: <id1> Name: <info>
	else if [logstash][msgparser][id] == "msgParserId375" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Request[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Name:[\s]+(?<info>.*)$" }
			id => "msgParserId375"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId376
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Request ID: <id1> Attributes: <param>
	else if [logstash][msgparser][id] == "msgParserId376" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Request[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Attributes:[\s]+(?<param>.*)$" }
			id => "msgParserId376"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId377
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Certificate Database <info>
	else if [logstash][msgparser][id] == "msgParserId377" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Certificate[\s]+Database[\s]+(?<info>.*)$" }
			id => "msgParserId377"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId378
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Request ID: <id1>
	else if [logstash][msgparser][id] == "msgParserId378" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Request[\s]+ID:[\s]+(?<id1>.*)$" }
			id => "msgParserId378"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId379
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Certificate: <info> Request ID: <id1>
	else if [logstash][msgparser][id] == "msgParserId379" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Certificate:[\s]+(?<info>[^\s]*)[\s]+Request[\s]+ID:[\s]+(?<id1>.*)$" }
			id => "msgParserId379"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId380
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Request ID: <id1> Requester: <c_username> Attributes:<param>
	else if [logstash][msgparser][id] == "msgParserId380" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Request[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Requester:[\s]+(?<c_username>[^\s]*)[\s]+Attributes:(?<param>.*)$" }
			id => "msgParserId380"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId381
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Request ID: <id1> Requester: <c_username> Attributes: <param> Disposition: <disposition> SKI: <info>
	else if [logstash][msgparser][id] == "msgParserId381" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Request[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Requester:[\s]+(?<c_username>[^\s]*)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Disposition:[\s]+(?<disposition>[^\s]*)[\s]+SKI:[\s]+(?<info>.*)$" }
			id => "msgParserId381"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId382
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Request ID: <id1> Requester: <c_username> <info>
	else if [logstash][msgparser][id] == "msgParserId382" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Request[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Requester:[\s]+(?<c_username>[^\s]*)[\s]+(?<info>.*)$" }
			id => "msgParserId382"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId383
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Number of Elements: <dclass_counter1> Policy ID: <policy_id>
	else if [logstash][msgparser][id] == "msgParserId383" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Number[\s]+of[\s]+Elements:[\s]+(?<dclass_counter1>[^\s]*)[\s]+Policy[\s]+ID:[\s]+(?<policy_id>.*)$" }
			id => "msgParserId383"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Create"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId384
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject<space> : <space> Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Process: <space> Process ID: <process_id>  Process Name: <process>  Event Source:  <space> Source Name: <application> Event Source ID:<id1>
	else if [logstash][msgparser][id] == "msgParserId384" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject(?<space>[^\s]*)[\s]+:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Process:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Event[\s]+Source:[\s]+(?<space>[^\s]*)[\s]+Source[\s]+Name:[\s]+(?<application>[^\s]*)[\s]+Event[\s]+Source[\s]+ID:(?<id1>.*)$" }
			id => "msgParserId384"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId385
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject<space>  Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Process: <space> Process ID: <process_id>  Process Name: <process>  Event Source:  <space> Source Name: <application> Event Source ID:<id1>
	else if [logstash][msgparser][id] == "msgParserId385" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Process:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Event[\s]+Source:[\s]+(?<space>[^\s]*)[\s]+Source[\s]+Name:[\s]+(?<application>[^\s]*)[\s]+Event[\s]+Source[\s]+ID:(?<id1>.*)$" }
			id => "msgParserId385"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId386
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Value of CrashOnAuditFail: <change_new>
	else if [logstash][msgparser][id] == "msgParserId386" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Value[\s]+of[\s]+CrashOnAuditFail:[\s]+(?<change_new>.*)$" }
			id => "msgParserId386"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId387
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Object: <space> Object Server: <obj_server>  Object Type: <obj_type>  Object Name: <obj_name>  Handle ID: <id1>  Process Information: <space> Process ID: <process_id>  Process Name: <process>  Auditing Settings: <space> Original Security Descriptor: <change_old>  New Security Descriptor:  <change_new>
	else if [logstash][msgparser][id] == "msgParserId387" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Handle[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Auditing[\s]+Settings:[\s]+(?<space>[^\s]*)[\s]+Original[\s]+Security[\s]+Descriptor:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Security[\s]+Descriptor:[\s]+(?<change_new>.*)$" }
			id => "msgParserId387"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId388
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Special Groups: <group>
	else if [logstash][msgparser][id] == "msgParserId388" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Special[\s]+Groups:[\s]+(?<group>.*)$" }
			id => "msgParserId388"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId389
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Old Blocked Ordinals:<change_old> New Blocked Ordinals:<change_new>
	else if [logstash][msgparser][id] == "msgParserId389" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Old[\s]+Blocked[\s]+Ordinals:(?<change_old>[^\s]*)[\s]+New[\s]+Blocked[\s]+Ordinals:(?<change_new>.*)$" }
			id => "msgParserId389"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId390
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Group Policy Setting: <space> Ignore Default Settings<space>  Old Value: <fld96>  New Value:  <fld66>  Group Policy Setting: <space> Ignore Local Settings<space>  Old Value: <fld67>  New Value: <fld68> Old Blocked Ordinals: <change_old> New Blocked Ordinals: <change_new>
	else if [logstash][msgparser][id] == "msgParserId390" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Group[\s]+Policy[\s]+Setting:[\s]+(?<space>[^\s]*)[\s]+Ignore[\s]+Default[\s]+Settings(?<space>[^\s]*)[\s]+Old[\s]+Value:[\s]+(?<fld96>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<fld66>[^\s]*)[\s]+Group[\s]+Policy[\s]+Setting:[\s]+(?<space>[^\s]*)[\s]+Ignore[\s]+Local[\s]+Settings(?<space>[^\s]*)[\s]+Old[\s]+Value:[\s]+(?<fld67>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<fld68>[^\s]*)[\s]+Old[\s]+Blocked[\s]+Ordinals:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Blocked[\s]+Ordinals:[\s]+(?<change_new>.*)$" }
			id => "msgParserId390"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId391
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  Policy For Account: <space> Security ID:  <c_sid> Policy Change Details: <space> Category: <audit_class>  Subcategory: <fld69>  Subcategory GUID: <fld70>  Changes: <policy_value>
	else if [logstash][msgparser][id] == "msgParserId391" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Policy[\s]+For[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Policy[\s]+Change[\s]+Details:[\s]+(?<space>[^\s]*)[\s]+Category:[\s]+(?<audit_class>[^\s]*)[\s]+Subcategory:[\s]+(?<fld69>[^\s]*)[\s]+Subcategory[\s]+GUID:[\s]+(?<fld70>[^\s]*)[\s]+Changes:[\s]+(?<policy_value>.*)$" }
			id => "msgParserId391"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId392
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> .  <info>
	else if [logstash][msgparser][id] == "msgParserId392" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+\.[\s]+(?<info>.*)$" }
			id => "msgParserId392"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId393
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> {	 | ,}<fld10>
	else if [logstash][msgparser][id] == "msgParserId393" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+(\t[\s]+|[\s]*,)(?<fld10>.*)$" }
			id => "msgParserId393"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId394
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Session ID: <sessionid> Object:  <obj_name> Attribute: <param> Type of change: <fld76> New Value: <fld77> USN: <fld78> Status Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId394" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Session[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+(?<obj_name>[^\s]*)[\s]+Attribute:[\s]+(?<param>[^\s]*)[\s]+Type[\s]+of[\s]+change:[\s]+(?<fld76>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<fld77>[^\s]*)[\s]+USN:[\s]+(?<fld78>[^\s]*)[\s]+Status[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId394"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId395
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>.  <info>
	else if [logstash][msgparser][id] == "msgParserId395" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\.]*)\.[\s]+(?<info>.*)$" }
			id => "msgParserId395"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId396
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Group Policy Applied: <fld1> Profile Used: <profile> Operational mode: <fld78> Allow Remote Administration: <fld77> Allow Unicast Responses to Multicast/Broadcast Traffic: <fld79> <info>
	else if [logstash][msgparser][id] == "msgParserId396" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Group[\s]+Policy[\s]+Applied:[\s]+(?<fld1>[^\s]*)[\s]+Profile[\s]+Used:[\s]+(?<profile>[^\s]*)[\s]+Operational[\s]+mode:[\s]+(?<fld78>[^\s]*)[\s]+Allow[\s]+Remote[\s]+Administration:[\s]+(?<fld77>[^\s]*)[\s]+Allow[\s]+Unicast[\s]+Responses[\s]+to[\s]+Multicast/Broadcast[\s]+Traffic:[\s]+(?<fld79>[^\s]*)[\s]+(?<info>.*)$" }
			id => "msgParserId396"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId397
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile used: <profile>  Rule:<space> Rule ID: <rule>  Rule Name: <rulename>
	else if [logstash][msgparser][id] == "msgParserId397" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+used:[\s]+(?<profile>[^\s]*)[\s]+Rule:(?<space>[^\s]*)[\s]+Rule[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Rule[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId397"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId398
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Added Rule:<space> Rule ID: <rule>  Rule Name: <rulename>
	else if [logstash][msgparser][id] == "msgParserId398" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Added[\s]+Rule:(?<space>[^\s]*)[\s]+Rule[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Rule[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId398"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId399
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Modified Rule:<space> Rule ID: <rule>  Rule Name: <rulename>
	else if [logstash][msgparser][id] == "msgParserId399" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Modified[\s]+Rule:(?<space>[^\s]*)[\s]+Rule[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Rule[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId399"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId400
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Deleted Rule: <space> Rule ID: <rule>  Rule Name: <rulename>
	else if [logstash][msgparser][id] == "msgParserId400" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Deleted[\s]+Rule:[\s]+(?<space>[^\s]*)[\s]+Rule[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Rule[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId400"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId401
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Profile That Was Changed: <profile>  New Setting: <space> Type: <change_new>
	else if [logstash][msgparser][id] == "msgParserId401" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+That[\s]+Was[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+New[\s]+Setting:[\s]+(?<space>[^\s]*)[\s]+Type:[\s]+(?<change_new>.*)$" }
			id => "msgParserId401"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId402
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile: <profile>  Ignored Rule: <space> ID: <rule>  Name: <rulename>
	else if [logstash][msgparser][id] == "msgParserId402" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile:[\s]+(?<profile>[^\s]*)[\s]+Ignored[\s]+Rule:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId402"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId403
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile: <profile>  Partially Ignored Rule: <space> ID: <rule>  Name: <rulename>
	else if [logstash][msgparser][id] == "msgParserId403" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile:[\s]+(?<profile>[^\s]*)[\s]+Partially[\s]+Ignored[\s]+Rule:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId403"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId404
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile: <profile>  Reason for Rejection:  <result>  Rule: <space> ID: <rule>  Name: <rulename>
	else if [logstash][msgparser][id] == "msgParserId404" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile:[\s]+(?<profile>[^\s]*)[\s]+Reason[\s]+for[\s]+Rejection:[\s]+(?<result>[^\s]*)[\s]+Rule:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId404"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId405
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   New Active Profile: <profile>
	else if [logstash][msgparser][id] == "msgParserId405" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Active[\s]+Profile:[\s]+(?<profile>.*)$" }
			id => "msgParserId405"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId406
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Rule Information: <space> ID: <rule>  Name: <rulename>  Error Information: <space> Reason: <result>
	else if [logstash][msgparser][id] == "msgParserId406" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Rule[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Name:[\s]+(?<rulename>[^\s]*)[\s]+Error[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>.*)$" }
			id => "msgParserId406"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId407
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Rule Information: <space> ID: <rule>  Name: <rulename>  Error Information: <space> Error: <fld15>  Reason: <result>
	else if [logstash][msgparser][id] == "msgParserId407" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Rule[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Name:[\s]+(?<rulename>[^\s]*)[\s]+Error[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Error:[\s]+(?<fld15>[^\s]*)[\s]+Reason:[\s]+(?<result>.*)$" }
			id => "msgParserId407"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId408
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Remote Network Address: <saddr> Inbound SA SPI:  <fld13>
	else if [logstash][msgparser][id] == "msgParserId408" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Remote[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Inbound[\s]+SA[\s]+SPI:[\s]+(?<fld13>.*)$" }
			id => "msgParserId408"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId409
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Remote Network Address: <saddr> Inbound SA SPI:  <fld13>
	else if [logstash][msgparser][id] == "msgParserId409" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Remote[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Inbound[\s]+SA[\s]+SPI:[\s]+(?<fld13>.*)$" }
			id => "msgParserId409"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId410
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<fld93>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <fld39>  Account Name:  <event_user>    Account Domain:  <fld40>  Logon ID:  <fld41>  Logon GUID: <fld42>  New Logon: <space> Security ID:  <sid>  Account Name:  <username>  Account Domain:  <domain>  Logon ID:  <sessionid>  Logon GUID: <fld13>  Special Groups Assigned: <group>
	else if [logstash][msgparser][id] == "msgParserId410" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld93>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<fld39>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<event_user>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<fld40>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<fld41>[^\s]*)[\s]+Logon[\s]+GUID:[\s]+(?<fld42>[^\s]*)[\s]+New[\s]+Logon:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Logon[\s]+GUID:[\s]+(?<fld13>[^\s]*)[\s]+Special[\s]+Groups[\s]+Assigned:[\s]+(?<group>.*)$" }
			id => "msgParserId410"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId411
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Local Network Address: <daddr> Remote Network Address: <saddr> Keying Module Name: <fld38>
	else if [logstash][msgparser][id] == "msgParserId411" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Remote[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Name:[\s]+(?<fld38>.*)$" }
			id => "msgParserId411"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId412
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Main Mode Local Endpoint:<space> Principal Name:  <shost>  Network Address: <saddr>  Keying Module Port: <sport>  Main Mode Remote Endpoint:<space> Principal Name: <dhost>  Network Address: <daddr>  Keying Module Port: <dport>  Main Mode Cryptographic Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId412" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Main[\s]+Mode[\s]+Local[\s]+Endpoint:(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Main[\s]+Mode[\s]+Remote[\s]+Endpoint:(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Main[\s]+Mode[\s]+Cryptographic[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId412"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId413
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Local Endpoint:<space> Principal Name:  <shost>  Network Address: <saddr>  Keying Module Port: <sport>  Local Certificate:<space> SHA Thumbprint: <fld41>  Issuing CA:  <s_certauth>  Root CA:  <fld42>  Remote Endpoint:<space> Principal Name:  <dhost>  Network Address: <daddr>  Keying Module Port: <dport>  Remote Certificate:<space> SHA Thumbprint:  <fld43>  Issuing CA:  <d_certauth>  Root CA:  <fld44> Cryptographic Information: <info>
	else if [logstash][msgparser][id] == "msgParserId413" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Local[\s]+Certificate:(?<space>[^\s]*)[\s]+SHA[\s]+Thumbprint:[\s]+(?<fld41>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<s_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld42>[^\s]*)[\s]+Remote[\s]+Endpoint:(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Remote[\s]+Certificate:(?<space>[^\s]*)[\s]+SHA[\s]+Thumbprint:[\s]+(?<fld43>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<d_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld44>[^\s]*)[\s]+Cryptographic[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId413"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId414
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Local Endpoint:<space> Principal Name:  <shost>  Network Address: <saddr>  Keying Module Port: <sport>  Local Certificate: <space> SHA Thumbprint: <fld41>  Issuing CA:  <s_certauth>  Root CA:  <fld42>  Remote Endpoint:<space> Principal Name:  <dhost>  Network Address: <daddr>  Keying Module Port: <dport>  Remote Certificate: <space> SHA Thumbprint:  <fld43>  Issuing CA:  <d_certauth>  Root CA:  <fld44> Cryptographic Information: <info>
	else if [logstash][msgparser][id] == "msgParserId414" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Local[\s]+Certificate:[\s]+(?<space>[^\s]*)[\s]+SHA[\s]+Thumbprint:[\s]+(?<fld41>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<s_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld42>[^\s]*)[\s]+Remote[\s]+Endpoint:(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Remote[\s]+Certificate:[\s]+(?<space>[^\s]*)[\s]+SHA[\s]+Thumbprint:[\s]+(?<fld43>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<d_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld44>[^\s]*)[\s]+Cryptographic[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId414"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId415
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Local Endpoint: <space> Principal Name:  <shost>  Network Address: <saddr>  Keying Module Port: <sport>  Local Certificate: <space> SHA Thumbprint: <fld41>  Issuing CA:  <s_certauth>  Root CA:  <fld42>  Remote Endpoint: <space> Principal Name:  <dhost>  Network Address: <daddr>  Keying Module Port: <dport>  Remote Certificate: <space> SHA Thumbprint:  <fld43>  Issuing CA:  <d_certauth>  Root CA:  <fld44> Additional Information: <info> Failure Reason:  <result>  State:   <disposition>
	else if [logstash][msgparser][id] == "msgParserId415" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:[\s]+(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Local[\s]+Certificate:[\s]+(?<space>[^\s]*)[\s]+SHA[\s]+Thumbprint:[\s]+(?<fld41>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<s_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld42>[^\s]*)[\s]+Remote[\s]+Endpoint:[\s]+(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Remote[\s]+Certificate:[\s]+(?<space>[^\s]*)[\s]+SHA[\s]+Thumbprint:[\s]+(?<fld43>[^\s]*)[\s]+Issuing[\s]+CA:[\s]+(?<d_certauth>[^\s]*)[\s]+Root[\s]+CA:[\s]+(?<fld44>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<info>[^\s]*)[\s]+Failure[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+State:[\s]+(?<disposition>.*)$" }
			id => "msgParserId415"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId416
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Local Endpoint: <space> Principal Name:  <shost>  Network Address: <saddr>  Keying Module Port: <sport>  Remote Endpoint: <space> Principal Name:  <dhost>  Network Address: <daddr>  Keying Module Port: <dport>  Additional Information:  <info> Failure Reason:  <result>  State:   <disposition>
	else if [logstash][msgparser][id] == "msgParserId416" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:[\s]+(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Remote[\s]+Endpoint:[\s]+(?<space>[^\s]*)[\s]+Principal[\s]+Name:[\s]+(?<dhost>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Keying[\s]+Module[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<info>[^\s]*)[\s]+Failure[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+State:[\s]+(?<disposition>.*)$" }
			id => "msgParserId416"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId417
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Transaction Information: <space> RM Transaction ID: <id1>  New State: <fld78>  Resource Manager: <fld79>  Process Information: <space> Process ID:  <process_id>  Process Name:  <process>
	else if [logstash][msgparser][id] == "msgParserId417" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Transaction[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+RM[\s]+Transaction[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+New[\s]+State:[\s]+(?<fld78>[^\s]*)[\s]+Resource[\s]+Manager:[\s]+(?<fld79>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>.*)$" }
			id => "msgParserId417"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId418
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Error Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId418" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId418"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId419
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Profiles:  <profile> Application:  <process>
	else if [logstash][msgparser][id] == "msgParserId419" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profiles:[\s]+(?<profile>[^\s]*)[\s]+Application:[\s]+(?<process>.*)$" }
			id => "msgParserId419"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId420
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   File Name: <filename>
	else if [logstash][msgparser][id] == "msgParserId420" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+File[\s]+Name:[\s]+(?<filename>.*)$" }
			id => "msgParserId420"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId421
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object: <space> Key Name:  <obj_name>  Virtual Key Name: <fld18> Process Information: <space> Process ID:  <process_id>  Process Name:  <process>
	else if [logstash][msgparser][id] == "msgParserId421" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+Key[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Virtual[\s]+Key[\s]+Name:[\s]+(?<fld18>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>.*)$" }
			id => "msgParserId421"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId422
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed:  <profile>  Added Authentication Set: <space> ID:  <fld79>  Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId422" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Added[\s]+Authentication[\s]+Set:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<fld79>[^\s]*)[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId422"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId423
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed:  <profile>  Modified Authentication Set: <space> ID:  <fld79>  Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId423" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Modified[\s]+Authentication[\s]+Set:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<fld79>[^\s]*)[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId423"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId424
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed:  <profile>  Deleted Authentication Set: <space> ID:  <fld79>  Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId424" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Deleted[\s]+Authentication[\s]+Set:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<fld79>[^\s]*)[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId424"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId425
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed:  <profile>  Added Connection Security Rule: <space> ID:   <rule>  Name:   <rulename>
	else if [logstash][msgparser][id] == "msgParserId425" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Added[\s]+Connection[\s]+Security[\s]+Rule:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId425"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId426
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Modified Connection Security Rule: <space> ID:   <rule>  Name:   <rulename>
	else if [logstash][msgparser][id] == "msgParserId426" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Modified[\s]+Connection[\s]+Security[\s]+Rule:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId426"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId427
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Deleted Connection Security Rule: <space> ID:   <rule>  Name:   <rulename>
	else if [logstash][msgparser][id] == "msgParserId427" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Deleted[\s]+Connection[\s]+Security[\s]+Rule:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<rule>[^\s]*)[\s]+Name:[\s]+(?<rulename>.*)$" }
			id => "msgParserId427"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId428
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Added Crypto Set: <space> ID:  <fld79>  Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId428" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Added[\s]+Crypto[\s]+Set:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<fld79>[^\s]*)[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId428"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId429
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Modified Crypto Set: <space> ID:  <fld79>  Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId429" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Modified[\s]+Crypto[\s]+Set:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<fld79>[^\s]*)[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId429"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId430
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Deleted Crypto Set: <space> ID:  <fld79>  Name: <obj_name>
	else if [logstash][msgparser][id] == "msgParserId430" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Deleted[\s]+Crypto[\s]+Set:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<fld79>[^\s]*)[\s]+Name:[\s]+(?<obj_name>.*)$" }
			id => "msgParserId430"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId431
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Profile Changed: <profile>  Deleted SA: <space> ID: <fld13>  Name: <fld14>
	else if [logstash][msgparser][id] == "msgParserId431" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Profile[\s]+Changed:[\s]+(?<profile>[^\s]*)[\s]+Deleted[\s]+SA:[\s]+(?<space>[^\s]*)[\s]+ID:[\s]+(?<fld13>[^\s]*)[\s]+Name:[\s]+(?<fld14>.*)$" }
			id => "msgParserId431"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId432
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Error Code:  <resultcode> Caller Process Name:  <process> Process Id:  <process_id> Publisher:  <fld81>
	else if [logstash][msgparser][id] == "msgParserId432" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Caller[\s]+Process[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Process[\s]+Id:[\s]+(?<process_id>[^\s]*)[\s]+Publisher:[\s]+(?<fld81>.*)$" }
			id => "msgParserId432"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId433
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:   <sid>  Account Name:   <username>    Account Domain:  <domain>  Logon ID:   <sessionid>  Object: <space> File Name:   <filename>  Virtual File Name: <fld82>  Process Information: <space> Process ID:   <process_id>  Process Name:   <process>
	else if [logstash][msgparser][id] == "msgParserId433" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+File[\s]+Name:[\s]+(?<filename>[^\s]*)[\s]+Virtual[\s]+File[\s]+Name:[\s]+(?<fld82>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Process[\s]+Name:[\s]+(?<process>.*)$" }
			id => "msgParserId433"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId434
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Module:  <obj_name>  Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId434" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Module:[\s]+(?<obj_name>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId434"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId435
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Cryptographic Parameters:  <param> Failure Information: <space> Reason:   <result>  Return Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId435" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Cryptographic[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Failure[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId435"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId436
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Cryptographic Parameters:  <param> Key File Operation Information: <space> File Path: <directory>  Operation: <action> Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId436" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Cryptographic[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Key[\s]+File[\s]+Operation[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+File[\s]+Path:[\s]+(?<directory>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId436"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId437
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Cryptographic Parameters:  <param> Additional Information: <space> Operation: <action> Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId437" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Cryptographic[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId437"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId438
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Cryptographic Parameters: <param>  Failure Information: <space> Reason: <result>  Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId438" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Cryptographic[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Failure[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Reason:[\s]+(?<result>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId438"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId439
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Cryptographic Parameters: <param>  Cryptographic Operation: <space> Operation: <action> Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId439" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Cryptographic[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Cryptographic[\s]+Operation:[\s]+(?<space>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId439"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId440
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Module: <obj_name>  Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId440" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Module:[\s]+(?<obj_name>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId440"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId441
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Cryptographic Provider: <space> Name: <fld83>  Module: <obj_name>  Operation: <action>  Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId441" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Cryptographic[\s]+Provider:[\s]+(?<space>[^\s]*)[\s]+Name:[\s]+(?<fld83>[^\s]*)[\s]+Module:[\s]+(?<obj_name>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId441"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId442
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Configuration Parameters:  <param> Operation: <action> Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId442" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Configuration[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId442"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId443
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Configuration Parameters:  <param>  Change Information: <space> Old Value: <change_old>  New Value: <change_new>  Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId443" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Configuration[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Change[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Old[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId443"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId444
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Configuration Parameters:  <param>  Operation: <action> Return Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId444" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Configuration[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId444"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId445
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Configuration Parameters:  <param>  Change Information: <space> Old Value: <change_old>  New Value: <change_new> Return Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId445" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Configuration[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Change[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Old[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId445"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId446
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Configuration Parameters:  <param>  Operation:  <action>  Return Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId446" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Configuration[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId446"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId447
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Configuration Parameters:  <param> Operation:  <action>  Return Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId447" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Configuration[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId447"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId448
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Configuration Parameters:  <param>  Change Information: <space> Old Value: <change_old>  New Value: <change_new>  Return Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId448" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Configuration[\s]+Parameters:[\s]+(?<param>[^\s]*)[\s]+Change[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Old[\s]+Value:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<change_new>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId448"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId449
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>  Account Domain:  <domain>  Logon ID:  <sessionid>  Directory Service: <space> Name: <fld85>  Type: <fld86>   Object: <space> DN: <obj_name>  GUID: <sessionid1>  Class: <obj_type>   Attribute:<space>LDAP Display Name:<change_attribute>Syntax (OID): <fld89>  Value: <param>   Operation: <space> Type:<action>   Correlation ID: <fld87>  Application Correlation ID: <fld88>
	else if [logstash][msgparser][id] == "msgParserId449" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Directory[\s]+Service:[\s]+(?<space>[^\s]*)[\s]+Name:[\s]+(?<fld85>[^\s]*)[\s]+Type:[\s]+(?<fld86>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+DN:[\s]+(?<obj_name>[^\s]*)[\s]+GUID:[\s]+(?<sessionid1>[^\s]*)[\s]+Class:[\s]+(?<obj_type>[^\s]*)[\s]+Attribute:(?<space>[^L]*)LDAP[\s]+Display[\s]+Name:(?<change_attribute>[^S]*)Syntax[\s]+\(OID\):[\s]+(?<fld89>[^\s]*)[\s]+Value:[\s]+(?<param>[^\s]*)[\s]+Operation:[\s]+(?<space>[^\s]*)[\s]+Type:(?<action>[^\s]*)[\s]+Correlation[\s]+ID:[\s]+(?<fld87>[^\s]*)[\s]+Application[\s]+Correlation[\s]+ID:[\s]+(?<fld88>.*)$" }
			id => "msgParserId449"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"change_new" => "%{param}"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId450
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>  Account Domain:  <domain>  Logon ID:  <sessionid>   Directory Service: <space> Name: <fld85>  Type: <fld86>   Object: <space> DN: <obj_name>  GUID: <fld13>  Class: <obj_type>   Operation:  <info>
	else if [logstash][msgparser][id] == "msgParserId450" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Directory[\s]+Service:[\s]+(?<space>[^\s]*)[\s]+Name:[\s]+(?<fld85>[^\s]*)[\s]+Type:[\s]+(?<fld86>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+DN:[\s]+(?<obj_name>[^\s]*)[\s]+GUID:[\s]+(?<fld13>[^\s]*)[\s]+Class:[\s]+(?<obj_type>[^\s]*)[\s]+Operation:[\s]+(?<info>.*)$" }
			id => "msgParserId450"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId451
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>  Account Domain:  <domain>  Logon ID:  <sessionid>   Directory Service: <space> Name:  <fld85>  Type:  <fld86>   Object: <space> Old DN:  <change_old>  New DN: <change_new>  GUID:  <fld13>  Class:  <obj_type>   Operation:  <info>
	else if [logstash][msgparser][id] == "msgParserId451" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Directory[\s]+Service:[\s]+(?<space>[^\s]*)[\s]+Name:[\s]+(?<fld85>[^\s]*)[\s]+Type:[\s]+(?<fld86>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+Old[\s]+DN:[\s]+(?<change_old>[^\s]*)[\s]+New[\s]+DN:[\s]+(?<change_new>[^\s]*)[\s]+GUID:[\s]+(?<fld13>[^\s]*)[\s]+Class:[\s]+(?<obj_type>[^\s]*)[\s]+Operation:[\s]+(?<info>.*)$" }
			id => "msgParserId451"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"change_attribute" => "%{fld86}"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_5140_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_5140_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Network Information: <space> Object Type: <obj_type> Source Address:  <saddr>  Source Port:  <sport>  Share Information: <space> Share Name: <obj_name> Share Path: <directory> Access Request Information: <space> Access Mask: <fld52> Accesses: <accesses>{	 | , | .} <fld53>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Source[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Share[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Share[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Share[\s]+Path:[\s]+(?<directory>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\t\s\s]*)(\t[\s]+|[\s]*,[\s]+|[\s]*\.)[\s]+(?<fld53>.*)$" }
				id => "message-Security_5140_Microsoft-Windows-Security-Auditing:01"
				add_field => {
					"[event][id]" => "Security_5140_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_5140_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_5140_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Network Information: <space> Source Address:  <saddr>  Source Port:  <sport>   Share Name:   <obj_name>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Source[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Share[\s]+Name:[\s]+(?<obj_name>.*)$" }
				id => "message-Security_5140_Microsoft-Windows-Security-Auditing"
				add_field => {
					"[event][id]" => "Security_5140_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_5140_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1401010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId454
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>  Account Domain:  <domain>  Logon ID:  <sessionid>   Directory Service: <space> Name: <fld85>  Type: <fld86>   Object: <space> DN: <obj_name>  GUID: <fld13>  Class: <obj_type>   Operation:  <action>  Correlation ID: <fld87>  Application Correlation ID: <fld88>
	else if [logstash][msgparser][id] == "msgParserId454" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Directory[\s]+Service:[\s]+(?<space>[^\s]*)[\s]+Name:[\s]+(?<fld85>[^\s]*)[\s]+Type:[\s]+(?<fld86>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+DN:[\s]+(?<obj_name>[^\s]*)[\s]+GUID:[\s]+(?<fld13>[^\s]*)[\s]+Class:[\s]+(?<obj_type>[^\s]*)[\s]+Operation:[\s]+(?<action>[^\s]*)[\s]+Correlation[\s]+ID:[\s]+(?<fld87>[^\s]*)[\s]+Application[\s]+Correlation[\s]+ID:[\s]+(?<fld88>.*)$" }
			id => "msgParserId454"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId455
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Application Information: <space> Process ID:  <process_id>  Application Name: <process>  Network Information: <space> Direction:  <direction>  Source Address:  <saddr>  Source Port:  <sport>  Destination Address: <daddr>  Destination Port:  <dport>  Protocol:  <protocol>  Filter Information: <filter>{	 | ,}<fld10>
	else if [logstash][msgparser][id] == "msgParserId455" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Application[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Application[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Direction:[\s]+(?<direction>[^\s]*)[\s]+Source[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Destination[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Destination[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Protocol:[\s]+(?<protocol>[^\s]*)[\s]+Filter[\s]+Information:[\s]+(?<filter>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld10>.*)$" }
			id => "msgParserId455"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId456
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Application Information: <space> Process ID:  <process_id>  Application Name: <process>  Network Information: <space> Source Address:  <saddr>  Source Port:  <sport>  Protocol:  <protocol>  Filter Information: <filter>{	 | ,}<fld10>
	else if [logstash][msgparser][id] == "msgParserId456" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Application[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Application[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Source[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Protocol:[\s]+(?<protocol>[^\s]*)[\s]+Filter[\s]+Information:[\s]+(?<filter>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld10>.*)$" }
			id => "msgParserId456"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId457
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid> This <fld50>
	else if [logstash][msgparser][id] == "msgParserId457" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+This[\s]+(?<fld50>.*)$" }
			id => "msgParserId457"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId458
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  This <fld50>
	else if [logstash][msgparser][id] == "msgParserId458" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+This[\s]+(?<fld50>.*)$" }
			id => "msgParserId458"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId459
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Credential Delegation Information: <space> Security Package: <obj_type>  User's UPN: <fld89>  Target Server: <dhost>  Credential Type: <fld92>
	else if [logstash][msgparser][id] == "msgParserId459" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Credential[\s]+Delegation[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+Package:[\s]+(?<obj_type>[^\s]*)[\s]+User's[\s]+UPN:[\s]+(?<fld89>[^\s]*)[\s]+Target[\s]+Server:[\s]+(?<dhost>[^\s]*)[\s]+Credential[\s]+Type:[\s]+(?<fld92>.*)$" }
			id => "msgParserId459"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId460
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> .<info>
	else if [logstash][msgparser][id] == "msgParserId460" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+\.(?<info>.*)$" }
			id => "msgParserId460"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId461
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Subject:<space>Security ID:  <sid>  Account Name:  <username>    Process Information: <space> Process ID: <process_id>  Provider Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId461" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Provider[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId461"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId462
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Subject:<space>Security ID:  <sid>  Account Name:  <username>    Process Information: <space> Process ID: <process_id>  Provider Information:<info>
	else if [logstash][msgparser][id] == "msgParserId462" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Provider[\s]+Information:(?<info>.*)$" }
			id => "msgParserId462"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId463
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Subject:<space>Security ID:  <sid>  Account Name:  <username>    Process Information: <space> Process ID: <process_id>  Change Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId463" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+Change[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId463"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId464
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Local Endpoint: <space> Network Address: <daddr>  Network Address mask: <fld13>  Port:   <dport>  Tunnel Endpoint:  <fld15>  Remote Endpoint: <space> Network Address: <saddr>  Network Address Mask: <fld14>  Port:   <sport>  Private Address:  <stransaddr>  Tunnel Endpoint:  <fld16>   Protocol:  <protocol>  Keying Module Name: <fld38>  Cryptographic Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId464" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:[\s]+(?<space>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Network[\s]+Address[\s]+mask:[\s]+(?<fld13>[^\s]*)[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Tunnel[\s]+Endpoint:[\s]+(?<fld15>[^\s]*)[\s]+Remote[\s]+Endpoint:[\s]+(?<space>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Network[\s]+Address[\s]+Mask:[\s]+(?<fld14>[^\s]*)[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Private[\s]+Address:[\s]+(?<stransaddr>[^\s]*)[\s]+Tunnel[\s]+Endpoint:[\s]+(?<fld16>[^\s]*)[\s]+Protocol:[\s]+(?<protocol>[^\s]*)[\s]+Keying[\s]+Module[\s]+Name:[\s]+(?<fld38>[^\s]*)[\s]+Cryptographic[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId464"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId465
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>    Local Endpoint: <space> Network Address: <daddr>  Port:   <dport>  Tunnel Endpoint:  <fld15>  Remote Endpoint: <space> Network Address: <saddr>  Port:   <sport>  Tunnel Endpoint:  <fld16>  Additional Information: <space> Protocol:  <protocol>  Quick Mode SA ID: <fld13>
	else if [logstash][msgparser][id] == "msgParserId465" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Local[\s]+Endpoint:[\s]+(?<space>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+Tunnel[\s]+Endpoint:[\s]+(?<fld15>[^\s]*)[\s]+Remote[\s]+Endpoint:[\s]+(?<space>[^\s]*)[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Tunnel[\s]+Endpoint:[\s]+(?<fld16>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Protocol:[\s]+(?<protocol>[^\s]*)[\s]+Quick[\s]+Mode[\s]+SA[\s]+ID:[\s]+(?<fld13>.*)$" }
			id => "msgParserId465"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Failure"
				"ec_activity" => "Stop"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId466
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId466" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId466"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Encryption"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId467
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Policy:  <policyname>
	else if [logstash][msgparser][id] == "msgParserId467" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy:[\s]+(?<policyname>.*)$" }
			id => "msgParserId467"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId468
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   DN:  <fld92> Error code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId468" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+DN:[\s]+(?<fld92>[^\s]*)[\s]+Error[\s]+code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId468"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId469
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Policy:  <policyname> Error Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId469" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Policy:[\s]+(?<policyname>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId469"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId470
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId470" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId470"
			add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Policy"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId471
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Quick Mode Filter:  <filter> Error Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId471" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Quick[\s]+Mode[\s]+Filter:[\s]+(?<filter>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId471"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId472
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Error Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId472" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId472"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId473
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Network Information: <space> Name (SSID):  <ssid>  Interface GUID:  <sinterface>  Local MAC Address: <smacaddr>  Peer MAC Address: <dmacaddr>  Additional Information: <space> Reason Code:  <result>  Error Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId473" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Name[\s]+\(SSID\):[\s]+(?<ssid>[^\s]*)[\s]+Interface[\s]+GUID:[\s]+(?<sinterface>[^\s]*)[\s]+Local[\s]+MAC[\s]+Address:[\s]+(?<smacaddr>[^\s]*)[\s]+Peer[\s]+MAC[\s]+Address:[\s]+(?<dmacaddr>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Reason[\s]+Code:[\s]+(?<result>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId473"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId474
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Interface: <space> Name:  <sinterface> Additional Information<space> Reason Code:  <result>  Error Code:  <resultcode>
	else if [logstash][msgparser][id] == "msgParserId474" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Interface:[\s]+(?<space>[^\s]*)[\s]+Name:[\s]+(?<sinterface>[^\s]*)[\s]+Additional[\s]+Information(?<space>[^\s]*)[\s]+Reason[\s]+Code:[\s]+(?<result>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId474"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId475
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject: <space> SID:   <sid>  Name:   <username>    Account Domain:  <domain>  LogonId:  <sessionid>  Process Information: <space> PID:   <process_id>  Name:   <process>  Network Information: <space> Remote IP Address: <daddr>  Remote Port:  <dport>  RPC Attributes: <param>
	else if [logstash][msgparser][id] == "msgParserId475" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+SID:[\s]+(?<sid>[^\s]*)[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+LogonId:[\s]+(?<sessionid>[^\s]*)[\s]+Process[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+PID:[\s]+(?<process_id>[^\s]*)[\s]+Name:[\s]+(?<process>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Remote[\s]+IP[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+Remote[\s]+Port:[\s]+(?<dport>[^\s]*)[\s]+RPC[\s]+Attributes:[\s]+(?<param>.*)$" }
			id => "msgParserId475"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId476
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object: <space> COM+ Catalog Collection: <fld93>  Object Name:   <obj_name>  Object Properties Modified: <param>
	else if [logstash][msgparser][id] == "msgParserId476" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+COM\+[\s]+Catalog[\s]+Collection:[\s]+(?<fld93>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Object[\s]+Properties[\s]+Modified:[\s]+(?<param>.*)$" }
			id => "msgParserId476"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId477
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object: <space> COM+ Catalog Collection: <fld93>  Object Name:   <obj_name>  Object Details: <fld94> This event occurs <fld50>
	else if [logstash][msgparser][id] == "msgParserId477" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+COM\+[\s]+Catalog[\s]+Collection:[\s]+(?<fld93>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Object[\s]+Details:[\s]+(?<fld94>[^\s]*)[\s]+This[\s]+event[\s]+occurs[\s]+(?<fld50>.*)$" }
			id => "msgParserId477"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId478
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Object: <space> COM+ Catalog Collection: <fld93>  Object Name:   <obj_name>  Object Details: <fld94>
	else if [logstash][msgparser][id] == "msgParserId478" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:[\s]+(?<space>[^\s]*)[\s]+COM\+[\s]+Catalog[\s]+Collection:[\s]+(?<fld93>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Object[\s]+Details:[\s]+(?<fld94>.*)$" }
			id => "msgParserId478"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId479
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Return Code: <resultcode>  GPO List: <fld95>
	else if [logstash][msgparser][id] == "msgParserId479" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Return[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+GPO[\s]+List:[\s]+(?<fld95>.*)$" }
			id => "msgParserId479"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId480
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Error Code: <resultcode> GPO List: <fld95>
	else if [logstash][msgparser][id] == "msgParserId480" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+GPO[\s]+List:[\s]+(?<fld95>.*)$" }
			id => "msgParserId480"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_6272_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_6272_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>    Account Domain:   <domain>  Fully Qualified Account Name: <user_fullname>  Client Machine: <space> Security ID:   <c_sid>  Account Name:   <c_username>  Fully Qualified Account Name: <fld96> OS-Version: <version>  Called Station Identifier:  <hostid>  Calling Station Identifier:  <r_hostid>  NAS:  <info> RADIUS Client: <space> Client Friendly Name:  <shost>  Client IP Address: <saddr>  Authentication Details: <space> {Proxy Policy Name:|Connection Request Policy Name:|Policy Name:}  <fld97>  Network Policy Name:   <policyname>  Authentication Provider:  <fld99>  Authentication Server:   <fld13>  Authentication Type:  <authmethod>  EAP Type:  <fld98>  Account Session Identifier:  <sessionid1> {Logging Results: <fld95> Quarantine Information:|Quarantine Information:} <space> Result:    <disposition>  Session Identifier: <sessionid>,<fld92>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Client[\s]+Machine:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld96>[^\s]*)[\s]+OS\-Version:[\s]+(?<version>[^\s]*)[\s]+Called[\s]+Station[\s]+Identifier:[\s]+(?<hostid>[^\s]*)[\s]+Calling[\s]+Station[\s]+Identifier:[\s]+(?<r_hostid>[^\s]*)[\s]+NAS:[\s]+(?<info>[^\s]*)[\s]+RADIUS[\s]+Client:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Friendly[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+IP[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Authentication[\s]+Details:[\s]+(?<space>[^\s]*)[\s]+(Proxy[\s]+Policy[\s]+Name:|Connection[\s]+Request[\s]+Policy[\s]+Name:|Policy[\s]+Name:)[\s]+(?<fld97>[^\s]*)[\s]+Network[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^\s]*)[\s]+Authentication[\s]+Provider:[\s]+(?<fld99>[^\s]*)[\s]+Authentication[\s]+Server:[\s]+(?<fld13>[^\s]*)[\s]+Authentication[\s]+Type:[\s]+(?<authmethod>[^\s]*)[\s]+EAP[\s]+Type:[\s]+(?<fld98>[^\s]*)[\s]+Account[\s]+Session[\s]+Identifier:[\s]+(?<sessionid1>[^\s]*)[\s]+(Logging[\s]+Results:[\s]+(?<fld95>[^\s]*)[\s]+Quarantine[\s]+Information:|Quarantine[\s]+Information:)[\s]+(?<space>[^\s]*)[\s]+Result:[\s]+(?<disposition>[^\s]*)[\s]+Session[\s]+Identifier:[\s]+(?<sessionid>[^,]*),(?<fld92>.*)$" }
				id => "message-Security_6272_Microsoft-Windows-Security-Auditing"
				add_field => {
					"[event][id]" => "Security_6272_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_6272_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1302000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_6272_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	|,}<level>{	|,}<event_log>{	|,}<fld11>{	|,}<fld12><datetime>{	|,}<id>{	|,}<event_source>{	|,}<event_user>{	|,}<fld91>{	|,}<event_type>{	|,}<event_computer>{	|,}<category>{	|,}<fld2>{	|,}<event_description>User:<space>Security ID:<sid>Account Name:<username>Account Domain:<domain>Fully Qualified Account Name:<user_fullname>Client Machine:<space>Security ID:<c_sid>Account Name:<c_username>Fully Qualified Account Name:<fld96>Called Station Identifier:<hostid>Calling Station Identifier:<r_hostid>NAS:<info>NAS IPv4 Address:<fld1>NAS IPv6 Address:<fld22>NAS Identifier:<fld3>NAS Port-Type:<fld4>NAS Port:<fld5>RADIUS Client:<space>Client Friendly Name:<shost>Client IP Address:<saddr>Authentication Details:<space>{Proxy Policy Name:|Connection Request Policy Name:|Policy Name:}<fld97>Network Policy Name:<policyname>Authentication Provider:<fld99>Authentication Server:<fld28>Authentication Type:<authmethod>EAP Type:<fld98>Account Session Identifier:<sessionid1>Logging Results:<fld95>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "Security_6273_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_6273_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>    Account Domain:   <domain>  Fully Qualified Account Name: <user_fullname>  Client Machine: <space> Security ID:   <c_sid>  Account Name:   <c_username>  Fully Qualified Account Name: <fld96>  OS-Version: <version>  Called Station Identifier:  <hostid>  Calling Station Identifier:  <r_hostid>  NAS:  <info> RADIUS Client: <space> Client Friendly Name:  <shost>  Client IP Address: <saddr>  Authentication Details:  <space>{Proxy Policy Name:|Connection Request Policy Name:|Policy Name:}  <fld97>  Network Policy Name:   <policyname>  Authentication Provider:  <fld99>  Authentication Server:   <fld28>  Authentication Type:  <authmethod>  EAP Type:  <fld98>  {Account Session Identifier:  -  Logging Results: <fld95>|Account Session Identifier:  <sessionid1>}  Reason Code: <resultcode> {Reason: <result>. <fld94>,<fld93>|Reason: <result>,<fld93>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Client[\s]+Machine:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld96>[^\s]*)[\s]+OS\-Version:[\s]+(?<version>[^\s]*)[\s]+Called[\s]+Station[\s]+Identifier:[\s]+(?<hostid>[^\s]*)[\s]+Calling[\s]+Station[\s]+Identifier:[\s]+(?<r_hostid>[^\s]*)[\s]+NAS:[\s]+(?<info>[^\s]*)[\s]+RADIUS[\s]+Client:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Friendly[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+IP[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Authentication[\s]+Details:[\s]+(?<space>[^PCP]*)(Proxy[\s]+Policy[\s]+Name:|Connection[\s]+Request[\s]+Policy[\s]+Name:|Policy[\s]+Name:)[\s]+(?<fld97>[^\s]*)[\s]+Network[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^\s]*)[\s]+Authentication[\s]+Provider:[\s]+(?<fld99>[^\s]*)[\s]+Authentication[\s]+Server:[\s]+(?<fld28>[^\s]*)[\s]+Authentication[\s]+Type:[\s]+(?<authmethod>[^\s]*)[\s]+EAP[\s]+Type:[\s]+(?<fld98>[^\s]*)[\s]+(Account[\s]+Session[\s]+Identifier:[\s]+\-[\s]+Logging[\s]+Results:[\s]+(?<fld95>[^\s]*)|Account[\s]+Session[\s]+Identifier:[\s]+(?<sessionid1>[^\s]*))[\s]+Reason[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+(Reason:[\s]+(?<result>[^\.]*)\.[\s]+(?<fld94>[^,]*),(?<fld93>.*)|Reason:[\s]+(?<result>[^,]*),(?<fld93>.*))$" }
				id => "message-Security_6273_Microsoft-Windows-Security-Auditing"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_6273_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_6273_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_6273_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>User:  Security ID:<sid>Account Name:<username>Account Domain:<domain>Fully Qualified Account Name:<user_fullname>Client Machine:  Security ID:<c_sid>Account Name:<c_username>Fully Qualified Account Name:<fld96>{OS-Version:<version>Called Station Identifier:<hostid>|Called Station Identifier:<hostid>}Calling Station Identifier:<r_hostid>{NAS:<info>NAS IPv4 Address:<fld1>NAS IPv6 Address:<fld22>NAS Identifier:<fld3>NAS Port-Type:<fld4>NAS Port:<fld5>|NAS:<info>}RADIUS Client:  Client Friendly Name:<shost>Client IP Address:<saddr>Authentication Details:{Proxy Policy Name:|Connection Request Policy Name:|Policy Name:}<fld97>Network Policy Name:<policyname>Authentication Provider:<fld99>Authentication Server:<fld28>Authentication Type:<authmethod>EAP Type:<fld98>{Account Session Identifier:<sessionid1>Logging Results:<fld95>Reason Code:<resultcode>Reason:<result>|Account Session Identifier:<sessionid1>Reason Code:<resultcode>Reason:<result>|Account Session Identifier:<sessionid1>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^U]*)User:[\s]+Security[\s]+ID:(?<sid>[^A]*)Account[\s]+Name:(?<username>[^A]*)Account[\s]+Domain:(?<domain>[^F]*)Fully[\s]+Qualified[\s]+Account[\s]+Name:(?<user_fullname>[^C]*)Client[\s]+Machine:[\s]+Security[\s]+ID:(?<c_sid>[^A]*)Account[\s]+Name:(?<c_username>[^F]*)Fully[\s]+Qualified[\s]+Account[\s]+Name:(?<fld96>[^OC]*)(OS\-Version:(?<version>[^C]*)Called[\s]+Station[\s]+Identifier:(?<hostid>[^C]*)|Called[\s]+Station[\s]+Identifier:(?<hostid>[^C]*))Calling[\s]+Station[\s]+Identifier:(?<r_hostid>[^NN]*)(NAS:(?<info>[^N]*)NAS[\s]+IPv4[\s]+Address:(?<fld1>[^N]*)NAS[\s]+IPv6[\s]+Address:(?<fld22>[^N]*)NAS[\s]+Identifier:(?<fld3>[^N]*)NAS[\s]+Port\-Type:(?<fld4>[^N]*)NAS[\s]+Port:(?<fld5>[^R]*)|NAS:(?<info>[^R]*))RADIUS[\s]+Client:[\s]+Client[\s]+Friendly[\s]+Name:(?<shost>[^C]*)Client[\s]+IP[\s]+Address:(?<saddr>[^A]*)Authentication[\s]+Details:(Proxy[\s]+Policy[\s]+Name:|Connection[\s]+Request[\s]+Policy[\s]+Name:|Policy[\s]+Name:)(?<fld97>[^N]*)Network[\s]+Policy[\s]+Name:(?<policyname>[^A]*)Authentication[\s]+Provider:(?<fld99>[^A]*)Authentication[\s]+Server:(?<fld28>[^A]*)Authentication[\s]+Type:(?<authmethod>[^E]*)EAP[\s]+Type:(?<fld98>[^AAA]*)(Account[\s]+Session[\s]+Identifier:(?<sessionid1>[^L]*)Logging[\s]+Results:(?<fld95>[^R]*)Reason[\s]+Code:(?<resultcode>[^R]*)Reason:(?<result>.*)|Account[\s]+Session[\s]+Identifier:(?<sessionid1>[^R]*)Reason[\s]+Code:(?<resultcode>[^R]*)Reason:(?<result>.*)|Account[\s]+Session[\s]+Identifier:(?<sessionid1>.*))$" }
				id => "message-Security_6273_Microsoft-Windows-Security-Auditing:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_6273_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_6273_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "Security_6274_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_6274_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>    Account Domain:   <domain>  Fully Qualified Account Name: <user_fullname>  Client Machine: <space> Security ID:   <c_sid>  Account Name:   <c_username>  Fully Qualified Account Name: <fld96>  OS-Version:   <version>  Called Station Identifier:  <hostid>  Calling Station Identifier:  <r_hostid>  NAS:  <info> RADIUS Client: <space> Client Friendly Name:  <shost>  Client IP Address: <saddr>  Authentication Details: <space> Proxy Policy Name:  <fld97>  Network Policy Name:   <policyname>  Authentication Provider:  <fld99>  Authentication Server:   <fld13>  Authentication Type:  <authmethod>  EAP Type:  <fld98>  Account Session Identifier:  <sessionid1>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Client[\s]+Machine:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld96>[^\s]*)[\s]+OS\-Version:[\s]+(?<version>[^\s]*)[\s]+Called[\s]+Station[\s]+Identifier:[\s]+(?<hostid>[^\s]*)[\s]+Calling[\s]+Station[\s]+Identifier:[\s]+(?<r_hostid>[^\s]*)[\s]+NAS:[\s]+(?<info>[^\s]*)[\s]+RADIUS[\s]+Client:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Friendly[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+IP[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Authentication[\s]+Details:[\s]+(?<space>[^\s]*)[\s]+Proxy[\s]+Policy[\s]+Name:[\s]+(?<fld97>[^\s]*)[\s]+Network[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^\s]*)[\s]+Authentication[\s]+Provider:[\s]+(?<fld99>[^\s]*)[\s]+Authentication[\s]+Server:[\s]+(?<fld13>[^\s]*)[\s]+Authentication[\s]+Type:[\s]+(?<authmethod>[^\s]*)[\s]+EAP[\s]+Type:[\s]+(?<fld98>[^\s]*)[\s]+Account[\s]+Session[\s]+Identifier:[\s]+(?<sessionid1>.*)$" }
				id => "message-Security_6274_Microsoft-Windows-Security-Auditing"
				add_field => {
					"[event][id]" => "Security_6274_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_6274_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1304000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_6274_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>User:  Security ID:<sid>Account Name:<username>Account Domain:<domain>Fully Qualified Account Name:<user_fullname>Client Machine:  Security ID:<c_sid>Account Name:<c_username>Fully Qualified Account Name:<fld96>{OS-Version:<version>Called Station Identifier:<hostid>|Called Station Identifier:<hostid>}Calling Station Identifier:<r_hostid>{NAS:<info>NAS IPv4 Address:<fld1>NAS IPv6 Address:<fld22>NAS Identifier:<fld3>NAS Port-Type:<fld4>NAS Port:<fld5>|NAS:<info>}RADIUS Client:  Client Friendly Name:<shost>Client IP Address:<saddr>Authentication Details:{Proxy Policy Name:|Connection Request Policy Name:|Policy Name:}<fld97>Network Policy Name:<policyname>Authentication Provider:<fld99>Authentication Server:<fld28>Authentication Type:<authmethod>EAP Type:<fld98>{Account Session Identifier:<sessionid1>Reason Code:<resultcode>Reason:<result>|Account Session Identifier:<sessionid1>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^U]*)User:[\s]+Security[\s]+ID:(?<sid>[^A]*)Account[\s]+Name:(?<username>[^A]*)Account[\s]+Domain:(?<domain>[^F]*)Fully[\s]+Qualified[\s]+Account[\s]+Name:(?<user_fullname>[^C]*)Client[\s]+Machine:[\s]+Security[\s]+ID:(?<c_sid>[^A]*)Account[\s]+Name:(?<c_username>[^F]*)Fully[\s]+Qualified[\s]+Account[\s]+Name:(?<fld96>[^OC]*)(OS\-Version:(?<version>[^C]*)Called[\s]+Station[\s]+Identifier:(?<hostid>[^C]*)|Called[\s]+Station[\s]+Identifier:(?<hostid>[^C]*))Calling[\s]+Station[\s]+Identifier:(?<r_hostid>[^NN]*)(NAS:(?<info>[^N]*)NAS[\s]+IPv4[\s]+Address:(?<fld1>[^N]*)NAS[\s]+IPv6[\s]+Address:(?<fld22>[^N]*)NAS[\s]+Identifier:(?<fld3>[^N]*)NAS[\s]+Port\-Type:(?<fld4>[^N]*)NAS[\s]+Port:(?<fld5>[^R]*)|NAS:(?<info>[^R]*))RADIUS[\s]+Client:[\s]+Client[\s]+Friendly[\s]+Name:(?<shost>[^C]*)Client[\s]+IP[\s]+Address:(?<saddr>[^A]*)Authentication[\s]+Details:(Proxy[\s]+Policy[\s]+Name:|Connection[\s]+Request[\s]+Policy[\s]+Name:|Policy[\s]+Name:)(?<fld97>[^N]*)Network[\s]+Policy[\s]+Name:(?<policyname>[^A]*)Authentication[\s]+Provider:(?<fld99>[^A]*)Authentication[\s]+Server:(?<fld28>[^A]*)Authentication[\s]+Type:(?<authmethod>[^E]*)EAP[\s]+Type:(?<fld98>[^AA]*)(Account[\s]+Session[\s]+Identifier:(?<sessionid1>[^R]*)Reason[\s]+Code:(?<resultcode>[^R]*)Reason:(?<result>.*)|Account[\s]+Session[\s]+Identifier:(?<sessionid1>.*))$" }
				id => "message-Security_6274_Microsoft-Windows-Security-Auditing:01"
				add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Security_6274_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_6274_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId485
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>    Account Domain:   <domain>  Fully Qualified Account Name: <user_fullname>  Client Machine: <space> Security ID:   <c_sid>  Account Name:   <c_username>  Fully Qualified Account Name: <fld96>  OS-Version:   <version>  Called Station Identifier:  <hostid>  Calling Station Identifier:  <r_hostid>  NAS:  <info> RADIUS Client: <space> Client Friendly Name:  <shost>  Client IP Address: <saddr>  Authentication Details: <space> Proxy Policy Name:  <fld97>  Network Policy Name:   <policyname>  Authentication Provider:  <fld99>  Authentication Server:   <fld13>  Authentication Type:  <authmethod>  EAP Type:  <fld98>  Account Session Identifier:  <sessionid1>
	else if [logstash][msgparser][id] == "msgParserId485" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+Client[\s]+Machine:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld96>[^\s]*)[\s]+OS\-Version:[\s]+(?<version>[^\s]*)[\s]+Called[\s]+Station[\s]+Identifier:[\s]+(?<hostid>[^\s]*)[\s]+Calling[\s]+Station[\s]+Identifier:[\s]+(?<r_hostid>[^\s]*)[\s]+NAS:[\s]+(?<info>[^\s]*)[\s]+RADIUS[\s]+Client:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Friendly[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+IP[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Authentication[\s]+Details:[\s]+(?<space>[^\s]*)[\s]+Proxy[\s]+Policy[\s]+Name:[\s]+(?<fld97>[^\s]*)[\s]+Network[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^\s]*)[\s]+Authentication[\s]+Provider:[\s]+(?<fld99>[^\s]*)[\s]+Authentication[\s]+Server:[\s]+(?<fld13>[^\s]*)[\s]+Authentication[\s]+Type:[\s]+(?<authmethod>[^\s]*)[\s]+EAP[\s]+Type:[\s]+(?<fld98>[^\s]*)[\s]+Account[\s]+Session[\s]+Identifier:[\s]+(?<sessionid1>.*)$" }
			id => "msgParserId485"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId487
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>  Account Domain:   <domain>  Fully Qualified Account Name: <fld27>  Client Machine: <space> Security ID:   <c_sid>  Account Name:   <c_username>    Fully Qualified Account Name: <fld96>  OS-Version:   <version>  Called Station Identifier:  <hostid>  Calling Station Identifier:  <r_hostid>  NAS:  <info> RADIUS Client: <space> Client Friendly Name:  <shost>  Client IP Address: <saddr>  Authentication Details: <space> Proxy Policy Name:  <fld97>  Network Policy Name:   <policyname>  Authentication Provider:  <fld99>  Authentication Server:   <fld13>  Authentication Type:  <authmethod>  EAP Type:  <fld98>  Account Session Identifier:  <sessionid1> Quarantine Information: <space> Result: <disposition> Extended-Result: <result>  Session Identifier: <sessionid> Help URL: <url> System Health Validator Result(s):<fld92>
	else if [logstash][msgparser][id] == "msgParserId487" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld27>[^\s]*)[\s]+Client[\s]+Machine:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld96>[^\s]*)[\s]+OS\-Version:[\s]+(?<version>[^\s]*)[\s]+Called[\s]+Station[\s]+Identifier:[\s]+(?<hostid>[^\s]*)[\s]+Calling[\s]+Station[\s]+Identifier:[\s]+(?<r_hostid>[^\s]*)[\s]+NAS:[\s]+(?<info>[^\s]*)[\s]+RADIUS[\s]+Client:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Friendly[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+IP[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Authentication[\s]+Details:[\s]+(?<space>[^\s]*)[\s]+Proxy[\s]+Policy[\s]+Name:[\s]+(?<fld97>[^\s]*)[\s]+Network[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^\s]*)[\s]+Authentication[\s]+Provider:[\s]+(?<fld99>[^\s]*)[\s]+Authentication[\s]+Server:[\s]+(?<fld13>[^\s]*)[\s]+Authentication[\s]+Type:[\s]+(?<authmethod>[^\s]*)[\s]+EAP[\s]+Type:[\s]+(?<fld98>[^\s]*)[\s]+Account[\s]+Session[\s]+Identifier:[\s]+(?<sessionid1>[^\s]*)[\s]+Quarantine[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Result:[\s]+(?<disposition>[^\s]*)[\s]+Extended\-Result:[\s]+(?<result>[^\s]*)[\s]+Session[\s]+Identifier:[\s]+(?<sessionid>[^\s]*)[\s]+Help[\s]+URL:[\s]+(?<url>[^\s]*)[\s]+System[\s]+Health[\s]+Validator[\s]+Result\(s\):(?<fld92>.*)$" }
			id => "msgParserId487"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId488
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>  Account Domain:   <domain>  Fully Qualified Account Name: <fld27>  Client Machine: <space> Security ID:   <c_sid>  Account Name:   <c_username>    Fully Qualified Account Name: <fld96>  OS-Version:   <version>  Called Station Identifier:  <hostid>  Calling Station Identifier:  <r_hostid>  NAS:  <info> RADIUS Client: <space> Client Friendly Name:  <shost>  Client IP Address: <saddr>  Authentication Details: <space> Proxy Policy Name:  <fld97>  Network Policy Name:   <policyname>  Authentication Provider:  <fld99>  Authentication Server:   <fld13>  Authentication Type:  <authmethod>  EAP Type:  <fld98>  Account Session Identifier:  <sessionid1> Quarantine Information: <space> Result: <disposition> Extended-Result: <result> Session Identifier: <sessionid> Help URL: <url> System Health Validator Result(s):<fld92>
	else if [logstash][msgparser][id] == "msgParserId488" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld27>[^\s]*)[\s]+Client[\s]+Machine:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld96>[^\s]*)[\s]+OS\-Version:[\s]+(?<version>[^\s]*)[\s]+Called[\s]+Station[\s]+Identifier:[\s]+(?<hostid>[^\s]*)[\s]+Calling[\s]+Station[\s]+Identifier:[\s]+(?<r_hostid>[^\s]*)[\s]+NAS:[\s]+(?<info>[^\s]*)[\s]+RADIUS[\s]+Client:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Friendly[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+IP[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Authentication[\s]+Details:[\s]+(?<space>[^\s]*)[\s]+Proxy[\s]+Policy[\s]+Name:[\s]+(?<fld97>[^\s]*)[\s]+Network[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^\s]*)[\s]+Authentication[\s]+Provider:[\s]+(?<fld99>[^\s]*)[\s]+Authentication[\s]+Server:[\s]+(?<fld13>[^\s]*)[\s]+Authentication[\s]+Type:[\s]+(?<authmethod>[^\s]*)[\s]+EAP[\s]+Type:[\s]+(?<fld98>[^\s]*)[\s]+Account[\s]+Session[\s]+Identifier:[\s]+(?<sessionid1>[^\s]*)[\s]+Quarantine[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Result:[\s]+(?<disposition>[^\s]*)[\s]+Extended\-Result:[\s]+(?<result>[^\s]*)[\s]+Session[\s]+Identifier:[\s]+(?<sessionid>[^\s]*)[\s]+Help[\s]+URL:[\s]+(?<url>[^\s]*)[\s]+System[\s]+Health[\s]+Validator[\s]+Result\(s\):(?<fld92>.*)$" }
			id => "msgParserId488"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId489
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>  Account Domain:   <domain>  Fully Qualified Account Name: <fld27>  Client Machine: <space> Security ID:   <c_sid>  Account Name:   <c_username>    Fully Qualified Account Name: <user_fullname>  OS-Version:   <version>  Called Station Identifier:  <hostid>  Calling Station Identifier:  <r_hostid>  NAS:  <info> RADIUS Client: <space> Client Friendly Name:  <shost>  Client IP Address: <saddr>  Authentication Details: <space> {Proxy Policy Name:|Connection Request Policy Name:|Policy Name:}  <fld97>  Network Policy Name:   <policyname>  Authentication Provider:  <fld99>  Authentication Server:   <fld13>  Authentication Type:  <authmethod>  EAP Type:  <fld98>  Account Session Identifier:  <sessionid1> {Logging Results: <fld95> Quarantine Information:|Quarantine Information:} <space> Result: <disposition> Extended-Result: <result>  Session Identifier: <sessionid> Help URL: <url> System Health Validator Result(s):<fld92>
	else if [logstash][msgparser][id] == "msgParserId489" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<fld27>[^\s]*)[\s]+Client[\s]+Machine:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<user_fullname>[^\s]*)[\s]+OS\-Version:[\s]+(?<version>[^\s]*)[\s]+Called[\s]+Station[\s]+Identifier:[\s]+(?<hostid>[^\s]*)[\s]+Calling[\s]+Station[\s]+Identifier:[\s]+(?<r_hostid>[^\s]*)[\s]+NAS:[\s]+(?<info>[^\s]*)[\s]+RADIUS[\s]+Client:[\s]+(?<space>[^\s]*)[\s]+Client[\s]+Friendly[\s]+Name:[\s]+(?<shost>[^\s]*)[\s]+Client[\s]+IP[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Authentication[\s]+Details:[\s]+(?<space>[^\s]*)[\s]+(Proxy[\s]+Policy[\s]+Name:|Connection[\s]+Request[\s]+Policy[\s]+Name:|Policy[\s]+Name:)[\s]+(?<fld97>[^\s]*)[\s]+Network[\s]+Policy[\s]+Name:[\s]+(?<policyname>[^\s]*)[\s]+Authentication[\s]+Provider:[\s]+(?<fld99>[^\s]*)[\s]+Authentication[\s]+Server:[\s]+(?<fld13>[^\s]*)[\s]+Authentication[\s]+Type:[\s]+(?<authmethod>[^\s]*)[\s]+EAP[\s]+Type:[\s]+(?<fld98>[^\s]*)[\s]+Account[\s]+Session[\s]+Identifier:[\s]+(?<sessionid1>[^\s]*)[\s]+(Logging[\s]+Results:[\s]+(?<fld95>[^\s]*)[\s]+Quarantine[\s]+Information:|Quarantine[\s]+Information:)[\s]+(?<space>[^\s]*)[\s]+Result:[\s]+(?<disposition>[^\s]*)[\s]+Extended\-Result:[\s]+(?<result>[^\s]*)[\s]+Session[\s]+Identifier:[\s]+(?<sessionid>[^\s]*)[\s]+Help[\s]+URL:[\s]+(?<url>[^\s]*)[\s]+System[\s]+Health[\s]+Validator[\s]+Result\(s\):(?<fld92>.*)$" }
			id => "msgParserId489"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId490
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>    Account Domain:   <domain>  Fully Qualified Account Name: <user_fullname>
	else if [logstash][msgparser][id] == "msgParserId490" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<user_fullname>.*)$" }
			id => "msgParserId490"
			add_field => {
				"ec_theme" => "UserGroup"
				"ec_subject" => "User"
				"ec_activity" => "Disable"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId491
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   User: <space> Security ID:   <sid>  Account Name:   <username>    Account Domain:   <domain>  Fully Qualified Account Name: <user_fullname>
	else if [logstash][msgparser][id] == "msgParserId491" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Fully[\s]+Qualified[\s]+Account[\s]+Name:[\s]+(?<user_fullname>.*)$" }
			id => "msgParserId491"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId492
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  Subject: <space> Security ID: <sid>  Account Name: <username>    Domain Name: <domain>  Logon ID: <sessionid>
	else if [logstash][msgparser][id] == "msgParserId492" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Domain[\s]+Name:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>.*)$" }
			id => "msgParserId492"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId493
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  The reason code is <resultcode>
	else if [logstash][msgparser][id] == "msgParserId493" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+The[\s]+reason[\s]+code[\s]+is[\s]+(?<resultcode>.*)$" }
			id => "msgParserId493"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId494
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Target Account: <space> Security ID:  <c_sid>  Account Name:  <c_username>  Account Domain:  <c_domain>  Trust Information:  <info>
	else if [logstash][msgparser][id] == "msgParserId494" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Target[\s]+Account:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<c_sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<c_username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<c_domain>[^\s]*)[\s]+Trust[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId494"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId495
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid>  Group Name:  <group>  Group Domain:  <remote_domain>  Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId495" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId495"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId496
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid> { Account Name:  <group>  Account Domain:  <remote_domain> | Group Name:  <group>  Group Domain:  <remote_domain> } Attributes:  <param>  Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId496" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+([\s]*Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+|[\s]*Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+)[\s]+Attributes:[\s]+(?<param>[^\s]*)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId496"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Modify"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId497
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject:<space>Security ID:  <sid>  Account Name:  <username>    Account Domain:  <domain>  Logon ID:  <sessionid>  Group: <space> Security ID:  <groupid>  { Account Name:  <group>  Account Domain:  <remote_domain> | Group Name:  <group>  Group Domain:  <remote_domain> }  Additional Information: <space> Privileges:  <privilege>
	else if [logstash][msgparser][id] == "msgParserId497" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<groupid>[^\s]*)[\s]+([\s]*Account[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+|[\s]*Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+)[\s]+Additional[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Privileges:[\s]+(?<privilege>.*)$" }
			id => "msgParserId497"
			add_field => {
				"ec_subject" => "Group"
				"ec_activity" => "Delete"
				"ec_theme" => "UserGroup"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId498
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>  CA Configuration ID:  <id1> New Value:  <change_new>
	else if [logstash][msgparser][id] == "msgParserId498" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+CA[\s]+Configuration[\s]+ID:[\s]+(?<id1>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<change_new>.*)$" }
			id => "msgParserId498"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId499
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> .<space> Property Name:  <param> New Value: <change_new>
	else if [logstash][msgparser][id] == "msgParserId499" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+\.(?<space>[^\s]*)[\s]+Property[\s]+Name:[\s]+(?<param>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<change_new>.*)$" }
			id => "msgParserId499"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId500
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> New Value: <change_new>
	else if [logstash][msgparser][id] == "msgParserId500" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+New[\s]+Value:[\s]+(?<change_new>.*)$" }
			id => "msgParserId500"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId501
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> . <info>
	else if [logstash][msgparser][id] == "msgParserId501" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+\.[\s]+(?<info>.*)$" }
			id => "msgParserId501"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId502
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>{	 | ,}<fld1>
	else if [logstash][msgparser][id] == "msgParserId502" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld1>.*)$" }
			id => "msgParserId502"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId503
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId503" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId503"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId504
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId504" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId504"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Application" {
		# MESSAGE Application:50000
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Error: 50000 Severity: 2 State: 1 '<groupid>'{	 | ,} '<c_username>''{	 | ,}<sessionid>{	 | ,}<saddr>{	 | ,}<location_country>{	 | ,}<location_city>{	 | ,}<action>{	 | ,}<policyname>{	 | ,}<disposition>,<fld3>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Application:50002
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Error: 50002 Severity: 2 State: 1 New Case Created<space>'<groupid>'{	 | ,}<starttime>{	 | ,}<endtime>{	 | ,}<location_country>{	 | ,}<saddr>{	 | ,}<action>{	 | ,}<policyname>{	 | ,}<disposition>{	 | ,}<sessionid>{	 | ,}<fld3>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Application:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Login failed for user '<username>'. Reason: <result>. [CLIENT: <fld3>],<fld4>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Login[\s]+failed[\s]+for[\s]+user[\s]+'(?<username>[^']*)'\.[\s]+Reason:[\s]+(?<result>[^\.]*)\.[\s]+\[CLIENT:[\s]+(?<fld3>[^\]]*)\],(?<fld4>.*)$" }
				id => "message-Application:02"
				add_field => {
				"event_description" => "Login failed"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
					"[event][id]" => "Application:02"
					"[rsa][message][id1]" => "Application:02"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application:03
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<fld3>{username = <domain>\<username>|<username>}  ip = <hostip>  machineName = <fld4>  authenticationType = <fld5>  ,<fld6>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1>{a|<fld2>}
		# MESSAGE Application
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-Application"
				add_field => {
					"[event][id]" => "Application"
					"[rsa][message][id1]" => "Application"
					"[event][categoryid]" => "1612000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Application:01
		# line in RSA: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{event_description}" }
				id => "message-Application:01"
				add_field => {
					"[event][id]" => "Application:01"
					"[rsa][message][id1]" => "Application:01"
					"[event][categoryid]" => "1612000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId510
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject:<space>Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Object:<space>Object Server: <obj_server> Object Type: <obj_type> Object Name: <obj_name> Auditing Settings:<space>Original Security Descriptor: <change_old> {New Security Descriptor: <change_new>,<fld13>|New Security Descriptor: <change_new>}
	else if [logstash][msgparser][id] == "msgParserId510" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Object:(?<space>[^O]*)Object[\s]+Server:[\s]+(?<obj_server>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Object[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Auditing[\s]+Settings:(?<space>[^O]*)Original[\s]+Security[\s]+Descriptor:[\s]+(?<change_old>[^\s]*)[\s]+(New[\s]+Security[\s]+Descriptor:[\s]+(?<change_new>[^,]*),(?<fld13>.*)|New[\s]+Security[\s]+Descriptor:[\s]+(?<change_new>.*))$" }
			id => "msgParserId510"
			add_field => {
				"ec_theme" => "Policy"
				"ec_activity" => "Modify"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId511
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject: <space> Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Share Information: <space> Share Name: <obj_name> Share Path: <directory>
	else if [logstash][msgparser][id] == "msgParserId511" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Share[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Share[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Share[\s]+Path:[\s]+(?<directory>.*)$" }
			id => "msgParserId511"
			add_field => {
				"ec_activity" => "Create"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Security_5143_Microsoft-Windows-Security-Auditing" {
		# MESSAGE Security_5143_Microsoft-Windows-Security-Auditing
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject: Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Share Information: Object Type: <obj_type> Share Name: <obj_name> Share Path: <directory> Old Remark: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Share[\s]+Information:[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Share[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Share[\s]+Path:[\s]+(?<directory>[^\s]*)[\s]+Old[\s]+Remark:[\s]+(?<info>.*)$" }
				id => "message-Security_5143_Microsoft-Windows-Security-Auditing"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "Security_5143_Microsoft-Windows-Security-Auditing"
					"[rsa][message][id1]" => "Security_5143_Microsoft-Windows-Security-Auditing"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Security_5143_Microsoft-Windows-Security-Auditing:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject:<space>Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Share Information:<space>Object Type: <obj_type> Share Name: <obj_name> Share Path: <directory> Old Remark: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Share[\s]+Information:(?<space>[^O]*)Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Share[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Share[\s]+Path:[\s]+(?<directory>[^\s]*)[\s]+Old[\s]+Remark:[\s]+(?<info>.*)$" }
				id => "message-Security_5143_Microsoft-Windows-Security-Auditing:01"
				add_field => {
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
					"[event][id]" => "Security_5143_Microsoft-Windows-Security-Auditing:01"
					"[rsa][message][id1]" => "Security_5143_Microsoft-Windows-Security-Auditing:01"
					"[event][categoryid]" => "1701020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId514
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject:<space>Security ID: <sid> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Share Information:<space>Share Name: <obj_name> {Share Path: <directory>,<fld13>|Share Path: <directory>}
	else if [logstash][msgparser][id] == "msgParserId514" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:(?<space>[^S]*)Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Share[\s]+Information:(?<space>[^S]*)Share[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+(Share[\s]+Path:[\s]+(?<directory>[^,]*),(?<fld13>.*)|Share[\s]+Path:[\s]+(?<directory>.*))$" }
			id => "msgParserId514"
			add_field => {
				"ec_activity" => "Delete"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId515
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject: <space> Security ID: <fld38> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> Network Information: <space> Object Type: <obj_type> Source Address: <saddr> Source Port: <sport> Share Information: <space> Share Name: <obj_name> Share Path: <directory> Relative Target Name: <filename> Access Request Information: <space> Access Mask: <fld52> Accesses: <accesses> Access Check Results: <disposition>
	else if [logstash][msgparser][id] == "msgParserId515" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<fld38>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Object[\s]+Type:[\s]+(?<obj_type>[^\s]*)[\s]+Source[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Source[\s]+Port:[\s]+(?<sport>[^\s]*)[\s]+Share[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Share[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Share[\s]+Path:[\s]+(?<directory>[^\s]*)[\s]+Relative[\s]+Target[\s]+Name:[\s]+(?<filename>[^\s]*)[\s]+Access[\s]+Request[\s]+Information:[\s]+(?<space>[^\s]*)[\s]+Access[\s]+Mask:[\s]+(?<fld52>[^\s]*)[\s]+Accesses:[\s]+(?<accesses>[^\s]*)[\s]+Access[\s]+Check[\s]+Results:[\s]+(?<disposition>.*)$" }
			id => "msgParserId515"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId516
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Network Information: <info>
	else if [logstash][msgparser][id] == "msgParserId516" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId516"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId517
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Network Information: <info> Packets Discarded: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId517" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Network[\s]+Information:[\s]+(?<info>[^\s]*)[\s]+Packets[\s]+Discarded:[\s]+(?<dclass_counter1>.*)$" }
			id => "msgParserId517"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId518
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Network Information: Direction: <direction> Source Address: <saddr> Destination Address: <daddr> <info> Filter Information: <filter>
	else if [logstash][msgparser][id] == "msgParserId518" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Network[\s]+Information:[\s]+Direction:[\s]+(?<direction>[^\s]*)[\s]+Source[\s]+Address:[\s]+(?<saddr>[^\s]*)[\s]+Destination[\s]+Address:[\s]+(?<daddr>[^\s]*)[\s]+(?<info>[^\s]*)[\s]+Filter[\s]+Information:[\s]+(?<filter>.*)$" }
			id => "msgParserId518"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId519
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Subject: Security ID: <fld38> Account Name: <username> Account Domain: <domain> Logon ID: <sessionid> SPN: SPN Name: <obj_name> Error Code: <resultcode> Server Information: <info>
	else if [logstash][msgparser][id] == "msgParserId519" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+Security[\s]+ID:[\s]+(?<fld38>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+SPN:[\s]+SPN[\s]+Name:[\s]+(?<obj_name>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>[^\s]*)[\s]+Server[\s]+Information:[\s]+(?<info>.*)$" }
			id => "msgParserId519"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId520
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> File Name: <filename>
	else if [logstash][msgparser][id] == "msgParserId520" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+File[\s]+Name:[\s]+(?<filename>.*)$" }
			id => "msgParserId520"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId521
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> IP address of the client that sent this response: <saddr>
	else if [logstash][msgparser][id] == "msgParserId521" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+IP[\s]+address[\s]+of[\s]+the[\s]+client[\s]+that[\s]+sent[\s]+this[\s]+response:[\s]+(?<saddr>.*)$" }
			id => "msgParserId521"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId522
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> IP address of the client that sent this data: <saddr>
	else if [logstash][msgparser][id] == "msgParserId522" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+IP[\s]+address[\s]+of[\s]+the[\s]+client[\s]+that[\s]+sent[\s]+this[\s]+data:[\s]+(?<saddr>.*)$" }
			id => "msgParserId522"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId523
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> IP address of the client that sent this message: <saddr>
	else if [logstash][msgparser][id] == "msgParserId523" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+IP[\s]+address[\s]+of[\s]+the[\s]+client[\s]+that[\s]+sent[\s]+this[\s]+message:[\s]+(?<saddr>.*)$" }
			id => "msgParserId523"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId524
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Domain name of the hosted cache is: <domain>
	else if [logstash][msgparser][id] == "msgParserId524" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Domain[\s]+name[\s]+of[\s]+the[\s]+hosted[\s]+cache[\s]+is:[\s]+(?<domain>.*)$" }
			id => "msgParserId524"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId525
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Domain name of the hosted cache: <domain> Error Code: <resultcode>
	else if [logstash][msgparser][id] == "msgParserId525" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Domain[\s]+name[\s]+of[\s]+the[\s]+hosted[\s]+cache:[\s]+(?<domain>[^\s]*)[\s]+Error[\s]+Code:[\s]+(?<resultcode>.*)$" }
			id => "msgParserId525"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId526
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}BranchCache: <dclass_counter1> instance(s) of event id <id1> occurred.
	else if [logstash][msgparser][id] == "msgParserId526" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)BranchCache:[\s]+(?<dclass_counter1>[^\s]*)[\s]+instance\(s\)[\s]+of[\s]+event[\s]+id[\s]+(?<id1>[^\s]*)[\s]+occurred\.$" }
			id => "msgParserId526"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId527
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> The session name is <sessionid> and the reason code is <resultcode>
	else if [logstash][msgparser][id] == "msgParserId527" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+The[\s]+session[\s]+name[\s]+is[\s]+(?<sessionid>[^\s]*)[\s]+and[\s]+the[\s]+reason[\s]+code[\s]+is[\s]+(?<resultcode>.*)$" }
			id => "msgParserId527"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId528
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}The event logging service encountered an error <resultcode> while going through publisher configuration. <info>
	else if [logstash][msgparser][id] == "msgParserId528" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)The[\s]+event[\s]+logging[\s]+service[\s]+encountered[\s]+an[\s]+error[\s]+(?<resultcode>[^\s]*)[\s]+while[\s]+going[\s]+through[\s]+publisher[\s]+configuration\.[\s]+(?<info>.*)$" }
			id => "msgParserId528"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "System_13_Print" {
		# MESSAGE System_13_Print
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space> Document <doc_number> <application>-<filename>owned by <username> was deleted on <device>{	 | ,} <fld50>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^\s]*)[\s]+Document[\s]+(?<doc_number>[^\s]*)[\s]+(?<application>[^\-]*)\-(?<filename>[^o]*)owned[\s]+by[\s]+(?<username>[^\s]*)[\s]+was[\s]+deleted[\s]+on[\s]+(?<device>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+(?<fld50>.*)$" }
				id => "message-System_13_Print"
				add_field => {
					"[event][id]" => "System_13_Print"
					"[rsa][message][id1]" => "System_13_Print"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_13_Print:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space> Document <doc_number> <filename> owned by <username> was deleted on <device>.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^\s]*)[\s]+Document[\s]+(?<doc_number>[^\s]*)[\s]+(?<filename>[^\s]*)[\s]+owned[\s]+by[\s]+(?<username>[^\s]*)[\s]+was[\s]+deleted[\s]+on[\s]+(?<device>[^\.]*)\.$" }
				id => "message-System_13_Print:01"
				add_field => {
					"[event][id]" => "System_13_Print:01"
					"[rsa][message][id1]" => "System_13_Print:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_13_Print:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-System_13_Print:02"
				add_field => {
					"[event][id]" => "System_13_Print:02"
					"[rsa][message][id1]" => "System_13_Print:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId531
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <fld100>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Protocol: <protocol> CipherSuite: <s_cipher> Exchange strength: <s_ciphersize>{	 | ,}<fld22>
	else if [logstash][msgparser][id] == "msgParserId531" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<fld100>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Protocol:[\s]+(?<protocol>[^\s]*)[\s]+CipherSuite:[\s]+(?<s_cipher>[^\s]*)[\s]+Exchange[\s]+strength:[\s]+(?<s_ciphersize>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld22>.*)$" }
			id => "msgParserId531"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld100}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId532
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId532" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId532"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "System_6013_EventLog" {
		# MESSAGE System_6013_EventLog
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-System_6013_EventLog"
				add_field => {
					"[event][id]" => "System_6013_EventLog"
					"[rsa][message][id1]" => "System_6013_EventLog"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_6013_EventLog:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-System_6013_EventLog:01"
				add_field => {
					"[event][id]" => "System_6013_EventLog:01"
					"[rsa][message][id1]" => "System_6013_EventLog:01"
					"[event][categoryid]" => "1603110000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "System_61_Print" {
		# MESSAGE System_61_Print
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space> The document <filename> owned by <username> failed to print on printer <device> { on <fld50> | . }
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^\s]*)[\s]+The[\s]+document[\s]+(?<filename>[^\s]*)[\s]+owned[\s]+by[\s]+(?<username>[^\s]*)[\s]+failed[\s]+to[\s]+print[\s]+on[\s]+printer[\s]+(?<device>[^\s]*)[\s]+([\s]*on[\s]+(?<fld50>[^\s]*)[\s]+|[\s]*\.[\s]+)$" }
				id => "message-System_61_Print"
				add_field => {
					"[event][id]" => "System_61_Print"
					"[rsa][message][id1]" => "System_61_Print"
					"[event][categoryid]" => "1603010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_61_Print:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space> The document <filename> owned by <username> failed to print.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^\s]*)[\s]+The[\s]+document[\s]+(?<filename>[^\s]*)[\s]+owned[\s]+by[\s]+(?<username>[^\s]*)[\s]+failed[\s]+to[\s]+print\.$" }
				id => "message-System_61_Print:01"
				add_field => {
					"[event][id]" => "System_61_Print:01"
					"[rsa][message][id1]" => "System_61_Print:01"
					"[event][categoryid]" => "1603010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE System_61_Print:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<space> The printer queue is full.<fld50>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<space>[^\s]*)[\s]+The[\s]+printer[\s]+queue[\s]+is[\s]+full\.(?<fld50>.*)$" }
				id => "message-System_61_Print:02"
				add_field => {
					"[event][id]" => "System_61_Print:02"
					"[rsa][message][id1]" => "System_61_Print:02"
					"[event][categoryid]" => "1603010000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "PACKET" {
		# MESSAGE PACKET:QRcv-NOERROR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> Q [<fld12> <fld13> NOERROR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOERROR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QRcv-NOERROR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"resultcode" => "NOERROR"
				"action" => "Rcv"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QRcv-NOERROR"
					"[rsa][message][id1]" => "PACKET:QRcv-NOERROR"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QRcv-NXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> Q [<fld12> <fld13> NXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QRcv-NXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "NXDOMAIN"
				"action" => "Rcv"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QRcv-NXDOMAIN"
					"[rsa][message][id1]" => "PACKET:QRcv-NXDOMAIN"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QRcv-NOTAUTH
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> Q [<fld12> <fld13> NOTAUTH] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTAUTH\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QRcv-NOTAUTH"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"resultcode" => "NOTAUTH"
				"action" => "Rcv"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QRcv-NOTAUTH"
					"[rsa][message][id1]" => "PACKET:QRcv-NOTAUTH"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QRcv-SERVFAIL
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> Q [<fld12> <fld13> SERVFAIL] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+SERVFAIL\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QRcv-SERVFAIL"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "SERVFAIL"
				"action" => "Rcv"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QRcv-SERVFAIL"
					"[rsa][message][id1]" => "PACKET:QRcv-SERVFAIL"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QRcv-REFUSED
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> Q [<fld12> <fld13> REFUSED] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+REFUSED\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QRcv-REFUSED"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"resultcode" => "REFUSED"
				"action" => "Rcv"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QRcv-REFUSED"
					"[rsa][message][id1]" => "PACKET:QRcv-REFUSED"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QSnd-NOERROR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> Q [<fld12> <fld13> NOERROR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOERROR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QSnd-NOERROR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"resultcode" => "NOERROR"
				"action" => "Snd"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QSnd-NOERROR"
					"[rsa][message][id1]" => "PACKET:QSnd-NOERROR"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:m:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QSnd-NXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> Q [<fld12> <fld13> NXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QSnd-NXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "NXDOMAIN"
				"action" => "Snd"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QSnd-NXDOMAIN"
					"[rsa][message][id1]" => "PACKET:QSnd-NXDOMAIN"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QSnd-NOTAUTH
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> Q [<fld12> <fld13> NOTAUTH] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTAUTH\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QSnd-NOTAUTH"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"resultcode" => "NOTAUTH"
				"action" => "Snd"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QSnd-NOTAUTH"
					"[rsa][message][id1]" => "PACKET:QSnd-NOTAUTH"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QSnd-SERVFAIL
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> Q [<fld12> <fld13> SERVFAIL] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+SERVFAIL\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QSnd-SERVFAIL"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "SERVFAIL"
				"action" => "Snd"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QSnd-SERVFAIL"
					"[rsa][message][id1]" => "PACKET:QSnd-SERVFAIL"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QSnd-REFUSED
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> Q [<fld12> <fld13> REFUSED] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+Q[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+REFUSED\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QSnd-REFUSED"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"resultcode" => "REFUSED"
				"action" => "Snd"
				"result" => "Standard Query"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QSnd-REFUSED"
					"[rsa][message][id1]" => "PACKET:QSnd-REFUSED"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NRcv-NOERROR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> N [<fld12> <fld13> NOERROR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOERROR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NRcv-NOERROR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"resultcode" => "NOERROR"
				"action" => "Rcv"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NRcv-NOERROR"
					"[rsa][message][id1]" => "PACKET:NRcv-NOERROR"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NRcv-NXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> N [<fld12> <fld13> NXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NRcv-NXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "NXDOMAIN"
				"action" => "Rcv"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NRcv-NXDOMAIN"
					"[rsa][message][id1]" => "PACKET:NRcv-NXDOMAIN"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NRcv-NOTAUTH
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> N [<fld12> <fld13> NOTAUTH] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTAUTH\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NRcv-NOTAUTH"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"resultcode" => "NOTAUTH"
				"action" => "Rcv"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NRcv-NOTAUTH"
					"[rsa][message][id1]" => "PACKET:NRcv-NOTAUTH"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NRcv-SERVFAIL
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> N [<fld12> <fld13> SERVFAIL] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+SERVFAIL\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NRcv-SERVFAIL"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "SERVFAIL"
				"action" => "Rcv"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NRcv-SERVFAIL"
					"[rsa][message][id1]" => "PACKET:NRcv-SERVFAIL"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NRcv-REFUSED
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> N [<fld12> <fld13> REFUSED] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+REFUSED\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NRcv-REFUSED"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"resultcode" => "REFUSED"
				"action" => "Rcv"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NRcv-REFUSED"
					"[rsa][message][id1]" => "PACKET:NRcv-REFUSED"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NSnd-NOERROR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> N [<fld12> <fld13> NOERROR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOERROR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NSnd-NOERROR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"resultcode" => "NOERROR"
				"action" => "Snd"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NSnd-NOERROR"
					"[rsa][message][id1]" => "PACKET:NSnd-NOERROR"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NSnd-NXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> N [<fld12> <fld13> NXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NSnd-NXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "NXDOMAIN"
				"action" => "Snd"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NSnd-NXDOMAIN"
					"[rsa][message][id1]" => "PACKET:NSnd-NXDOMAIN"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NSnd-NOTAUTH
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> N [<fld12> <fld13> NOTAUTH] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTAUTH\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NSnd-NOTAUTH"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"resultcode" => "NOTAUTH"
				"action" => "Snd"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NSnd-NOTAUTH"
					"[rsa][message][id1]" => "PACKET:NSnd-NOTAUTH"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NSnd-SERVFAIL
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> N [<fld12> <fld13> SERVFAIL] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+SERVFAIL\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NSnd-SERVFAIL"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "SERVFAIL"
				"action" => "Snd"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NSnd-SERVFAIL"
					"[rsa][message][id1]" => "PACKET:NSnd-SERVFAIL"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:NSnd-REFUSED
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> N [<fld12> <fld13> REFUSED] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+N[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+REFUSED\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:NSnd-REFUSED"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"resultcode" => "REFUSED"
				"action" => "Snd"
				"result" => "Notify"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:NSnd-REFUSED"
					"[rsa][message][id1]" => "PACKET:NSnd-REFUSED"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:URcv-NOERROR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> U [<fld12> <fld13> NOERROR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOERROR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:URcv-NOERROR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"resultcode" => "NOERROR"
				"action" => "Rcv"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:URcv-NOERROR"
					"[rsa][message][id1]" => "PACKET:URcv-NOERROR"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:URcv-NXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> U [<fld12> <fld13> NXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:URcv-NXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "NXDOMAIN"
				"action" => "Rcv"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:URcv-NXDOMAIN"
					"[rsa][message][id1]" => "PACKET:URcv-NXDOMAIN"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:URcv-NOTAUTH
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> U [<fld12> <fld13> NOTAUTH] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTAUTH\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:URcv-NOTAUTH"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"resultcode" => "NOTAUTH"
				"action" => "Rcv"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:URcv-NOTAUTH"
					"[rsa][message][id1]" => "PACKET:URcv-NOTAUTH"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:URcv-SERVFAIL
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> U [<fld12> <fld13> SERVFAIL] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+SERVFAIL\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:URcv-SERVFAIL"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "SERVFAIL"
				"action" => "Rcv"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:URcv-SERVFAIL"
					"[rsa][message][id1]" => "PACKET:URcv-SERVFAIL"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:URcv-REFUSED
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> U [<fld12> <fld13> REFUSED] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+REFUSED\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:URcv-REFUSED"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"resultcode" => "REFUSED"
				"action" => "Rcv"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:URcv-REFUSED"
					"[rsa][message][id1]" => "PACKET:URcv-REFUSED"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:USnd-NOERROR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> U [<fld12> <fld13> NOERROR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOERROR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:USnd-NOERROR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"resultcode" => "NOERROR"
				"action" => "Snd"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:USnd-NOERROR"
					"[rsa][message][id1]" => "PACKET:USnd-NOERROR"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:USnd-NXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> U [<fld12> <fld13> NXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:USnd-NXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "NXDOMAIN"
				"action" => "Snd"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:USnd-NXDOMAIN"
					"[rsa][message][id1]" => "PACKET:USnd-NXDOMAIN"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:USnd-NOTAUTH
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> U [<fld12> <fld13> NOTAUTH] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTAUTH\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:USnd-NOTAUTH"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"resultcode" => "NOTAUTH"
				"action" => "Snd"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:USnd-NOTAUTH"
					"[rsa][message][id1]" => "PACKET:USnd-NOTAUTH"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:USnd-SERVFAIL
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> U [<fld12> <fld13> SERVFAIL] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+SERVFAIL\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:USnd-SERVFAIL"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "SERVFAIL"
				"action" => "Snd"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:USnd-SERVFAIL"
					"[rsa][message][id1]" => "PACKET:USnd-SERVFAIL"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:USnd-REFUSED
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> U [<fld12> <fld13> REFUSED] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+U[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+REFUSED\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:USnd-REFUSED"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"resultcode" => "REFUSED"
				"action" => "Snd"
				"result" => "Update"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:USnd-REFUSED"
					"[rsa][message][id1]" => "PACKET:USnd-REFUSED"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Rcv-NOERROR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> ? [<fld12> <fld13> NOERROR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOERROR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Rcv-NOERROR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"resultcode" => "NOERROR"
				"action" => "Rcv"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Rcv-NOERROR"
					"[rsa][message][id1]" => "PACKET:?Rcv-NOERROR"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Rcv-NXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> ? [<fld12> <fld13> NXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Rcv-NXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "NXDOMAIN"
				"action" => "Rcv"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Rcv-NXDOMAIN"
					"[rsa][message][id1]" => "PACKET:?Rcv-NXDOMAIN"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Rcv-NOTAUTH
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> ? [<fld12> <fld13> NOTAUTH] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTAUTH\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Rcv-NOTAUTH"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"resultcode" => "NOTAUTH"
				"action" => "Rcv"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Rcv-NOTAUTH"
					"[rsa][message][id1]" => "PACKET:?Rcv-NOTAUTH"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Rcv-SERVFAIL
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> ? [<fld12> <fld13> SERVFAIL] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+SERVFAIL\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Rcv-SERVFAIL"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "SERVFAIL"
				"action" => "Rcv"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Rcv-SERVFAIL"
					"[rsa][message][id1]" => "PACKET:?Rcv-SERVFAIL"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Rcv-REFUSED
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <saddr> <fld10> <fld11> ? [<fld12> <fld13> REFUSED] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<saddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+REFUSED\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Rcv-REFUSED"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"resultcode" => "REFUSED"
				"action" => "Rcv"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Rcv-REFUSED"
					"[rsa][message][id1]" => "PACKET:?Rcv-REFUSED"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Snd-NOERROR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> ? [<fld12> <fld13> NOERROR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOERROR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Snd-NOERROR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Success"
				"resultcode" => "NOERROR"
				"action" => "Snd"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Snd-NOERROR"
					"[rsa][message][id1]" => "PACKET:?Snd-NOERROR"
					"[event][categoryid]" => "1801020000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Snd-NXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> ? [<fld12> <fld13> NXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Snd-NXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "NXDOMAIN"
				"action" => "Snd"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Snd-NXDOMAIN"
					"[rsa][message][id1]" => "PACKET:?Snd-NXDOMAIN"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Snd-NOTAUTH
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> ? [<fld12> <fld13> NOTAUTH] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTAUTH\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Snd-NOTAUTH"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"resultcode" => "NOTAUTH"
				"action" => "Snd"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Snd-NOTAUTH"
					"[rsa][message][id1]" => "PACKET:?Snd-NOTAUTH"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Snd-SERVFAIL
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> ? [<fld12> <fld13> SERVFAIL] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+SERVFAIL\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Snd-SERVFAIL"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Send"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"resultcode" => "SERVFAIL"
				"action" => "Snd"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Snd-SERVFAIL"
					"[rsa][message][id1]" => "PACKET:?Snd-SERVFAIL"
					"[event][categoryid]" => "1801010000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Snd-REFUSED
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> ? [<fld12> <fld13> REFUSED] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+REFUSED\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Snd-REFUSED"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Deny"
				"ec_theme" => "Communication"
				"resultcode" => "REFUSED"
				"action" => "Snd"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Snd-REFUSED"
					"[rsa][message][id1]" => "PACKET:?Snd-REFUSED"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:?Snd-NOTIMP
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld10> <fld11> ? [<fld12> <fld13> NOTIMP] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\?[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+NOTIMP\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:?Snd-NOTIMP"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"resultcode" => "NOTIMP"
				"action" => "Snd"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:?Snd-NOTIMP"
					"[rsa][message][id1]" => "PACKET:?Snd-NOTIMP"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QSnd-YXDOMAIN
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Snd <daddr> <fld15> <fld10> <fld11> [<fld12> <fld13> YXDOMAIN] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Snd[\s]+(?<daddr>[^\s]*)[\s]+(?<fld15>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+YXDOMAIN\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QSnd-YXDOMAIN"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"resultcode" => "NOTIMP"
				"action" => "Snd"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QSnd-YXDOMAIN"
					"[rsa][message][id1]" => "PACKET:QSnd-YXDOMAIN"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE PACKET:QRcv-FORMERR
		# line in RSA: <fld1> <fld2>{ AM <process_id> PACKET | PM <process_id> PACKET | <process_id> PACKET }<fld6> <protocol> Rcv <daddr> <fld10> <fld11> [<fld12> <fld13> FORMERR] <agent> <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s\s\s]*)([\s]*AM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*PM[\s]+(?<process_id>[^\s]*)[\s]+PACKET[\s]+|[\s]*(?<process_id>[^\s]*)[\s]+PACKET[\s]+)(?<fld6>[^\s]*)[\s]+(?<protocol>[^\s]*)[\s]+Rcv[\s]+(?<daddr>[^\s]*)[\s]+(?<fld10>[^\s]*)[\s]+(?<fld11>[^\s]*)[\s]+\[(?<fld12>[^\s]*)[\s]+(?<fld13>[^\s]*)[\s]+FORMERR\][\s]+(?<agent>[^\s]*)[\s]+(?<info>.*)$" }
				id => "message-PACKET:QRcv-FORMERR"
				add_field => {
				"dns_querytype" => "%{agent}"
				"ec_subject" => "NetworkComm"
				"ec_theme" => "Communication"
				"resultcode" => "NOTIMP"
				"action" => "Snd"
				"result" => "Unknown"
				"event_type" => "PACKET"
					"[event][id]" => "PACKET:QRcv-FORMERR"
					"[rsa][message][id1]" => "PACKET:QRcv-FORMERR"
					"[event][categoryid]" => "1801000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "EVENT" {
		# MESSAGE EVENT
		# line in RSA: <fld1> <fld2> <fld3> <process_id> <event_type> The DNS server has started
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{process_id} %{event_type} The DNS server has started" }
				id => "message-EVENT"
				add_field => {
				"event_description" => "DNS server has started"
					"[event][id]" => "EVENT"
					"[rsa][message][id1]" => "EVENT"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE EVENT:01
		# line in RSA: <fld1> <fld2> <fld3> <process_id> <event_type> The DNS server received a bad TCP-based DNS message from <saddr>.  The packet was rejected or ignored. The event data contains the DNS packet.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{process_id} %{event_type} The DNS server received a bad TCP-based DNS message from %{saddr}.  The packet was rejected or ignored. The event data contains the DNS packet." }
				id => "message-EVENT:01"
				add_field => {
				"event_description" => "DNS server received a bad TCP-based DNS message"
					"[event][id]" => "EVENT:01"
					"[rsa][message][id1]" => "EVENT:01"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE EVENT:02
		# line in RSA: <fld1> <fld2> <fld3> <process_id> <event_type> The DNS server successfully completed transfer of version <version> of zone <zone> to the DNS server at <daddr>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{process_id} %{event_type} The DNS server successfully completed transfer of version %{version} of zone %{zone} to the DNS server at %{daddr}." }
				id => "message-EVENT:02"
				add_field => {
				"event_description" => "DNS server successfully completed transfer"
					"[event][id]" => "EVENT:02"
					"[rsa][message][id1]" => "EVENT:02"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE EVENT:03
		# line in RSA: <fld1> <fld2> <fld3> <process_id> <event_type> The DNS server wrote version <version> of zone <zone> to file <filename>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{process_id} %{event_type} The DNS server wrote version %{version} of zone %{zone} to file %{filename}." }
				id => "message-EVENT:03"
				add_field => {
				"event_description" => "DNS server wrote version"
					"[event][id]" => "EVENT:03"
					"[rsa][message][id1]" => "EVENT:03"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE EVENT:04
		# line in RSA: <fld1> <fld2> <fld3> <process_id> <event_type> A more recent version, version <version> of zone <zone> was found at the DNS server at <daddr>. Zone transfer is in progress.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{process_id} %{event_type} A more recent version, version %{version} of zone %{zone} was found at the DNS server at %{daddr}. Zone transfer is in progress." }
				id => "message-EVENT:04"
				add_field => {
				"event_description" => "A more recent zone version was found"
					"[event][id]" => "EVENT:04"
					"[rsa][message][id1]" => "EVENT:04"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE EVENT:05
		# line in RSA: <fld1> <fld2> <fld3> <process_id> <event_type> The DNS server has finished the background loading of zones. All zones are now available for DNS updates and zone transfers, as allowed by their individual zone configuration.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{process_id} %{event_type} The DNS server has finished the background loading of zones. All zones are now available for DNS updates and zone transfers, as allowed by their individual zone configuration." }
				id => "message-EVENT:05"
				add_field => {
				"event_description" => "DNS server finished background loading of zones"
					"[event][id]" => "EVENT:05"
					"[rsa][message][id1]" => "EVENT:05"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
		# MESSAGE EVENT:06
		# line in RSA: <fld1> <fld2> <fld3> <process_id> <event_type> The DNS server encountered an invalid domain name in a packet from <saddr>. The packet will be rejected. The event data contains the DNS packet.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{process_id} %{event_type} The DNS server encountered an invalid domain name in a packet from %{saddr}. The packet will be rejected. The event data contains the DNS packet." }
				id => "message-EVENT:06"
				add_field => {
				"event_description" => "DNS server encountered an invalid domain name"
					"[event][id]" => "EVENT:06"
					"[rsa][message][id1]" => "EVENT:06"
					"[event][categoryid]" => "1703000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
			}
		}
	}
	# PARSER msgParserId586
	# line in RSA: <fld1> <fld2> <fld3> <process_id> <event_type> Cache locking prevented a record from being cached.
	else if [logstash][msgparser][id] == "msgParserId586" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{process_id} %{event_type} Cache locking prevented a record from being cached." }
			id => "msgParserId586"
			add_field => {
				"event_description" => "Cache locking prevented a record from being cached"
				"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:mm:s", "yyyyMMdd H:mm:s", "M/d/yyyy H:mm:s" ] }
		}
	}
	# PARSER msgParserId587
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}The WinRM service has received an unsecure HTTP connection from <saddr>. <info>
	else if [logstash][msgparser][id] == "msgParserId587" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)The[\s]+WinRM[\s]+service[\s]+has[\s]+received[\s]+an[\s]+unsecure[\s]+HTTP[\s]+connection[\s]+from[\s]+(?<saddr>[^\.]*)\.[\s]+(?<info>.*)$" }
			id => "msgParserId587"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Receive"
				"ec_theme" => "Communication"
				"ec_outcome" => "Unknown"
				"event_description" => "The WinRM service has received an unsecure HTTP connection."
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId588
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId588" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId588"
			add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Detect"
				"ec_theme" => "Communication"
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId589
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId589" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId589"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId590
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> with the following information: StartTime: <fld13>{	 | ,} StopTime: <fld14>{	 | ,} ExitCode: <fld15>{	 | ,} Number of new programs:  <fld16>{	 | ,} Number of removed programs:  <fld17>{	 | ,} Number of updated programs:  <fld18>{	 | ,} Number of installed programs:  <fld19>{	 | ,} Number of new orphan files:  <fld20>{	 | ,} Number of new add-ons:  <fld21>{	 | ,} Number of removed add-ons:  <fld22>{	 | ,} Number of updated add-ons:  <fld23>{	 | ,} Number of installed add-ons:  <fld24>{	 | ,} Number of new installations:  <fld25>{	 | ,}<fld26>
	else if [logstash][msgparser][id] == "msgParserId590" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+with[\s]+the[\s]+following[\s]+information:[\s]+StartTime:[\s]+(?<fld13>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+StopTime:[\s]+(?<fld14>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+ExitCode:[\s]+(?<fld15>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+new[\s]+programs:[\s]+(?<fld16>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+removed[\s]+programs:[\s]+(?<fld17>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+updated[\s]+programs:[\s]+(?<fld18>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+installed[\s]+programs:[\s]+(?<fld19>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+new[\s]+orphan[\s]+files:[\s]+(?<fld20>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+new[\s]+add\-ons:[\s]+(?<fld21>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+removed[\s]+add\-ons:[\s]+(?<fld22>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+updated[\s]+add\-ons:[\s]+(?<fld23>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+installed[\s]+add\-ons:[\s]+(?<fld24>[^\t\s]*)(\t[\s]+|[\s]*,)[\s]+Number[\s]+of[\s]+new[\s]+installations:[\s]+(?<fld25>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld26>.*)$" }
			id => "msgParserId590"
			add_field => {
				"ec_subject" => "Configuration"
				"ec_activity" => "Modify"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId591
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Task Scheduler started "{{<process_id>}" instance of the "<process>" task for user "<username>"<fld6>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId592
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Task Scheduler successfully finished "{{<process_id>}" instance of the "<process>" task for user "<username>"<fld6>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId593
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}User "<username>"  registered Task Scheduler task "<process>"<fld6>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId594
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Task Scheduler launched "{{<process_id>}"  instance of task "<process>"<fld6>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId595
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Task Scheduler launch task "<process>" , instance "<application>"  with process ID <process_id>.<fld6>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	else if [logstash][msgparser][id] == "200_Microsoft-Windows-TaskScheduler" {
		# MESSAGE 200_Microsoft-Windows-TaskScheduler:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Task Scheduler launched action "<application>" in instance "{{<process_id>}" of task "<process>"<fld6>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 200_Microsoft-Windows-TaskScheduler
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Task Scheduler launched action "<application>" in instance "{{<process_id>}" of task "<process>".,<fld6>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	# PARSER msgParserId598
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Task Scheduler successfully completed task "<process>" , instance "{{<process_id>}" , action "<application>" with return code <resultcode>.<fld6>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	# PARSER msgParserId599
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>
	else if [logstash][msgparser][id] == "msgParserId599" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>.*)$" }
			id => "msgParserId599"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId290
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>{	 | ,}<fld3>
	else if [logstash][msgparser][id] == "msgParserId290" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld3>.*)$" }
			id => "msgParserId290"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId600
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Microsoft Security Client successfully applied {security policy: "<policyname>"	<fld3>| security policy: "<policyname>",<fld3>}
	else if [logstash][msgparser][id] == "msgParserId600" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Microsoft[\s]+Security[\s]+Client[\s]+successfully[\s]+applied[\s]+(security[\s]+policy:[\s]+\"(?<policyname>[^\"]*)\"\t(?<fld3>.*)|[\s]*security[\s]+policy:[\s]+\"(?<policyname>[^\"]*)\",(?<fld3>.*))$" }
			id => "msgParserId600"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId601
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId601" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId601"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId602
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId602" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId602"
			add_field => {
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId603
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId603" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId603"
			add_field => {
				"ec_theme" => "Configuration"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId604
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId604" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId604"
			add_field => {
				"ec_activity" => "Start"
				"ec_theme" => "Authentication"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId605
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId605" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId605"
			add_field => {
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId606
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId606" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId606"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId607
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId607" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId607"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "Configuration"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId608
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId608" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId608"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId609
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId609" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId609"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId610
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId610" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId610"
			add_field => {
				"ec_theme" => "Communication"
				"ec_outcome" => "Failure"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId611
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId611" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId611"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Start"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId612
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Remote Desktop Services: Session logon succeeded:    User: <username> Session ID: <sessionid> Source Network Address: <saddr>{	 | ,}<fld50>
	else if [logstash][msgparser][id] == "msgParserId612" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Remote[\s]+Desktop[\s]+Services:[\s]+Session[\s]+logon[\s]+succeeded:[\s]+User:[\s]+(?<username>[^\s]*)[\s]+Session[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld50>.*)$" }
			id => "msgParserId612"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Session logon succeeded"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId613
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId613" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId613"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId614
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId614" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId614"
			add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Stop"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId615
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId615" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId615"
			add_field => {
				"ec_activity" => "Start"
				"ec_theme" => "Communication"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId616
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId616" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId616"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId617
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Remote Desktop Services: Session has been disconnected:    User: <username>  Session ID: <sessionid>  Source Network Address: <saddr>{	 | ,}<fld50>
	else if [logstash][msgparser][id] == "msgParserId617" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Remote[\s]+Desktop[\s]+Services:[\s]+Session[\s]+has[\s]+been[\s]+disconnected:[\s]+User:[\s]+(?<username>[^\s]*)[\s]+Session[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld50>.*)$" }
			id => "msgParserId617"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Session has been disconnected"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId618
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Remote Desktop Services: Session reconnection succeeded:    User: <username>  Session ID: <sessionid>  Source Network Address: <saddr>{	 | ,}<fld50>
	else if [logstash][msgparser][id] == "msgParserId618" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Remote[\s]+Desktop[\s]+Services:[\s]+Session[\s]+reconnection[\s]+succeeded:[\s]+User:[\s]+(?<username>[^\s]*)[\s]+Session[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Source[\s]+Network[\s]+Address:[\s]+(?<saddr>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld50>.*)$" }
			id => "msgParserId618"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
				"event_description" => "Session reconnection succeeded"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId619
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId619" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId619"
			add_field => {
				"ec_theme" => "Communication"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId620
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId620" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId620"
			add_field => {
				"ec_activity" => "Detect"
				"ec_theme" => "Configuration"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId621
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
	else if [logstash][msgparser][id] == "msgParserId621" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
			id => "msgParserId621"
			add_field => {
				"ec_outcome" => "Error"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId622
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description> Service Name: <service> Service File Name: {"<filename>" <fld21>| <filename> /<param>|<filename>} Service Type: <fld23> Service Start Type: <fld24> {Service Account: <service_account>,<fld50>|Service Account: <service_account>}
	else if [logstash][msgparser][id] == "msgParserId622" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Service[\s]+Name:[\s]+(?<service>[^\s]*)[\s]+Service[\s]+File[\s]+Name:[\s]+(\"(?<filename>[^\"]*)\"[\s]+(?<fld21>[^\s]*)|[\s]*(?<filename>[^\s]*)[\s]+/(?<param>[^\s]*)|(?<filename>[^\s]*))[\s]+Service[\s]+Type:[\s]+(?<fld23>[^\s]*)[\s]+Service[\s]+Start[\s]+Type:[\s]+(?<fld24>[^\s]*)[\s]+(Service[\s]+Account:[\s]+(?<service_account>[^,]*),(?<fld50>.*)|Service[\s]+Account:[\s]+(?<service_account>.*))$" }
			id => "msgParserId622"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "Microsoft-Windows-Sysmon/Operational" {
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Process_Create:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld13>{	 | ,}Process {Create:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|Create:<space> }UtcTime: <fld14><fld15>  ProcessGuid: <fld16>  ProcessId: <process_id>  Image: <service>  FileVersion: <version>  Description: <fld49>  Product: <product>  Company: <fld17> {CommandLine: "<filename>" <fld50>|CommandLine: <filename>, <fld50>|CommandLine: <filename>} CurrentDirectory: <directory>  User: <domain>\<username> LogonGuid: {{<fld19>}  LogonId: <sessionid>  TerminalSessionId: <fld20>  IntegrityLevel: <fld21>  Hashes: <fld41>  ParentProcessGuid: {{<fld42>}  ParentProcessId: <parent_pid>  ParentImage: <fld43>  ParentCommandLine: <fld44>{	 | ,}<fld45>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Process_Create:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld13>{	 | ,}Process {Create:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|Create:<space> }UtcTime: <fld14><fld15>  ProcessGuid: <fld16>  ProcessId: <process_id>  Image: <service>  TargetFilename: <filename>  CreationUtcTime: <fld17>  PreviousCreationUtcTime: <fld18>{	 | ,}<fld19>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Process_Create:03
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld13>{	 | ,}Process Create:<space>RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>UtcTime: <fld13> ProcessGuid: <fld14>  ProcessId: <process_id> Image: <process> FileVersion: <version> Description: <fld15> Product: <fld16> Company: <fld17>CommandLine: <param>CurrentDirectory:<directory>User:<domain>\<username> LogonGuid: <fld19> LogonId:<sessionid>TerminalSessionId:<fld20>IntegrityLevel:<fld21>Hashes: MD5=<checksum>,SHA256=<checksum> ParentProcessGuid: <fld42> ParentProcessId:<parent_pid>ParentImage:<fld43>ParentCommandLine:<action>{	 | ,}<fld45>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld13>[^\t\s]*)(\t[\s]+|[\s]*,)Process[\s]+Create:(?<space>[^R]*)RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)UtcTime:[\s]+(?<fld13>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld14>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<process>[^\s]*)[\s]+FileVersion:[\s]+(?<version>[^\s]*)[\s]+Description:[\s]+(?<fld15>[^\s]*)[\s]+Product:[\s]+(?<fld16>[^\s]*)[\s]+Company:[\s]+(?<fld17>[^C]*)CommandLine:[\s]+(?<param>[^C]*)CurrentDirectory:(?<directory>[^U]*)User:(?<domain>[^\\]*)\\(?<username>[^\s]*)[\s]+LogonGuid:[\s]+(?<fld19>[^\s]*)[\s]+LogonId:(?<sessionid>[^T]*)TerminalSessionId:(?<fld20>[^I]*)IntegrityLevel:(?<fld21>[^H]*)Hashes:[\s]+MD5=(?<checksum>[^,]*),SHA256=(?<checksum>[^\s]*)[\s]+ParentProcessGuid:[\s]+(?<fld42>[^\s]*)[\s]+ParentProcessId:(?<parent_pid>[^P]*)ParentImage:(?<fld43>[^P]*)ParentCommandLine:(?<action>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld45>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Process_Create:03"
				add_field => {
				"ec_activity" => "Create"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Process_Create:03"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Process_Create:03"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Process_Create
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Process Create:<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Process[\s]+Create:(?<event_description>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Process_Create"
				add_field => {
				"ec_activity" => "Create"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Process_Create"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Process_Create"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_File_creation_time_changed
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}File creation time {changed:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|changed:<space> }UtcTime: <fld15>  ProcessGuid: {{<fld16>}  ProcessId: <process_id>  Image: <service> TargetFilename: <filename>  CreationUtcTime: <fld32>  PreviousCreationUtcTime: <fld33>{	 | ,}<fld34>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)File[\s]+creation[\s]+time[\s]+(changed:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|changed:(?<space>[^\s]*)[\s]+)UtcTime:[\s]+(?<fld15>[^\s]*)[\s]+ProcessGuid:[\s]+\{(?<fld16>[^\}]*)\}[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+TargetFilename:[\s]+(?<filename>[^\s]*)[\s]+CreationUtcTime:[\s]+(?<fld32>[^\s]*)[\s]+PreviousCreationUtcTime:[\s]+(?<fld33>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld34>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_File_creation_time_changed"
				add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Modify"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_File_creation_time_changed"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_File_creation_time_changed"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Network_connection:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Network connection {detected:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|detected:<space> }UtcTime: <fld15>  ProcessGuid: {{<fld26>}  ProcessId: <process_id>  Image: <service>  User: <domain>\<username> Protocol: <protocol>  Initiated: <fld16>  SourceIsIpv6: <fld17>  SourceIp: <saddr>  SourceHostname: <shost>  SourcePort: <sport>  SourcePortName: <portname>  DestinationIsIpv6: <fld18>  DestinationIp: <daddr>  DestinationHostname: <dhost>  DestinationPort: <dport>  DestinationPortName:<fld19>{	 | ,}<fld99>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Network[\s]+connection[\s]+(detected:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|detected:(?<space>[^\s]*)[\s]+)UtcTime:[\s]+(?<fld15>[^\s]*)[\s]+ProcessGuid:[\s]+\{(?<fld26>[^\}]*)\}[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+User:[\s]+(?<domain>[^\\]*)\\(?<username>[^\s]*)[\s]+Protocol:[\s]+(?<protocol>[^\s]*)[\s]+Initiated:[\s]+(?<fld16>[^\s]*)[\s]+SourceIsIpv6:[\s]+(?<fld17>[^\s]*)[\s]+SourceIp:[\s]+(?<saddr>[^\s]*)[\s]+SourceHostname:[\s]+(?<shost>[^\s]*)[\s]+SourcePort:[\s]+(?<sport>[^\s]*)[\s]+SourcePortName:[\s]+(?<portname>[^\s]*)[\s]+DestinationIsIpv6:[\s]+(?<fld18>[^\s]*)[\s]+DestinationIp:[\s]+(?<daddr>[^\s]*)[\s]+DestinationHostname:[\s]+(?<dhost>[^\s]*)[\s]+DestinationPort:[\s]+(?<dport>[^\s]*)[\s]+DestinationPortName:(?<fld19>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld99>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Network_connection:01"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Detect"
				"ec_theme" => "Communication"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Network_connection:01"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Network_connection:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Network_connection:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Network connection {detected:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|detected:<space> }UtcTime: <fld15>  ProcessGuid: {{<fld16>}  ProcessId: <process_id>  Image: <service> TargetFilename: <filename>  CreationUtcTime: <fld32>  PreviousCreationUtcTime: <fld33>{	 | ,}<fld34>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Network[\s]+connection[\s]+(detected:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|detected:(?<space>[^\s]*)[\s]+)UtcTime:[\s]+(?<fld15>[^\s]*)[\s]+ProcessGuid:[\s]+\{(?<fld16>[^\}]*)\}[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+TargetFilename:[\s]+(?<filename>[^\s]*)[\s]+CreationUtcTime:[\s]+(?<fld32>[^\s]*)[\s]+PreviousCreationUtcTime:[\s]+(?<fld33>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld34>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Network_connection:02"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Detect"
				"ec_theme" => "Communication"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Network_connection:02"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Network_connection:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Network_connection
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Network connection detected:<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Network[\s]+connection[\s]+detected:(?<event_description>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Network_connection"
				add_field => {
				"ec_subject" => "NetworkComm"
				"ec_activity" => "Detect"
				"ec_theme" => "Communication"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Network_connection"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Network_connection"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Process_terminated
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Process {terminated:<space>RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|terminated:<space>}UtcTime: <fld13> ProcessGuid: <fld14>  ProcessId: <process_id> {Image: <process> TargetFilename: <filename> CreationUtcTime: <fld16>  PreviousCreationUtcTime: <fld17>|Image: <process>}{	 | ,}<fld15>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Process[\s]+(terminated:(?<space>[^R]*)RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|terminated:(?<space>[^U]*))UtcTime:[\s]+(?<fld13>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld14>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+(Image:[\s]+(?<process>[^\s]*)[\s]+TargetFilename:[\s]+(?<filename>[^\s]*)[\s]+CreationUtcTime:[\s]+(?<fld16>[^\s]*)[\s]+PreviousCreationUtcTime:[\s]+(?<fld17>[^\t\s]*)|Image:[\s]+(?<process>[^\t\s]*))(\t[\s]+|[\s]*,)(?<fld15>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Process_terminated"
				add_field => {
				"ec_subject" => "Process"
				"ec_activity" => "Stop"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Process_terminated"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Process_terminated"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Driver_loaded:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld3>{	 | ,}<fld4><datetime>{	 | ,}<fld6>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld9>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Driver loaded:  UtcTime: <fld91>  ImageLoaded: <service>  Hashes: <fld19>  Signed: <fld20>  Signature: <signame>  SignatureStatus: <fld21><fld22>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Driver_loaded:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld3>{	 | ,}<fld4><datetime>{	 | ,}<fld6>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld9>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Driver loaded:  UtcTime: <fld91> ProcessGuid: {{<fld16>}  ProcessId: <process_id>  Image: <service> TargetFilename: <filename>  CreationUtcTime: <fld32>  PreviousCreationUtcTime: <fld33>{	 | ,}<fld34> 
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Driver_loaded
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Driver loaded:<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Driver[\s]+loaded:(?<event_description>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Driver_loaded"
				add_field => {
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Driver_loaded"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Driver_loaded"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Image_loaded
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Image loaded:<space>UtcTime: <fld91> ProcessGuid: {{<fld16>}  ProcessId: <process_id>  Image: <service> TargetFilename: <filename>  CreationUtcTime: <fld32>  PreviousCreationUtcTime: <fld33>{	 | ,}<fld34>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Image[\s]+loaded:(?<space>[^U]*)UtcTime:[\s]+(?<fld91>[^\s]*)[\s]+ProcessGuid:[\s]+\{(?<fld16>[^\}]*)\}[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+TargetFilename:[\s]+(?<filename>[^\s]*)[\s]+CreationUtcTime:[\s]+(?<fld32>[^\s]*)[\s]+PreviousCreationUtcTime:[\s]+(?<fld33>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld34>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Image_loaded"
				add_field => {
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Image_loaded"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Image_loaded"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Image_loaded:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Image {loaded:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|loaded:<space> }UtcTime: <fld13> ProcessGuid: <fld14>  ProcessId: <process_id> Image: <process> ImageLoaded: <directory> FileVersion: <version> Description: <event_description> Product: <product> Company: <fld17> Hashes: SHA1=<checksum>,MD5=<checksum>,SHA256=<checksum>,IMPHASH=<checksum>Signed: <fld18>Signature: <signame> SignatureStatus: <fld20><fld21>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE Microsoft-Windows-Sysmon/Operational_CreateRemoteThread
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}CreateRemoteThread {detected:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|detected:<space> }UtcTime: <fld91> ProcessGuid: {{<fld16>}  ProcessId: <process_id>  Image: <service> TargetFilename: <filename>  CreationUtcTime: <fld32>  PreviousCreationUtcTime: <fld33>{	 | ,}<fld34>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)CreateRemoteThread[\s]+(detected:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|detected:(?<space>[^\s]*)[\s]+)UtcTime:[\s]+(?<fld91>[^\s]*)[\s]+ProcessGuid:[\s]+\{(?<fld16>[^\}]*)\}[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+TargetFilename:[\s]+(?<filename>[^\s]*)[\s]+CreationUtcTime:[\s]+(?<fld32>[^\s]*)[\s]+PreviousCreationUtcTime:[\s]+(?<fld33>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld34>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_CreateRemoteThread"
				add_field => {
				"ec_activity" => "Detect"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_CreateRemoteThread"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_CreateRemoteThread"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_CreateRemoteThread:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}CreateRemoteThread {detected:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|detected:<space> }UtcTime: <fld91> SourceProcessGuid: {{<fld16>}  SourceProcessId: <process_id>  SourceImage: <service> TargetProcessGuid: {{<fld17>}  TargetProcessId: <fld16> TargetImage: <process> <fld18>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)CreateRemoteThread[\s]+(detected:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|detected:(?<space>[^\s]*)[\s]+)UtcTime:[\s]+(?<fld91>[^\s]*)[\s]+SourceProcessGuid:[\s]+\{(?<fld16>[^\}]*)\}[\s]+SourceProcessId:[\s]+(?<process_id>[^\s]*)[\s]+SourceImage:[\s]+(?<service>[^\s]*)[\s]+TargetProcessGuid:[\s]+\{(?<fld17>[^\}]*)\}[\s]+TargetProcessId:[\s]+(?<fld16>[^\s]*)[\s]+TargetImage:[\s]+(?<process>[^\s]*)[\s]+(?<fld18>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_CreateRemoteThread:01"
				add_field => {
				"ec_activity" => "Detect"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_CreateRemoteThread:01"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_CreateRemoteThread:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}RawAccessRead detected:<space>RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>UtcTime: <fld7> ProcessGuid: <fld23> ProcessId: <process_id> Image: <process> Device: <device>{	| ,}<fld99>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)RawAccessRead[\s]+detected:(?<space>[^R]*)RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld23>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<process>[^\s]*)[\s]+Device:[\s]+(?<device>[^\t\s]*)(\t|[\s]*,)(?<fld99>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected"
				add_field => {
				"ec_activity" => "Detect"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected:01
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}RawAccessRead detected:  UtcTime: <fld7> ProcessGuid: <fld23> ProcessId: <process_id> Image: <process> Device: <device>{	| ,}<fld99>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)RawAccessRead[\s]+detected:[\s]+UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld23>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<process>[^\s]*)[\s]+Device:[\s]+(?<device>[^\t\s]*)(\t|[\s]*,)(?<fld99>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected:01"
				add_field => {
				"ec_activity" => "Detect"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected:01"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected:01"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected:02
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}RawAccessRead detected:  UtcTime: <fld7> ProcessGuid: <fld23> ProcessId: <process_id> Image: <process> TargetFilename: <filename> CreationUtcTime: <fld8> PreviousCreationUtcTime: <fld9>{	| ,}<fld99>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)RawAccessRead[\s]+detected:[\s]+UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld23>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<process>[^\s]*)[\s]+TargetFilename:[\s]+(?<filename>[^\s]*)[\s]+CreationUtcTime:[\s]+(?<fld8>[^\s]*)[\s]+PreviousCreationUtcTime:[\s]+(?<fld9>[^\t\s]*)(\t|[\s]*,)(?<fld99>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected:02"
				add_field => {
				"ec_activity" => "Detect"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected:02"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_RawAccessRead_detected:02"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Registry_value_set
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Registry value {set:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|set:<space>}EventType: <action>  UtcTime: <fld7>  ProcessGuid: <fld8>  ProcessId: <process_id>  Image: <service>  TargetObject: <fld15>  Details: <fld16>{	 | ,}<fld55>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Registry[\s]+value[\s]+(set:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^E]*)|set:(?<space>[^E]*))EventType:[\s]+(?<action>[^\s]*)[\s]+UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld8>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+TargetObject:[\s]+(?<fld15>[^\s]*)[\s]+Details:[\s]+(?<fld16>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld55>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Registry_value_set"
				add_field => {
				"ec_subject" => "Registry"
				"ec_activity" => "Modify"
				"event_description" => "Registry value set"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Registry_value_set"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Registry_value_set"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Registry_object_added_or_deleted
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Registry object added or {deleted:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|deleted:<space>}EventType: <action>  UtcTime: <fld7> ProcessGuid: <fld8> ProcessId: <process_id> Image: <service> TargetObject: <fld15>{	 | ,}<fld55>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Registry[\s]+object[\s]+added[\s]+or[\s]+(deleted:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^E]*)|deleted:(?<space>[^E]*))EventType:[\s]+(?<action>[^\s]*)[\s]+UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld8>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+TargetObject:[\s]+(?<fld15>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld55>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Registry_object_added_or_deleted"
				add_field => {
				"ec_subject" => "Registry"
				"ec_activity" => "Modify"
				"event_description" => "Registry object added or deleted"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Registry_object_added_or_deleted"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Registry_object_added_or_deleted"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_File_created
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}File {created:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|created:<space>}UtcTime: <fld7> ProcessGuid: <fld8>  ProcessId: <process_id>  Image: <service>  TargetFilename: <filename>  CreationUtcTime: <fld9>{	 | ,}<fld55>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)File[\s]+(created:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|created:(?<space>[^U]*))UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld8>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+TargetFilename:[\s]+(?<filename>[^\s]*)[\s]+CreationUtcTime:[\s]+(?<fld9>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld55>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_File_created"
				add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Create"
				"event_description" => "File created"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_File_created"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_File_created"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Sysmon_service_state_changed
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Sysmon service state {changed:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|changed:<space>}UtcTime: <fld7> {State: <event_state> Version: <version>  SchemaVersion: <fld8>|State: <event_state>}{	 | ,}<fld55>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Sysmon[\s]+service[\s]+state[\s]+(changed:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|changed:(?<space>[^U]*))UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+(State:[\s]+(?<event_state>[^\s]*)[\s]+Version:[\s]+(?<version>[^\s]*)[\s]+SchemaVersion:[\s]+(?<fld8>[^\t\s]*)|State:[\s]+(?<event_state>[^\t\s]*))(\t[\s]+|[\s]*,)(?<fld55>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Sysmon_service_state_changed"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Modify"
				"event_description" => "Sysmon service state changed"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Sysmon_service_state_changed"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Sysmon_service_state_changed"
					"[event][categoryid]" => "1606000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_File_stream_created
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}File stream {created:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|created:<space>}UtcTime: <fld7> ProcessGuid: <fld8>  ProcessId: <process_id>  Image: <service>  TargetFilename: <filename>  CreationUtcTime: <fld9> Hash: MD5=<fld10>,SHA256=<fld11>{	 | ,}<fld55>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)File[\s]+stream[\s]+(created:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|created:(?<space>[^U]*))UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld8>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+Image:[\s]+(?<service>[^\s]*)[\s]+TargetFilename:[\s]+(?<filename>[^\s]*)[\s]+CreationUtcTime:[\s]+(?<fld9>[^\s]*)[\s]+Hash:[\s]+MD5=(?<fld10>[^,]*),SHA256=(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld55>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_File_stream_created"
				add_field => {
				"ec_subject" => "File"
				"ec_activity" => "Create"
				"event_description" => "File stream created"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_File_stream_created"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_File_stream_created"
					"[event][categoryid]" => "1605020000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Sysmon_config_state_changed
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Sysmon config state {changed:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|changed:<space>}UtcTime: <fld7> Configuration: <change_new>  ConfigurationFileHash: <fld8>{	 | ,}<fld55>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Sysmon[\s]+config[\s]+state[\s]+(changed:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|changed:(?<space>[^U]*))UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+Configuration:[\s]+(?<change_new>[^\s]*)[\s]+ConfigurationFileHash:[\s]+(?<fld8>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld55>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Sysmon_config_state_changed"
				add_field => {
				"ec_subject" => "Service"
				"ec_activity" => "Modify"
				"event_description" => "Sysmon config state changed"
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Sysmon_config_state_changed"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Sysmon_config_state_changed"
					"[event][categoryid]" => "1701000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Pipe_connected
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Pipe {Connected:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|Connected:<space>}UtcTime: <fld7>  ProcessGuid: <fld23>  ProcessId: <process_id>  PipeName: <process> Image: <service>{	 | ,}<fld99>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Pipe[\s]+(Connected:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|Connected:(?<space>[^U]*))UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld23>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+PipeName:[\s]+(?<process>[^\s]*)[\s]+Image:[\s]+(?<service>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld99>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Pipe_connected"
				add_field => {
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Pipe_connected"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Pipe_connected"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Pipe_created
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Pipe {Created:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|Created:<space>}UtcTime: <fld7>  ProcessGuid: <fld23>  ProcessId: <process_id>  PipeName: <process> Image: <service>{	 | ,}<fld99>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Pipe[\s]+(Created:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|Created:(?<space>[^U]*))UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+ProcessGuid:[\s]+(?<fld23>[^\s]*)[\s]+ProcessId:[\s]+(?<process_id>[^\s]*)[\s]+PipeName:[\s]+(?<process>[^\s]*)[\s]+Image:[\s]+(?<service>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld99>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Pipe_created"
				add_field => {
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Pipe_created"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Pipe_created"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE Microsoft-Windows-Sysmon/Operational_Process_accessed
		# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}Process {accessed:<space> RuleName: ID:<rule_uid>Technique:<rulename>Tactic:<context>|accessed:<space>}UtcTime: <fld7>  SourceProcessGUID: <fld23>  SourceProcessId: <process_id>  SourceThreadId: <fld25>  SourceImage: <process>  TargetProcessGUID: <fld71>  TargetProcessId: <process_id_src>  TargetImage: <service>  GrantedAccess: <accesses>  CallTrace: <fld9>{	 | ,}<fld99>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)Process[\s]+(accessed:(?<space>[^\s]*)[\s]+RuleName:[\s]+ID:(?<rule_uid>[^T]*)Technique:(?<rulename>[^T]*)Tactic:(?<context>[^U]*)|accessed:(?<space>[^U]*))UtcTime:[\s]+(?<fld7>[^\s]*)[\s]+SourceProcessGUID:[\s]+(?<fld23>[^\s]*)[\s]+SourceProcessId:[\s]+(?<process_id>[^\s]*)[\s]+SourceThreadId:[\s]+(?<fld25>[^\s]*)[\s]+SourceImage:[\s]+(?<process>[^\s]*)[\s]+TargetProcessGUID:[\s]+(?<fld71>[^\s]*)[\s]+TargetProcessId:[\s]+(?<process_id_src>[^\s]*)[\s]+TargetImage:[\s]+(?<service>[^\s]*)[\s]+GrantedAccess:[\s]+(?<accesses>[^\s]*)[\s]+CallTrace:[\s]+(?<fld9>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld99>.*)$" }
				id => "message-Microsoft-Windows-Sysmon/Operational_Process_accessed"
				add_field => {
					"[event][id]" => "Microsoft-Windows-Sysmon/Operational_Process_accessed"
					"[rsa][message][id1]" => "Microsoft-Windows-Sysmon/Operational_Process_accessed"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}
	# PARSER msgParserId651
	# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>file<filename>{	 | ,}<fld6>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	else if [logstash][msgparser][id] == "4104_Microsoft-Windows-PowerShell" {
		# MESSAGE 4104_Microsoft-Windows-PowerShell
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}Creating Scriptblock text (<fld8>):{<data> ScriptBlock ID: <sessionid>|<fld9>} Path:{<filename>	<fld7>|<filename>,<fld7>|<filename>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 4104_Microsoft-Windows-PowerShell:01
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<fld6>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	# PARSER msgParserId654
	# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>{	 | ,}<fld6>
	# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	else if [logstash][msgparser][id] == "403_PowerShell" {
		# MESSAGE 403_Windows_PowerShell
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application>-file<filename>-Command<fld5>EngineVersion=<fld5>{	 | ,}<fld2>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 403_Windows_PowerShell:01
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application><fld5>-Command & '<filename>'   EngineVersion=<fld6>{	 | ,}<fld2>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 403_Windows_PowerShell:02
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application>EngineVersion=<fld7>{	 | ,}<fld8>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 403_Windows_PowerShell:03
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>{	 | ,}<fld7>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "400_PowerShell" {
		# MESSAGE 400_Windows_PowerShell
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application>-file<filename>-Command<fld5>EngineVersion=<fld6>{	 | ,}<fld2>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 400_Windows_PowerShell:01
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application><fld5>-Command & '<filename>'   EngineVersion=<fld6>{	 | ,}<fld2>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 400_Windows_PowerShell:02
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application>EngineVersion=<fld7>{	 | ,}<fld8>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 400_Windows_PowerShell:03
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>{	 | ,}<fld7>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	else if [logstash][msgparser][id] == "600_PowerShell" {
		# MESSAGE 600_Windows_PowerShell
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application>-file<filename>-Command<fld5>EngineVersion=<fld6>{	 | ,}<fld2>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 600_Windows_PowerShell:01
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application><fld5>-Command & '<filename>'   EngineVersion=<fld6>{	 | ,}<fld2>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 600_Windows_PowerShell:02
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>HostApplication=<application>EngineVersion=<fld7>{	 | ,}<fld8>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE 600_Windows_PowerShell:03
		# line in RSA: <fld1>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld2>{	 | ,}<fld3><datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld4>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld5>{	 | ,}<event_description>.     Details:<fld6>{	 | ,}<fld7>
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
	}
	# PARSER msgParserId660
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject: <space> Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID: <sessionid>  User: <space> Security ID:   <sid>  Account Name:   <username>    Account Domain:   <domain>Process Information:<space>Process ID: <process_id> {Process Name: <process>|Name: <process>}
	else if [logstash][msgparser][id] == "msgParserId660" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+User:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^P]*)Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+(Process[\s]+Name:[\s]+(?<process>.*)|Name:[\s]+(?<process>.*))$" }
			id => "msgParserId660"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Read"
				"ec_theme" => "ALM"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	# PARSER msgParserId661
	# line in RSA: <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>   Subject: <space> Security ID: <sid>   Account Name: <username>    Account Domain: <domain>  Logon ID:  <sessionid>    Group:   Security ID:  <sid>   Group Name:  <group>   Group Domain:  <remote_domain>    Process Information:<space>Process ID: <process_id> {Process Name: <process>|Name: <process>}
	else if [logstash][msgparser][id] == "msgParserId661" {
		grok {
			match => { "message" => "^(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\s]*)[\s]+Subject:[\s]+(?<space>[^\s]*)[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Account[\s]+Name:[\s]+(?<username>[^\s]*)[\s]+Account[\s]+Domain:[\s]+(?<domain>[^\s]*)[\s]+Logon[\s]+ID:[\s]+(?<sessionid>[^\s]*)[\s]+Group:[\s]+Security[\s]+ID:[\s]+(?<sid>[^\s]*)[\s]+Group[\s]+Name:[\s]+(?<group>[^\s]*)[\s]+Group[\s]+Domain:[\s]+(?<remote_domain>[^\s]*)[\s]+Process[\s]+Information:(?<space>[^P]*)Process[\s]+ID:[\s]+(?<process_id>[^\s]*)[\s]+(Process[\s]+Name:[\s]+(?<process>.*)|Name:[\s]+(?<process>.*))$" }
			id => "msgParserId661"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Read"
				"ec_theme" => "ALM"
				"[logstash][fullDateTimeString]" => "%{datetime}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
		}
	}
	else if [logstash][msgparser][id] == "AgentHeartBeat" {
		# MESSAGE AgentHeartBeat:02
		# line in RSA: <fld1>::<fld2>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}::%{fld2}" }
				id => "message-AgentHeartBeat:02"
				add_field => {
				"service" => "%{fld1}::%{fld2}"
					"[event][id]" => "AgentHeartBeat:02"
					"[rsa][message][id1]" => "AgentHeartBeat:02"
					"[event][categoryid]" => "1604000000"
					"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:m:s" ] }
			}
		}
		# MESSAGE AgentHeartBeat
		# line in RSA: <fld1>,<fld2>,<system>,<version>,<log_type>,<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1},%{fld2},%{system},%{version},%{log_type},%{info}" }
				id => "message-AgentHeartBeat"
				add_field => {
					"[event][id]" => "AgentHeartBeat"
					"[rsa][message][id1]" => "AgentHeartBeat"
					"[event][categoryid]" => "1604000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:m:s" ] }
			}
		}
		# MESSAGE AgentHeartBeat:01
		# line in RSA: {<event_type> Category '<category>': <info> | Local <info> | <info>}
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^((?<event_type>[^\s]*)[\s]+Category[\s]+'(?<category>[^']*)':[\s]+(?<info>[^\s]*)[\s]+|[\s]*Local[\s]+(?<info>[^\s]*)[\s]+|[\s]*(?<info>.*))$" }
				id => "message-AgentHeartBeat:01"
				add_field => {
					"[event][id]" => "AgentHeartBeat:01"
					"[rsa][message][id1]" => "AgentHeartBeat:01"
					"[event][categoryid]" => "1604000000"
					"[logstash][fullDateTimeString]" => "%{hfld1} %{hfld2}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "d/M/yyyy H:m:s" ] }
			}
		}
	}
	else if [logstash][msgparser][id] == "WINDOWS_SNARE_GENERIC" {
		# MESSAGE WINDOWS_snare_GENERIC
		# line in RSA: <fld1> <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>{	 | ,}<fld3>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld3>.*)$" }
				id => "message-WINDOWS_snare_GENERIC"
				add_field => {
				"vid" => "%{event_log}_%{id}_%{event_source}"
					"[event][id]" => "%{event_log}_%{id}_%{event_source}"
					"[rsa][message][id1]" => "WINDOWS_snare_GENERIC"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
		# MESSAGE WINDOWS_snare_GENERIC:01
		# line in RSA: <fld1> <fld90>{	 | ,}<level>{	 | ,}<event_log>{	 | ,}<fld11>{	 | ,}<fld12> <datetime>{	 | ,}<id>{	 | ,}<event_source>{	 | ,}<event_user>{	 | ,}<fld91>{	 | ,}<event_type>{	 | ,}<event_computer>{	 | ,}<category>{	 | ,}<fld2>{	 | ,}<event_description>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld90>[^\t\s]*)(\t[\s]+|[\s]*,)(?<level>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_log>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld11>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld12>[^\s]*)[\s]+(?<datetime>[^\t\s]*)(\t[\s]+|[\s]*,)(?<id>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_source>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_user>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld91>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_type>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_computer>[^\t\s]*)(\t[\s]+|[\s]*,)(?<category>[^\t\s]*)(\t[\s]+|[\s]*,)(?<fld2>[^\t\s]*)(\t[\s]+|[\s]*,)(?<event_description>.*)$" }
				id => "message-WINDOWS_snare_GENERIC:01"
				add_field => {
				"vid" => "%{event_log}_%{id}_%{event_source}"
					"[event][id]" => "%{event_log}_%{id}_%{event_source}"
					"[rsa][message][id1]" => "WINDOWS_snare_GENERIC:01"
					"[event][categoryid]" => "1901000000"
					"[logstash][fullDateTimeString]" => "%{datetime}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMM d H:m:s yyyy" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Enrich events using VALUEMAP
filter {
	translate {
		field => "[fld11]"
		destination => "[context]"
		dictionary => {
			"R" => "Response"
		}
		fallback => "Query"
		override => true
	}
}
filter {
	translate {
		field => "[obj_type]"
		destination => "[ec_subject]"
		dictionary => {
			"File" => "File"
		}
		fallback => ""
		override => true
	}
}

# Rename fields
filter {
	mutate {
		rename => {
			"ip.orig" => "ip_orig"
		}
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-v20_winevent_snaremsg.json"
#			template_name => "winevent_snare_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
