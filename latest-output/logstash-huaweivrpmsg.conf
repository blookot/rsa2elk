# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "huaweivrp"
			"[observer][name]" => "Huawei VRP"
			"[observer][type]" => "Router"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> %%<hfld6>/<hfld7>/<msgIdPart1> <msgIdPart2>(<hfld8>):<!payload:hfld5>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<hfld5>[^\s]*)[\s]+%%(?<hfld6>[^/]*)/(?<hfld7>[^/]*)/(?<msgIdPart1>[^\s]*)[\s]+(?<msgIdPart2>[^\(]*)\((?<hfld8>[^\)]*)\):(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{msgIdPart1}_%{msgIdPart2}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> %%<hfld6>/<hfld7>/<messageid>(<hfld8>)[<hfld9>]:<!payload:hfld5>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<hfld5>[^\s]*)[\s]+%%(?<hfld6>[^/]*)/(?<hfld7>[^/]*)/(?<messageid>[^\(]*)\((?<hfld8>[^\)]*)\)\[(?<hfld9>[^\]]*)\]:(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> %%<hfld6>/<hfld7>/<messageid>(<hfld8>):<!payload:hfld5>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<hfld5>[^\s]*)[\s]+%%(?<hfld6>[^/]*)/(?<hfld7>[^/]*)/(?<messageid>[^\(]*)\((?<hfld8>[^\)]*)\):(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> %%<hfld6>/<hfld7>/<messageid>:<!payload:hfld5>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<hfld5>[^\s]*)[\s]+%%(?<hfld6>[^/]*)/(?<hfld7>[^/]*)/(?<messageid>[^:]*):(?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hdate> <htime> <hfld5> %%<hfld6>/<hfld7>/<messageid>(<hfld8>):<!payload:hfld5>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<message>(?<hfld5>[^\s]*)[\s]+%%(?<hfld6>[^/]*)/(?<hfld7>[^/]*)/(?<messageid>[^\(]*)\((?<hfld8>[^\)]*)\):(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hfld1> <hfld2> <hfld3> <hfld4> <hfld5> <hfld6>/<hfld7>/{<messageid> Module <hfld8> | <messageid>}:<!payload:hfld5>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\s]*)[\s]+(?<hfld4>[^\s]*)[\s]+(?<message>(?<hfld5>[^\s]*)[\s]+(?<hfld6>[^/]*)/(?<hfld7>[^/]*)/((?<messageid>[^\s]*)[\s]+Module[\s]+(?<hfld8>[^\s]*)[\s]+|[\s]*(?<messageid>[^:]*)):(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-huaweivrpmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	if [logstash][msgparser][id] == "CMD" {
		# MESSAGE CMD:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP={<hostip>;|<hostip>} task:<fld2> ip:<saddr> user:<username> command:<action>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld21>[^:]*):\-DevIP=((?<hostip>[^;]*);|(?<hostip>[^\s]*))[\s]+task:(?<fld2>[^\s]*)[\s]+ip:(?<saddr>[^\s]*)[\s]+user:(?<username>[^\s]*)[\s]+command:(?<action>.*)$" }
				id => "message-CMD:01"
				add_field => {
					"[event][id]" => "CMD:01"
					"[rsa][message][id1]" => "CMD:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CMD:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: task:<fld1> ip:<saddr> user:<username> command:<action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: task:%{fld1} ip:%{saddr} user:%{username} command:%{action}" }
				id => "message-CMD:02"
				add_field => {
					"[event][id]" => "CMD:02"
					"[rsa][message][id1]" => "CMD:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CMD:03
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: -DevIP=<hostip>; task:<fld2> ip:<saddr> user:<username> vrf:<fld3> command:<param>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: -DevIP=%{hostip}; task:%{fld2} ip:%{saddr} user:%{username} vrf:%{fld3} command:%{param}" }
				id => "message-CMD:03"
				add_field => {
					"[event][id]" => "CMD:03"
					"[rsa][message][id1]" => "CMD:03"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "NTP_LOG" {
		# MESSAGE NTP_LOG:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:  System stratum changes from <change_old> to <change_new> after clock update.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:  System stratum changes from %{change_old} to %{change_new} after clock update." }
				id => "message-NTP_LOG:01"
				add_field => {
					"[event][id]" => "NTP_LOG:01"
					"[rsa][message][id1]" => "NTP_LOG:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE NTP_LOG:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:{-DevIP=<hostip>  System|  System} <fld4> changes from <change_old> to <change_new> after clock update.
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld21>[^:]*):(\-DevIP=(?<hostip>[^\s]*)[\s]+System|[\s]*System)[\s]+(?<fld4>[^\s]*)[\s]+changes[\s]+from[\s]+(?<change_old>[^\s]*)[\s]+to[\s]+(?<change_new>[^\s]*)[\s]+after[\s]+clock[\s]+update\.$" }
				id => "message-NTP_LOG:02"
				add_field => {
					"[event][id]" => "NTP_LOG:02"
					"[rsa][message][id1]" => "NTP_LOG:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE NTP_LOG:03
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:{-DevIP=<hostip>  System|  System} synchronization source lost!
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld21>[^:]*):(\-DevIP=(?<hostip>[^\s]*)[\s]+System|[\s]*System)[\s]+synchronization[\s]+source[\s]+lost!$" }
				id => "message-NTP_LOG:03"
				add_field => {
					"[event][id]" => "NTP_LOG:03"
					"[rsa][message][id1]" => "NTP_LOG:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "LINK_STATE" {
		# MESSAGE LINK_STATE
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Line protocol on interface <interface> has turned into <event_state> state.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Line protocol on interface %{interface} has turned into %{event_state} state." }
				id => "message-LINK_STATE"
				add_field => {
					"[event][id]" => "LINK_STATE"
					"[rsa][message][id1]" => "LINK_STATE"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LINK_STATE:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:The line protocol IP on the interface <interface> has entered the UP state.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:The line protocol IP on the interface %{interface} has entered the UP state." }
				id => "message-LINK_STATE:02"
				add_field => {
				"event_description" => "The line protocol IP on the interface has entered the UP state."
					"[event][id]" => "LINK_STATE:02"
					"[rsa][message][id1]" => "LINK_STATE:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LINK_STATE:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:The line protocol IP on the interface <interface> has entered the DOWN state.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:The line protocol IP on the interface %{interface} has entered the DOWN state." }
				id => "message-LINK_STATE:01"
				add_field => {
				"event_description" => "The line protocol IP on the interface has entered the DOWN state."
					"[event][id]" => "LINK_STATE:01"
					"[rsa][message][id1]" => "LINK_STATE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId7
	# line in RSA: <hostname> <agent>/<severity>/<fld21>:OSPF TrapID<fld1>: Non-virtual interface <interface> <fld3> Router <fld4> state change to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId7" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}:OSPF TrapID%{fld1}: Non-virtual interface %{interface} %{fld3} Router %{fld4} state change to %{change_new}." }
			id => "msgParserId7"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId8
	# line in RSA: <hostname> <agent>/<severity>/<fld21>: System synchronization source lost.
	else if [logstash][msgparser][id] == "msgParserId8" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}: System synchronization source lost." }
			id => "msgParserId8"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "LEAP_CHANGE" {
		# MESSAGE LEAP_CHANGE
		# line in RSA: <hostname> <agent>/<severity>/<fld21>: System leap changes from <change_old> to <change_new> after clock update.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}: System leap changes from %{change_old} to %{change_new} after clock update." }
				id => "message-LEAP_CHANGE"
				add_field => {
					"[event][id]" => "LEAP_CHANGE"
					"[rsa][message][id1]" => "LEAP_CHANGE"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LEAP_CHANGE:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:<event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:%{event_description}" }
				id => "message-LEAP_CHANGE:01"
				add_field => {
					"[event][id]" => "LEAP_CHANGE:01"
					"[rsa][message][id1]" => "LEAP_CHANGE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA: <hostname> <agent>/<severity>/<fld21>:OSPF TrapID<fld1>: Originate new LSA AreaId <fld2> LsdbType <fld3> LsdbLsid <fld4> LsdbRouterId <fld5> Router <fld6>
	else if [logstash][msgparser][id] == "msgParserId10" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}:OSPF TrapID%{fld1}: Originate new LSA AreaId %{fld2} LsdbType %{fld3} LsdbLsid %{fld4} LsdbRouterId %{fld5} Router %{fld6}" }
			id => "msgParserId10"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA: <hostname> <agent>/<severity>/<fld21>:OSPF TrapID<fld1>: Non-virtual neighbor <fld2> <fld3> Router <fld4> NbrRouter <fld5> state change to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}:OSPF TrapID%{fld1}: Non-virtual neighbor %{fld2} %{fld3} Router %{fld4} NbrRouter %{fld5} state change to %{change_new}." }
			id => "msgParserId11"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA: <hostname> <agent>/<severity>/<fld21>:OSPF TrapID<fld1>: Interface <interface> <fld3> Retransmit to Nbr <fld4> <fld5> LsdbAreaId <fld6> LsdbType <fld7> LsdbLsid <fld8> LsdbRouterId <fld9> Router <fld10> Nbr RID <fld11> Type is <fld12>.
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}:OSPF TrapID%{fld1}: Interface %{interface} %{fld3} Retransmit to Nbr %{fld4} %{fld5} LsdbAreaId %{fld6} LsdbType %{fld7} LsdbLsid %{fld8} LsdbRouterId %{fld9} Router %{fld10} Nbr RID %{fld11} Type is %{fld12}." }
			id => "msgParserId12"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId13
	# line in RSA: <hostname> <agent>/<severity>/<fld21>:OSPF TrapID<fld1>: Aged a LSA Area Id <fld2> LsdbType <fld3> LsdbLsid <fld4> LsdbRouterId <fld5> Router <fld6> .
	else if [logstash][msgparser][id] == "msgParserId13" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}:OSPF TrapID%{fld1}: Aged a LSA Area Id %{fld2} LsdbType %{fld3} LsdbLsid %{fld4} LsdbRouterId %{fld5} Router %{fld6} ." }
			id => "msgParserId13"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId14
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: System restarted -- <info>
	else if [logstash][msgparser][id] == "msgParserId14" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: System restarted -- %{info}" }
			id => "msgParserId14"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "CLKCHANGE" {
		# MESSAGE CLKCHANGE:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>;  <fld2> System clock changed  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip};  %{fld2} System clock changed" }
				id => "message-CLKCHANGE:01"
				add_field => {
					"[event][id]" => "CLKCHANGE:01"
					"[rsa][message][id1]" => "CLKCHANGE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CLKCHANGE:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:<fld2> System clock changed  
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:%{fld2} System clock changed" }
				id => "message-CLKCHANGE:02"
				add_field => {
					"[event][id]" => "CLKCHANGE:02"
					"[rsa][message][id1]" => "CLKCHANGE:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>;   Line protocol on the interface <interface> is <event_state> 
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip};   Line protocol on the interface %{interface} is %{event_state}" }
			id => "msgParserId17"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "RMLOG" {
		# MESSAGE RMLOG:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>; OSPF-NBRCHANGE: Process <process_id>, Neighbor <fld3>(<fld4>) from <change_old> to <change_new>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip}; OSPF-NBRCHANGE: Process %{process_id}, Neighbor %{fld3}(%{fld4}) from %{change_old} to %{change_new}" }
				id => "message-RMLOG:01"
				add_field => {
					"[event][id]" => "RMLOG:01"
					"[rsa][message][id1]" => "RMLOG:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE RMLOG:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>; OSPF_CTM_Multicast_Address: Joining the multicastgroup:<fld2> Success, IfNetIndex: <fld3>, Phy Index: <fld4>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip}; OSPF_CTM_Multicast_Address: Joining the multicastgroup:%{fld2} Success, IfNetIndex: %{fld3}, Phy Index: %{fld4}" }
				id => "message-RMLOG:02"
				add_field => {
				"ec_outcome" => "Success"
					"[event][id]" => "RMLOG:02"
					"[rsa][message][id1]" => "RMLOG:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>;    <fld2>:  Channel is deactivated because of too many continuous input errors! <info>
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip};    %{fld2}:  Channel is deactivated because of too many continuous input errors! %{info}" }
			id => "msgParserId20"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: The current tcp retransmitted at: <fld1>, Current delay: <duration>, Retransfer total: <fld3>.
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: The current tcp retransmitted at: %{fld1}, Current delay: %{duration}, Retransfer total: %{fld3}." }
			id => "msgParserId21"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:  Creating IPv4 control block for interface <interface> is successful.
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:  Creating IPv4 control block for interface %{interface} is successful." }
			id => "msgParserId22"
			add_field => {
				"ec_outcome" => "Success"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:  The adding of the ip address is notified to RM, ip address is <saddr>, mask is <mask>, interface is <interface>, return value is <resultcode>.
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:  The adding of the ip address is notified to RM, ip address is %{saddr}, mask is %{mask}, interface is %{interface}, return value is %{resultcode}." }
			id => "msgParserId23"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SAVE" {
		# MESSAGE SAVE
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: When deciding whether to save configuration to the device, the user chose <fld1>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: When deciding whether to save configuration to the device, the user chose %{fld1}." }
				id => "message-SAVE"
				add_field => {
					"[event][id]" => "SAVE"
					"[rsa][message][id1]" => "SAVE"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SAVE:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description}" }
				id => "message-SAVE:01"
				add_field => {
					"[event][id]" => "SAVE:01"
					"[rsa][message][id1]" => "SAVE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Adding physical interface. (Interface name=<interface>, Interface index=<fld2>)
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Adding physical interface. (Interface name=%{interface}, Interface index=%{fld2})" }
			id => "msgParserId25"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId26
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Backup interface. (Interface name=<interface>, Interface configuration information= <info>)
	else if [logstash][msgparser][id] == "msgParserId26" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Backup interface. (Interface name=%{interface}, Interface configuration information= %{info})" }
			id => "msgParserId26"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "EXIT" {
		# MESSAGE EXIT:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>{:-DevIP=<hostip>; | : -DevIP=<hostip>;}  exit from configure mode
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld21>[^:\s]*)(:\-DevIP=(?<hostip>[^;]*);[\s]+|[\s]*:[\s]+\-DevIP=(?<hostip>[^;]*);)[\s]+exit[\s]+from[\s]+configure[\s]+mode$" }
				id => "message-EXIT:01"
				add_field => {
					"[event][id]" => "EXIT:01"
					"[rsa][message][id1]" => "EXIT:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE EXIT:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:  Exit from configure mode.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:  Exit from configure mode." }
				id => "message-EXIT:02"
				add_field => {
					"[event][id]" => "EXIT:02"
					"[rsa][message][id1]" => "EXIT:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE EXIT
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:  The user <username> exit from configure mode.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:  The user %{username} exit from configure mode." }
				id => "message-EXIT"
				add_field => {
				"event_description" => "The user exit from configure mode."
					"[event][id]" => "EXIT"
					"[rsa][message][id1]" => "EXIT"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "LOGIN" {
		# MESSAGE LOGIN:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: -DevIP=<hostip>; vrf:<fld2> user:<username> login from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: -DevIP=%{hostip}; vrf:%{fld2} user:%{username} login from %{saddr}" }
				id => "message-LOGIN:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "LOGIN:01"
					"[rsa][message][id1]" => "LOGIN:01"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LOGIN
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:  {access type:<protocol> vsys:<vsys> user:<username> | <username>} login from <saddr>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld21>[^:]*):[\s]+(access[\s]+type:(?<protocol>[^\s]*)[\s]+vsys:(?<vsys>[^\s]*)[\s]+user:(?<username>[^\s]*)[\s]+|[\s]*(?<username>[^\s]*))[\s]+login[\s]+from[\s]+(?<saddr>.*)$" }
				id => "message-LOGIN"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
					"[event][id]" => "LOGIN"
					"[rsa][message][id1]" => "LOGIN"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LOGIN:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:<event_description> to <terminal>. (UserType=<fld2>, UserName=<username>, AuthenticationMethod="<authmethod>", Ip=<saddr>, VpnName=<netname>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:%{event_description} to %{terminal}. (UserType=%{fld2}, UserName=%{username}, AuthenticationMethod=\"%{authmethod}\", Ip=%{saddr}, VpnName=%{netname})" }
				id => "message-LOGIN:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "LOGIN:02"
					"[rsa][message][id1]" => "LOGIN:02"
					"[event][categoryid]" => "1401060000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: 'User <username> needs command authorization. Line index=<fld2>, syncnum=<fld3>, userid=<fld4>, authflag =<fld5>.' from <saddr> by <logon_type>.
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: 'User %{username} needs command authorization. Line index=%{fld2}, syncnum=%{fld3}, userid=%{fld4}, authflag =%{fld5}.' from %{saddr} by %{logon_type}." }
			id => "msgParserId32"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "LOGOUT" {
		# MESSAGE LOGOUT:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: -DevIP=<hostip>; vrf:<fld2> user:<username> logout from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: -DevIP=%{hostip}; vrf:%{fld2} user:%{username} logout from %{saddr}" }
				id => "message-LOGOUT:01"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "LOGOUT:01"
					"[rsa][message][id1]" => "LOGOUT:01"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LOGOUT
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:  <username> logout from <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:  %{username} logout from %{saddr}" }
				id => "message-LOGOUT"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
					"[event][id]" => "LOGOUT"
					"[rsa][message][id1]" => "LOGOUT"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LOGOUT:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:<event_description> of <terminal>. (UserType=<fld1>, UserName=<username>, Ip=<saddr>, VpnName=<netname>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:%{event_description} of %{terminal}. (UserType=%{fld1}, UserName=%{username}, Ip=%{saddr}, VpnName=%{netname})" }
				id => "message-LOGOUT:02"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logoff"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Success"
					"[event][id]" => "LOGOUT:02"
					"[rsa][message][id1]" => "LOGOUT:02"
					"[event][categoryid]" => "1401070000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "CMDRECORD" {
		# MESSAGE CMDRECORD
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: task: <fld1> ip: <saddr> user: <username> command: <action>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: task: %{fld1} ip: %{saddr} user: %{username} command: %{action}." }
				id => "message-CMDRECORD"
				add_field => {
					"[event][id]" => "CMDRECORD"
					"[rsa][message][id1]" => "CMDRECORD"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE CMDRECORD:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: <event_description> (Task=<fld1>, Ip=<saddr>, VpnName=<netname>, User=<username>, AuthenticationMethod="<authmethod>", Command="<action>")
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: %{event_description} (Task=%{fld1}, Ip=%{saddr}, VpnName=%{netname}, User=%{username}, AuthenticationMethod=\"%{authmethod}\", Command=\"%{action}\")" }
				id => "message-CMDRECORD:01"
				add_field => {
					"[event][id]" => "CMDRECORD:01"
					"[rsa][message][id1]" => "CMDRECORD:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: <fld1>: Controller change status to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: %{fld1}: Controller change status to %{change_new}." }
			id => "msgParserId38"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: <fld1>: change status to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: %{fld1}: change status to %{change_new}." }
			id => "msgParserId39"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Neighbor event, neighbor state changed to <change_new>. (Process ID=<process_id>, Neighbor address=<fld2>, Neighbor event=<fld3>, Neighbor previous state=<fld4>, Neighbor current state=<fld5>)
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Neighbor event, neighbor state changed to %{change_new}. (Process ID=%{process_id}, Neighbor address=%{fld2}, Neighbor event=%{fld3}, Neighbor previous state=%{fld4}, Neighbor current state=%{fld5})" }
			id => "msgParserId40"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId41
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Leaving the multicast group succeed. (Multicast group address=<fld1>, Interface network index=<fld2>, Physical index=<fld3>)
	else if [logstash][msgparser][id] == "msgParserId41" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Leaving the multicast group succeed. (Multicast group address=%{fld1}, Interface network index=%{fld2}, Physical index=%{fld3})" }
			id => "msgParserId41"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "SNMP_FAIL" {
		# MESSAGE SNMP_FAIL
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Login through <logon_type> failed(ip=<saddr> times=<dclass_counter1>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Login through %{logon_type} failed(ip=%{saddr} times=%{dclass_counter1})." }
				id => "message-SNMP_FAIL"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "SNMP_FAIL"
					"[rsa][message][id1]" => "SNMP_FAIL"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE SNMP_FAIL:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Login through <logon_type> failed. (UserName=<username>, ip=<saddr>, times=<dclass_counter1>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Login through %{logon_type} failed. (UserName=%{username}, ip=%{saddr}, times=%{dclass_counter1})" }
				id => "message-SNMP_FAIL:01"
				add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "SNMP_FAIL:01"
					"[rsa][message][id1]" => "SNMP_FAIL:01"
					"[event][categoryid]" => "1301000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Received connection from <saddr>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Received connection from %{saddr}" }
			id => "msgParserId44"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: MIB node set (source ip= <saddr> <info>).
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: MIB node set (source ip= %{saddr} %{info})." }
			id => "msgParserId45"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Current socket was closed, Proto: <protocol>, Cause: <result>.
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Current socket was closed, Proto: %{protocol}, Cause: %{result}." }
			id => "msgParserId46"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Detailed information on the current socket: <info>.
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Detailed information on the current socket: %{info}." }
			id => "msgParserId47"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Detailed information on the current tcp socket: State: <event_state>, local-ip: <daddr>, local-port: <dport>, remote-ip: <saddr>, remote-port: <sport>.
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Detailed information on the current tcp socket: State: %{event_state}, local-ip: %{daddr}, local-port: %{dport}, remote-ip: %{saddr}, remote-port: %{sport}." }
			id => "msgParserId48"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Login through <logon_type> failed( ip=<saddr> times=<dclass_counter1>).
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Login through %{logon_type} failed( ip=%{saddr} times=%{dclass_counter1})." }
			id => "msgParserId49"
			add_field => {
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "AUTHCMDNONEED" {
		# MESSAGE AUTHCMDNONEED
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: 'User  doesn't need command authorization.' from <saddr> by <logon_type>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: 'User  doesn't need command authorization.' from %{saddr} by %{logon_type}." }
				id => "message-AUTHCMDNONEED"
				add_field => {
					"[event][id]" => "AUTHCMDNONEED"
					"[rsa][message][id1]" => "AUTHCMDNONEED"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE AUTHCMDNONEED:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: 'User <username> <event_description>' from <saddr> by <terminal>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: 'User %{username} %{event_description}' from %{saddr} by %{terminal}" }
				id => "message-AUTHCMDNONEED:01"
				add_field => {
					"[event][id]" => "AUTHCMDNONEED:01"
					"[rsa][message][id1]" => "AUTHCMDNONEED:01"
					"[event][categoryid]" => "1304000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "STRATUM_CHANGE" {
		# MESSAGE STRATUM_CHANGE
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: System stratum changes from <change_old> to <change_new> after clock update.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: System stratum changes from %{change_old} to %{change_new} after clock update." }
				id => "message-STRATUM_CHANGE"
				add_field => {
					"[event][id]" => "STRATUM_CHANGE"
					"[rsa][message][id1]" => "STRATUM_CHANGE"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE STRATUM_CHANGE:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (SourceAddress=<saddr>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (SourceAddress=%{saddr})" }
				id => "message-STRATUM_CHANGE:01"
				add_field => {
					"[event][id]" => "STRATUM_CHANGE:01"
					"[rsa][message][id1]" => "STRATUM_CHANGE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "PEER_SELE" {
		# MESSAGE PEER_SELE
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: The peer selected by the system is <fld1>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: The peer selected by the system is %{fld1}" }
				id => "message-PEER_SELE"
				add_field => {
					"[event][id]" => "PEER_SELE"
					"[rsa][message][id1]" => "PEER_SELE"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE PEER_SELE:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:The peer selected by the system is <hostip>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:The peer selected by the system is %{hostip}" }
				id => "message-PEER_SELE:01"
				add_field => {
				"event_description" => "The peer selected by the system"
					"[event][id]" => "PEER_SELE:01"
					"[rsa][message][id1]" => "PEER_SELE:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId53
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: FIB refreshing start, the refresh group map is <fld1>!
	else if [logstash][msgparser][id] == "msgParserId53" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: FIB refreshing start, the refresh group map is %{fld1}!" }
			id => "msgParserId53"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId54
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: FIB refreshing end, the refresh group map is <fld1>!
	else if [logstash][msgparser][id] == "msgParserId54" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: FIB refreshing end, the refresh group map is %{fld1}!" }
			id => "msgParserId54"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId55
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Failed to get interface : <info>.
	else if [logstash][msgparser][id] == "msgParserId55" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Failed to get interface : %{info}." }
			id => "msgParserId55"
			add_field => {
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId56
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Joining the multicast group succeed. (Multicast group address=<fld1>, Interface network index=<fld2>, Physical index=<fld3>)
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Joining the multicast group succeed. (Multicast group address=%{fld1}, Interface network index=%{fld2}, Physical index=%{fld3})" }
			id => "msgParserId56"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "IF_CHG_E" {
		# MESSAGE IF_CHG_E
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Interface <fld1> received event <fld5>, interface state changed from <change_old> to <change_new>. (Process ID=<process_id>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Interface %{fld1} received event %{fld5}, interface state changed from %{change_old} to %{change_new}. (Process ID=%{process_id})" }
				id => "message-IF_CHG_E"
				add_field => {
					"[event][id]" => "IF_CHG_E"
					"[rsa][message][id1]" => "IF_CHG_E"
					"[event][categoryid]" => "1805000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE IF_CHG_E:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:Interface <interface> received event {WaitTimer|InterfaceUp}, <event_description> (ProcessId=<process_id>)
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld1>[^:]*):Interface[\s]+(?<interface>[^\s]*)[\s]+received[\s]+event[\s]+(WaitTimer|InterfaceUp),[\s]+(?<event_description>[^\s]*)[\s]+\(ProcessId=(?<process_id>[^\)]*)\)$" }
				id => "message-IF_CHG_E:01"
				add_field => {
					"[event][id]" => "IF_CHG_E:01"
					"[rsa][message][id1]" => "IF_CHG_E:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId58
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Neighbor event, neighbor state was changed. (Process ID=<process_id>, Neighbor address=<fld2>, Neighbor event=<fld3>, Neighbor previous state=<fld4>, Neighbor current state=<event_state>)
	else if [logstash][msgparser][id] == "msgParserId58" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Neighbor event, neighbor state was changed. (Process ID=%{process_id}, Neighbor address=%{fld2}, Neighbor event=%{fld3}, Neighbor previous state=%{fld4}, Neighbor current state=%{event_state})" }
			id => "msgParserId58"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "TRAP" {
		# MESSAGE TRAP:01
		# line in RSA: <hostname> <agent>/<severity>/<fld21>{: -DevIP=<hostip>; | :}    <fld1> configure changed:<fld2>     EventIndex=<fld3>,CommandSource=<fld4>,ConfigSource=<fld5>,ConfigDestination=<fld6>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld21>[^:\s]*)(:[\s]+\-DevIP=(?<hostip>[^;]*);[\s]+|[\s]*:)[\s]+(?<fld1>[^\s]*)[\s]+configure[\s]+changed:(?<fld2>[^\s]*)[\s]+EventIndex=(?<fld3>[^,]*),CommandSource=(?<fld4>[^,]*),ConfigSource=(?<fld5>[^,]*),ConfigDestination=(?<fld6>.*)$" }
				id => "message-TRAP:01"
				add_field => {
					"[event][id]" => "TRAP:01"
					"[rsa][message][id1]" => "TRAP:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE TRAP:02
		# line in RSA: <hostname> <agent>/<severity>/<fld21>:<fld1> interface <fld2> turns into <event_state> state.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}:%{fld1} interface %{fld2} turns into %{event_state} state." }
				id => "message-TRAP:02"
				add_field => {
					"[event][id]" => "TRAP:02"
					"[rsa][message][id1]" => "TRAP:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: Peer <fld1> state was changed from <change_old> to <change_new>. (BGP address family=<fld4>)
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: Peer %{fld1} state was changed from %{change_old} to %{change_new}. (BGP address family=%{fld4})" }
			id => "msgParserId61"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId62
	# line in RSA: <hostname> <agent>/<severity>/<fld21>:OSPF TrapID<fld1>: Non-virtual interface <interface> <fld3> Router <fld4> PacekSrc <fld5> authentication fail <fld6> PacketType <fld7> .
	else if [logstash][msgparser][id] == "msgParserId62" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld21}:OSPF TrapID%{fld1}: Non-virtual interface %{interface} %{fld3} Router %{fld4} PacekSrc %{fld5} authentication fail %{fld6} PacketType %{fld7} ." }
			id => "msgParserId62"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "TIMEOUT" {
		# MESSAGE TIMEOUT:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:  <username> login from <saddr> is time out.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:  %{username} login from %{saddr} is time out." }
				id => "message-TIMEOUT:01"
				add_field => {
				"ec_activity" => "Logon"
					"[event][id]" => "TIMEOUT:01"
					"[rsa][message][id1]" => "TIMEOUT:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE TIMEOUT:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: On the interface <interface>, <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: On the interface %{interface}, %{info}" }
				id => "message-TIMEOUT:02"
				add_field => {
				"ec_activity" => "Logon"
					"[event][id]" => "TIMEOUT:02"
					"[rsa][message][id1]" => "TIMEOUT:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "LOGINFAIL" {
		# MESSAGE LOGINFAIL
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>;  TELNET user failed to login from <saddr> on <logon_type>.
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip};  TELNET user failed to login from %{saddr} on %{logon_type}." }
				id => "message-LOGINFAIL"
				add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_outcome" => "Failure"
					"[event][id]" => "LOGINFAIL"
					"[rsa][message][id1]" => "LOGINFAIL"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE LOGINFAIL:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: access type:<protocol> User <username> login failed from <saddr>(times=<dclass_counter1>).
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: access type:%{protocol} User %{username} login failed from %{saddr}(times=%{dclass_counter1})." }
				id => "message-LOGINFAIL:01"
				add_field => {
				"event_description" => "User login failed"
					"[event][id]" => "LOGINFAIL:01"
					"[rsa][message][id1]" => "LOGINFAIL:01"
					"[event][categoryid]" => "1401030000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>;   <interface>: link status is <event_state> 
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip};   %{interface}: link status is %{event_state}" }
			id => "msgParserId66"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "TRAPLOG" {
		# MESSAGE TRAPLOG:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP={<hostip>;|<hostip>}    <fld2> configure changed: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld21>[^:]*):\-DevIP=((?<hostip>[^;]*);|(?<hostip>[^\s]*))[\s]+(?<fld2>[^\s]*)[\s]+configure[\s]+changed:[\s]+(?<info>.*)$" }
				id => "message-TRAPLOG:01"
				add_field => {
					"[event][id]" => "TRAPLOG:01"
					"[rsa][message][id1]" => "TRAPLOG:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE TRAPLOG:02
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>{: -DevIP=<hostip>; | :}  <fld1> configure changed: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld21>[^:\s]*)(:[\s]+\-DevIP=(?<hostip>[^;]*);[\s]+|[\s]*:)[\s]+(?<fld1>[^\s]*)[\s]+configure[\s]+changed:[\s]+(?<info>.*)$" }
				id => "message-TRAPLOG:02"
				add_field => {
					"[event][id]" => "TRAPLOG:02"
					"[rsa][message][id1]" => "TRAPLOG:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE TRAPLOG
		# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:OID <snmp.oid> <event_description>. (<fld2>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:OID %{snmp.oid} %{event_description}. (%{fld2})" }
				id => "message-TRAPLOG"
				add_field => {
					"[event][id]" => "TRAPLOG"
					"[rsa][message][id1]" => "TRAPLOG"
					"[event][categoryid]" => "1701000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>; OSPF TrapID<fld2>: Non-virtual neighbor <fld3> index <fld4> Router <fld5> NbrRouter <fld6> state change to <change_new>.
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip}; OSPF TrapID%{fld2}: Non-virtual neighbor %{fld3} index %{fld4} Router %{fld5} NbrRouter %{fld6} state change to %{change_new}." }
			id => "msgParserId69"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId70
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<fld1>;   Trap <fld2>: Interface <fld3> is <fld4>, ifAdminStatus is <fld5>, ifOperStatus is <fld6>  
	else if [logstash][msgparser][id] == "msgParserId70" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{fld1};   Trap %{fld2}: Interface %{fld3} is %{fld4}, ifAdminStatus is %{fld5}, ifOperStatus is %{fld6}" }
			id => "msgParserId70"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId71
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>; OSPF TrapID<fld2>: Originate new LSA AreaId <fld3> LsdbType <fld4> LsdbLsid <fld5> LsdbRouterId <fld6> Router <fld7>
	else if [logstash][msgparser][id] == "msgParserId71" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip}; OSPF TrapID%{fld2}: Originate new LSA AreaId %{fld3} LsdbType %{fld4} LsdbLsid %{fld5} LsdbRouterId %{fld6} Router %{fld7}" }
			id => "msgParserId71"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId72
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>; OSPF TrapID<fld2>: Aged a LSA Area Id <fld3> LsdbType <fld4> LsdbLsid <fld5> LsdbRouterId <fld6> Router <fld7> .
	else if [logstash][msgparser][id] == "msgParserId72" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip}; OSPF TrapID%{fld2}: Aged a LSA Area Id %{fld3} LsdbType %{fld4} LsdbLsid %{fld5} LsdbRouterId %{fld6} Router %{fld7} ." }
			id => "msgParserId72"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId73
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:-DevIP=<hostip>    OSPF interface retransmitted packet <fld2>    IfIpAddress     = <fld3>    IfAddrLessIndex = <fld4>    NbrIpAddress     = <fld5>    NbrAddrLessIndex = <fld6>    LsdbAreaId   = <fld7>    LsdbType     = <fld8>    LsdbLsid     = <fld9>    LsdbRouterId = <fld10>    RouterId    = <fld11>    NbrRouterId = <fld12>    PacketType = <fld13>  
	else if [logstash][msgparser][id] == "msgParserId73" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:-DevIP=%{hostip}    OSPF interface retransmitted packet %{fld2}    IfIpAddress     = %{fld3}    IfAddrLessIndex = %{fld4}    NbrIpAddress     = %{fld5}    NbrAddrLessIndex = %{fld6}    LsdbAreaId   = %{fld7}    LsdbType     = %{fld8}    LsdbLsid     = %{fld9}    LsdbRouterId = %{fld10}    RouterId    = %{fld11}    NbrRouterId = %{fld12}    PacketType = %{fld13}" }
			id => "msgParserId73"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "DISPLAY_CMDRECORD" {
		# MESSAGE DISPLAY_CMDRECORD
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: task: <fld1> ip: <saddr> user: <username> command: <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: task: %{fld1} ip: %{saddr} user: %{username} command: %{action}" }
				id => "message-DISPLAY_CMDRECORD"
				add_field => {
					"[event][id]" => "DISPLAY_CMDRECORD"
					"[rsa][message][id1]" => "DISPLAY_CMDRECORD"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE DISPLAY_CMDRECORD:01
		# line in RSA: <hostname> %%<agent>/<severity>/<fld21>: <event_description> (Task=<fld1>, Ip=<saddr>, VpnName=<netname>, User=<username>, AuthenticationMethod="<authmethod>", Command="<action>")
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}: %{event_description} (Task=%{fld1}, Ip=%{saddr}, VpnName=%{netname}, User=%{username}, AuthenticationMethod=\"%{authmethod}\", Command=\"%{action}\")" }
				id => "message-DISPLAY_CMDRECORD:01"
				add_field => {
					"[event][id]" => "DISPLAY_CMDRECORD:01"
					"[rsa][message][id1]" => "DISPLAY_CMDRECORD:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId75
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:The IPSec tunnel state is switched UPDATE. (local-ip: <saddr>, remote-ip: <daddr>)
	else if [logstash][msgparser][id] == "msgParserId75" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:The IPSec tunnel state is switched UPDATE. (local-ip: %{saddr}, remote-ip: %{daddr})" }
			id => "msgParserId75"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId76
	# line in RSA: <hostname> %%<agent>/<severity>/<fld21>:IPV4 default Route is changed. (ChangeType=<action>, InstanceId=<fld23>, Protocol=<protocol>, ExitIf=<interface>, Nexthop=<fld26>, Neighbour=<fld27>, Preference=<fld28>, Label=<fld29>, Metric=<fld30>)
	else if [logstash][msgparser][id] == "msgParserId76" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld21}:IPV4 default Route is changed. (ChangeType=%{action}, InstanceId=%{fld23}, Protocol=%{protocol}, ExitIf=%{interface}, Nexthop=%{fld26}, Neighbour=%{fld27}, Preference=%{fld28}, Label=%{fld29}, Metric=%{fld30})" }
			id => "msgParserId76"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId77
	# line in RSA:  <hostname> %%<agent>/<severity>/<fld1>: -DevIP=<hostip>; protocol=<protocol>; source-ip=<saddr>; source-port=<sport>; destination-ip=<daddr>; destination-port=<dport>; time=<fld2>; acl=<fld3>; rule=<rule>;
	else if [logstash][msgparser][id] == "msgParserId77" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: -DevIP=%{hostip}; protocol=%{protocol}; source-ip=%{saddr}; source-port=%{sport}; destination-ip=%{daddr}; destination-port=%{dport}; time=%{fld2}; acl=%{fld3}; rule=%{rule};" }
			id => "msgParserId77"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d H:m:s" ] }
		}
	}
	# PARSER msgParserId78
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: The user <username> does not exist.
	else if [logstash][msgparser][id] == "msgParserId78" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: The user %{username} does not exist." }
			id => "msgParserId78"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId79
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: { User Admin | User guest | User test | User } (<saddr>) <event_description>
	else if [logstash][msgparser][id] == "msgParserId79" {
		grok {
			match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld1>[^:]*):[\s]+([\s]*User[\s]+Admin[\s]+|[\s]*User[\s]+guest[\s]+|[\s]*User[\s]+test[\s]+|[\s]*User[\s]+)[\s]+\((?<saddr>[^\)]*)\)[\s]+(?<event_description>.*)$" }
			id => "msgParserId79"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId80
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: { User Admin | User guest | User test }(<saddr> ) <event_description>
	else if [logstash][msgparser][id] == "msgParserId80" {
		grok {
			match => { "message" => "^(?<hostname>[^\s]*)[\s]+%%(?<agent>[^/]*)/(?<severity>[^/]*)/(?<fld1>[^:]*):[\s]+([\s]*User[\s]+Admin[\s]+|[\s]*User[\s]+guest[\s]+|[\s]*User[\s]+test[\s]+)\((?<saddr>[^\s]*)[\s]+\)[\s]+(?<event_description>.*)$" }
			id => "msgParserId80"
			add_field => {
				"ec_subject" => "User"
				"ec_activity" => "Logon"
				"ec_theme" => "Authentication"
				"ec_outcome" => "Failure"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId81
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <terminal> <event_description>
	else if [logstash][msgparser][id] == "msgParserId81" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{terminal} %{event_description}" }
			id => "msgParserId81"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId83
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: -DevIP=<hostip>; <fld2>
	else if [logstash][msgparser][id] == "msgParserId83" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: -DevIP=%{hostip}; %{fld2}" }
			id => "msgParserId83"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId84
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <fld2>
	else if [logstash][msgparser][id] == "msgParserId84" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{fld2}" }
			id => "msgParserId84"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId85
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: -DevIP=<hostip>; The connection is closed <fld2>
	else if [logstash][msgparser][id] == "msgParserId85" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: -DevIP=%{hostip}; The connection is closed %{fld2}" }
			id => "msgParserId85"
			add_field => {
				"event_description" => "connection is closed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId86
	# line in RSA: <hostname> <agent>/<severity>/<fld1>: <fld2>
	else if [logstash][msgparser][id] == "msgParserId86" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld1}: %{fld2}" }
			id => "msgParserId86"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId87
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (SyslogId=<fld2>, IpVersion=<fld3>, SrcIp=<saddr>, DstIp=<daddr>, SrcPort=<sport>, DstPort=<dport>, Protocol=<protocol>, User=<username>, VSysId=<fld4>, VSys=<vsys>, Reason= <result>, Timeout=<expiration_time>min)
	else if [logstash][msgparser][id] == "msgParserId87" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (SyslogId=%{fld2}, IpVersion=%{fld3}, SrcIp=%{saddr}, DstIp=%{daddr}, SrcPort=%{sport}, DstPort=%{dport}, Protocol=%{protocol}, User=%{username}, VSysId=%{fld4}, VSys=%{vsys}, Reason= %{result}, Timeout=%{expiration_time}min)" }
			id => "msgParserId87"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId88
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (SyslogId=<fld2>, IpVersion=<fld3>, SrcIp=<saddr>, DstIp=<daddr>, SrcPort=<sport>, DstPort=<dport>,Protocol=<protocol>, User=<username>, VSysId=<fld4>, VSys=<vsys>)
	else if [logstash][msgparser][id] == "msgParserId88" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (SyslogId=%{fld2}, IpVersion=%{fld3}, SrcIp=%{saddr}, DstIp=%{daddr}, SrcPort=%{sport}, DstPort=%{dport},Protocol=%{protocol}, User=%{username}, VSysId=%{fld4}, VSys=%{vsys})" }
			id => "msgParserId88"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId89
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description>
	else if [logstash][msgparser][id] == "msgParserId89" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description}" }
			id => "msgParserId89"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId90
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> from <change_old>(<fld2>) to <change_new>(<fld3>).
	else if [logstash][msgparser][id] == "msgParserId90" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} from %{change_old}(%{fld2}) to %{change_new}(%{fld3})." }
			id => "msgParserId90"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId91
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (ProcessId=<process_id>, AdvertiseRouterId=<hostip>, TotalCount=<dclass_counter1>, BeginTime=<fld2>, EndTime=<fld3>, <fld4>)
	else if [logstash][msgparser][id] == "msgParserId91" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (ProcessId=%{process_id}, AdvertiseRouterId=%{hostip}, TotalCount=%{dclass_counter1}, BeginTime=%{fld2}, EndTime=%{fld3}, %{fld4})" }
			id => "msgParserId91"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId92
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: User <username>(IP:<saddr> ID:<id>) logout
	else if [logstash][msgparser][id] == "msgParserId92" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: User %{username}(IP:%{saddr} ID:%{id}) logout" }
			id => "msgParserId92"
			add_field => {
				"event_description" => "logout"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId94
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: User <username>(IP:<saddr> ID:<id>) login succeeded
	else if [logstash][msgparser][id] == "msgParserId94" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: User %{username}(IP:%{saddr} ID:%{id}) login succeeded" }
			id => "msgParserId94"
			add_field => {
				"event_description" => "login succeeded"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId95
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: User <username>(IP:<saddr> ID:<id>) login failed
	else if [logstash][msgparser][id] == "msgParserId95" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: User %{username}(IP:%{saddr} ID:%{id}) login failed" }
			id => "msgParserId95"
			add_field => {
				"event_description" => " login failed"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId96
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (User Name=<username>, Vsys=<vsys>, Source IP=<saddr>, Source MAC=<smacaddr>, Logon Time=<fld2>, Logon Mode=<logon_type>, Authentication Mode=<authmethod>, Device Category=<category>,Failed Reason=<result>)
	else if [logstash][msgparser][id] == "msgParserId96" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (User Name=%{username}, Vsys=%{vsys}, Source IP=%{saddr}, Source MAC=%{smacaddr}, Logon Time=%{fld2}, Logon Mode=%{logon_type}, Authentication Mode=%{authmethod}, Device Category=%{category},Failed Reason=%{result})" }
			id => "msgParserId96"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld2}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "yyyy/M/d HH:m:s" ] }
		}
	}
	# PARSER msgParserId97
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: On the interface <interface>, <event_description>
	else if [logstash][msgparser][id] == "msgParserId97" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: On the interface %{interface}, %{event_description}" }
			id => "msgParserId97"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId99
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (Login IP=<saddr> User Name=<username> File Name=<filename>)
	else if [logstash][msgparser][id] == "msgParserId99" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (Login IP=%{saddr} User Name=%{username} File Name=%{filename})" }
			id => "msgParserId99"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId100
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (SyslogId=<fld2>, Module=<fld3>, Pre-UpdateVersion=<change_old>, UpdateVersion=<change_new>, Status=<fld4>, Duration(s)=<duration>)
	else if [logstash][msgparser][id] == "msgParserId100" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (SyslogId=%{fld2}, Module=%{fld3}, Pre-UpdateVersion=%{change_old}, UpdateVersion=%{change_new}, Status=%{fld4}, Duration(s)=%{duration})" }
			id => "msgParserId100"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId101
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (Ip=<saddr>, UserName=<username>, Times=<dclass_counter1>, AccessType=<protocol>, VpnName=<netname>)
	else if [logstash][msgparser][id] == "msgParserId101" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (Ip=%{saddr}, UserName=%{username}, Times=%{dclass_counter1}, AccessType=%{protocol}, VpnName=%{netname})" }
			id => "msgParserId101"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId102
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (User=<username>, IP=<saddr>, VpnName=<netname>)
	else if [logstash][msgparser][id] == "msgParserId102" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (User=%{username}, IP=%{saddr}, VpnName=%{netname})" }
			id => "msgParserId102"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId103
	# line in RSA: <hostname> <agent>/<severity>/<fld1>:OID <snmp.oid> <event_description>. <info>
	else if [logstash][msgparser][id] == "msgParserId103" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld1}:OID %{snmp.oid} %{event_description}. %{info}" }
			id => "msgParserId103"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId104
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>: <event_description> (Task=<fld2>, IP=<saddr>, VpnName=<netname>, User=<username>, Command="<action>", PromptInfo="<info>", UserInput=<fld3>)
	else if [logstash][msgparser][id] == "msgParserId104" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}: %{event_description} (Task=%{fld2}, IP=%{saddr}, VpnName=%{netname}, User=%{username}, Command=\"%{action}\", PromptInfo=\"%{info}\", UserInput=%{fld3})" }
			id => "msgParserId104"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId106
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:<event_description>
	else if [logstash][msgparser][id] == "msgParserId106" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:%{event_description}" }
			id => "msgParserId106"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId107
	# line in RSA: <hostname> <agent>/<severity>/<fld1>: OID <snmp.oid> <event_description>. (<fld2>)
	else if [logstash][msgparser][id] == "msgParserId107" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld1}: OID %{snmp.oid} %{event_description}. (%{fld2})" }
			id => "msgParserId107"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId108
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:Succeeded in backing up file cfcard:<filename>.
	else if [logstash][msgparser][id] == "msgParserId108" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:Succeeded in backing up file cfcard:%{filename}." }
			id => "msgParserId108"
			add_field => {
				"event_description" => "Succeeded in backing up file cfcard"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId109
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:<event_description>. (Task=<fld2>, Ip=<saddr>, VpnName=<netname>, User=<username>, AuthenticationMethod="<authmethod>", Command="<action>", Result=<result>)
	else if [logstash][msgparser][id] == "msgParserId109" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:%{event_description}. (Task=%{fld2}, Ip=%{saddr}, VpnName=%{netname}, User=%{username}, AuthenticationMethod=\"%{authmethod}\", Command=\"%{action}\", Result=%{result})" }
			id => "msgParserId109"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId112
	# line in RSA: <hostname> <agent>/<severity>/<fld1>: OID <snmp.oid> <event_description> (<fld2>)
	else if [logstash][msgparser][id] == "msgParserId112" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld1}: OID %{snmp.oid} %{event_description} (%{fld2})" }
			id => "msgParserId112"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId113
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:Slot=<fld2>,Vcpu=<fld3>;<interface> change status to up.
	else if [logstash][msgparser][id] == "msgParserId113" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:Slot=%{fld2},Vcpu=%{fld3};%{interface} change status to up." }
			id => "msgParserId113"
			add_field => {
				"event_description" => "change status to up."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId114
	# line in RSA: <hostname> %%<agent>/<severity>/<fld1>:Slot=<fld2>,Vcpu=<fld3>;<interface> change status to down. The possible cause is:<info>
	else if [logstash][msgparser][id] == "msgParserId114" {
		dissect {
			mapping => { "message" => "%{hostname} %%%{agent}/%{severity}/%{fld1}:Slot=%{fld2},Vcpu=%{fld3};%{interface} change status to down. The possible cause is:%{info}" }
			id => "msgParserId114"
			add_field => {
				"event_description" => "change status to down."
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId116
	# line in RSA: <hostname> <agent>/<severity>/<fld1>:Slot=<fld2>,Vcpu=<fld3>; OID: <snmp.oid> <event_description> (PhyIfIndex=<fld4>, SlotID=<fld5>, CardID=<fld6>, PortID=<fld7>, InterfaceName=<interface>, PhyPortAlarmName=<fld8>)
	else if [logstash][msgparser][id] == "msgParserId116" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld1}:Slot=%{fld2},Vcpu=%{fld3}; OID: %{snmp.oid} %{event_description} (PhyIfIndex=%{fld4}, SlotID=%{fld5}, CardID=%{fld6}, PortID=%{fld7}, InterfaceName=%{interface}, PhyPortAlarmName=%{fld8})" }
			id => "msgParserId116"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId117
	# line in RSA: <hostname> <agent>/<severity>/<fld1>:Slot=<fld2>,Vcpu=<fld3>; OID: <snmp.oid> <event_description> (IfIndex=<fld4>, IfName=<interface>)
	else if [logstash][msgparser][id] == "msgParserId117" {
		dissect {
			mapping => { "message" => "%{hostname} %{agent}/%{severity}/%{fld1}:Slot=%{fld2},Vcpu=%{fld3}; OID: %{snmp.oid} %{event_description} (IfIndex=%{fld4}, IfName=%{interface})" }
			id => "msgParserId117"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}

# Rename fields
filter {
	mutate {
		rename => {
			"snmp.oid" => "snmp_oid"
		}
	}
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-huaweivrpmsg.json"
#			template_name => "huaweivrp_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
