# Config file generated by RSA2ELK, see https://github.com/blookot/rsa2elk 
# Author: Vincent Maury
# Check all Netwitness parsers: https://github.com/netwitness/nw-logparsers/tree/master/devices/ (license: Apache 2.0)
# Check this link to search for source configuration guides: https://rsa.jiveon.com/community/products/netwitness/integrations/event-sources

##########
# CAUTION: check the "path" in input and "dictionary_path" in filter, as well as the "template" path in the elasticsearch output or "path" in the file output
##########

input {
#	syslog {
#		port => 514
#	}
#	file {
#		path => "/var/log/example.log"
#		start_position => "beginning"
#		sincedb_path => "/dev/null"
#	}
	generator {
		count => 1
		message => "a log line to test out"
	}
#	kafka {
#		codec => "json"
#		bootstrap_servers => "192.168.30.13:9092"
#		topics => ["mytopic"]
#		security_protocol => "SSL"
#		ssl_key_password => "{ssl_password}"
#		ssl_keystore_location => "/{keystore-absolute-path}"
#		ssl_keystore_password => "{keystore_password}"
#		ssl_truststore_location => "/{truststore-absolute-path}"
#		ssl_truststore_password => "{truststore_password}"
#	}
}

# Renaming a couple of fields
filter {
	mutate {
		rename => {
			"message" => "[event][original]"
			"host" => "[logstash][host]"
		}
	}
}

# Setting the device name and group
filter {
	mutate {
		add_field => {
			"[observer][product]" => "bigipapm"
			"[observer][name]" => "Big-IP Access Policy Manager"
			"[observer][type]" => "Access Control"
		}
	}
}


# One single filter block for all headers and messages
filter {

################## HEADERS ##################

	# HEADER 0001
	# line in RSA: <hmonth> <hdate> <htime> <hfld1> <hfld2> <hfld3>[<hfld4>]: <messageid>: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\[]*)\[(?<hfld4>[^\]]*)\]:[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0001"
			add_field => {
				"[rsa][header][id]" => "0001"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0002
	# line in RSA: <hmonth> <hdate> <htime> <hfld1> <hfld2> <hfld3>: <messageid>: <!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^:]*):[\s]+(?<messageid>[^:]*):[\s]+(?<payload>.*))$" }
			id => "header-0002"
			add_field => {
				"[rsa][header][id]" => "0002"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0003
	# line in RSA: <hmonth> <hdate> <htime> <hfld1> <hfld2> <hfld3>: [<messageid>]<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^:]*):[\s]+\[(?<messageid>[^\]]*)\](?<payload>.*))$" }
			id => "header-0003"
			add_field => {
				"[rsa][header][id]" => "0003"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0004
	# line in RSA: <hmonth> <hdate> <htime> <hfld1> <hfld2> <messageid>[<hfld3>]:<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<messageid>[^\[]*)\[(?<hfld3>[^\]]*)\]:(?<payload>.*))$" }
			id => "header-0004"
			add_field => {
				"[rsa][header][id]" => "0004"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0005
	# line in RSA: <hmonth> <hdate> <htime> <hfld1> <hfld2> <messageid>:<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<messageid>[^:]*):(?<payload>.*))$" }
			id => "header-0005"
			add_field => {
				"[rsa][header][id]" => "0005"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}
	# HEADER 0006
	# line in RSA: <hmonth> <hdate> <htime> <hfld1> <hfld2> <hfld3>[<hfld4>]: <messageid> /<!payload:hmonth>
	if ![logstash][headerfound] {
		grok {
			match => { "[event][original]" => "^(?<message>(?<hmonth>[^\s]*)[\s]+(?<hdate>[^\s]*)[\s]+(?<htime>[^\s]*)[\s]+(?<hfld1>[^\s]*)[\s]+(?<hfld2>[^\s]*)[\s]+(?<hfld3>[^\[]*)\[(?<hfld4>[^\]]*)\]:[\s]+(?<messageid>[^\s]*)[\s]+/(?<payload>.*))$" }
			id => "header-0006"
			add_field => {
				"[rsa][header][id]" => "0006"
				"[rsa][message][id2]" => "%{messageid}"
				"[logstash][headerfound]" => true
			}
		}
	}



################## MsgId2 to Parser ##################

	translate {
		field => "[rsa][message][id2]"
		destination => "[logstash][msgparser][id]"
		dictionary_path => "msgid2parserid-bigipapmmsg.json"
		fallback => ""
		override => true
	}


################## MESSAGES ##################

	# PARSER msgParserId0
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: <event_description>
	if [logstash][msgparser][id] == "msgParserId0" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: %{event_description}" }
			id => "msgParserId0"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId1
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Session statistics - bytes in:<rbytes>, bytes out: <sbytes>
	else if [logstash][msgparser][id] == "msgParserId1" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Session statistics - bytes in:%{rbytes}, bytes out: %{sbytes}" }
			id => "msgParserId1"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId2
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Received User-Agent header: <user_agent>
	else if [logstash][msgparser][id] == "msgParserId2" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Received User-Agent header: %{user_agent}" }
			id => "msgParserId2"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "01490113" {
		# MESSAGE 01490113:01
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: session.server.network.name is <fqdn>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: session.server.network.name is %{fqdn}" }
				id => "message-01490113:01"
				add_field => {
					"[event][id]" => "01490113:01"
					"[rsa][message][id1]" => "01490113:01"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490113:02
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: session.server.network.port is <network_port>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: session.server.network.port is %{network_port}" }
				id => "message-01490113:02"
				add_field => {
					"[event][id]" => "01490113:02"
					"[rsa][message][id1]" => "01490113:02"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490113:03
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: session.server.listener.name is <service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: session.server.listener.name is %{service}" }
				id => "message-01490113:03"
				add_field => {
					"[event][id]" => "01490113:03"
					"[rsa][message][id1]" => "01490113:03"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490113:04
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: session.server.network.protocol is <network_service>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: session.server.network.protocol is %{network_service}" }
				id => "message-01490113:04"
				add_field => {
					"[event][id]" => "01490113:04"
					"[rsa][message][id1]" => "01490113:04"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490113:05
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: session.user.agent is <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: session.user.agent is %{info}" }
				id => "message-01490113:05"
				add_field => {
					"[event][id]" => "01490113:05"
					"[rsa][message][id1]" => "01490113:05"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490113:06
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: session.user.clientip is <saddr>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: session.user.clientip is %{saddr}" }
				id => "message-01490113:06"
				add_field => {
					"[event][id]" => "01490113:06"
					"[rsa][message][id1]" => "01490113:06"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490113
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: session.<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: session.%{info}" }
				id => "message-01490113"
				add_field => {
					"[event][id]" => "01490113"
					"[rsa][message][id1]" => "01490113"
					"[event][categoryid]" => "1801020000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId10
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: {<fld10>:<fld11>:<sessionid>|<sessionid>}: Username '<username>'
	else if [logstash][msgparser][id] == "msgParserId10" {
		grok {
			match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld7>[^:]*):(?<fld6>[^:]*):[\s]+((?<fld10>[^:]*):(?<fld11>[^:]*):(?<sessionid>[^:]*)|(?<sessionid>[^:]*)):[\s]+Username[\s]+'(?<username>[^']*)'$" }
			id => "msgParserId10"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId11
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: ACL '<policyname>' assigned
	else if [logstash][msgparser][id] == "msgParserId11" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: ACL '%{policyname}' assigned" }
			id => "msgParserId11"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId12
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Access policy result: <result>
	else if [logstash][msgparser][id] == "msgParserId12" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Access policy result: %{result}" }
			id => "msgParserId12"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "01490000" {
		# MESSAGE 01490000:02
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: <authmethod> authentication for user <username> using config <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: %{authmethod} authentication for user %{username} using config %{fld8}" }
				id => "message-01490000:02"
				add_field => {
					"[event][id]" => "01490000:02"
					"[rsa][message][id1]" => "01490000:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490000:01
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: found HTTP <resultcode> in response header
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: found HTTP %{resultcode} in response header" }
				id => "message-01490000:01"
				add_field => {
					"[event][id]" => "01490000:01"
					"[rsa][message][id1]" => "01490000:01"
					"[event][categoryid]" => "1801010000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490000
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <filename> func: "<action>" line: <fld8> Msg: <result>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{filename} func: \"%{action}\" line: %{fld8} Msg: %{result}" }
				id => "message-01490000"
				add_field => {
					"[event][id]" => "01490000"
					"[rsa][message][id1]" => "01490000"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490000:03
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <event_description>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{event_description}" }
				id => "message-01490000:03"
				add_field => {
					"[event][id]" => "01490000:03"
					"[rsa][message][id1]" => "01490000:03"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId17
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <fld8>: Executed agent '<application>', return value <resultcode>
	else if [logstash][msgparser][id] == "msgParserId17" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{fld8}: Executed agent '%{application}', return value %{resultcode}" }
			id => "msgParserId17"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId18
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: {<fld10>:<fld11>:<sessionid>|<sessionid>}: New session from client IP <saddr> (ST=<location_state>/CC=<location_country>/C=<location_city>) at VIP {<daddr> Listener <fld8> (Reputation=<category>)|<daddr> Listener <fld8>|<daddr>}
	else if [logstash][msgparser][id] == "msgParserId18" {
		grok {
			match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld7>[^:]*):(?<fld6>[^:]*):[\s]+((?<fld10>[^:]*):(?<fld11>[^:]*):(?<sessionid>[^:]*)|(?<sessionid>[^:]*)):[\s]+New[\s]+session[\s]+from[\s]+client[\s]+IP[\s]+(?<saddr>[^\s]*)[\s]+\(ST=(?<location_state>[^/]*)/CC=(?<location_country>[^/]*)/C=(?<location_city>[^\)]*)\)[\s]+at[\s]+VIP[\s]+((?<daddr>[^\s]*)[\s]+Listener[\s]+(?<fld8>[^\s]*)[\s]+\(Reputation=(?<category>[^\)]*)\)|(?<daddr>[^\s]*)[\s]+Listener[\s]+(?<fld8>.*)|(?<daddr>.*))$" }
			id => "msgParserId18"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId19
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Following rule <fld8> from item <fld9> to ending <fld10>
	else if [logstash][msgparser][id] == "msgParserId19" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Following rule %{fld8} from item %{fld9} to ending %{fld10}" }
			id => "msgParserId19"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId20
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Following rule <fld8> from item '<fld9>' to item '<fld10>'
	else if [logstash][msgparser][id] == "msgParserId20" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Following rule %{fld8} from item '%{fld9}' to item '%{fld10}'" }
			id => "msgParserId20"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId21
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Session variable '<change_attribute>' set to <change_new>
	else if [logstash][msgparser][id] == "msgParserId21" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Session variable '%{change_attribute}' set to %{change_new}" }
			id => "msgParserId21"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId22
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Connectivity resource <application> assigned
	else if [logstash][msgparser][id] == "msgParserId22" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Connectivity resource %{application} assigned" }
			id => "msgParserId22"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId23
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <fld8>: Access encountered error: <result>. File: <filename>, Function: <action>, Line: <fld9>
	else if [logstash][msgparser][id] == "msgParserId23" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{fld8}: Access encountered error: %{result}. File: %{filename}, Function: %{action}, Line: %{fld9}" }
			id => "msgParserId23"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId24
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: <fqdn> can not be resolved.
	else if [logstash][msgparser][id] == "msgParserId24" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: %{fqdn} can not be resolved." }
			id => "msgParserId24"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId25
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <fld8>: Configuration snapshot deleted by Access.
	else if [logstash][msgparser][id] == "msgParserId25" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{fld8}: Configuration snapshot deleted by Access." }
			id => "msgParserId25"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "01490107" {
		# MESSAGE 01490107:01
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD module: authentication with '<fld8>' failed: Clients credentials have been revoked, principal name: <username>@<fqdn>. <result>  <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: AD module: authentication with '%{fld8}' failed: Clients credentials have been revoked, principal name: %{username}@%{fqdn}. %{result}  %{fld9}" }
				id => "message-01490107:01"
				add_field => {
					"[event][id]" => "01490107:01"
					"[rsa][message][id1]" => "01490107:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490107
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD module: authentication with '<username>' failed in <action>: <result> <fld8>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: AD module: authentication with '%{username}' failed in %{action}: %{result} %{fld8}" }
				id => "message-01490107"
				add_field => {
					"[event][id]" => "01490107"
					"[rsa][message][id1]" => "01490107"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490107:02
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD module: authentication with '<username>' failed: {Client '<fqdn>' not found in Kerberos database, principal name:<fld10>|<result>} <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld7>[^:]*):(?<fld6>[^:]*):[\s]+(?<sessionid>[^:]*):[\s]+AD[\s]+module:[\s]+authentication[\s]+with[\s]+'(?<username>[^']*)'[\s]+failed:[\s]+(Client[\s]+'(?<fqdn>[^']*)'[\s]+not[\s]+found[\s]+in[\s]+Kerberos[\s]+database,[\s]+principal[\s]+name:(?<fld10>[^\s]*)|(?<result>[^\s]*))[\s]+(?<info>.*)$" }
				id => "message-01490107:02"
				add_field => {
					"[event][id]" => "01490107:02"
					"[rsa][message][id1]" => "01490107:02"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "01490106" {
		# MESSAGE 01490106
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD module: authentication with '<username>' failed in <action>: Preauthentication failed, principal name: <fld8>. <result> <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: AD module: authentication with '%{username}' failed in %{action}: Preauthentication failed, principal name: %{fld8}. %{result} %{fld9}" }
				id => "message-01490106"
				add_field => {
					"[event][id]" => "01490106"
					"[rsa][message][id1]" => "01490106"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490106:01
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD module: authentication with '<username>' failed: Preauthentication failed, principal name: <fld8>. <result> <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: AD module: authentication with '%{username}' failed: Preauthentication failed, principal name: %{fld8}. %{result} %{fld9}" }
				id => "message-01490106:01"
				add_field => {
					"[event][id]" => "01490106:01"
					"[rsa][message][id1]" => "01490106:01"
					"[event][categoryid]" => "1803000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId31
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Webtop <application> assigned
	else if [logstash][msgparser][id] == "msgParserId31" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Webtop %{application} assigned" }
			id => "msgParserId31"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId32
	# line in RSA:    <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Access profile: <fld8> configuration has been applied. Newly active generation count is: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId32" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Access profile: %{fld8} configuration has been applied. Newly active generation count is: %{dclass_counter1}" }
			id => "msgParserId32"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId33
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Retry Username '<username>'
	else if [logstash][msgparser][id] == "msgParserId33" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Retry Username '%{username}'" }
			id => "msgParserId33"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId34
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Following rule <rulename> from item <fld9> to terminalout <fld10>
	else if [logstash][msgparser][id] == "msgParserId34" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Following rule %{rulename} from item %{fld9} to terminalout %{fld10}" }
			id => "msgParserId34"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "01490017" {
		# MESSAGE 01490017
		# line in RSA:     <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD agent: Auth (logon attempt:<dclass_counter1>): authenticate with '<username>' successful
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: AD agent: Auth (logon attempt:%{dclass_counter1}): authenticate with '%{username}' successful" }
				id => "message-01490017"
				add_field => {
				"disposition" => " Successful"
					"[event][id]" => "01490017"
					"[rsa][message][id1]" => "01490017"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 01490017:01
		# line in RSA:     <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD agent: Auth (logon attempt:<dclass_counter1>): authenticate with '<username>' failed
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: AD agent: Auth (logon attempt:%{dclass_counter1}): authenticate with '%{username}' failed" }
				id => "message-01490017:01"
				add_field => {
				"disposition" => " Failed"
					"[event][id]" => "01490017:01"
					"[rsa][message][id1]" => "01490017:01"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId36
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD agent: Retrieving AAA server: <fld8>
	else if [logstash][msgparser][id] == "msgParserId36" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: AD agent: Retrieving AAA server: %{fld8}" }
			id => "msgParserId36"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId38
	# line in RSA:    <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: AD agent: Query: query with '(sAMAccountName=<username>)' successful
	else if [logstash][msgparser][id] == "msgParserId38" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: AD agent: Query: query with '(sAMAccountName=%{username})' successful" }
			id => "msgParserId38"
			add_field => {
				"disposition" => " Successful"
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId39
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Received client info - <web_referer>
	else if [logstash][msgparser][id] == "msgParserId39" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Received client info - %{web_referer}" }
			id => "msgParserId39"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId40
	# line in RSA:    <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Initializing Access profile <fld8> with max concurrent user sessions limit: <dclass_counter1>
	else if [logstash][msgparser][id] == "msgParserId40" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: Initializing Access profile %{fld8} with max concurrent user sessions limit: %{dclass_counter1}" }
			id => "msgParserId40"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "014d0002" {
		# MESSAGE 014d0002
		# line in RSA:    <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: <sessionid>: SSOv2 Logon succeeded, config <fld8> form <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: %{sessionid}: SSOv2 Logon succeeded, config %{fld8} form %{fld9}" }
				id => "message-014d0002"
				add_field => {
				"disposition" => "Succeeded"
					"[event][id]" => "014d0002"
					"[rsa][message][id1]" => "014d0002"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 014d0002:01
		# line in RSA:    <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: <sessionid>: SSOv2 Logon failed, config <fld8> form <fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: %{sessionid}: SSOv2 Logon failed, config %{fld8} form %{fld9}" }
				id => "message-014d0002:01"
				add_field => {
				"disposition" => "Failed"
					"[event][id]" => "014d0002:01"
					"[rsa][message][id1]" => "014d0002:01"
					"[event][categoryid]" => "1502000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId43
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: <sessionid>: Access policy '<fld8>' configuration has changed.Access profile '<fld9>' configuration changes need to be applied for the new configuration
	else if [logstash][msgparser][id] == "msgParserId43" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: %{sessionid}: Access policy '%{fld8}' configuration has changed.Access profile '%{fld9}' configuration changes need to be applied for the new configuration" }
			id => "msgParserId43"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId44
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: Access profile: <fld8> initialized with configuration snapshot catalog: <fld9>
	else if [logstash][msgparser][id] == "msgParserId44" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: Access profile: %{fld8} initialized with configuration snapshot catalog: %{fld9}" }
			id => "msgParserId44"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId45
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: Current snapshot ID: <fld8> retrieved from session db for access profile: <fld9>
	else if [logstash][msgparser][id] == "msgParserId45" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: Current snapshot ID: %{fld8} retrieved from session db for access profile: %{fld9}" }
			id => "msgParserId45"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId46
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: Current snapshot ID: <fld8> updated inside session db for access profile: <fld9>
	else if [logstash][msgparser][id] == "msgParserId46" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: Current snapshot ID: %{fld8} updated inside session db for access profile: %{fld9}" }
			id => "msgParserId46"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId47
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: Snapshot catalog entry: <fld8> added for access profile: <fld9>
	else if [logstash][msgparser][id] == "msgParserId47" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: Snapshot catalog entry: %{fld8} added for access profile: %{fld9}" }
			id => "msgParserId47"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId48
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: Initiating snapshot creation: <fld8> for access profile: <fld9>
	else if [logstash][msgparser][id] == "msgParserId48" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: Initiating snapshot creation: %{fld8} for access profile: %{fld9}" }
			id => "msgParserId48"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId49
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: <fld7>:<fld6>: Completed snapshot creation: <fld8> for access profile: <fld9>
	else if [logstash][msgparser][id] == "msgParserId49" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: %{fld7}:%{fld6}: Completed snapshot creation: %{fld8} for access profile: %{fld9}" }
			id => "msgParserId49"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId50
	# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: [<event_type>] <saddr> - { - | <username> } [<fld20> <timezone>] "<url>" <resultcode> <rbytes>
	else if [logstash][msgparser][id] == "msgParserId50" {
		grok {
			match => { "message" => "^(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<fld5>[^:]*):[\s]+\[(?<event_type>[^\]]*)\][\s]+(?<saddr>[^\s]*)[\s]+\-[\s]+([\s]*\-[\s]+|[\s]*(?<username>[^\s]*)[\s]+)[\s]+\[(?<fld20>[^\s]*)[\s]+(?<timezone>[^\]]*)\][\s]+\"(?<url>[^\"]*)\"[\s]+(?<resultcode>[^\s]*)[\s]+(?<rbytes>.*)$" }
			id => "msgParserId50"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
		}
	}
	# PARSER msgParserId51
	# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: [<event_type>]<space>[<fld20> <timezone>] <saddr> <protocol> <encryption_type> "<url>" <rbytes>
	else if [logstash][msgparser][id] == "msgParserId51" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: [%{event_type}]%{space}[%{fld20} %{timezone}] %{saddr} %{protocol} %{encryption_type} \"%{url}\" %{rbytes}" }
			id => "msgParserId51"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
		}
	}
	# PARSER msgParserId52
	# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <fld5>: [<event_type>]<space>[<fld20> <timezone>] "<web_method> <url> <version>" <resultcode> <rbytes> "<fld7>" "<user_agent>"
	else if [logstash][msgparser][id] == "msgParserId52" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}: [%{event_type}]%{space}[%{fld20} %{timezone}] \"%{web_method} %{url} %{version}\" %{resultcode} %{rbytes} \"%{fld7}\" \"%{user_agent}\"" }
			id => "msgParserId52"
			add_field => {
				"[logstash][fullDateTimeString]" => "%{fld20}"
				"[logstash][messagefound]" => true
			}
		}
		if [logstash][fullDateTimeString] {
			date { match => [ "[logstash][fullDateTimeString]", "dd/MMM/yyyy:H:m:s" ] }
		}
	}
	else if [logstash][msgparser][id] == "crond" {
		# MESSAGE crond
		# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <agent>[<process_id>]: <username>(<sessionid>): <action>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{agent}[%{process_id}]: %{username}(%{sessionid}): %{action}" }
				id => "message-crond"
				add_field => {
					"[event][id]" => "crond"
					"[rsa][message][id1]" => "crond"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE crond:01
		# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <agent>[<process_id>]: (<username>) CMD (<action>)
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
				id => "message-crond:01"
				add_field => {
					"[event][id]" => "crond:01"
					"[rsa][message][id1]" => "crond:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE crond:02
		# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <agent>[<process_id>]: (<username>) <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{agent}[%{process_id}]: (%{username}) %{info}" }
				id => "message-crond:02"
				add_field => {
					"[event][id]" => "crond:02"
					"[rsa][message][id1]" => "crond:02"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId56
	# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <agent>[<process_id>]: <info>
	else if [logstash][msgparser][id] == "msgParserId56" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{agent}[%{process_id}]: %{info}" }
			id => "msgParserId56"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId57
	# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <agent>[<process_id>]: <fld5>: AUDIT - pid=<parent_pid> user=<username> folder=<directory> module=<fld6> status=<result> cmd_data=<info> 
	else if [logstash][msgparser][id] == "msgParserId57" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{agent}[%{process_id}]: %{fld5}: AUDIT - pid=%{parent_pid} user=%{username} folder=%{directory} module=%{fld6} status=%{result} cmd_data=%{info}" }
			id => "msgParserId57"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "syslog-ng" {
		# MESSAGE syslog-ng
		# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <agent>[<process_id>]: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{agent}[%{process_id}]: %{info}" }
				id => "message-syslog-ng"
				add_field => {
					"[event][id]" => "syslog-ng"
					"[rsa][message][id1]" => "syslog-ng"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE syslog-ng:01
		# line in RSA: <fld1> <fld2> <fld3> <fld4> <severity> <agent>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{agent}: %{info}" }
				id => "message-syslog-ng:01"
				add_field => {
					"[event][id]" => "syslog-ng:01"
					"[rsa][message][id1]" => "syslog-ng:01"
					"[event][categoryid]" => "1605000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	else if [logstash][msgparser][id] == "014d0001" {
		# MESSAGE 014d0001
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: ssoMethod: <authmethod> usernameSource: <fld9> passwordSource: <fld10> ntlmdomain: <c_domain>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: ssoMethod: %{authmethod} usernameSource: %{fld9} passwordSource: %{fld10} ntlmdomain: %{c_domain}" }
				id => "message-014d0001"
				add_field => {
					"[event][id]" => "014d0001"
					"[rsa][message][id1]" => "014d0001"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 014d0001:01
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: ctx: <fld9>, { SERVER | CLIENT }: <info>
		if ![logstash][messagefound] {
			grok {
				match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld7>[^:]*):(?<fld6>[^:]*):[\s]+ctx:[\s]+(?<fld9>[^,]*),[\s]+([\s]*SERVER[\s]+|[\s]*CLIENT[\s]+):[\s]+(?<info>.*)$" }
				id => "message-014d0001:01"
				add_field => {
					"[event][id]" => "014d0001:01"
					"[rsa][message][id1]" => "014d0001:01"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
		# MESSAGE 014d0001:02
		# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{info}" }
				id => "message-014d0001:02"
				add_field => {
					"[event][id]" => "014d0001:02"
					"[rsa][message][id1]" => "014d0001:02"
					"[event][categoryid]" => "1801000000"
					"[logstash][messagefound]" => true
				}
			}
		}
	}
	# PARSER msgParserId61
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <info>
	else if [logstash][msgparser][id] == "msgParserId61" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{info}" }
			id => "msgParserId61"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId62
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: Assigned PPP Dynamic IPv4: <stransaddr> Tunnel Type: <group> <fld8> Resource: <rulename> Client IP: {<saddr> - <fld9> | <saddr>}
	else if [logstash][msgparser][id] == "msgParserId62" {
		grok {
			match => { "message" => "^[\s]*(?<fld1>[^\s]*)[\s]+(?<fld2>[^\s]*)[\s]+(?<fld3>[^\s]*)[\s]+(?<fld4>[^\s]*)[\s]+(?<severity>[^\s]*)[\s]+(?<fld5>[^\[]*)\[(?<process_id>[^\]]*)\]:[\s]+(?<fld7>[^:]*):(?<fld6>[^:]*):[\s]+(?<sessionid>[^:]*):[\s]+Assigned[\s]+PPP[\s]+Dynamic[\s]+IPv4:[\s]+(?<stransaddr>[^\s]*)[\s]+Tunnel[\s]+Type:[\s]+(?<group>[^\s]*)[\s]+(?<fld8>[^\s]*)[\s]+Resource:[\s]+(?<rulename>[^\s]*)[\s]+Client[\s]+IP:[\s]+((?<saddr>[^\s]*)[\s]+\-[\s]+(?<fld9>[^\s]*)[\s]+|[\s]*(?<saddr>.*))$" }
			id => "msgParserId62"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId63
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: Access Profile <rulename>: <result> for <saddr>
	else if [logstash][msgparser][id] == "msgParserId63" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: Access Profile %{rulename}: %{result} for %{saddr}" }
			id => "msgParserId63"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId64
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <sessionid>: <result>
	else if [logstash][msgparser][id] == "msgParserId64" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{sessionid}: %{result}" }
			id => "msgParserId64"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId65
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7>:<fld6>: <result> (Client side: vip=<url> profile=<protocol> pool=<fld8> client_ip=<saddr>)
	else if [logstash][msgparser][id] == "msgParserId65" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7}:%{fld6}: %{result} (Client side: vip=%{url} profile=%{protocol} pool=%{fld8} client_ip=%{saddr})" }
			id => "msgParserId65"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId66
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: <fld7> <rulename> <<<event_description>>: APM_EVENT=<action> | <username> | <fld8> ***<result>***
	else if [logstash][msgparser][id] == "msgParserId66" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: %{fld7} %{rulename} <%{event_description}>: APM_EVENT=%{action} | %{username} | %{fld8} ***%{result}***" }
			id => "msgParserId66"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId67
	# line in RSA:   <fld1> <fld2> <fld3> <fld4> <severity> <fld5>[<process_id>]: [<fld7>] [client <saddr>] <result>: <url>
	else if [logstash][msgparser][id] == "msgParserId67" {
		dissect {
			mapping => { "message" => "%{fld1} %{fld2} %{fld3} %{fld4} %{severity} %{fld5}[%{process_id}]: [%{fld7}] [client %{saddr}] %{result}: %{url}" }
			id => "msgParserId67"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId68
	# line in RSA: <fld1><fld2><fld3><fld4><severity><agent>[<process_id>]: (<username>) CMD (<action>)
	else if [logstash][msgparser][id] == "msgParserId68" {
		dissect {
			mapping => { "message" => "%{fld1}%{fld2}%{fld3}%{fld4}%{severity}%{agent}[%{process_id}]: (%{username}) CMD (%{action})" }
			id => "msgParserId68"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	# PARSER msgParserId69
	# line in RSA: <fld1><fld2><fld3><fld4><severity><fld5>[<process_id>]:<fld7>:<fld6>: Connection error:<event_description>
	else if [logstash][msgparser][id] == "msgParserId69" {
		dissect {
			mapping => { "message" => "%{fld1}%{fld2}%{fld3}%{fld4}%{severity}%{fld5}[%{process_id}]:%{fld7}:%{fld6}: Connection error:%{event_description}" }
			id => "msgParserId69"
			add_field => {
				"[logstash][messagefound]" => true
			}
		}
	}
	else if [logstash][msgparser][id] == "apmd" {
		# MESSAGE apmd:04
		# line in RSA: <fld1><fld2><fld3><hostname><severity><agent>[<process_id>]: <fld4> /Common/home_agent_tca:Common:<fld5>: <fld6> - Hostname: <shost> Type: <fld7> Version: <version> Platform: <os> CPU: <fld8> Mode:<fld9>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}%{fld2}%{fld3}%{hostname}%{severity}%{agent}[%{process_id}]: %{fld4} /Common/home_agent_tca:Common:%{fld5}: %{fld6} - Hostname: %{shost} Type: %{fld7} Version: %{version} Platform: %{os} CPU: %{fld8} Mode:%{fld9}" }
				id => "message-apmd:04"
				add_field => {
					"[event][id]" => "apmd:04"
					"[rsa][message][id1]" => "apmd:04"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE apmd:03
		# line in RSA: <fld1><fld2><fld3><hostname><severity><agent>[<process_id>]: <fld4> /Common/home_agent_tca:Common:<fld5>: RADIUS module: parseResponse(): Access-Reject packet from host <saddr>:<sport> <fld7>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}%{fld2}%{fld3}%{hostname}%{severity}%{agent}[%{process_id}]: %{fld4} /Common/home_agent_tca:Common:%{fld5}: RADIUS module: parseResponse(): Access-Reject packet from host %{saddr}:%{sport} %{fld7}" }
				id => "message-apmd:03"
				add_field => {
					"[event][id]" => "apmd:03"
					"[rsa][message][id1]" => "apmd:03"
					"[event][categoryid]" => "1803000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
		# MESSAGE apmd:02
		# line in RSA: <fld1><fld2><fld3><hostname><severity><agent>[<process_id>]: <fld4> /Common/home_agent_tca:Common:<fld5>: RADIUS module: authentication with '<username>' failed: {<fld6> from host <saddr>:<sport> <fld7>| <fld8>}
		# Parsing error: Couldn't parse because of 2 adjacent fields like <fld1><fld2>
		# MESSAGE apmd
		# line in RSA: <fld1><fld2><fld3><hostname><severity><agent>[<process_id>]:<info>
		if ![logstash][messagefound] {
			dissect {
				mapping => { "message" => "%{fld1}%{fld2}%{fld3}%{hostname}%{severity}%{agent}[%{process_id}]:%{info}" }
				id => "message-apmd"
				add_field => {
					"[event][id]" => "apmd"
					"[rsa][message][id1]" => "apmd"
					"[event][categoryid]" => "1605000000"
					"[logstash][fullDateTimeString]" => "%{fld1} %{fld2} %{fld3}"
					"[logstash][messagefound]" => true
				}
			}
			if [logstash][fullDateTimeString] {
				date { match => [ "[logstash][fullDateTimeString]", "MMMd H:m:s" ] }
			}
		}
	}


################## END OF MESSAGES ##################

# End of the filter block
}


output {
#	if [logstash][headerfound] and [logstash][messagefound] {
#		elasticsearch {
#			hosts => ["https://elasticxxxxxx"]
#			index => "%{[observer][product]}-%{+YYYY.MM.dd}"
#			user => "logstash"
#			password => "abc"	# Better use keystore, cf https://www.elastic.co/guide/en/logstash/master/keystore.html
#			manage_template => true
#			template => "es-mapping-bigipapmmsg.json"
#			template_name => "bigipapm_template"
#			template_overwrite => true
#		}
#	} else {
#		# using a file output for logs that were not parsed correctly
#		# should you chose to send it to elasticsearch, please read https://discuss.elastic.co/t/latency-with-2-elasticsearch-systems/170074/2
#		file { path => "failed_logs-%{[observer][product]}-%{+YYYY-MM-dd}" }
#	}
	stdout {
		codec => rubydebug
	}
}
