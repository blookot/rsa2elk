
# Parser a url field named url (according to rsa meta field name) to get to https://www.elastic.co/guide/en/ecs/current/ecs-url.html
filter {
	if [url] {
		mutate {
			rename => { "url" => "url.original"}
		}
		grok {
			match => {
		  "url.original" => [
				# match https://user:pwd@stuff.domain.co.uk:8080/some/path?p1=v1&p2=v2#anchor
				"%{URIPROTO:url.scheme}://(?:%{USER:url.username}:(?<url.password>[^@]*)@)?(?:%{IPORHOST:url.address}(?::%{POSINT:url.port}))?(?:%{URIPATH:url.path}(?:%{URIPARAM:url.query}))?",
				# match stuff.domain.com:8080/some/path?p1=v1&p2=v2#anchor
				"%{IPORHOST:url.address}(?::%{POSINT:url.port})(?:%{URIPATH:url.path}(?:%{URIPARAM:url.query}))?",
				# match /some/path?p1=v1&p2=v2#anchor
				"%{URIPATH:url.path}(?:%{URIPARAM:url.query})"
		  ]
			}
			add_tag => [ "urlparsed" ]
		}
		if "urlparsed" in [tags] {
			# parse the address to distinguish domain or ip
			grok {
				match => {
					"url.address" => "(%{IP:url.ip}|%{HOSTNAME:url.domain})"
				}
			}
			# parse the query to extract fragment
			grok {
				match => {
					"url.query" => "^\?(?<url.query>[A-Za-z0-9$.+!*'|(){},~@%&/=:;_?\-\[\]<>]*)(?:#(?:%{WORD:url.fragment}))?"
				}
		  overwrite => [ "url.query" ]
			}
			# chunk the query string in pieces (resource intensive and can produce huge mappings. see flattened json field type instead, cf https://discuss.elastic.co/t/parsing-url-with-logstash-using-ecs-fields-nested/209953/4)
	#		kv {
	#			source => "url.query"
	#			field_split => "&"
	#			value_split => "="
	#			target => "[url][queryparams]"
	#		}
			# Requires a custom plugin here, see https://www.elastic.co/guide/en/logstash/current/plugins-filters-tld.html
	#		tld {
	#			source => "url.domain"
	#			target => "[url][tld]"
	#		}
	#		mutate {
	#			rename => {
	#				"[url][tld][domain]" => "[url][registered_domain]"
	#				"[url][tld][tld]" => "[url][top_level_domain]"
	#				"[url][tld][sld]" => "[url][second_level_domain]"
	#				"[url][tld][trd]" => "[url][sub_domain]"
	#			}
	#			remove_field => [ "[url][tld]" ]
	#		}
			# Final mutates
			mutate {
				rename => {
					"url.original" => "[url][original]"
					"url.scheme" => "[url][scheme]"
					"url.username" => "[url][username]"
					"url.password" => "[url][password]"
					"url.address" => "[url][address]"
					"url.port" => "[url][port]"
					"url.path" => "[url][path]"
					"url.query" => "[url][query]"
					"url.fragment" => "[url][fragment]"
					"url.ip" => "[url][ip]"
					"url.domain" => "[url][domain]"
				}
			}
		}
	}
}
